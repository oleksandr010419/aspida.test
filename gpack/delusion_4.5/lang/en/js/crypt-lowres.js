/* MooTools: the javascript framework. license: MIT-style license. copyright: Copyright (c) 2006-2016 [Valerio Proietti](http://mad4milk.net/).*/ 
/*!
Web Build: http://mootools.net/core/builder/e426a9ae7167c5807b173d5deff673fc
*/
/*
---

name: Core

description: The heart of MooTools.

license: MIT-style license.

copyright: Copyright (c) 2006-2015 [Valerio Proietti](http://mad4milk.net/).

authors: The MooTools production team (http://mootools.net/developers/)

inspiration:
  - Class implementation inspired by [Base.js](http://dean.edwards.name/weblog/2006/03/base/) Copyright (c) 2006 Dean Edwards, [GNU Lesser General Public License](http://opensource.org/licenses/lgpl-license.php)
  - Some functionality inspired by [Prototype.js](http://prototypejs.org) Copyright (c) 2005-2007 Sam Stephenson, [MIT License](http://opensource.org/licenses/mit-license.php)

provides: [Core, MooTools, Type, typeOf, instanceOf, Native]

...
*/
/*! MooTools: the javascript framework. license: MIT-style license. copyright: Copyright (c) 2006-2015 [Valerio Proietti](http://mad4milk.net/).*/
(function(){

this.MooTools = {
	version: '1.6.0',
	build: '529422872adfff401b901b8b6c7ca5114ee95e2b'
};

// typeOf, instanceOf

var typeOf = this.typeOf = function(item){
	if (item == null) return 'null';
	if (item.$family != null) return item.$family();

	if (item.nodeName){
		if (item.nodeType == 1) return 'element';
		if (item.nodeType == 3) return (/\S/).test(item.nodeValue) ? 'textnode' : 'whitespace';
	} else if (typeof item.length == 'number'){
		if ('callee' in item) return 'arguments';
		if ('item' in item) return 'collection';
	}

	return typeof item;
};

var instanceOf = this.instanceOf = function(item, object){
	if (item == null) return false;
	var constructor = item.$constructor || item.constructor;
	while (constructor){
		if (constructor === object) return true;
		constructor = constructor.parent;
	}
	/*<ltIE8>*/
	if (!item.hasOwnProperty) return false;
	/*</ltIE8>*/
	return item instanceof object;
};

var hasOwnProperty = Object.prototype.hasOwnProperty;

/*<ltIE8>*/
var enumerables = true;
for (var i in {toString: 1}) enumerables = null;
if (enumerables) enumerables = ['hasOwnProperty', 'valueOf', 'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString', 'constructor'];
function forEachObjectEnumberableKey(object, fn, bind){
	if (enumerables) for (var i = enumerables.length; i--;){
		var k = enumerables[i];
		// signature has key-value, so overloadSetter can directly pass the
		// method function, without swapping arguments.
		if (hasOwnProperty.call(object, k)) fn.call(bind, k, object[k]);
	}
}
/*</ltIE8>*/

// Function overloading

var Function = this.Function;

Function.prototype.overloadSetter = function(usePlural){
	var self = this;
	return function(a, b){
		if (a == null) return this;
		if (usePlural || typeof a != 'string'){
			for (var k in a) self.call(this, k, a[k]);
			/*<ltIE8>*/
			forEachObjectEnumberableKey(a, self, this);
			/*</ltIE8>*/
		} else {
			self.call(this, a, b);
		}
		return this;
	};
};

Function.prototype.overloadGetter = function(usePlural){
	var self = this;
	return function(a){
		var args, result;
		if (typeof a != 'string') args = a;
		else if (arguments.length > 1) args = arguments;
		else if (usePlural) args = [a];
		if (args){
			result = {};
			for (var i = 0; i < args.length; i++) result[args[i]] = self.call(this, args[i]);
		} else {
			result = self.call(this, a);
		}
		return result;
	};
};

Function.prototype.extend = function(key, value){
	this[key] = value;
}.overloadSetter();

Function.prototype.implement = function(key, value){
	this.prototype[key] = value;
}.overloadSetter();

// From

var slice = Array.prototype.slice;

Array.convert = function(item){
	if (item == null) return [];
	return (Type.isEnumerable(item) && typeof item != 'string') ? (typeOf(item) == 'array') ? item : slice.call(item) : [item];
};

Function.convert = function(item){
	return (typeOf(item) == 'function') ? item : function(){
		return item;
	};
};


Number.convert = function(item){
	var number = parseFloat(item);
	return isFinite(number) ? number : null;
};

String.convert = function(item){
	return item + '';
};



Function.from = Function.convert;
Number.from = Number.convert;
String.from = String.convert;

// hide, protect

Function.implement({

	hide: function(){
		this.$hidden = true;
		return this;
	},

	protect: function(){
		this.$protected = true;
		return this;
	}

});

// Type

var Type = this.Type = function(name, object){
	if (name){
		var lower = name.toLowerCase();
		var typeCheck = function(item){
			return (typeOf(item) == lower);
		};

		Type['is' + name] = typeCheck;
		if (object != null){
			object.prototype.$family = (function(){
				return lower;
			}).hide();
			
		}
	}

	if (object == null) return null;

	object.extend(this);
	object.$constructor = Type;
	object.prototype.$constructor = object;

	return object;
};

var toString = Object.prototype.toString;

Type.isEnumerable = function(item){
	return (item != null && typeof item.length == 'number' && toString.call(item) != '[object Function]' );
};

var hooks = {};

var hooksOf = function(object){
	var type = typeOf(object.prototype);
	return hooks[type] || (hooks[type] = []);
};

var implement = function(name, method){
	if (method && method.$hidden) return;

	var hooks = hooksOf(this);

	for (var i = 0; i < hooks.length; i++){
		var hook = hooks[i];
		if (typeOf(hook) == 'type') implement.call(hook, name, method);
		else hook.call(this, name, method);
	}

	var previous = this.prototype[name];
	if (previous == null || !previous.$protected) this.prototype[name] = method;

	if (this[name] == null && typeOf(method) == 'function') extend.call(this, name, function(item){
		return method.apply(item, slice.call(arguments, 1));
	});
};

var extend = function(name, method){
	if (method && method.$hidden) return;
	var previous = this[name];
	if (previous == null || !previous.$protected) this[name] = method;
};

Type.implement({

	implement: implement.overloadSetter(),

	extend: extend.overloadSetter(),

	alias: function(name, existing){
		implement.call(this, name, this.prototype[existing]);
	}.overloadSetter(),

	mirror: function(hook){
		hooksOf(this).push(hook);
		return this;
	}

});

new Type('Type', Type);

// Default Types

var force = function(name, object, methods){
	var isType = (object != Object),
		prototype = object.prototype;

	if (isType) object = new Type(name, object);

	for (var i = 0, l = methods.length; i < l; i++){
		var key = methods[i],
			generic = object[key],
			proto = prototype[key];

		if (generic) generic.protect();
		if (isType && proto) object.implement(key, proto.protect());
	}

	if (isType){
		var methodsEnumerable = prototype.propertyIsEnumerable(methods[0]);
		object.forEachMethod = function(fn){
			if (!methodsEnumerable) for (var i = 0, l = methods.length; i < l; i++){
				fn.call(prototype, prototype[methods[i]], methods[i]);
			}
			for (var key in prototype) fn.call(prototype, prototype[key], key);
		};
	}

	return force;
};

force('String', String, [
	'charAt', 'charCodeAt', 'concat', 'contains', 'indexOf', 'lastIndexOf', 'match', 'quote', 'replace', 'search',
	'slice', 'split', 'substr', 'substring', 'trim', 'toLowerCase', 'toUpperCase'
])('Array', Array, [
	'pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift', 'concat', 'join', 'slice',
	'indexOf', 'lastIndexOf', 'filter', 'forEach', 'every', 'map', 'some', 'reduce', 'reduceRight', 'contains'
])('Number', Number, [
	'toExponential', 'toFixed', 'toLocaleString', 'toPrecision'
])('Function', Function, [
	'apply', 'call', 'bind'
])('RegExp', RegExp, [
	'exec', 'test'
])('Object', Object, [
	'create', 'defineProperty', 'defineProperties', 'keys',
	'getPrototypeOf', 'getOwnPropertyDescriptor', 'getOwnPropertyNames',
	'preventExtensions', 'isExtensible', 'seal', 'isSealed', 'freeze', 'isFrozen'
])('Date', Date, ['now']);

Object.extend = extend.overloadSetter();

Date.extend('now', function(){
	return +(new Date);
});

new Type('Boolean', Boolean);

// fixes NaN returning as Number

Number.prototype.$family = function(){
	return isFinite(this) ? 'number' : 'null';
}.hide();

// Number.random

Number.extend('random', function(min, max){
	return Math.floor(Math.random() * (max - min + 1) + min);
});

// forEach, each, keys

Array.implement({

	/*<!ES5>*/
	forEach: function(fn, bind){
		for (var i = 0, l = this.length; i < l; i++){
			if (i in this) fn.call(bind, this[i], i, this);
		}
	},
	/*</!ES5>*/

	each: function(fn, bind){
		Array.forEach(this, fn, bind);
		return this;
	}

});

Object.extend({

	keys: function(object){
		var keys = [];
		for (var k in object){
			if (hasOwnProperty.call(object, k)) keys.push(k);
		}
		/*<ltIE8>*/
		forEachObjectEnumberableKey(object, function(k){
			keys.push(k);
		});
		/*</ltIE8>*/
		return keys;
	},

	forEach: function(object, fn, bind){
		Object.keys(object).forEach(function(key){
			fn.call(bind, object[key], key, object);
		});
	}

});

Object.each = Object.forEach;


// Array & Object cloning, Object merging and appending

var cloneOf = function(item){
	switch (typeOf(item)){
		case 'array': return item.clone();
		case 'object': return Object.clone(item);
		default: return item;
	}
};

Array.implement('clone', function(){
	var i = this.length, clone = new Array(i);
	while (i--) clone[i] = cloneOf(this[i]);
	return clone;
});

var mergeOne = function(source, key, current){
	switch (typeOf(current)){
		case 'object':
			if (typeOf(source[key]) == 'object') Object.merge(source[key], current);
			else source[key] = Object.clone(current);
			break;
		case 'array': source[key] = current.clone(); break;
		default: source[key] = current;
	}
	return source;
};

Object.extend({

	merge: function(source, k, v){
		if (typeOf(k) == 'string') return mergeOne(source, k, v);
		for (var i = 1, l = arguments.length; i < l; i++){
			var object = arguments[i];
			for (var key in object) mergeOne(source, key, object[key]);
		}
		return source;
	},

	clone: function(object){
		var clone = {};
		for (var key in object) clone[key] = cloneOf(object[key]);
		return clone;
	},

	append: function(original){
		for (var i = 1, l = arguments.length; i < l; i++){
			var extended = arguments[i] || {};
			for (var key in extended) original[key] = extended[key];
		}
		return original;
	}

});

// Object-less types

['Object', 'WhiteSpace', 'TextNode', 'Collection', 'Arguments'].each(function(name){
	new Type(name);
});

// Unique ID

var UID = Date.now();

String.extend('uniqueID', function(){
	return (UID++).toString(36);
});



})();

/*
---

name: Array

description: Contains Array Prototypes like each, contains, and erase.

license: MIT-style license.

requires: [Type]

provides: Array

...
*/

Array.implement({

	/*<!ES5>*/
	every: function(fn, bind){
		for (var i = 0, l = this.length >>> 0; i < l; i++){
			if ((i in this) && !fn.call(bind, this[i], i, this)) return false;
		}
		return true;
	},

	filter: function(fn, bind){
		var results = [];
		for (var value, i = 0, l = this.length >>> 0; i < l; i++) if (i in this){
			value = this[i];
			if (fn.call(bind, value, i, this)) results.push(value);
		}
		return results;
	},

	indexOf: function(item, from){
		var length = this.length >>> 0;
		for (var i = (from < 0) ? Math.max(0, length + from) : from || 0; i < length; i++){
			if (this[i] === item) return i;
		}
		return -1;
	},

	map: function(fn, bind){
		var length = this.length >>> 0, results = Array(length);
		for (var i = 0; i < length; i++){
			if (i in this) results[i] = fn.call(bind, this[i], i, this);
		}
		return results;
	},

	some: function(fn, bind){
		for (var i = 0, l = this.length >>> 0; i < l; i++){
			if ((i in this) && fn.call(bind, this[i], i, this)) return true;
		}
		return false;
	},
	/*</!ES5>*/

	clean: function(){
		return this.filter(function(item){
			return item != null;
		});
	},

	invoke: function(methodName){
		var args = Array.slice(arguments, 1);
		return this.map(function(item){
			return item[methodName].apply(item, args);
		});
	},

	associate: function(keys){
		var obj = {}, length = Math.min(this.length, keys.length);
		for (var i = 0; i < length; i++) obj[keys[i]] = this[i];
		return obj;
	},

	link: function(object){
		var result = {};
		for (var i = 0, l = this.length; i < l; i++){
			for (var key in object){
				if (object[key](this[i])){
					result[key] = this[i];
					delete object[key];
					break;
				}
			}
		}
		return result;
	},

	contains: function(item, from){
		return this.indexOf(item, from) != -1;
	},

	append: function(array){
		this.push.apply(this, array);
		return this;
	},

	getLast: function(){
		return (this.length) ? this[this.length - 1] : null;
	},

	getRandom: function(){
		return (this.length) ? this[Number.random(0, this.length - 1)] : null;
	},

	include: function(item){
		if (!this.contains(item)) this.push(item);
		return this;
	},

	combine: function(array){
		for (var i = 0, l = array.length; i < l; i++) this.include(array[i]);
		return this;
	},

	erase: function(item){
		for (var i = this.length; i--;){
			if (this[i] === item) this.splice(i, 1);
		}
		return this;
	},

	empty: function(){
		this.length = 0;
		return this;
	},

	flatten: function(){
		var array = [];
		for (var i = 0, l = this.length; i < l; i++){
			var type = typeOf(this[i]);
			if (type == 'null') continue;
			array = array.concat((type == 'array' || type == 'collection' || type == 'arguments' || instanceOf(this[i], Array)) ? Array.flatten(this[i]) : this[i]);
		}
		return array;
	},

	pick: function(){
		for (var i = 0, l = this.length; i < l; i++){
			if (this[i] != null) return this[i];
		}
		return null;
	},

	hexToRgb: function(array){
		if (this.length != 3) return null;
		var rgb = this.map(function(value){
			if (value.length == 1) value += value;
			return parseInt(value, 16);
		});
		return (array) ? rgb : 'rgb(' + rgb + ')';
	},

	rgbToHex: function(array){
		if (this.length < 3) return null;
		if (this.length == 4 && this[3] == 0 && !array) return 'transparent';
		var hex = [];
		for (var i = 0; i < 3; i++){
			var bit = (this[i] - 0).toString(16);
			hex.push((bit.length == 1) ? '0' + bit : bit);
		}
		return (array) ? hex : '#' + hex.join('');
	}

});



/*
---

name: Function

description: Contains Function Prototypes like create, bind, pass, and delay.

license: MIT-style license.

requires: Type

provides: Function

...
*/

Function.extend({

	attempt: function(){
		for (var i = 0, l = arguments.length; i < l; i++){
			try {
				return arguments[i]();
			} catch (e){}
		}
		return null;
	}

});

Function.implement({

	attempt: function(args, bind){
		try {
			return this.apply(bind, Array.convert(args));
		} catch (e){}

		return null;
	},

	/*<!ES5-bind>*/
	bind: function(that){
		var self = this,
			args = arguments.length > 1 ? Array.slice(arguments, 1) : null,
			F = function(){};

		var bound = function(){
			var context = that, length = arguments.length;
			if (this instanceof bound){
				F.prototype = self.prototype;
				context = new F;
			}
			var result = (!args && !length)
				? self.call(context)
				: self.apply(context, args && length ? args.concat(Array.slice(arguments)) : args || arguments);
			return context == that ? result : context;
		};
		return bound;
	},
	/*</!ES5-bind>*/

	pass: function(args, bind){
		var self = this;
		if (args != null) args = Array.convert(args);
		return function(){
			return self.apply(bind, args || arguments);
		};
	},

	delay: function(delay, bind, args){
		return setTimeout(this.pass((args == null ? [] : args), bind), delay);
	},

	periodical: function(periodical, bind, args){
		return setInterval(this.pass((args == null ? [] : args), bind), periodical);
	}

});



/*
---

name: Number

description: Contains Number Prototypes like limit, round, times, and ceil.

license: MIT-style license.

requires: Type

provides: Number

...
*/

Number.implement({

	limit: function(min, max){
		return Math.min(max, Math.max(min, this));
	},

	round: function(precision){
		precision = Math.pow(10, precision || 0).toFixed(precision < 0 ? -precision : 0);
		return Math.round(this * precision) / precision;
	},

	times: function(fn, bind){
		for (var i = 0; i < this; i++) fn.call(bind, i, this);
	},

	toFloat: function(){
		return parseFloat(this);
	},

	toInt: function(base){
		return parseInt(this, base || 10);
	}

});

Number.alias('each', 'times');

(function(math){

var methods = {};

math.each(function(name){
	if (!Number[name]) methods[name] = function(){
		return Math[name].apply(null, [this].concat(Array.convert(arguments)));
	};
});

Number.implement(methods);

})(['abs', 'acos', 'asin', 'atan', 'atan2', 'ceil', 'cos', 'exp', 'floor', 'log', 'max', 'min', 'pow', 'sin', 'sqrt', 'tan']);

/*
---

name: String

description: Contains String Prototypes like camelCase, capitalize, test, and toInt.

license: MIT-style license.

requires: [Type, Array]

provides: String

...
*/

String.implement({

	//<!ES6>
	contains: function(string, index){
		return (index ? String(this).slice(index) : String(this)).indexOf(string) > -1;
	},
	//</!ES6>

	test: function(regex, params){
		return ((typeOf(regex) == 'regexp') ? regex : new RegExp('' + regex, params)).test(this);
	},

	trim: function(){
		return String(this).replace(/^\s+|\s+$/g, '');
	},

	clean: function(){
		return String(this).replace(/\s+/g, ' ').trim();
	},

	camelCase: function(){
		return String(this).replace(/-\D/g, function(match){
			return match.charAt(1).toUpperCase();
		});
	},

	hyphenate: function(){
		return String(this).replace(/[A-Z]/g, function(match){
			return ('-' + match.charAt(0).toLowerCase());
		});
	},

	capitalize: function(){
		return String(this).replace(/\b[a-z]/g, function(match){
			return match.toUpperCase();
		});
	},

	escapeRegExp: function(){
		return String(this).replace(/([-.*+?^${}()|[\]\/\\])/g, '\\$1');
	},

	toInt: function(base){
		return parseInt(this, base || 10);
	},

	toFloat: function(){
		return parseFloat(this);
	},

	hexToRgb: function(array){
		var hex = String(this).match(/^#?(\w{1,2})(\w{1,2})(\w{1,2})$/);
		return (hex) ? hex.slice(1).hexToRgb(array) : null;
	},

	rgbToHex: function(array){
		var rgb = String(this).match(/\d{1,3}/g);
		return (rgb) ? rgb.rgbToHex(array) : null;
	},

	substitute: function(object, regexp){
		return String(this).replace(regexp || (/\\?\{([^{}]+)\}/g), function(match, name){
			if (match.charAt(0) == '\\') return match.slice(1);
			return (object[name] != null) ? object[name] : '';
		});
	}

});



/*
---

name: Browser

description: The Browser Object. Contains Browser initialization, Window and Document, and the Browser Hash.

license: MIT-style license.

requires: [Array, Function, Number, String]

provides: [Browser, Window, Document]

...
*/

(function(){

var document = this.document;
var window = document.window = this;

var parse = function(ua, platform){
	ua = ua.toLowerCase();
	platform = (platform ? platform.toLowerCase() : '');

	// chrome is included in the edge UA, so need to check for edge first,
	// before checking if it's chrome.
	var UA = ua.match(/(edge)[\s\/:]([\w\d\.]+)/);
	if (!UA){
		UA = ua.match(/(opera|ie|firefox|chrome|trident|crios|version)[\s\/:]([\w\d\.]+)?.*?(safari|(?:rv[\s\/:]|version[\s\/:])([\w\d\.]+)|$)/) || [null, 'unknown', 0];
	}

	if (UA[1] == 'trident'){
		UA[1] = 'ie';
		if (UA[4]) UA[2] = UA[4];
	} else if (UA[1] == 'crios'){
		UA[1] = 'chrome';
	}

	platform = ua.match(/ip(?:ad|od|hone)/) ? 'ios' : (ua.match(/(?:webos|android)/) || ua.match(/mac|win|linux/) || ['other'])[0];
	if (platform == 'win') platform = 'windows';

	return {
		extend: Function.prototype.extend,
		name: (UA[1] == 'version') ? UA[3] : UA[1],
		version: parseFloat((UA[1] == 'opera' && UA[4]) ? UA[4] : UA[2]),
		platform: platform
	};
};

var Browser = this.Browser = parse(navigator.userAgent, navigator.platform);

if (Browser.name == 'ie' && document.documentMode){
	Browser.version = document.documentMode;
}

Browser.extend({
	Features: {
		xpath: !!(document.evaluate),
		air: !!(window.runtime),
		query: !!(document.querySelector),
		json: !!(window.JSON)
	},
	parseUA: parse
});



// Request

Browser.Request = (function(){

	var XMLHTTP = function(){
		return new XMLHttpRequest();
	};

	var MSXML2 = function(){
		return new ActiveXObject('MSXML2.XMLHTTP');
	};

	var MSXML = function(){
		return new ActiveXObject('Microsoft.XMLHTTP');
	};

	return Function.attempt(function(){
		XMLHTTP();
		return XMLHTTP;
	}, function(){
		MSXML2();
		return MSXML2;
	}, function(){
		MSXML();
		return MSXML;
	});

})();

Browser.Features.xhr = !!(Browser.Request);



// String scripts

Browser.exec = function(text){
	if (!text) return text;
	if (window.execScript){
		window.execScript(text);
	} else {
		var script = document.createElement('script');
		script.setAttribute('type', 'text/javascript');
		script.text = text;
		document.head.appendChild(script);
		document.head.removeChild(script);
	}
	return text;
};

String.implement('stripScripts', function(exec){
	var scripts = '';
	var text = this.replace(/<script[^>]*>([\s\S]*?)<\/script>/gi, function(all, code){
		scripts += code + '\n';
		return '';
	});
	if (exec === true) Browser.exec(scripts);
	else if (typeOf(exec) == 'function') exec(scripts, text);
	return text;
});

// Window, Document

Browser.extend({
	Document: this.Document,
	Window: this.Window,
	Element: this.Element,
	Event: this.Event
});

this.Window = this.$constructor = new Type('Window', function(){});

this.$family = Function.convert('window').hide();

Window.mirror(function(name, method){
	window[name] = method;
});

this.Document = document.$constructor = new Type('Document', function(){});

document.$family = Function.convert('document').hide();

Document.mirror(function(name, method){
	document[name] = method;
});

document.html = document.documentElement;
if (!document.head) document.head = document.getElementsByTagName('head')[0];

if (document.execCommand) try {
	document.execCommand('BackgroundImageCache', false, true);
} catch (e){}

/*<ltIE9>*/
if (this.attachEvent && !this.addEventListener){
	var unloadEvent = function(){
		this.detachEvent('onunload', unloadEvent);
		document.head = document.html = document.window = null;
		window = this.Window = document = null;
	};
	this.attachEvent('onunload', unloadEvent);
}

// IE fails on collections and <select>.options (refers to <select>)
var arrayFrom = Array.convert;
try {
	arrayFrom(document.html.childNodes);
} catch (e){
	Array.convert = function(item){
		if (typeof item != 'string' && Type.isEnumerable(item) && typeOf(item) != 'array'){
			var i = item.length, array = new Array(i);
			while (i--) array[i] = item[i];
			return array;
		}
		return arrayFrom(item);
	};

	var prototype = Array.prototype,
		slice = prototype.slice;
	['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift', 'concat', 'join', 'slice'].each(function(name){
		var method = prototype[name];
		Array[name] = function(item){
			return method.apply(Array.convert(item), slice.call(arguments, 1));
		};
	});
}
/*</ltIE9>*/



})();

/*
---

name: Class

description: Contains the Class Function for easily creating, extending, and implementing reusable Classes.

license: MIT-style license.

requires: [Array, String, Function, Number]

provides: Class

...
*/

(function(){

var Class = this.Class = new Type('Class', function(params){
	if (instanceOf(params, Function)) params = {initialize: params};

	var newClass = function(){
		reset(this);
		if (newClass.$prototyping) return this;
		this.$caller = null;
		this.$family = null;
		var value = (this.initialize) ? this.initialize.apply(this, arguments) : this;
		this.$caller = this.caller = null;
		return value;
	}.extend(this).implement(params);

	newClass.$constructor = Class;
	newClass.prototype.$constructor = newClass;
	newClass.prototype.parent = parent;

	return newClass;
});

var parent = function(){
	if (!this.$caller) throw new Error('The method "parent" cannot be called.');
	var name = this.$caller.$name,
		parent = this.$caller.$owner.parent,
		previous = (parent) ? parent.prototype[name] : null;
	if (!previous) throw new Error('The method "' + name + '" has no parent.');
	return previous.apply(this, arguments);
};

var reset = function(object){
	for (var key in object){
		var value = object[key];
		switch (typeOf(value)){
			case 'object':
				var F = function(){};
				F.prototype = value;
				object[key] = reset(new F);
				break;
			case 'array': object[key] = value.clone(); break;
		}
	}
	return object;
};

var wrap = function(self, key, method){
	if (method.$origin) method = method.$origin;
	var wrapper = function(){
		if (method.$protected && this.$caller == null) throw new Error('The method "' + key + '" cannot be called.');
		var caller = this.caller, current = this.$caller;
		this.caller = current; this.$caller = wrapper;
		var result = method.apply(this, arguments);
		this.$caller = current; this.caller = caller;
		return result;
	}.extend({$owner: self, $origin: method, $name: key});
	return wrapper;
};

var implement = function(key, value, retain){
	if (Class.Mutators.hasOwnProperty(key)){
		value = Class.Mutators[key].call(this, value);
		if (value == null) return this;
	}

	if (typeOf(value) == 'function'){
		if (value.$hidden) return this;
		this.prototype[key] = (retain) ? value : wrap(this, key, value);
	} else {
		Object.merge(this.prototype, key, value);
	}

	return this;
};

var getInstance = function(klass){
	klass.$prototyping = true;
	var proto = new klass;
	delete klass.$prototyping;
	return proto;
};

Class.implement('implement', implement.overloadSetter());

Class.Mutators = {

	Extends: function(parent){
		this.parent = parent;
		this.prototype = getInstance(parent);
	},

	Implements: function(items){
		Array.convert(items).each(function(item){
			var instance = new item;
			for (var key in instance) implement.call(this, key, instance[key], true);
		}, this);
	}
};

})();

/*
---

name: Class.Extras

description: Contains Utility Classes that can be implemented into your own Classes to ease the execution of many common tasks.

license: MIT-style license.

requires: Class

provides: [Class.Extras, Chain, Events, Options]

...
*/

(function(){

this.Chain = new Class({

	$chain: [],

	chain: function(){
		this.$chain.append(Array.flatten(arguments));
		return this;
	},

	callChain: function(){
		return (this.$chain.length) ? this.$chain.shift().apply(this, arguments) : false;
	},

	clearChain: function(){
		this.$chain.empty();
		return this;
	}

});

var removeOn = function(string){
	return string.replace(/^on([A-Z])/, function(full, first){
		return first.toLowerCase();
	});
};

this.Events = new Class({

	$events: {},

	addEvent: function(type, fn, internal){
		type = removeOn(type);

		

		this.$events[type] = (this.$events[type] || []).include(fn);
		if (internal) fn.internal = true;
		return this;
	},

	addEvents: function(events){
		for (var type in events) this.addEvent(type, events[type]);
		return this;
	},

	fireEvent: function(type, args, delay){
		type = removeOn(type);
		var events = this.$events[type];
		if (!events) return this;
		args = Array.convert(args);
		events.each(function(fn){
			if (delay) fn.delay(delay, this, args);
			else fn.apply(this, args);
		}, this);
		return this;
	},

	removeEvent: function(type, fn){
		type = removeOn(type);
		var events = this.$events[type];
		if (events && !fn.internal){
			var index = events.indexOf(fn);
			if (index != -1) delete events[index];
		}
		return this;
	},

	removeEvents: function(events){
		var type;
		if (typeOf(events) == 'object'){
			for (type in events) this.removeEvent(type, events[type]);
			return this;
		}
		if (events) events = removeOn(events);
		for (type in this.$events){
			if (events && events != type) continue;
			var fns = this.$events[type];
			for (var i = fns.length; i--;) if (i in fns){
				this.removeEvent(type, fns[i]);
			}
		}
		return this;
	}

});

this.Options = new Class({

	setOptions: function(){
		var options = this.options = Object.merge.apply(null, [{}, this.options].append(arguments));
		if (this.addEvent) for (var option in options){
			if (typeOf(options[option]) != 'function' || !(/^on[A-Z]/).test(option)) continue;
			this.addEvent(option, options[option]);
			delete options[option];
		}
		return this;
	}

});

})();

/*
---

name: Class.Thenable

description: Contains a Utility Class that can be implemented into your own Classes to make them "thenable".

license: MIT-style license.

requires: Class

provides: [Class.Thenable]

...
*/

(function(){

var STATE_PENDING = 0,
	STATE_FULFILLED = 1,
	STATE_REJECTED = 2;

var Thenable = Class.Thenable = new Class({

	$thenableState: STATE_PENDING,
	$thenableResult: null,
	$thenableReactions: [],

	resolve: function(value){
		resolve(this, value);
		return this;
	},

	reject: function(reason){
		reject(this, reason);
		return this;
	},

	getThenableState: function(){
		switch (this.$thenableState){
			case STATE_PENDING:
				return 'pending';

			case STATE_FULFILLED:
				return 'fulfilled';

			case STATE_REJECTED:
				return 'rejected';
		}
	},

	resetThenable: function(reason){
		reject(this, reason);
		reset(this);
		return this;
	},

	then: function(onFulfilled, onRejected){
		if (typeof onFulfilled !== 'function') onFulfilled = 'Identity';
		if (typeof onRejected !== 'function') onRejected = 'Thrower';

		var thenable = new Thenable();

		this.$thenableReactions.push({
			thenable: thenable,
			fulfillHandler: onFulfilled,
			rejectHandler: onRejected
		});

		if (this.$thenableState !== STATE_PENDING){
			react(this);
		}

		return thenable;
	},

	'catch': function(onRejected){
		return this.then(null, onRejected);
	}

});

Thenable.extend({
	resolve: function(value){
		var thenable;
		if (value instanceof Thenable){
			thenable = value;
		} else {
			thenable = new Thenable();
			resolve(thenable, value);
		}
		return thenable;
	},
	reject: function(reason){
		var thenable = new Thenable();
		reject(thenable, reason);
		return thenable;
	}
});

// Private functions

function resolve(thenable, value){
	if (thenable.$thenableState === STATE_PENDING){
		if (thenable === value){
			reject(thenable, new TypeError('Tried to resolve a thenable with itself.'));
		} else if (value && (typeof value === 'object' || typeof value === 'function')){
			var then;
			try {
				then = value.then;
			} catch (exception){
				reject(thenable, exception);
			}
			if (typeof then === 'function'){
				var resolved = false;
				defer(function(){
					try {
						then.call(
							value,
							function(nextValue){
								if (!resolved){
									resolved = true;
									resolve(thenable, nextValue);
								}
							},
							function(reason){
								if (!resolved){
									resolved = true;
									reject(thenable, reason);
								}
							}
						);
					} catch (exception){
						if (!resolved){
							resolved = true;
							reject(thenable, exception);
						}
					}
				});
			} else {
				fulfill(thenable, value);
			}
		} else {
			fulfill(thenable, value);
		}
	}
}

function fulfill(thenable, value){
	if (thenable.$thenableState === STATE_PENDING){
		thenable.$thenableResult = value;
		thenable.$thenableState = STATE_FULFILLED;

		react(thenable);
	}
}

function reject(thenable, reason){
	if (thenable.$thenableState === STATE_PENDING){
		thenable.$thenableResult = reason;
		thenable.$thenableState = STATE_REJECTED;

		react(thenable);
	}
}

function reset(thenable){
	if (thenable.$thenableState !== STATE_PENDING){
		thenable.$thenableResult = null;
		thenable.$thenableState = STATE_PENDING;
	}
}

function react(thenable){
	var state = thenable.$thenableState,
		result = thenable.$thenableResult,
		reactions = thenable.$thenableReactions,
		type;

	if (state === STATE_FULFILLED){
		thenable.$thenableReactions = [];
		type = 'fulfillHandler';
	} else if (state == STATE_REJECTED){
		thenable.$thenableReactions = [];
		type = 'rejectHandler';
	}

	if (type){
		defer(handle.pass([result, reactions, type]));
	}
}

function handle(result, reactions, type){
	for (var i = 0, l = reactions.length; i < l; ++i){
		var reaction = reactions[i],
			handler = reaction[type];

		if (handler === 'Identity'){
			resolve(reaction.thenable, result);
		} else if (handler === 'Thrower'){
			reject(reaction.thenable, result);
		} else {
			try {
				resolve(reaction.thenable, handler(result));
			} catch (exception){
				reject(reaction.thenable, exception);
			}
		}
	}
}

var defer;
if (typeof process !== 'undefined' && typeof process.nextTick === 'function'){
	defer = process.nextTick;
} else if (typeof setImmediate !== 'undefined'){
	defer = setImmediate;
} else {
	defer = function(fn){
		setTimeout(fn, 0);
	};
}

})();

/*
---

name: Object

description: Object generic methods

license: MIT-style license.

requires: Type

provides: [Object, Hash]

...
*/

(function(){

Object.extend({

	subset: function(object, keys){
		var results = {};
		for (var i = 0, l = keys.length; i < l; i++){
			var k = keys[i];
			if (k in object) results[k] = object[k];
		}
		return results;
	},

	map: function(object, fn, bind){
		var results = {};
		var keys = Object.keys(object);
		for (var i = 0; i < keys.length; i++){
			var key = keys[i];
			results[key] = fn.call(bind, object[key], key, object);
		}
		return results;
	},

	filter: function(object, fn, bind){
		var results = {};
		var keys = Object.keys(object);
		for (var i = 0; i < keys.length; i++){
			var key = keys[i], value = object[key];
			if (fn.call(bind, value, key, object)) results[key] = value;
		}
		return results;
	},

	every: function(object, fn, bind){
		var keys = Object.keys(object);
		for (var i = 0; i < keys.length; i++){
			var key = keys[i];
			if (!fn.call(bind, object[key], key)) return false;
		}
		return true;
	},

	some: function(object, fn, bind){
		var keys = Object.keys(object);
		for (var i = 0; i < keys.length; i++){
			var key = keys[i];
			if (fn.call(bind, object[key], key)) return true;
		}
		return false;
	},

	values: function(object){
		var values = [];
		var keys = Object.keys(object);
		for (var i = 0; i < keys.length; i++){
			var k = keys[i];
			values.push(object[k]);
		}
		return values;
	},

	getLength: function(object){
		return Object.keys(object).length;
	},

	keyOf: function(object, value){
		var keys = Object.keys(object);
		for (var i = 0; i < keys.length; i++){
			var key = keys[i];
			if (object[key] === value) return key;
		}
		return null;
	},

	contains: function(object, value){
		return Object.keyOf(object, value) != null;
	},

	toQueryString: function(object, base){
		var queryString = [];

		Object.each(object, function(value, key){
			if (base) key = base + '[' + key + ']';
			var result;
			switch (typeOf(value)){
				case 'object': result = Object.toQueryString(value, key); break;
				case 'array':
					var qs = {};
					value.each(function(val, i){
						qs[i] = val;
					});
					result = Object.toQueryString(qs, key);
					break;
				default: result = key + '=' + encodeURIComponent(value);
			}
			if (value != null) queryString.push(result);
		});

		return queryString.join('&');
	}

});

})();



/*
---
name: Slick.Parser
description: Standalone CSS3 Selector parser
provides: Slick.Parser
...
*/

;(function(){

var parsed,
	separatorIndex,
	combinatorIndex,
	reversed,
	cache = {},
	reverseCache = {},
	reUnescape = /\\/g;

var parse = function(expression, isReversed){
	if (expression == null) return null;
	if (expression.Slick === true) return expression;
	expression = ('' + expression).replace(/^\s+|\s+$/g, '');
	reversed = !!isReversed;
	var currentCache = (reversed) ? reverseCache : cache;
	if (currentCache[expression]) return currentCache[expression];
	parsed = {
		Slick: true,
		expressions: [],
		raw: expression,
		reverse: function(){
			return parse(this.raw, true);
		}
	};
	separatorIndex = -1;
	while (expression != (expression = expression.replace(regexp, parser)));
	parsed.length = parsed.expressions.length;
	return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;
};

var reverseCombinator = function(combinator){
	if (combinator === '!') return ' ';
	else if (combinator === ' ') return '!';
	else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');
	else return '!' + combinator;
};

var reverse = function(expression){
	var expressions = expression.expressions;
	for (var i = 0; i < expressions.length; i++){
		var exp = expressions[i];
		var last = {parts: [], tag: '*', combinator: reverseCombinator(exp[0].combinator)};

		for (var j = 0; j < exp.length; j++){
			var cexp = exp[j];
			if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';
			cexp.combinator = cexp.reverseCombinator;
			delete cexp.reverseCombinator;
		}

		exp.reverse().push(last);
	}
	return expression;
};

var escapeRegExp = function(string){// Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License
	return string.replace(/[-[\]{}()*+?.\\^$|,#\s]/g, function(match){
		return '\\' + match;
	});
};

var regexp = new RegExp(
/*
#!/usr/bin/env ruby
puts "\t\t" + DATA.read.gsub(/\(\?x\)|\s+#.*$|\s+|\\$|\\n/,'')
__END__
	"(?x)^(?:\
	  \\s* ( , ) \\s*               # Separator          \n\
	| \\s* ( <combinator>+ ) \\s*   # Combinator         \n\
	|      ( \\s+ )                 # CombinatorChildren \n\
	|      ( <unicode>+ | \\* )     # Tag                \n\
	| \\#  ( <unicode>+       )     # ID                 \n\
	| \\.  ( <unicode>+       )     # ClassName          \n\
	|                               # Attribute          \n\
	\\[  \
		\\s* (<unicode1>+)  (?:  \
			\\s* ([*^$!~|]?=)  (?:  \
				\\s* (?:\
					([\"']?)(.*?)\\9 \
				)\
			)  \
		)?  \\s*  \
	\\](?!\\]) \n\
	|   :+ ( <unicode>+ )(?:\
	\\( (?:\
		(?:([\"'])([^\\12]*)\\12)|((?:\\([^)]+\\)|[^()]*)+)\
	) \\)\
	)?\
	)"
*/
	"^(?:\\s*(,)\\s*|\\s*(<combinator>+)\\s*|(\\s+)|(<unicode>+|\\*)|\\#(<unicode>+)|\\.(<unicode>+)|\\[\\s*(<unicode1>+)(?:\\s*([*^$!~|]?=)(?:\\s*(?:([\"']?)(.*?)\\9)))?\\s*\\](?!\\])|(:+)(<unicode>+)(?:\\((?:(?:([\"'])([^\\13]*)\\13)|((?:\\([^)]+\\)|[^()]*)+))\\))?)"
	.replace(/<combinator>/, '[' + escapeRegExp('>+~`!@$%^&={}\\;</') + ']')
	.replace(/<unicode>/g, '(?:[\\w\\u00a1-\\uFFFF-]|\\\\[^\\s0-9a-f])')
	.replace(/<unicode1>/g, '(?:[:\\w\\u00a1-\\uFFFF-]|\\\\[^\\s0-9a-f])')
);

function parser(
	rawMatch,

	separator,
	combinator,
	combinatorChildren,

	tagName,
	id,
	className,

	attributeKey,
	attributeOperator,
	attributeQuote,
	attributeValue,

	pseudoMarker,
	pseudoClass,
	pseudoQuote,
	pseudoClassQuotedValue,
	pseudoClassValue
){
	if (separator || separatorIndex === -1){
		parsed.expressions[++separatorIndex] = [];
		combinatorIndex = -1;
		if (separator) return '';
	}

	if (combinator || combinatorChildren || combinatorIndex === -1){
		combinator = combinator || ' ';
		var currentSeparator = parsed.expressions[separatorIndex];
		if (reversed && currentSeparator[combinatorIndex])
			currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);
		currentSeparator[++combinatorIndex] = {combinator: combinator, tag: '*'};
	}

	var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];

	if (tagName){
		currentParsed.tag = tagName.replace(reUnescape, '');

	} else if (id){
		currentParsed.id = id.replace(reUnescape, '');

	} else if (className){
		className = className.replace(reUnescape, '');

		if (!currentParsed.classList) currentParsed.classList = [];
		if (!currentParsed.classes) currentParsed.classes = [];
		currentParsed.classList.push(className);
		currentParsed.classes.push({
			value: className,
			regexp: new RegExp('(^|\\s)' + escapeRegExp(className) + '(\\s|$)')
		});

	} else if (pseudoClass){
		pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;
		pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;

		if (!currentParsed.pseudos) currentParsed.pseudos = [];
		currentParsed.pseudos.push({
			key: pseudoClass.replace(reUnescape, ''),
			value: pseudoClassValue,
			type: pseudoMarker.length == 1 ? 'class' : 'element'
		});

	} else if (attributeKey){
		attributeKey = attributeKey.replace(reUnescape, '');
		attributeValue = (attributeValue || '').replace(reUnescape, '');

		var test, regexp;

		switch (attributeOperator){
			case '^=' : regexp = new RegExp(       '^'+ escapeRegExp(attributeValue)            ); break;
			case '$=' : regexp = new RegExp(            escapeRegExp(attributeValue) +'$'       ); break;
			case '~=' : regexp = new RegExp( '(^|\\s)'+ escapeRegExp(attributeValue) +'(\\s|$)' ); break;
			case '|=' : regexp = new RegExp(       '^'+ escapeRegExp(attributeValue) +'(-|$)'   ); break;
			case  '=' : test = function(value){
				return attributeValue == value;
			}; break;
			case '*=' : test = function(value){
				return value && value.indexOf(attributeValue) > -1;
			}; break;
			case '!=' : test = function(value){
				return attributeValue != value;
			}; break;
			default   : test = function(value){
				return !!value;
			};
		}

		if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function(){
			return false;
		};

		if (!test) test = function(value){
			return value && regexp.test(value);
		};

		if (!currentParsed.attributes) currentParsed.attributes = [];
		currentParsed.attributes.push({
			key: attributeKey,
			operator: attributeOperator,
			value: attributeValue,
			test: test
		});

	}

	return '';
};

// Slick NS

var Slick = (this.Slick || {});

Slick.parse = function(expression){
	return parse(expression);
};

Slick.escapeRegExp = escapeRegExp;

if (!this.Slick) this.Slick = Slick;

}).apply(/*<CommonJS>*/(typeof exports != 'undefined') ? exports : /*</CommonJS>*/this);

/*
---
name: Slick.Finder
description: The new, superfast css selector engine.
provides: Slick.Finder
requires: Slick.Parser
...
*/

;(function(){

var local = {},
	featuresCache = {},
	toString = Object.prototype.toString;

// Feature / Bug detection

local.isNativeCode = function(fn){
	return (/\{\s*\[native code\]\s*\}/).test('' + fn);
};

local.isXML = function(document){
	return (!!document.xmlVersion) || (!!document.xml) || (toString.call(document) == '[object XMLDocument]') ||
	(document.nodeType == 9 && document.documentElement.nodeName != 'HTML');
};

local.setDocument = function(document){

	// convert elements / window arguments to document. if document cannot be extrapolated, the function returns.
	var nodeType = document.nodeType;
	if (nodeType == 9); // document
	else if (nodeType) document = document.ownerDocument; // node
	else if (document.navigator) document = document.document; // window
	else return;

	// check if it's the old document

	if (this.document === document) return;
	this.document = document;

	// check if we have done feature detection on this document before

	var root = document.documentElement,
		rootUid = this.getUIDXML(root),
		features = featuresCache[rootUid],
		feature;

	if (features){
		for (feature in features){
			this[feature] = features[feature];
		}
		return;
	}

	features = featuresCache[rootUid] = {};

	features.root = root;
	features.isXMLDocument = this.isXML(document);

	features.brokenStarGEBTN
	= features.starSelectsClosedQSA
	= features.idGetsName
	= features.brokenMixedCaseQSA
	= features.brokenGEBCN
	= features.brokenCheckedQSA
	= features.brokenEmptyAttributeQSA
	= features.isHTMLDocument
	= features.nativeMatchesSelector
	= false;

	var starSelectsClosed, starSelectsComments,
		brokenSecondClassNameGEBCN, cachedGetElementsByClassName,
		brokenFormAttributeGetter;

	var selected, id = 'slick_uniqueid';
	var testNode = document.createElement('div');

	var testRoot = document.body || document.getElementsByTagName('body')[0] || root;
	testRoot.appendChild(testNode);

	// on non-HTML documents innerHTML and getElementsById doesnt work properly
	try {
		testNode.innerHTML = '<a id="'+id+'"></a>';
		features.isHTMLDocument = !!document.getElementById(id);
	} catch (e){}

	if (features.isHTMLDocument){

		testNode.style.display = 'none';

		// IE returns comment nodes for getElementsByTagName('*') for some documents
		testNode.appendChild(document.createComment(''));
		starSelectsComments = (testNode.getElementsByTagName('*').length > 1);

		// IE returns closed nodes (EG:"</foo>") for getElementsByTagName('*') for some documents
		try {
			testNode.innerHTML = 'foo</foo>';
			selected = testNode.getElementsByTagName('*');
			starSelectsClosed = (selected && !!selected.length && selected[0].nodeName.charAt(0) == '/');
		} catch (e){};

		features.brokenStarGEBTN = starSelectsComments || starSelectsClosed;

		// IE returns elements with the name instead of just id for getElementsById for some documents
		try {
			testNode.innerHTML = '<a name="'+ id +'"></a><b id="'+ id +'"></b>';
			features.idGetsName = document.getElementById(id) === testNode.firstChild;
		} catch (e){}

		if (testNode.getElementsByClassName){

			// Safari 3.2 getElementsByClassName caches results
			try {
				testNode.innerHTML = '<a class="f"></a><a class="b"></a>';
				testNode.getElementsByClassName('b').length;
				testNode.firstChild.className = 'b';
				cachedGetElementsByClassName = (testNode.getElementsByClassName('b').length != 2);
			} catch (e){};

			// Opera 9.6 getElementsByClassName doesnt detects the class if its not the first one
			try {
				testNode.innerHTML = '<a class="a"></a><a class="f b a"></a>';
				brokenSecondClassNameGEBCN = (testNode.getElementsByClassName('a').length != 2);
			} catch (e){}

			features.brokenGEBCN = cachedGetElementsByClassName || brokenSecondClassNameGEBCN;
		}

		if (testNode.querySelectorAll){
			// IE 8 returns closed nodes (EG:"</foo>") for querySelectorAll('*') for some documents
			try {
				testNode.innerHTML = 'foo</foo>';
				selected = testNode.querySelectorAll('*');
				features.starSelectsClosedQSA = (selected && !!selected.length && selected[0].nodeName.charAt(0) == '/');
			} catch (e){}

			// Safari 3.2 querySelectorAll doesnt work with mixedcase on quirksmode
			try {
				testNode.innerHTML = '<a class="MiX"></a>';
				features.brokenMixedCaseQSA = !testNode.querySelectorAll('.MiX').length;
			} catch (e){}

			// Webkit and Opera dont return selected options on querySelectorAll
			try {
				testNode.innerHTML = '<select><option selected="selected">a</option></select>';
				features.brokenCheckedQSA = (testNode.querySelectorAll(':checked').length == 0);
			} catch (e){};

			// IE returns incorrect results for attr[*^$]="" selectors on querySelectorAll
			try {
				testNode.innerHTML = '<a class=""></a>';
				features.brokenEmptyAttributeQSA = (testNode.querySelectorAll('[class*=""]').length != 0);
			} catch (e){}

		}

		// IE6-7, if a form has an input of id x, form.getAttribute(x) returns a reference to the input
		try {
			testNode.innerHTML = '<form action="s"><input id="action"/></form>';
			brokenFormAttributeGetter = (testNode.firstChild.getAttribute('action') != 's');
		} catch (e){}

		// native matchesSelector function

		features.nativeMatchesSelector = root.matches || /*root.msMatchesSelector ||*/ root.mozMatchesSelector || root.webkitMatchesSelector;
		if (features.nativeMatchesSelector) try {
			// if matchesSelector trows errors on incorrect sintaxes we can use it
			features.nativeMatchesSelector.call(root, ':slick');
			features.nativeMatchesSelector = null;
		} catch (e){}

	}

	try {
		root.slick_expando = 1;
		delete root.slick_expando;
		features.getUID = this.getUIDHTML;
	} catch (e){
		features.getUID = this.getUIDXML;
	}

	testRoot.removeChild(testNode);
	testNode = selected = testRoot = null;

	// getAttribute

	features.getAttribute = (features.isHTMLDocument && brokenFormAttributeGetter) ? function(node, name){
		var method = this.attributeGetters[name];
		if (method) return method.call(node);
		var attributeNode = node.getAttributeNode(name);
		return (attributeNode) ? attributeNode.nodeValue : null;
	} : function(node, name){
		var method = this.attributeGetters[name];
		return (method) ? method.call(node) : node.getAttribute(name);
	};

	// hasAttribute

	features.hasAttribute = (root && this.isNativeCode(root.hasAttribute)) ? function(node, attribute){
		return node.hasAttribute(attribute);
	} : function(node, attribute){
		node = node.getAttributeNode(attribute);
		return !!(node && (node.specified || node.nodeValue));
	};

	// contains
	// FIXME: Add specs: local.contains should be different for xml and html documents?
	var nativeRootContains = root && this.isNativeCode(root.contains),
		nativeDocumentContains = document && this.isNativeCode(document.contains);

	features.contains = (nativeRootContains && nativeDocumentContains) ? function(context, node){
		return context.contains(node);
	} : (nativeRootContains && !nativeDocumentContains) ? function(context, node){
		// IE8 does not have .contains on document.
		return context === node || ((context === document) ? document.documentElement : context).contains(node);
	} : (root && root.compareDocumentPosition) ? function(context, node){
		return context === node || !!(context.compareDocumentPosition(node) & 16);
	} : function(context, node){
		if (node) do {
			if (node === context) return true;
		} while ((node = node.parentNode));
		return false;
	};

	// document order sorting
	// credits to Sizzle (http://sizzlejs.com/)

	features.documentSorter = (root.compareDocumentPosition) ? function(a, b){
		if (!a.compareDocumentPosition || !b.compareDocumentPosition) return 0;
		return a.compareDocumentPosition(b) & 4 ? -1 : a === b ? 0 : 1;
	} : ('sourceIndex' in root) ? function(a, b){
		if (!a.sourceIndex || !b.sourceIndex) return 0;
		return a.sourceIndex - b.sourceIndex;
	} : (document.createRange) ? function(a, b){
		if (!a.ownerDocument || !b.ownerDocument) return 0;
		var aRange = a.ownerDocument.createRange(), bRange = b.ownerDocument.createRange();
		aRange.setStart(a, 0);
		aRange.setEnd(a, 0);
		bRange.setStart(b, 0);
		bRange.setEnd(b, 0);
		return aRange.compareBoundaryPoints(Range.START_TO_END, bRange);
	} : null;

	root = null;

	for (feature in features){
		this[feature] = features[feature];
	}
};

// Main Method

var reSimpleSelector = /^([#.]?)((?:[\w-]+|\*))$/,
	reEmptyAttribute = /\[.+[*$^]=(?:""|'')?\]/,
	qsaFailExpCache = {};

local.search = function(context, expression, append, first){

	var found = this.found = (first) ? null : (append || []);

	if (!context) return found;
	else if (context.navigator) context = context.document; // Convert the node from a window to a document
	else if (!context.nodeType) return found;

	// setup

	var parsed, i, node, nodes,
		uniques = this.uniques = {},
		hasOthers = !!(append && append.length),
		contextIsDocument = (context.nodeType == 9);

	if (this.document !== (contextIsDocument ? context : context.ownerDocument)) this.setDocument(context);

	// avoid duplicating items already in the append array
	if (hasOthers) for (i = found.length; i--;) uniques[this.getUID(found[i])] = true;

	// expression checks

	if (typeof expression == 'string'){ // expression is a string

		/*<simple-selectors-override>*/
		var simpleSelector = expression.match(reSimpleSelector);
		simpleSelectors: if (simpleSelector){

			var symbol = simpleSelector[1],
				name = simpleSelector[2];

			if (!symbol){

				if (name == '*' && this.brokenStarGEBTN) break simpleSelectors;
				nodes = context.getElementsByTagName(name);
				if (first) return nodes[0] || null;
				for (i = 0; node = nodes[i++];){
					if (!(hasOthers && uniques[this.getUID(node)])) found.push(node);
				}

			} else if (symbol == '#'){

				if (!this.isHTMLDocument || !contextIsDocument) break simpleSelectors;
				node = context.getElementById(name);
				if (!node) return found;
				if (this.idGetsName && node.getAttributeNode('id').nodeValue != name) break simpleSelectors;
				if (first) return node || null;
				if (!(hasOthers && uniques[this.getUID(node)])) found.push(node);

			} else if (symbol == '.'){

				if (!this.isHTMLDocument || ((!context.getElementsByClassName || this.brokenGEBCN) && context.querySelectorAll)) break simpleSelectors;
				if (context.getElementsByClassName && !this.brokenGEBCN){
					nodes = context.getElementsByClassName(name);
					if (first) return nodes[0] || null;
					for (i = 0; node = nodes[i++];){
						if (!(hasOthers && uniques[this.getUID(node)])) found.push(node);
					}
				} else {
					var matchClass = new RegExp('(^|\\s)'+ Slick.escapeRegExp(name) +'(\\s|$)');
					nodes = context.getElementsByTagName('*');
					for (i = 0; node = nodes[i++];){
						className = node.className;
						if (!(className && matchClass.test(className))) continue;
						if (first) return node;
						if (!(hasOthers && uniques[this.getUID(node)])) found.push(node);
					}
				}

			}

			if (hasOthers) this.sort(found);
			return (first) ? null : found;

		}
		/*</simple-selectors-override>*/

		/*<query-selector-override>*/
		querySelector: if (context.querySelectorAll){

			if (!this.isHTMLDocument
				|| qsaFailExpCache[expression]
				//TODO: only skip when expression is actually mixed case
				|| this.brokenMixedCaseQSA
				|| (this.brokenCheckedQSA && expression.indexOf(':checked') > -1)
				|| (this.brokenEmptyAttributeQSA && reEmptyAttribute.test(expression))
				|| (!contextIsDocument //Abort when !contextIsDocument and...
					//  there are multiple expressions in the selector
					//  since we currently only fix non-document rooted QSA for single expression selectors
					&& expression.indexOf(',') > -1
				)
				|| Slick.disableQSA
			) break querySelector;

			var _expression = expression, _context = context, currentId;
			if (!contextIsDocument){
				// non-document rooted QSA
				// credits to Andrew Dupont
				currentId = _context.getAttribute('id'), slickid = 'slickid__';
				_context.setAttribute('id', slickid);
				_expression = '#' + slickid + ' ' + _expression;
				context = _context.parentNode;
			}

			try {
				if (first) return context.querySelector(_expression) || null;
				else nodes = context.querySelectorAll(_expression);
			} catch (e){
				qsaFailExpCache[expression] = 1;
				break querySelector;
			} finally {
				if (!contextIsDocument){
					if (currentId) _context.setAttribute('id', currentId);
					else _context.removeAttribute('id');
					context = _context;
				}
			}

			if (this.starSelectsClosedQSA) for (i = 0; node = nodes[i++];){
				if (node.nodeName > '@' && !(hasOthers && uniques[this.getUID(node)])) found.push(node);
			} else for (i = 0; node = nodes[i++];){
				if (!(hasOthers && uniques[this.getUID(node)])) found.push(node);
			}

			if (hasOthers) this.sort(found);
			return found;

		}
		/*</query-selector-override>*/

		parsed = this.Slick.parse(expression);
		if (!parsed.length) return found;
	} else if (expression == null){ // there is no expression
		return found;
	} else if (expression.Slick){ // expression is a parsed Slick object
		parsed = expression;
	} else if (this.contains(context.documentElement || context, expression)){ // expression is a node
		(found) ? found.push(expression) : found = expression;
		return found;
	} else { // other junk
		return found;
	}

	/*<pseudo-selectors>*//*<nth-pseudo-selectors>*/

	// cache elements for the nth selectors

	this.posNTH = {};
	this.posNTHLast = {};
	this.posNTHType = {};
	this.posNTHTypeLast = {};

	/*</nth-pseudo-selectors>*//*</pseudo-selectors>*/

	// if append is null and there is only a single selector with one expression use pushArray, else use pushUID
	this.push = (!hasOthers && (first || (parsed.length == 1 && parsed.expressions[0].length == 1))) ? this.pushArray : this.pushUID;

	if (found == null) found = [];

	// default engine

	var j, m, n;
	var combinator, tag, id, classList, classes, attributes, pseudos;
	var currentItems, currentExpression, currentBit, lastBit, expressions = parsed.expressions;

	search: for (i = 0; (currentExpression = expressions[i]); i++) for (j = 0; (currentBit = currentExpression[j]); j++){

		combinator = 'combinator:' + currentBit.combinator;
		if (!this[combinator]) continue search;

		tag        = (this.isXMLDocument) ? currentBit.tag : currentBit.tag.toUpperCase();
		id         = currentBit.id;
		classList  = currentBit.classList;
		classes    = currentBit.classes;
		attributes = currentBit.attributes;
		pseudos    = currentBit.pseudos;
		lastBit    = (j === (currentExpression.length - 1));

		this.bitUniques = {};

		if (lastBit){
			this.uniques = uniques;
			this.found = found;
		} else {
			this.uniques = {};
			this.found = [];
		}

		if (j === 0){
			this[combinator](context, tag, id, classes, attributes, pseudos, classList);
			if (first && lastBit && found.length) break search;
		} else {
			if (first && lastBit) for (m = 0, n = currentItems.length; m < n; m++){
				this[combinator](currentItems[m], tag, id, classes, attributes, pseudos, classList);
				if (found.length) break search;
			} else for (m = 0, n = currentItems.length; m < n; m++) this[combinator](currentItems[m], tag, id, classes, attributes, pseudos, classList);
		}

		currentItems = this.found;
	}

	// should sort if there are nodes in append and if you pass multiple expressions.
	if (hasOthers || (parsed.expressions.length > 1)) this.sort(found);

	return (first) ? (found[0] || null) : found;
};

// Utils

local.uidx = 1;
local.uidk = 'slick-uniqueid';

local.getUIDXML = function(node){
	var uid = node.getAttribute(this.uidk);
	if (!uid){
		uid = this.uidx++;
		node.setAttribute(this.uidk, uid);
	}
	return uid;
};

local.getUIDHTML = function(node){
	return node.uniqueNumber || (node.uniqueNumber = this.uidx++);
};

// sort based on the setDocument documentSorter method.

local.sort = function(results){
	if (!this.documentSorter) return results;
	results.sort(this.documentSorter);
	return results;
};

/*<pseudo-selectors>*//*<nth-pseudo-selectors>*/

local.cacheNTH = {};

local.matchNTH = /^([+-]?\d*)?([a-z]+)?([+-]\d+)?$/;

local.parseNTHArgument = function(argument){
	var parsed = argument.match(this.matchNTH);
	if (!parsed) return false;
	var special = parsed[2] || false;
	var a = parsed[1] || 1;
	if (a == '-') a = -1;
	var b = +parsed[3] || 0;
	parsed =
		(special == 'n')	? {a: a, b: b} :
		(special == 'odd')	? {a: 2, b: 1} :
		(special == 'even')	? {a: 2, b: 0} : {a: 0, b: a};

	return (this.cacheNTH[argument] = parsed);
};

local.createNTHPseudo = function(child, sibling, positions, ofType){
	return function(node, argument){
		var uid = this.getUID(node);
		if (!this[positions][uid]){
			var parent = node.parentNode;
			if (!parent) return false;
			var el = parent[child], count = 1;
			if (ofType){
				var nodeName = node.nodeName;
				do {
					if (el.nodeName != nodeName) continue;
					this[positions][this.getUID(el)] = count++;
				} while ((el = el[sibling]));
			} else {
				do {
					if (el.nodeType != 1) continue;
					this[positions][this.getUID(el)] = count++;
				} while ((el = el[sibling]));
			}
		}
		argument = argument || 'n';
		var parsed = this.cacheNTH[argument] || this.parseNTHArgument(argument);
		if (!parsed) return false;
		var a = parsed.a, b = parsed.b, pos = this[positions][uid];
		if (a == 0) return b == pos;
		if (a > 0){
			if (pos < b) return false;
		} else {
			if (b < pos) return false;
		}
		return ((pos - b) % a) == 0;
	};
};

/*</nth-pseudo-selectors>*//*</pseudo-selectors>*/

local.pushArray = function(node, tag, id, classes, attributes, pseudos){
	if (this.matchSelector(node, tag, id, classes, attributes, pseudos)) this.found.push(node);
};

local.pushUID = function(node, tag, id, classes, attributes, pseudos){
	var uid = this.getUID(node);
	if (!this.uniques[uid] && this.matchSelector(node, tag, id, classes, attributes, pseudos)){
		this.uniques[uid] = true;
		this.found.push(node);
	}
};

local.matchNode = function(node, selector){
	if (this.isHTMLDocument && this.nativeMatchesSelector){
		try {
			return this.nativeMatchesSelector.call(node, selector.replace(/\[([^=]+)=\s*([^'"\]]+?)\s*\]/g, '[$1="$2"]'));
		} catch (matchError){}
	}

	var parsed = this.Slick.parse(selector);
	if (!parsed) return true;

	// simple (single) selectors
	var expressions = parsed.expressions, simpleExpCounter = 0, i, currentExpression;
	for (i = 0; (currentExpression = expressions[i]); i++){
		if (currentExpression.length == 1){
			var exp = currentExpression[0];
			if (this.matchSelector(node, (this.isXMLDocument) ? exp.tag : exp.tag.toUpperCase(), exp.id, exp.classes, exp.attributes, exp.pseudos)) return true;
			simpleExpCounter++;
		}
	}

	if (simpleExpCounter == parsed.length) return false;

	var nodes = this.search(this.document, parsed), item;
	for (i = 0; item = nodes[i++];){
		if (item === node) return true;
	}
	return false;
};

local.matchPseudo = function(node, name, argument){
	var pseudoName = 'pseudo:' + name;
	if (this[pseudoName]) return this[pseudoName](node, argument);
	var attribute = this.getAttribute(node, name);
	return (argument) ? argument == attribute : !!attribute;
};

local.matchSelector = function(node, tag, id, classes, attributes, pseudos){
	if (tag){
		var nodeName = (this.isXMLDocument) ? node.nodeName : node.nodeName.toUpperCase();
		if (tag == '*'){
			if (nodeName < '@') return false; // Fix for comment nodes and closed nodes
		} else {
			if (nodeName != tag) return false;
		}
	}

	if (id && node.getAttribute('id') != id) return false;

	var i, part, cls;
	if (classes) for (i = classes.length; i--;){
		cls = this.getAttribute(node, 'class');
		if (!(cls && classes[i].regexp.test(cls))) return false;
	}
	if (attributes) for (i = attributes.length; i--;){
		part = attributes[i];
		if (part.operator ? !part.test(this.getAttribute(node, part.key)) : !this.hasAttribute(node, part.key)) return false;
	}
	if (pseudos) for (i = pseudos.length; i--;){
		part = pseudos[i];
		if (!this.matchPseudo(node, part.key, part.value)) return false;
	}
	return true;
};

var combinators = {

	' ': function(node, tag, id, classes, attributes, pseudos, classList){ // all child nodes, any level

		var i, item, children;

		if (this.isHTMLDocument){
			getById: if (id){
				item = this.document.getElementById(id);
				if ((!item && node.all) || (this.idGetsName && item && item.getAttributeNode('id').nodeValue != id)){
					// all[id] returns all the elements with that name or id inside node
					// if theres just one it will return the element, else it will be a collection
					children = node.all[id];
					if (!children) return;
					if (!children[0]) children = [children];
					for (i = 0; item = children[i++];){
						var idNode = item.getAttributeNode('id');
						if (idNode && idNode.nodeValue == id){
							this.push(item, tag, null, classes, attributes, pseudos);
							break;
						}
					}
					return;
				}
				if (!item){
					// if the context is in the dom we return, else we will try GEBTN, breaking the getById label
					if (this.contains(this.root, node)) return;
					else break getById;
				} else if (this.document !== node && !this.contains(node, item)) return;
				this.push(item, tag, null, classes, attributes, pseudos);
				return;
			}
			getByClass: if (classes && node.getElementsByClassName && !this.brokenGEBCN){
				children = node.getElementsByClassName(classList.join(' '));
				if (!(children && children.length)) break getByClass;
				for (i = 0; item = children[i++];) this.push(item, tag, id, null, attributes, pseudos);
				return;
			}
		}
		getByTag: {
			children = node.getElementsByTagName(tag);
			if (!(children && children.length)) break getByTag;
			if (!this.brokenStarGEBTN) tag = null;
			for (i = 0; item = children[i++];) this.push(item, tag, id, classes, attributes, pseudos);
		}
	},

	'>': function(node, tag, id, classes, attributes, pseudos){ // direct children
		if ((node = node.firstChild)) do {
			if (node.nodeType == 1) this.push(node, tag, id, classes, attributes, pseudos);
		} while ((node = node.nextSibling));
	},

	'+': function(node, tag, id, classes, attributes, pseudos){ // next sibling
		while ((node = node.nextSibling)) if (node.nodeType == 1){
			this.push(node, tag, id, classes, attributes, pseudos);
			break;
		}
	},

	'^': function(node, tag, id, classes, attributes, pseudos){ // first child
		node = node.firstChild;
		if (node){
			if (node.nodeType == 1) this.push(node, tag, id, classes, attributes, pseudos);
			else this['combinator:+'](node, tag, id, classes, attributes, pseudos);
		}
	},

	'~': function(node, tag, id, classes, attributes, pseudos){ // next siblings
		while ((node = node.nextSibling)){
			if (node.nodeType != 1) continue;
			var uid = this.getUID(node);
			if (this.bitUniques[uid]) break;
			this.bitUniques[uid] = true;
			this.push(node, tag, id, classes, attributes, pseudos);
		}
	},

	'++': function(node, tag, id, classes, attributes, pseudos){ // next sibling and previous sibling
		this['combinator:+'](node, tag, id, classes, attributes, pseudos);
		this['combinator:!+'](node, tag, id, classes, attributes, pseudos);
	},

	'~~': function(node, tag, id, classes, attributes, pseudos){ // next siblings and previous siblings
		this['combinator:~'](node, tag, id, classes, attributes, pseudos);
		this['combinator:!~'](node, tag, id, classes, attributes, pseudos);
	},

	'!': function(node, tag, id, classes, attributes, pseudos){ // all parent nodes up to document
		while ((node = node.parentNode)) if (node !== this.document) this.push(node, tag, id, classes, attributes, pseudos);
	},

	'!>': function(node, tag, id, classes, attributes, pseudos){ // direct parent (one level)
		node = node.parentNode;
		if (node !== this.document) this.push(node, tag, id, classes, attributes, pseudos);
	},

	'!+': function(node, tag, id, classes, attributes, pseudos){ // previous sibling
		while ((node = node.previousSibling)) if (node.nodeType == 1){
			this.push(node, tag, id, classes, attributes, pseudos);
			break;
		}
	},

	'!^': function(node, tag, id, classes, attributes, pseudos){ // last child
		node = node.lastChild;
		if (node){
			if (node.nodeType == 1) this.push(node, tag, id, classes, attributes, pseudos);
			else this['combinator:!+'](node, tag, id, classes, attributes, pseudos);
		}
	},

	'!~': function(node, tag, id, classes, attributes, pseudos){ // previous siblings
		while ((node = node.previousSibling)){
			if (node.nodeType != 1) continue;
			var uid = this.getUID(node);
			if (this.bitUniques[uid]) break;
			this.bitUniques[uid] = true;
			this.push(node, tag, id, classes, attributes, pseudos);
		}
	}

};

for (var c in combinators) local['combinator:' + c] = combinators[c];

var pseudos = {

	/*<pseudo-selectors>*/

	'empty': function(node){
		var child = node.firstChild;
		return !(child && child.nodeType == 1) && !(node.innerText || node.textContent || '').length;
	},

	'not': function(node, expression){
		return !this.matchNode(node, expression);
	},

	'contains': function(node, text){
		return (node.innerText || node.textContent || '').indexOf(text) > -1;
	},

	'first-child': function(node){
		while ((node = node.previousSibling)) if (node.nodeType == 1) return false;
		return true;
	},

	'last-child': function(node){
		while ((node = node.nextSibling)) if (node.nodeType == 1) return false;
		return true;
	},

	'only-child': function(node){
		var prev = node;
		while ((prev = prev.previousSibling)) if (prev.nodeType == 1) return false;
		var next = node;
		while ((next = next.nextSibling)) if (next.nodeType == 1) return false;
		return true;
	},

	/*<nth-pseudo-selectors>*/

	'nth-child': local.createNTHPseudo('firstChild', 'nextSibling', 'posNTH'),

	'nth-last-child': local.createNTHPseudo('lastChild', 'previousSibling', 'posNTHLast'),

	'nth-of-type': local.createNTHPseudo('firstChild', 'nextSibling', 'posNTHType', true),

	'nth-last-of-type': local.createNTHPseudo('lastChild', 'previousSibling', 'posNTHTypeLast', true),

	'index': function(node, index){
		return this['pseudo:nth-child'](node, '' + (index + 1));
	},

	'even': function(node){
		return this['pseudo:nth-child'](node, '2n');
	},

	'odd': function(node){
		return this['pseudo:nth-child'](node, '2n+1');
	},

	/*</nth-pseudo-selectors>*/

	/*<of-type-pseudo-selectors>*/

	'first-of-type': function(node){
		var nodeName = node.nodeName;
		while ((node = node.previousSibling)) if (node.nodeName == nodeName) return false;
		return true;
	},

	'last-of-type': function(node){
		var nodeName = node.nodeName;
		while ((node = node.nextSibling)) if (node.nodeName == nodeName) return false;
		return true;
	},

	'only-of-type': function(node){
		var prev = node, nodeName = node.nodeName;
		while ((prev = prev.previousSibling)) if (prev.nodeName == nodeName) return false;
		var next = node;
		while ((next = next.nextSibling)) if (next.nodeName == nodeName) return false;
		return true;
	},

	/*</of-type-pseudo-selectors>*/

	// custom pseudos

	'enabled': function(node){
		return !node.disabled;
	},

	'disabled': function(node){
		return node.disabled;
	},

	'checked': function(node){
		return node.checked || node.selected;
	},

	'focus': function(node){
		return this.isHTMLDocument && this.document.activeElement === node && (node.href || node.type || this.hasAttribute(node, 'tabindex'));
	},

	'root': function(node){
		return (node === this.root);
	},

	'selected': function(node){
		return node.selected;
	}

	/*</pseudo-selectors>*/
};

for (var p in pseudos) local['pseudo:' + p] = pseudos[p];

// attributes methods

var attributeGetters = local.attributeGetters = {

	'for': function(){
		return ('htmlFor' in this) ? this.htmlFor : this.getAttribute('for');
	},

	'href': function(){
		return ('href' in this) ? this.getAttribute('href', 2) : this.getAttribute('href');
	},

	'style': function(){
		return (this.style) ? this.style.cssText : this.getAttribute('style');
	},

	'tabindex': function(){
		var attributeNode = this.getAttributeNode('tabindex');
		return (attributeNode && attributeNode.specified) ? attributeNode.nodeValue : null;
	},

	'type': function(){
		return this.getAttribute('type');
	},

	'maxlength': function(){
		var attributeNode = this.getAttributeNode('maxLength');
		return (attributeNode && attributeNode.specified) ? attributeNode.nodeValue : null;
	}

};

attributeGetters.MAXLENGTH = attributeGetters.maxLength = attributeGetters.maxlength;

// Slick

var Slick = local.Slick = (this.Slick || {});

Slick.version = '1.1.7';

// Slick finder

Slick.search = function(context, expression, append){
	return local.search(context, expression, append);
};

Slick.find = function(context, expression){
	return local.search(context, expression, null, true);
};

// Slick containment checker

Slick.contains = function(container, node){
	local.setDocument(container);
	return local.contains(container, node);
};

// Slick attribute getter

Slick.getAttribute = function(node, name){
	local.setDocument(node);
	return local.getAttribute(node, name);
};

Slick.hasAttribute = function(node, name){
	local.setDocument(node);
	return local.hasAttribute(node, name);
};

// Slick matcher

Slick.match = function(node, selector){
	if (!(node && selector)) return false;
	if (!selector || selector === node) return true;
	local.setDocument(node);
	return local.matchNode(node, selector);
};

// Slick attribute accessor

Slick.defineAttributeGetter = function(name, fn){
	local.attributeGetters[name] = fn;
	return this;
};

Slick.lookupAttributeGetter = function(name){
	return local.attributeGetters[name];
};

// Slick pseudo accessor

Slick.definePseudo = function(name, fn){
	local['pseudo:' + name] = function(node, argument){
		return fn.call(node, argument);
	};
	return this;
};

Slick.lookupPseudo = function(name){
	var pseudo = local['pseudo:' + name];
	if (pseudo) return function(argument){
		return pseudo.call(this, argument);
	};
	return null;
};

// Slick overrides accessor

Slick.override = function(regexp, fn){
	local.override(regexp, fn);
	return this;
};

Slick.isXML = local.isXML;

Slick.uidOf = function(node){
	return local.getUIDHTML(node);
};

if (!this.Slick) this.Slick = Slick;

}).apply(/*<CommonJS>*/(typeof exports != 'undefined') ? exports : /*</CommonJS>*/this);

/*
---

name: Element

description: One of the most important items in MooTools. Contains the dollar function, the dollars function, and an handful of cross-browser, time-saver methods to let you easily work with HTML Elements.

license: MIT-style license.

requires: [Window, Document, Array, String, Function, Object, Number, Slick.Parser, Slick.Finder]

provides: [Element, Elements, $, $$, IFrame, Selectors]

...
*/

var Element = this.Element = function(tag, props){
	var konstructor = Element.Constructors[tag];
	if (konstructor) return konstructor(props);
	if (typeof tag != 'string') return document.id(tag).set(props);

	if (!props) props = {};

	if (!(/^[\w-]+$/).test(tag)){
		var parsed = Slick.parse(tag).expressions[0][0];
		tag = (parsed.tag == '*') ? 'div' : parsed.tag;
		if (parsed.id && props.id == null) props.id = parsed.id;

		var attributes = parsed.attributes;
		if (attributes) for (var attr, i = 0, l = attributes.length; i < l; i++){
			attr = attributes[i];
			if (props[attr.key] != null) continue;

			if (attr.value != null && attr.operator == '=') props[attr.key] = attr.value;
			else if (!attr.value && !attr.operator) props[attr.key] = true;
		}

		if (parsed.classList && props['class'] == null) props['class'] = parsed.classList.join(' ');
	}

	return document.newElement(tag, props);
};


if (Browser.Element){
	Element.prototype = Browser.Element.prototype;
	// IE8 and IE9 require the wrapping.
	Element.prototype._fireEvent = (function(fireEvent){
		return function(type, event){
			return fireEvent.call(this, type, event);
		};
	})(Element.prototype.fireEvent);
}

new Type('Element', Element).mirror(function(name){
	if (Array.prototype[name]) return;

	var obj = {};
	obj[name] = function(){
		var results = [], args = arguments, elements = true;
		for (var i = 0, l = this.length; i < l; i++){
			var element = this[i], result = results[i] = element[name].apply(element, args);
			elements = (elements && typeOf(result) == 'element');
		}
		return (elements) ? new Elements(results) : results;
	};

	Elements.implement(obj);
});

if (!Browser.Element){
	Element.parent = Object;

	Element.Prototype = {
		'$constructor': Element,
		'$family': Function.convert('element').hide()
	};

	Element.mirror(function(name, method){
		Element.Prototype[name] = method;
	});
}

Element.Constructors = {};



var IFrame = new Type('IFrame', function(){
	var params = Array.link(arguments, {
		properties: Type.isObject,
		iframe: function(obj){
			return (obj != null);
		}
	});

	var props = params.properties || {}, iframe;
	if (params.iframe) iframe = document.id(params.iframe);
	var onload = props.onload || function(){};
	delete props.onload;
	props.id = props.name = [props.id, props.name, iframe ? (iframe.id || iframe.name) : 'IFrame_' + String.uniqueID()].pick();
	iframe = new Element(iframe || 'iframe', props);

	var onLoad = function(){
		onload.call(iframe.contentWindow);
	};

	if (window.frames[props.id]) onLoad();
	else iframe.addListener('load', onLoad);
	return iframe;
});

var Elements = this.Elements = function(nodes){
	if (nodes && nodes.length){
		var uniques = {}, node;
		for (var i = 0; node = nodes[i++];){
			var uid = Slick.uidOf(node);
			if (!uniques[uid]){
				uniques[uid] = true;
				this.push(node);
			}
		}
	}
};

Elements.prototype = {length: 0};
Elements.parent = Array;

new Type('Elements', Elements).implement({

	filter: function(filter, bind){
		if (!filter) return this;
		return new Elements(Array.filter(this, (typeOf(filter) == 'string') ? function(item){
			return item.match(filter);
		} : filter, bind));
	}.protect(),

	push: function(){
		var length = this.length;
		for (var i = 0, l = arguments.length; i < l; i++){
			var item = document.id(arguments[i]);
			if (item) this[length++] = item;
		}
		return (this.length = length);
	}.protect(),

	unshift: function(){
		var items = [];
		for (var i = 0, l = arguments.length; i < l; i++){
			var item = document.id(arguments[i]);
			if (item) items.push(item);
		}
		return Array.prototype.unshift.apply(this, items);
	}.protect(),

	concat: function(){
		var newElements = new Elements(this);
		for (var i = 0, l = arguments.length; i < l; i++){
			var item = arguments[i];
			if (Type.isEnumerable(item)) newElements.append(item);
			else newElements.push(item);
		}
		return newElements;
	}.protect(),

	append: function(collection){
		for (var i = 0, l = collection.length; i < l; i++) this.push(collection[i]);
		return this;
	}.protect(),

	empty: function(){
		while (this.length) delete this[--this.length];
		return this;
	}.protect()

});



(function(){

// FF, IE
var splice = Array.prototype.splice, object = {'0': 0, '1': 1, length: 2};

splice.call(object, 1, 1);
if (object[1] == 1) Elements.implement('splice', function(){
	var length = this.length;
	var result = splice.apply(this, arguments);
	while (length >= this.length) delete this[length--];
	return result;
}.protect());

Array.forEachMethod(function(method, name){
	Elements.implement(name, method);
});

Array.mirror(Elements);

/*<ltIE8>*/
var createElementAcceptsHTML;
try {
	createElementAcceptsHTML = (document.createElement('<input name=x>').name == 'x');
} catch (e){}

var escapeQuotes = function(html){
	return ('' + html).replace(/&/g, '&amp;').replace(/"/g, '&quot;');
};
/*</ltIE8>*/

/*<ltIE9>*/
// #2479 - IE8 Cannot set HTML of style element
var canChangeStyleHTML = (function(){
	var div = document.createElement('style'),
		flag = false;
	try {
		div.innerHTML = '#justTesing{margin: 0px;}';
		flag = !!div.innerHTML;
	} catch (e){}
	return flag;
})();
/*</ltIE9>*/

Document.implement({

	newElement: function(tag, props){
		if (props){
			if (props.checked != null) props.defaultChecked = props.checked;
			if ((props.type == 'checkbox' || props.type == 'radio') && props.value == null) props.value = 'on';
			/*<ltIE9>*/ // IE needs the type to be set before changing content of style element
			if (!canChangeStyleHTML && tag == 'style'){
				var styleElement = document.createElement('style');
				styleElement.setAttribute('type', 'text/css');
				if (props.type) delete props.type;
				return this.id(styleElement).set(props);
			}
			/*</ltIE9>*/
			/*<ltIE8>*/// Fix for readonly name and type properties in IE < 8
			if (createElementAcceptsHTML){
				tag = '<' + tag;
				if (props.name) tag += ' name="' + escapeQuotes(props.name) + '"';
				if (props.type) tag += ' type="' + escapeQuotes(props.type) + '"';
				tag += '>';
				delete props.name;
				delete props.type;
			}
			/*</ltIE8>*/
		}
		return this.id(this.createElement(tag)).set(props);
	}

});

})();

(function(){

Slick.uidOf(window);
Slick.uidOf(document);

Document.implement({

	newTextNode: function(text){
		return this.createTextNode(text);
	},

	getDocument: function(){
		return this;
	},

	getWindow: function(){
		return this.window;
	},

	id: (function(){

		var types = {

			string: function(id, nocash, doc){
				id = Slick.find(doc, '#' + id.replace(/(\W)/g, '\\$1'));
				return (id) ? types.element(id, nocash) : null;
			},

			element: function(el, nocash){
				Slick.uidOf(el);
				if (!nocash && !el.$family && !(/^(?:object|embed)$/i).test(el.tagName)){
					var fireEvent = el.fireEvent;
					// wrapping needed in IE7, or else crash
					el._fireEvent = function(type, event){
						return fireEvent(type, event);
					};
					Object.append(el, Element.Prototype);
				}
				return el;
			},

			object: function(obj, nocash, doc){
				if (obj.toElement) return types.element(obj.toElement(doc), nocash);
				return null;
			}

		};

		types.textnode = types.whitespace = types.window = types.document = function(zero){
			return zero;
		};

		return function(el, nocash, doc){
			if (el && el.$family && el.uniqueNumber) return el;
			var type = typeOf(el);
			return (types[type]) ? types[type](el, nocash, doc || document) : null;
		};

	})()

});

if (window.$ == null) Window.implement('$', function(el, nc){
	return document.id(el, nc, this.document);
});

Window.implement({

	getDocument: function(){
		return this.document;
	},

	getWindow: function(){
		return this;
	}

});

[Document, Element].invoke('implement', {

	getElements: function(expression){
		return Slick.search(this, expression, new Elements);
	},

	getElement: function(expression){
		return document.id(Slick.find(this, expression));
	}

});

var contains = {contains: function(element){
	return Slick.contains(this, element);
}};

if (!document.contains) Document.implement(contains);
if (!document.createElement('div').contains) Element.implement(contains);



// tree walking

var injectCombinator = function(expression, combinator){
	if (!expression) return combinator;

	expression = Object.clone(Slick.parse(expression));

	var expressions = expression.expressions;
	for (var i = expressions.length; i--;)
		expressions[i][0].combinator = combinator;

	return expression;
};

Object.forEach({
	getNext: '~',
	getPrevious: '!~',
	getParent: '!'
}, function(combinator, method){
	Element.implement(method, function(expression){
		return this.getElement(injectCombinator(expression, combinator));
	});
});

Object.forEach({
	getAllNext: '~',
	getAllPrevious: '!~',
	getSiblings: '~~',
	getChildren: '>',
	getParents: '!'
}, function(combinator, method){
	Element.implement(method, function(expression){
		return this.getElements(injectCombinator(expression, combinator));
	});
});

Element.implement({

	getFirst: function(expression){
		return document.id(Slick.search(this, injectCombinator(expression, '>'))[0]);
	},

	getLast: function(expression){
		return document.id(Slick.search(this, injectCombinator(expression, '>')).getLast());
	},

	getWindow: function(){
		return this.ownerDocument.window;
	},

	getDocument: function(){
		return this.ownerDocument;
	},

	getElementById: function(id){
		return document.id(Slick.find(this, '#' + ('' + id).replace(/(\W)/g, '\\$1')));
	},

	match: function(expression){
		return !expression || Slick.match(this, expression);
	}

});



if (window.$$ == null) Window.implement('$$', function(selector){
	if (arguments.length == 1){
		if (typeof selector == 'string') return Slick.search(this.document, selector, new Elements);
		else if (Type.isEnumerable(selector)) return new Elements(selector);
	}
	return new Elements(arguments);
});

// Inserters

var inserters = {

	before: function(context, element){
		var parent = element.parentNode;
		if (parent) parent.insertBefore(context, element);
	},

	after: function(context, element){
		var parent = element.parentNode;
		if (parent) parent.insertBefore(context, element.nextSibling);
	},

	bottom: function(context, element){
		element.appendChild(context);
	},

	top: function(context, element){
		element.insertBefore(context, element.firstChild);
	}

};

inserters.inside = inserters.bottom;



// getProperty / setProperty

var propertyGetters = {}, propertySetters = {};

// properties

var properties = {};
Array.forEach([
	'type', 'value', 'defaultValue', 'accessKey', 'cellPadding', 'cellSpacing', 'colSpan',
	'frameBorder', 'rowSpan', 'tabIndex', 'useMap'
], function(property){
	properties[property.toLowerCase()] = property;
});

properties.html = 'innerHTML';
properties.text = (document.createElement('div').textContent == null) ? 'innerText': 'textContent';

Object.forEach(properties, function(real, key){
	propertySetters[key] = function(node, value){
		node[real] = value;
	};
	propertyGetters[key] = function(node){
		return node[real];
	};
});

/*<ltIE9>*/
propertySetters.text = (function(){
	return function(node, value){
		if (node.get('tag') == 'style') node.set('html', value);
		else node[properties.text] = value;
	};
})(propertySetters.text);

propertyGetters.text = (function(getter){
	return function(node){
		return (node.get('tag') == 'style') ? node.innerHTML : getter(node);
	};
})(propertyGetters.text);
/*</ltIE9>*/

// Booleans

var bools = [
	'compact', 'nowrap', 'ismap', 'declare', 'noshade', 'checked',
	'disabled', 'readOnly', 'multiple', 'selected', 'noresize',
	'defer', 'defaultChecked', 'autofocus', 'controls', 'autoplay',
	'loop'
];

var booleans = {};
Array.forEach(bools, function(bool){
	var lower = bool.toLowerCase();
	booleans[lower] = bool;
	propertySetters[lower] = function(node, value){
		node[bool] = !!value;
	};
	propertyGetters[lower] = function(node){
		return !!node[bool];
	};
});

// Special cases

Object.append(propertySetters, {

	'class': function(node, value){
		('className' in node) ? node.className = (value || '') : node.setAttribute('class', value);
	},

	'for': function(node, value){
		('htmlFor' in node) ? node.htmlFor = value : node.setAttribute('for', value);
	},

	'style': function(node, value){
		(node.style) ? node.style.cssText = value : node.setAttribute('style', value);
	},

	'value': function(node, value){
		node.value = (value != null) ? value : '';
	}

});

propertyGetters['class'] = function(node){
	return ('className' in node) ? node.className || null : node.getAttribute('class');
};

/* <webkit> */
var el = document.createElement('button');
// IE sets type as readonly and throws
try { el.type = 'button'; } catch (e){}
if (el.type != 'button') propertySetters.type = function(node, value){
	node.setAttribute('type', value);
};
el = null;
/* </webkit> */

/*<IE>*/

/*<ltIE9>*/
// #2479 - IE8 Cannot set HTML of style element
var canChangeStyleHTML = (function(){
	var div = document.createElement('style'),
		flag = false;
	try {
		div.innerHTML = '#justTesing{margin: 0px;}';
		flag = !!div.innerHTML;
	} catch (e){}
	return flag;
})();
/*</ltIE9>*/

var input = document.createElement('input'), volatileInputValue, html5InputSupport;

// #2178
input.value = 't';
input.type = 'submit';
volatileInputValue = input.value != 't';

// #2443 - IE throws "Invalid Argument" when trying to use html5 input types
try {
	input.value = '';
	input.type = 'email';
	html5InputSupport = input.type == 'email';
} catch (e){}

input = null;

if (volatileInputValue || !html5InputSupport) propertySetters.type = function(node, type){
	try {
		var value = node.value;
		node.type = type;
		node.value = value;
	} catch (e){}
};
/*</IE>*/

/* getProperty, setProperty */

/* <ltIE9> */
var pollutesGetAttribute = (function(div){
	div.random = 'attribute';
	return (div.getAttribute('random') == 'attribute');
})(document.createElement('div'));

var hasCloneBug = (function(test){
	test.innerHTML = '<object><param name="should_fix" value="the unknown" /></object>';
	return test.cloneNode(true).firstChild.childNodes.length != 1;
})(document.createElement('div'));
/* </ltIE9> */

var hasClassList = !!document.createElement('div').classList;

var classes = function(className){
	var classNames = (className || '').clean().split(' '), uniques = {};
	return classNames.filter(function(className){
		if (className !== '' && !uniques[className]) return uniques[className] = className;
	});
};

var addToClassList = function(name){
	this.classList.add(name);
};

var removeFromClassList = function(name){
	this.classList.remove(name);
};

Element.implement({

	setProperty: function(name, value){
		var setter = propertySetters[name.toLowerCase()];
		if (setter){
			setter(this, value);
		} else {
			/* <ltIE9> */
			var attributeWhiteList;
			if (pollutesGetAttribute) attributeWhiteList = this.retrieve('$attributeWhiteList', {});
			/* </ltIE9> */

			if (value == null){
				this.removeAttribute(name);
				/* <ltIE9> */
				if (pollutesGetAttribute) delete attributeWhiteList[name];
				/* </ltIE9> */
			} else {
				this.setAttribute(name, '' + value);
				/* <ltIE9> */
				if (pollutesGetAttribute) attributeWhiteList[name] = true;
				/* </ltIE9> */
			}
		}
		return this;
	},

	setProperties: function(attributes){
		for (var attribute in attributes) this.setProperty(attribute, attributes[attribute]);
		return this;
	},

	getProperty: function(name){
		var getter = propertyGetters[name.toLowerCase()];
		if (getter) return getter(this);
		/* <ltIE9> */
		if (pollutesGetAttribute){
			var attr = this.getAttributeNode(name), attributeWhiteList = this.retrieve('$attributeWhiteList', {});
			if (!attr) return null;
			if (attr.expando && !attributeWhiteList[name]){
				var outer = this.outerHTML;
				// segment by the opening tag and find mention of attribute name
				if (outer.substr(0, outer.search(/\/?['"]?>(?![^<]*<['"])/)).indexOf(name) < 0) return null;
				attributeWhiteList[name] = true;
			}
		}
		/* </ltIE9> */
		var result = Slick.getAttribute(this, name);
		return (!result && !Slick.hasAttribute(this, name)) ? null : result;
	},

	getProperties: function(){
		var args = Array.convert(arguments);
		return args.map(this.getProperty, this).associate(args);
	},

	removeProperty: function(name){
		return this.setProperty(name, null);
	},

	removeProperties: function(){
		Array.each(arguments, this.removeProperty, this);
		return this;
	},

	set: function(prop, value){
		var property = Element.Properties[prop];
		(property && property.set) ? property.set.call(this, value) : this.setProperty(prop, value);
	}.overloadSetter(),

	get: function(prop){
		var property = Element.Properties[prop];
		return (property && property.get) ? property.get.apply(this) : this.getProperty(prop);
	}.overloadGetter(),

	erase: function(prop){
		var property = Element.Properties[prop];
		(property && property.erase) ? property.erase.apply(this) : this.removeProperty(prop);
		return this;
	},

	hasClass: hasClassList ? function(className){
		return this.classList.contains(className);
	} : function(className){
		return classes(this.className).contains(className);
	},

	addClass: hasClassList ? function(className){
		classes(className).forEach(addToClassList, this);
		return this;
	} : function(className){
		this.className = classes(className + ' ' + this.className).join(' ');
		return this;
	},

	removeClass: hasClassList ? function(className){
		classes(className).forEach(removeFromClassList, this);
		return this;
	} : function(className){
		var classNames = classes(this.className);
		classes(className).forEach(classNames.erase, classNames);
		this.className = classNames.join(' ');
		return this;
	},

	toggleClass: function(className, force){
		if (force == null) force = !this.hasClass(className);
		return (force) ? this.addClass(className) : this.removeClass(className);
	},

	adopt: function(){
		var parent = this, fragment, elements = Array.flatten(arguments), length = elements.length;
		if (length > 1) parent = fragment = document.createDocumentFragment();

		for (var i = 0; i < length; i++){
			var element = document.id(elements[i], true);
			if (element) parent.appendChild(element);
		}

		if (fragment) this.appendChild(fragment);

		return this;
	},

	appendText: function(text, where){
		return this.grab(this.getDocument().newTextNode(text), where);
	},

	grab: function(el, where){
		inserters[where || 'bottom'](document.id(el, true), this);
		return this;
	},

	inject: function(el, where){
		inserters[where || 'bottom'](this, document.id(el, true));
		return this;
	},

	replaces: function(el){
		el = document.id(el, true);
		el.parentNode.replaceChild(this, el);
		return this;
	},

	wraps: function(el, where){
		el = document.id(el, true);
		return this.replaces(el).grab(el, where);
	},

	getSelected: function(){
		this.selectedIndex; // Safari 3.2.1
		return new Elements(Array.convert(this.options).filter(function(option){
			return option.selected;
		}));
	},

	toQueryString: function(){
		var queryString = [];
		this.getElements('input, select, textarea').each(function(el){
			var type = el.type;
			if (!el.name || el.disabled || type == 'submit' || type == 'reset' || type == 'file' || type == 'image') return;

			var value = (el.get('tag') == 'select') ? el.getSelected().map(function(opt){
				// IE
				return document.id(opt).get('value');
			}) : ((type == 'radio' || type == 'checkbox') && !el.checked) ? null : el.get('value');

			Array.convert(value).each(function(val){
				if (typeof val != 'undefined') queryString.push(encodeURIComponent(el.name) + '=' + encodeURIComponent(val));
			});
		});
		return queryString.join('&');
	}

});


// appendHTML

var appendInserters = {
	before: 'beforeBegin',
	after: 'afterEnd',
	bottom: 'beforeEnd',
	top: 'afterBegin',
	inside: 'beforeEnd'
};

Element.implement('appendHTML', ('insertAdjacentHTML' in document.createElement('div')) ? function(html, where){
	this.insertAdjacentHTML(appendInserters[where || 'bottom'], html);
	return this;
} : function(html, where){
	var temp = new Element('div', {html: html}),
		children = temp.childNodes,
		fragment = temp.firstChild;

	if (!fragment) return this;
	if (children.length > 1){
		fragment = document.createDocumentFragment();
		for (var i = 0, l = children.length; i < l; i++){
			fragment.appendChild(children[i]);
		}
	}

	inserters[where || 'bottom'](fragment, this);
	return this;
});

var collected = {}, storage = {};

var get = function(uid){
	return (storage[uid] || (storage[uid] = {}));
};

var clean = function(item){
	var uid = item.uniqueNumber;
	if (item.removeEvents) item.removeEvents();
	if (item.clearAttributes) item.clearAttributes();
	if (uid != null){
		delete collected[uid];
		delete storage[uid];
	}
	return item;
};

var formProps = {input: 'checked', option: 'selected', textarea: 'value'};

Element.implement({

	destroy: function(){
		var children = clean(this).getElementsByTagName('*');
		Array.each(children, clean);
		Element.dispose(this);
		return null;
	},

	empty: function(){
		Array.convert(this.childNodes).each(Element.dispose);
		return this;
	},

	dispose: function(){
		return (this.parentNode) ? this.parentNode.removeChild(this) : this;
	},

	clone: function(contents, keepid){
		contents = contents !== false;
		var clone = this.cloneNode(contents), ce = [clone], te = [this], i;

		if (contents){
			ce.append(Array.convert(clone.getElementsByTagName('*')));
			te.append(Array.convert(this.getElementsByTagName('*')));
		}

		for (i = ce.length; i--;){
			var node = ce[i], element = te[i];
			if (!keepid) node.removeAttribute('id');
			/*<ltIE9>*/
			if (node.clearAttributes){
				node.clearAttributes();
				node.mergeAttributes(element);
				node.removeAttribute('uniqueNumber');
				if (node.options){
					var no = node.options, eo = element.options;
					for (var j = no.length; j--;) no[j].selected = eo[j].selected;
				}
			}
			/*</ltIE9>*/
			var prop = formProps[element.tagName.toLowerCase()];
			if (prop && element[prop]) node[prop] = element[prop];
		}

		/*<ltIE9>*/
		if (hasCloneBug){
			var co = clone.getElementsByTagName('object'), to = this.getElementsByTagName('object');
			for (i = co.length; i--;) co[i].outerHTML = to[i].outerHTML;
		}
		/*</ltIE9>*/
		return document.id(clone);
	}

});

[Element, Window, Document].invoke('implement', {

	addListener: function(type, fn){
		if (window.attachEvent && !window.addEventListener){
			collected[Slick.uidOf(this)] = this;
		}
		if (this.addEventListener) this.addEventListener(type, fn, !!arguments[2]);
		else this.attachEvent('on' + type, fn);
		return this;
	},

	removeListener: function(type, fn){
		if (this.removeEventListener) this.removeEventListener(type, fn, !!arguments[2]);
		else this.detachEvent('on' + type, fn);
		return this;
	},

	retrieve: function(property, dflt){
		var storage = get(Slick.uidOf(this)), prop = storage[property];
		if (dflt != null && prop == null) prop = storage[property] = dflt;
		return prop != null ? prop : null;
	},

	store: function(property, value){
		var storage = get(Slick.uidOf(this));
		storage[property] = value;
		return this;
	},

	eliminate: function(property){
		var storage = get(Slick.uidOf(this));
		delete storage[property];
		return this;
	}

});

/*<ltIE9>*/
if (window.attachEvent && !window.addEventListener){
	var gc = function(){
		Object.each(collected, clean);
		if (window.CollectGarbage) CollectGarbage();
		window.removeListener('unload', gc);
	};
	window.addListener('unload', gc);
}
/*</ltIE9>*/

Element.Properties = {};



Element.Properties.style = {

	set: function(style){
		this.style.cssText = style;
	},

	get: function(){
		return this.style.cssText;
	},

	erase: function(){
		this.style.cssText = '';
	}

};

Element.Properties.tag = {

	get: function(){
		return this.tagName.toLowerCase();
	}

};

Element.Properties.html = {

	set: function(html){
		if (html == null) html = '';
		else if (typeOf(html) == 'array') html = html.join('');

		/*<ltIE9>*/
		if (this.styleSheet && !canChangeStyleHTML) this.styleSheet.cssText = html;
		else /*</ltIE9>*/this.innerHTML = html;
	},
	erase: function(){
		this.set('html', '');
	}

};

var supportsHTML5Elements = true, supportsTableInnerHTML = true, supportsTRInnerHTML = true;

/*<ltIE9>*/
// technique by jdbarlett - http://jdbartlett.com/innershiv/
var div = document.createElement('div');
var fragment;
div.innerHTML = '<nav></nav>';
supportsHTML5Elements = (div.childNodes.length == 1);
if (!supportsHTML5Elements){
	var tags = 'abbr article aside audio canvas datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video'.split(' ');
	fragment = document.createDocumentFragment(), l = tags.length;
	while (l--) fragment.createElement(tags[l]);
}
div = null;
/*</ltIE9>*/

/*<IE>*/
supportsTableInnerHTML = Function.attempt(function(){
	var table = document.createElement('table');
	table.innerHTML = '<tr><td></td></tr>';
	return true;
});

/*<ltFF4>*/
var tr = document.createElement('tr'), html = '<td></td>';
tr.innerHTML = html;
supportsTRInnerHTML = (tr.innerHTML == html);
tr = null;
/*</ltFF4>*/

if (!supportsTableInnerHTML || !supportsTRInnerHTML || !supportsHTML5Elements){

	Element.Properties.html.set = (function(set){

		var translations = {
			table: [1, '<table>', '</table>'],
			select: [1, '<select>', '</select>'],
			tbody: [2, '<table><tbody>', '</tbody></table>'],
			tr: [3, '<table><tbody><tr>', '</tr></tbody></table>']
		};

		translations.thead = translations.tfoot = translations.tbody;

		return function(html){

			/*<ltIE9>*/
			if (this.styleSheet) return set.call(this, html);
			/*</ltIE9>*/
			var wrap = translations[this.get('tag')];
			if (!wrap && !supportsHTML5Elements) wrap = [0, '', ''];
			if (!wrap) return set.call(this, html);

			var level = wrap[0], wrapper = document.createElement('div'), target = wrapper;
			if (!supportsHTML5Elements) fragment.appendChild(wrapper);
			wrapper.innerHTML = [wrap[1], html, wrap[2]].flatten().join('');
			while (level--) target = target.firstChild;
			this.empty().adopt(target.childNodes);
			if (!supportsHTML5Elements) fragment.removeChild(wrapper);
			wrapper = null;
		};

	})(Element.Properties.html.set);
}
/*</IE>*/

/*<ltIE9>*/
var testForm = document.createElement('form');
testForm.innerHTML = '<select><option>s</option></select>';

if (testForm.firstChild.value != 's') Element.Properties.value = {

	set: function(value){
		var tag = this.get('tag');
		if (tag != 'select') return this.setProperty('value', value);
		var options = this.getElements('option');
		value = String(value);
		for (var i = 0; i < options.length; i++){
			var option = options[i],
				attr = option.getAttributeNode('value'),
				optionValue = (attr && attr.specified) ? option.value : option.get('text');
			if (optionValue === value) return option.selected = true;
		}
	},

	get: function(){
		var option = this, tag = option.get('tag');

		if (tag != 'select' && tag != 'option') return this.getProperty('value');

		if (tag == 'select' && !(option = option.getSelected()[0])) return '';

		var attr = option.getAttributeNode('value');
		return (attr && attr.specified) ? option.value : option.get('text');
	}

};
testForm = null;
/*</ltIE9>*/

/*<IE>*/
if (document.createElement('div').getAttributeNode('id')) Element.Properties.id = {
	set: function(id){
		this.id = this.getAttributeNode('id').value = id;
	},
	get: function(){
		return this.id || null;
	},
	erase: function(){
		this.id = this.getAttributeNode('id').value = '';
	}
};
/*</IE>*/

})();

/*
---

name: Event

description: Contains the Event Type, to make the event object cross-browser.

license: MIT-style license.

requires: [Window, Document, Array, Function, String, Object]

provides: Event

...
*/

(function(){

var _keys = {};
var normalizeWheelSpeed = function(event){
	var normalized;
	if (event.wheelDelta){
		normalized = event.wheelDelta % 120 == 0 ? event.wheelDelta / 120 : event.wheelDelta / 12;
	} else {
		var rawAmount = event.deltaY || event.detail || 0;
		normalized = -(rawAmount % 3 == 0 ? rawAmount / 3 : rawAmount * 10);
	}
	return normalized;
};

var DOMEvent = this.DOMEvent = new Type('DOMEvent', function(event, win){
	if (!win) win = window;
	event = event || win.event;
	if (event.$extended) return event;
	this.event = event;
	this.$extended = true;
	this.shift = event.shiftKey;
	this.control = event.ctrlKey;
	this.alt = event.altKey;
	this.meta = event.metaKey;
	var type = this.type = event.type;
	var target = event.target || event.srcElement;
	while (target && target.nodeType == 3) target = target.parentNode;
	this.target = document.id(target);

	if (type.indexOf('key') == 0){
		var code = this.code = (event.which || event.keyCode);
		if (!this.shift || type != 'keypress') this.key = _keys[code];
		if (type == 'keydown' || type == 'keyup'){
			if (code > 111 && code < 124) this.key = 'f' + (code - 111);
			else if (code > 95 && code < 106) this.key = code - 96;
		}
		if (this.key == null) this.key = String.fromCharCode(code).toLowerCase();
	} else if (type == 'click' || type == 'dblclick' || type == 'contextmenu' || type == 'wheel' || type == 'DOMMouseScroll' || type.indexOf('mouse') == 0){
		var doc = win.document;
		doc = (!doc.compatMode || doc.compatMode == 'CSS1Compat') ? doc.html : doc.body;
		this.page = {
			x: (event.pageX != null) ? event.pageX : event.clientX + doc.scrollLeft,
			y: (event.pageY != null) ? event.pageY : event.clientY + doc.scrollTop
		};
		this.client = {
			x: (event.pageX != null) ? event.pageX - win.pageXOffset : event.clientX,
			y: (event.pageY != null) ? event.pageY - win.pageYOffset : event.clientY
		};
		if (type == 'DOMMouseScroll' || type == 'wheel' || type == 'mousewheel') this.wheel = normalizeWheelSpeed(event);
		this.rightClick = (event.which == 3 || event.button == 2);
		if (type == 'mouseover' || type == 'mouseout' || type == 'mouseenter' || type == 'mouseleave'){
			var overTarget = type == 'mouseover' || type == 'mouseenter';
			var related = event.relatedTarget || event[(overTarget ? 'from' : 'to') + 'Element'];
			while (related && related.nodeType == 3) related = related.parentNode;
			this.relatedTarget = document.id(related);
		}
	} else if (type.indexOf('touch') == 0 || type.indexOf('gesture') == 0){
		this.rotation = event.rotation;
		this.scale = event.scale;
		this.targetTouches = event.targetTouches;
		this.changedTouches = event.changedTouches;
		var touches = this.touches = event.touches;
		if (touches && touches[0]){
			var touch = touches[0];
			this.page = {x: touch.pageX, y: touch.pageY};
			this.client = {x: touch.clientX, y: touch.clientY};
		}
	}

	if (!this.client) this.client = {};
	if (!this.page) this.page = {};
});

DOMEvent.implement({

	stop: function(){
		return this.preventDefault().stopPropagation();
	},

	stopPropagation: function(){
		if (this.event.stopPropagation) this.event.stopPropagation();
		else this.event.cancelBubble = true;
		return this;
	},

	preventDefault: function(){
		if (this.event.preventDefault) this.event.preventDefault();
		else this.event.returnValue = false;
		return this;
	}

});

DOMEvent.defineKey = function(code, key){
	_keys[code] = key;
	return this;
};

DOMEvent.defineKeys = DOMEvent.defineKey.overloadSetter(true);

DOMEvent.defineKeys({
	'38': 'up', '40': 'down', '37': 'left', '39': 'right',
	'27': 'esc', '32': 'space', '8': 'backspace', '9': 'tab',
	'46': 'delete', '13': 'enter'
});

})();





/*
---

name: Element.Event

description: Contains Element methods for dealing with events. This file also includes mouseenter and mouseleave custom Element Events, if necessary.

license: MIT-style license.

requires: [Element, Event]

provides: Element.Event

...
*/

(function(){

Element.Properties.events = {set: function(events){
	this.addEvents(events);
}};

[Element, Window, Document].invoke('implement', {

	addEvent: function(type, fn){
		var events = this.retrieve('events', {});
		if (!events[type]) events[type] = {keys: [], values: []};
		if (events[type].keys.contains(fn)) return this;
		events[type].keys.push(fn);
		var realType = type,
			custom = Element.Events[type],
			condition = fn,
			self = this;
		if (custom){
			if (custom.onAdd) custom.onAdd.call(this, fn, type);
			if (custom.condition){
				condition = function(event){
					if (custom.condition.call(this, event, type)) return fn.call(this, event);
					return true;
				};
			}
			if (custom.base) realType = Function.convert(custom.base).call(this, type);
		}
		var defn = function(){
			return fn.call(self);
		};
		var nativeEvent = Element.NativeEvents[realType];
		if (nativeEvent){
			if (nativeEvent == 2){
				defn = function(event){
					event = new DOMEvent(event, self.getWindow());
					if (condition.call(self, event) === false) event.stop();
				};
			}
			this.addListener(realType, defn, arguments[2]);
		}
		events[type].values.push(defn);
		return this;
	},

	removeEvent: function(type, fn){
		var events = this.retrieve('events');
		if (!events || !events[type]) return this;
		var list = events[type];
		var index = list.keys.indexOf(fn);
		if (index == -1) return this;
		var value = list.values[index];
		delete list.keys[index];
		delete list.values[index];
		var custom = Element.Events[type];
		if (custom){
			if (custom.onRemove) custom.onRemove.call(this, fn, type);
			if (custom.base) type = Function.convert(custom.base).call(this, type);
		}
		return (Element.NativeEvents[type]) ? this.removeListener(type, value, arguments[2]) : this;
	},

	addEvents: function(events){
		for (var event in events) this.addEvent(event, events[event]);
		return this;
	},

	removeEvents: function(events){
		var type;
		if (typeOf(events) == 'object'){
			for (type in events) this.removeEvent(type, events[type]);
			return this;
		}
		var attached = this.retrieve('events');
		if (!attached) return this;
		if (!events){
			for (type in attached) this.removeEvents(type);
			this.eliminate('events');
		} else if (attached[events]){
			attached[events].keys.each(function(fn){
				this.removeEvent(events, fn);
			}, this);
			delete attached[events];
		}
		return this;
	},

	fireEvent: function(type, args, delay){
		var events = this.retrieve('events');
		if (!events || !events[type]) return this;
		args = Array.convert(args);

		events[type].keys.each(function(fn){
			if (delay) fn.delay(delay, this, args);
			else fn.apply(this, args);
		}, this);
		return this;
	},

	cloneEvents: function(from, type){
		from = document.id(from);
		var events = from.retrieve('events');
		if (!events) return this;
		if (!type){
			for (var eventType in events) this.cloneEvents(from, eventType);
		} else if (events[type]){
			events[type].keys.each(function(fn){
				this.addEvent(type, fn);
			}, this);
		}
		return this;
	}

});

Element.NativeEvents = {
	click: 2, dblclick: 2, mouseup: 2, mousedown: 2, contextmenu: 2, //mouse buttons
	wheel: 2, mousewheel: 2, DOMMouseScroll: 2, //mouse wheel
	mouseover: 2, mouseout: 2, mousemove: 2, selectstart: 2, selectend: 2, //mouse movement
	keydown: 2, keypress: 2, keyup: 2, //keyboard
	orientationchange: 2, // mobile
	touchstart: 2, touchmove: 2, touchend: 2, touchcancel: 2, // touch
	gesturestart: 2, gesturechange: 2, gestureend: 2, // gesture
	focus: 2, blur: 2, change: 2, reset: 2, select: 2, submit: 2, paste: 2, input: 2, //form elements
	load: 2, unload: 1, beforeunload: 2, resize: 1, move: 1, DOMContentLoaded: 1, readystatechange: 1, //window
	hashchange: 1, popstate: 2, pageshow: 2, pagehide: 2, // history
	error: 1, abort: 1, scroll: 1, message: 2 //misc
};

Element.Events = {
	mousewheel: {
		base: 'onwheel' in document ? 'wheel' : 'onmousewheel' in document ? 'mousewheel' : 'DOMMouseScroll'
	}
};

var check = function(event){
	var related = event.relatedTarget;
	if (related == null) return true;
	if (!related) return false;
	return (related != this && related.prefix != 'xul' && typeOf(this) != 'document' && !this.contains(related));
};

if ('onmouseenter' in document.documentElement){
	Element.NativeEvents.mouseenter = Element.NativeEvents.mouseleave = 2;
	Element.MouseenterCheck = check;
} else {
	Element.Events.mouseenter = {
		base: 'mouseover',
		condition: check
	};

	Element.Events.mouseleave = {
		base: 'mouseout',
		condition: check
	};
}

/*<ltIE9>*/
if (!window.addEventListener){
	Element.NativeEvents.propertychange = 2;
	Element.Events.change = {
		base: function(){
			var type = this.type;
			return (this.get('tag') == 'input' && (type == 'radio' || type == 'checkbox')) ? 'propertychange' : 'change';
		},
		condition: function(event){
			return event.type != 'propertychange' || event.event.propertyName == 'checked';
		}
	};
}
/*</ltIE9>*/



})();

/*
---

name: Element.Delegation

description: Extends the Element native object to include the delegate method for more efficient event management.

license: MIT-style license.

requires: [Element.Event]

provides: [Element.Delegation]

...
*/

(function(){

var eventListenerSupport = !!window.addEventListener;

Element.NativeEvents.focusin = Element.NativeEvents.focusout = 2;

var bubbleUp = function(self, match, fn, event, target){
	while (target && target != self){
		if (match(target, event)) return fn.call(target, event, target);
		target = document.id(target.parentNode);
	}
};

var map = {
	mouseenter: {
		base: 'mouseover',
		condition: Element.MouseenterCheck
	},
	mouseleave: {
		base: 'mouseout',
		condition: Element.MouseenterCheck
	},
	focus: {
		base: 'focus' + (eventListenerSupport ? '' : 'in'),
		capture: true
	},
	blur: {
		base: eventListenerSupport ? 'blur' : 'focusout',
		capture: true
	}
};

/*<ltIE9>*/
var _key = '$delegation:';
var formObserver = function(type){

	return {

		base: 'focusin',

		remove: function(self, uid){
			var list = self.retrieve(_key + type + 'listeners', {})[uid];
			if (list && list.forms) for (var i = list.forms.length; i--;){
				// the form may have been destroyed, so it won't have the
				// removeEvent method anymore. In that case the event was
				// removed as well.
				if (list.forms[i].removeEvent) list.forms[i].removeEvent(type, list.fns[i]);
			}
		},

		listen: function(self, match, fn, event, target, uid){
			var form = (target.get('tag') == 'form') ? target : event.target.getParent('form');
			if (!form) return;

			var listeners = self.retrieve(_key + type + 'listeners', {}),
				listener = listeners[uid] || {forms: [], fns: []},
				forms = listener.forms, fns = listener.fns;

			if (forms.indexOf(form) != -1) return;
			forms.push(form);

			var _fn = function(event){
				bubbleUp(self, match, fn, event, target);
			};
			form.addEvent(type, _fn);
			fns.push(_fn);

			listeners[uid] = listener;
			self.store(_key + type + 'listeners', listeners);
		}
	};
};

var inputObserver = function(type){
	return {
		base: 'focusin',
		listen: function(self, match, fn, event, target){
			var events = {blur: function(){
				this.removeEvents(events);
			}};
			events[type] = function(event){
				bubbleUp(self, match, fn, event, target);
			};
			event.target.addEvents(events);
		}
	};
};

if (!eventListenerSupport) Object.append(map, {
	submit: formObserver('submit'),
	reset: formObserver('reset'),
	change: inputObserver('change'),
	select: inputObserver('select')
});
/*</ltIE9>*/

var proto = Element.prototype,
	addEvent = proto.addEvent,
	removeEvent = proto.removeEvent;

var relay = function(old, method){
	return function(type, fn, useCapture){
		if (type.indexOf(':relay') == -1) return old.call(this, type, fn, useCapture);
		var parsed = Slick.parse(type).expressions[0][0];
		if (parsed.pseudos[0].key != 'relay') return old.call(this, type, fn, useCapture);
		var newType = parsed.tag;
		parsed.pseudos.slice(1).each(function(pseudo){
			newType += ':' + pseudo.key + (pseudo.value ? '(' + pseudo.value + ')' : '');
		});
		old.call(this, type, fn);
		return method.call(this, newType, parsed.pseudos[0].value, fn);
	};
};

var delegation = {

	addEvent: function(type, match, fn){
		var storage = this.retrieve('$delegates', {}), stored = storage[type];
		if (stored) for (var _uid in stored){
			if (stored[_uid].fn == fn && stored[_uid].match == match) return this;
		}

		var _type = type, _match = match, _fn = fn, _map = map[type] || {};
		type = _map.base || _type;

		match = function(target){
			return Slick.match(target, _match);
		};

		var elementEvent = Element.Events[_type];
		if (_map.condition || elementEvent && elementEvent.condition){
			var __match = match, condition = _map.condition || elementEvent.condition;
			match = function(target, event){
				return __match(target, event) && condition.call(target, event, type);
			};
		}

		var self = this, uid = String.uniqueID();
		var delegator = _map.listen ? function(event, target){
			if (!target && event && event.target) target = event.target;
			if (target) _map.listen(self, match, fn, event, target, uid);
		} : function(event, target){
			if (!target && event && event.target) target = event.target;
			if (target) bubbleUp(self, match, fn, event, target);
		};

		if (!stored) stored = {};
		stored[uid] = {
			match: _match,
			fn: _fn,
			delegator: delegator
		};
		storage[_type] = stored;
		return addEvent.call(this, type, delegator, _map.capture);
	},

	removeEvent: function(type, match, fn, _uid){
		var storage = this.retrieve('$delegates', {}), stored = storage[type];
		if (!stored) return this;

		if (_uid){
			var _type = type, delegator = stored[_uid].delegator, _map = map[type] || {};
			type = _map.base || _type;
			if (_map.remove) _map.remove(this, _uid);
			delete stored[_uid];
			storage[_type] = stored;
			return removeEvent.call(this, type, delegator, _map.capture);
		}

		var __uid, s;
		if (fn) for (__uid in stored){
			s = stored[__uid];
			if (s.match == match && s.fn == fn) return delegation.removeEvent.call(this, type, match, fn, __uid);
		} else for (__uid in stored){
			s = stored[__uid];
			if (s.match == match) delegation.removeEvent.call(this, type, match, s.fn, __uid);
		}
		return this;
	}

};

[Element, Window, Document].invoke('implement', {
	addEvent: relay(addEvent, delegation.addEvent),
	removeEvent: relay(removeEvent, delegation.removeEvent)
});

})();

/*
---

name: Element.Style

description: Contains methods for interacting with the styles of Elements in a fashionable way.

license: MIT-style license.

requires: Element

provides: Element.Style

...
*/

(function(){

var html = document.html, el;

//<ltIE9>
// Check for oldIE, which does not remove styles when they're set to null
el = document.createElement('div');
el.style.color = 'red';
el.style.color = null;
var doesNotRemoveStyles = el.style.color == 'red';

// check for oldIE, which returns border* shorthand styles in the wrong order (color-width-style instead of width-style-color)
var border = '1px solid #123abc';
el.style.border = border;
var returnsBordersInWrongOrder = el.style.border != border;
el = null;
//</ltIE9>

var hasGetComputedStyle = !!window.getComputedStyle,
	supportBorderRadius = document.createElement('div').style.borderRadius != null;

Element.Properties.styles = {set: function(styles){
	this.setStyles(styles);
}};

var hasOpacity = (html.style.opacity != null),
	hasFilter = (html.style.filter != null),
	reAlpha = /alpha\(opacity=([\d.]+)\)/i;

var setVisibility = function(element, opacity){
	element.store('$opacity', opacity);
	element.style.visibility = opacity > 0 || opacity == null ? 'visible' : 'hidden';
};

//<ltIE9>
var setFilter = function(element, regexp, value){
	var style = element.style,
		filter = style.filter || element.getComputedStyle('filter') || '';
	style.filter = (regexp.test(filter) ? filter.replace(regexp, value) : filter + ' ' + value).trim();
	if (!style.filter) style.removeAttribute('filter');
};
//</ltIE9>

var setOpacity = (hasOpacity ? function(element, opacity){
	element.style.opacity = opacity;
} : (hasFilter ? function(element, opacity){
	if (!element.currentStyle || !element.currentStyle.hasLayout) element.style.zoom = 1;
	if (opacity == null || opacity == 1){
		setFilter(element, reAlpha, '');
		if (opacity == 1 && getOpacity(element) != 1) setFilter(element, reAlpha, 'alpha(opacity=100)');
	} else {
		setFilter(element, reAlpha, 'alpha(opacity=' + (opacity * 100).limit(0, 100).round() + ')');
	}
} : setVisibility));

var getOpacity = (hasOpacity ? function(element){
	var opacity = element.style.opacity || element.getComputedStyle('opacity');
	return (opacity == '') ? 1 : opacity.toFloat();
} : (hasFilter ? function(element){
	var filter = (element.style.filter || element.getComputedStyle('filter')),
		opacity;
	if (filter) opacity = filter.match(reAlpha);
	return (opacity == null || filter == null) ? 1 : (opacity[1] / 100);
} : function(element){
	var opacity = element.retrieve('$opacity');
	if (opacity == null) opacity = (element.style.visibility == 'hidden' ? 0 : 1);
	return opacity;
}));

var floatName = (html.style.cssFloat == null) ? 'styleFloat' : 'cssFloat',
	namedPositions = {left: '0%', top: '0%', center: '50%', right: '100%', bottom: '100%'},
	hasBackgroundPositionXY = (html.style.backgroundPositionX != null),
	prefixPattern = /^-(ms)-/;

var camelCase = function(property){
	return property.replace(prefixPattern, '$1-').camelCase();
};

//<ltIE9>
var removeStyle = function(style, property){
	if (property == 'backgroundPosition'){
		style.removeAttribute(property + 'X');
		property += 'Y';
	}
	style.removeAttribute(property);
};
//</ltIE9>

Element.implement({

	getComputedStyle: function(property){
		if (!hasGetComputedStyle && this.currentStyle) return this.currentStyle[camelCase(property)];
		var defaultView = Element.getDocument(this).defaultView,
			computed = defaultView ? defaultView.getComputedStyle(this, null) : null;
		return (computed) ? computed.getPropertyValue((property == floatName) ? 'float' : property.hyphenate()) : '';
	},

	setStyle: function(property, value){
		if (property == 'opacity'){
			if (value != null) value = parseFloat(value);
			setOpacity(this, value);
			return this;
		}
		property = camelCase(property == 'float' ? floatName : property);
		if (typeOf(value) != 'string'){
			var map = (Element.Styles[property] || '@').split(' ');
			value = Array.convert(value).map(function(val, i){
				if (!map[i]) return '';
				return (typeOf(val) == 'number') ? map[i].replace('@', Math.round(val)) : val;
			}).join(' ');
		} else if (value == String(Number(value))){
			value = Math.round(value);
		}
		this.style[property] = value;
		//<ltIE9>
		if ((value == '' || value == null) && doesNotRemoveStyles && this.style.removeAttribute){
			removeStyle(this.style, property);
		}
		//</ltIE9>
		return this;
	},

	getStyle: function(property){
		if (property == 'opacity') return getOpacity(this);
		property = camelCase(property == 'float' ? floatName : property);
		if (supportBorderRadius && property.indexOf('borderRadius') != -1){
			return ['borderTopLeftRadius', 'borderTopRightRadius', 'borderBottomRightRadius', 'borderBottomLeftRadius'].map(function(corner){
				return this.style[corner] || '0px';
			}, this).join(' ');
		}
		var result = this.style[property];
		if (!result || property == 'zIndex'){
			if (Element.ShortStyles.hasOwnProperty(property)){
				result = [];
				for (var s in Element.ShortStyles[property]) result.push(this.getStyle(s));
				return result.join(' ');
			}
			result = this.getComputedStyle(property);
		}
		if (hasBackgroundPositionXY && /^backgroundPosition[XY]?$/.test(property)){
			return result.replace(/(top|right|bottom|left)/g, function(position){
				return namedPositions[position];
			}) || '0px';
		}
		if (!result && property == 'backgroundPosition') return '0px 0px';
		if (result){
			result = String(result);
			var color = result.match(/rgba?\([\d\s,]+\)/);
			if (color) result = result.replace(color[0], color[0].rgbToHex());
		}
		if (!hasGetComputedStyle && !this.style[property]){
			if ((/^(height|width)$/).test(property) && !(/px$/.test(result))){
				var values = (property == 'width') ? ['left', 'right'] : ['top', 'bottom'], size = 0;
				values.each(function(value){
					size += this.getStyle('border-' + value + '-width').toInt() + this.getStyle('padding-' + value).toInt();
				}, this);
				return this['offset' + property.capitalize()] - size + 'px';
			}
			if ((/^border(.+)Width|margin|padding/).test(property) && isNaN(parseFloat(result))){
				return '0px';
			}
		}
		//<ltIE9>
		if (returnsBordersInWrongOrder && /^border(Top|Right|Bottom|Left)?$/.test(property) && /^#/.test(result)){
			return result.replace(/^(.+)\s(.+)\s(.+)$/, '$2 $3 $1');
		}
		//</ltIE9>

		return result;
	},

	setStyles: function(styles){
		for (var style in styles) this.setStyle(style, styles[style]);
		return this;
	},

	getStyles: function(){
		var result = {};
		Array.flatten(arguments).each(function(key){
			result[key] = this.getStyle(key);
		}, this);
		return result;
	}

});

Element.Styles = {
	left: '@px', top: '@px', bottom: '@px', right: '@px',
	width: '@px', height: '@px', maxWidth: '@px', maxHeight: '@px', minWidth: '@px', minHeight: '@px',
	backgroundColor: 'rgb(@, @, @)', backgroundSize: '@px', backgroundPosition: '@px @px', color: 'rgb(@, @, @)',
	fontSize: '@px', letterSpacing: '@px', lineHeight: '@px', clip: 'rect(@px @px @px @px)',
	margin: '@px @px @px @px', padding: '@px @px @px @px', border: '@px @ rgb(@, @, @) @px @ rgb(@, @, @) @px @ rgb(@, @, @)',
	borderWidth: '@px @px @px @px', borderStyle: '@ @ @ @', borderColor: 'rgb(@, @, @) rgb(@, @, @) rgb(@, @, @) rgb(@, @, @)',
	zIndex: '@', 'zoom': '@', fontWeight: '@', textIndent: '@px', opacity: '@', borderRadius: '@px @px @px @px'
};





Element.ShortStyles = {margin: {}, padding: {}, border: {}, borderWidth: {}, borderStyle: {}, borderColor: {}};

['Top', 'Right', 'Bottom', 'Left'].each(function(direction){
	var Short = Element.ShortStyles;
	var All = Element.Styles;
	['margin', 'padding'].each(function(style){
		var sd = style + direction;
		Short[style][sd] = All[sd] = '@px';
	});
	var bd = 'border' + direction;
	Short.border[bd] = All[bd] = '@px @ rgb(@, @, @)';
	var bdw = bd + 'Width', bds = bd + 'Style', bdc = bd + 'Color';
	Short[bd] = {};
	Short.borderWidth[bdw] = Short[bd][bdw] = All[bdw] = '@px';
	Short.borderStyle[bds] = Short[bd][bds] = All[bds] = '@';
	Short.borderColor[bdc] = Short[bd][bdc] = All[bdc] = 'rgb(@, @, @)';
});

if (hasBackgroundPositionXY) Element.ShortStyles.backgroundPosition = {backgroundPositionX: '@', backgroundPositionY: '@'};
})();

/*
---

name: Element.Dimensions

description: Contains methods to work with size, scroll, or positioning of Elements and the window object.

license: MIT-style license.

credits:
  - Element positioning based on the [qooxdoo](http://qooxdoo.org/) code and smart browser fixes, [LGPL License](http://www.gnu.org/licenses/lgpl.html).
  - Viewport dimensions based on [YUI](http://developer.yahoo.com/yui/) code, [BSD License](http://developer.yahoo.com/yui/license.html).

requires: [Element, Element.Style]

provides: [Element.Dimensions]

...
*/

(function(){

var element = document.createElement('div'),
	child = document.createElement('div');
element.style.height = '0';
element.appendChild(child);
var brokenOffsetParent = (child.offsetParent === element);
element = child = null;

var heightComponents = ['height', 'paddingTop', 'paddingBottom', 'borderTopWidth', 'borderBottomWidth'],
	widthComponents = ['width', 'paddingLeft', 'paddingRight', 'borderLeftWidth', 'borderRightWidth'];

var svgCalculateSize = function(el){

	var gCS = window.getComputedStyle(el),
		bounds = {x: 0, y: 0};

	heightComponents.each(function(css){
		bounds.y += parseFloat(gCS[css]);
	});
	widthComponents.each(function(css){
		bounds.x += parseFloat(gCS[css]);
	});
	return bounds;
};

var isOffset = function(el){
	return styleString(el, 'position') != 'static' || isBody(el);
};

var isOffsetStatic = function(el){
	return isOffset(el) || (/^(?:table|td|th)$/i).test(el.tagName);
};

Element.implement({

	scrollTo: function(x, y){
		if (isBody(this)){
			this.getWindow().scrollTo(x, y);
		} else {
			this.scrollLeft = x;
			this.scrollTop = y;
		}
		return this;
	},

	getSize: function(){
		if (isBody(this)) return this.getWindow().getSize();

		//<ltIE9>
		// This if clause is because IE8- cannot calculate getBoundingClientRect of elements with visibility hidden.
		if (!window.getComputedStyle) return {x: this.offsetWidth, y: this.offsetHeight};
		//</ltIE9>

		// This svg section under, calling `svgCalculateSize()`, can be removed when FF fixed the svg size bug.
		// Bug info: https://bugzilla.mozilla.org/show_bug.cgi?id=530985
		if (this.get('tag') == 'svg') return svgCalculateSize(this);

		try {
			var bounds = this.getBoundingClientRect();
			return {x: bounds.width, y: bounds.height};
		} catch (e){
			return {x: 0, y: 0};
		}
	},

	getScrollSize: function(){
		if (isBody(this)) return this.getWindow().getScrollSize();
		return {x: this.scrollWidth, y: this.scrollHeight};
	},

	getScroll: function(){
		if (isBody(this)) return this.getWindow().getScroll();
		return {x: this.scrollLeft, y: this.scrollTop};
	},

	getScrolls: function(){
		var element = this.parentNode, position = {x: 0, y: 0};
		while (element && !isBody(element)){
			position.x += element.scrollLeft;
			position.y += element.scrollTop;
			element = element.parentNode;
		}
		return position;
	},

	getOffsetParent: brokenOffsetParent ? function(){
		var element = this;
		if (isBody(element) || styleString(element, 'position') == 'fixed') return null;

		var isOffsetCheck = (styleString(element, 'position') == 'static') ? isOffsetStatic : isOffset;
		while ((element = element.parentNode)){
			if (isOffsetCheck(element)) return element;
		}
		return null;
	} : function(){
		var element = this;
		if (isBody(element) || styleString(element, 'position') == 'fixed') return null;

		try {
			return element.offsetParent;
		} catch (e){}
		return null;
	},

	getOffsets: function(){
		var hasGetBoundingClientRect = this.getBoundingClientRect;

		if (hasGetBoundingClientRect){
			var bound = this.getBoundingClientRect(),
				html = document.id(this.getDocument().documentElement),
				htmlScroll = html.getScroll(),
				elemScrolls = this.getScrolls(),
				isFixed = (styleString(this, 'position') == 'fixed');

			return {
				x: bound.left.toFloat() + elemScrolls.x + ((isFixed) ? 0 : htmlScroll.x) - html.clientLeft,
				y: bound.top.toFloat() + elemScrolls.y + ((isFixed) ? 0 : htmlScroll.y) - html.clientTop
			};
		}

		var element = this, position = {x: 0, y: 0};
		if (isBody(this)) return position;

		while (element && !isBody(element)){
			position.x += element.offsetLeft;
			position.y += element.offsetTop;

			element = element.offsetParent;
		}

		return position;
	},

	getPosition: function(relative){
		var offset = this.getOffsets(),
			scroll = this.getScrolls();
		var position = {
			x: offset.x - scroll.x,
			y: offset.y - scroll.y
		};

		if (relative && (relative = document.id(relative))){
			var relativePosition = relative.getPosition();
			return {x: position.x - relativePosition.x - leftBorder(relative), y: position.y - relativePosition.y - topBorder(relative)};
		}
		return position;
	},

	getCoordinates: function(element){
		if (isBody(this)) return this.getWindow().getCoordinates();
		var position = this.getPosition(element),
			size = this.getSize();
		var obj = {
			left: position.x,
			top: position.y,
			width: size.x,
			height: size.y
		};
		obj.right = obj.left + obj.width;
		obj.bottom = obj.top + obj.height;
		return obj;
	},

	computePosition: function(obj){
		return {
			left: obj.x - styleNumber(this, 'margin-left'),
			top: obj.y - styleNumber(this, 'margin-top')
		};
	},

	setPosition: function(obj){
		return this.setStyles(this.computePosition(obj));
	}

});


[Document, Window].invoke('implement', {

	getSize: function(){
		var doc = getCompatElement(this);
		return {x: doc.clientWidth, y: doc.clientHeight};
	},

	getScroll: function(){
		var win = this.getWindow(), doc = getCompatElement(this);
		return {x: win.pageXOffset || doc.scrollLeft, y: win.pageYOffset || doc.scrollTop};
	},

	getScrollSize: function(){
		var doc = getCompatElement(this),
			min = this.getSize(),
			body = this.getDocument().body;

		return {x: Math.max(doc.scrollWidth, body.scrollWidth, min.x), y: Math.max(doc.scrollHeight, body.scrollHeight, min.y)};
	},

	getPosition: function(){
		return {x: 0, y: 0};
	},

	getCoordinates: function(){
		var size = this.getSize();
		return {top: 0, left: 0, bottom: size.y, right: size.x, height: size.y, width: size.x};
	}

});

// private methods

var styleString = Element.getComputedStyle;

function styleNumber(element, style){
	return styleString(element, style).toInt() || 0;
}



function topBorder(element){
	return styleNumber(element, 'border-top-width');
}

function leftBorder(element){
	return styleNumber(element, 'border-left-width');
}

function isBody(element){
	return (/^(?:body|html)$/i).test(element.tagName);
}

function getCompatElement(element){
	var doc = element.getDocument();
	return (!doc.compatMode || doc.compatMode == 'CSS1Compat') ? doc.html : doc.body;
}

})();

//aliases
Element.alias({position: 'setPosition'}); //compatability

[Window, Document, Element].invoke('implement', {

	getHeight: function(){
		return this.getSize().y;
	},

	getWidth: function(){
		return this.getSize().x;
	},

	getScrollTop: function(){
		return this.getScroll().y;
	},

	getScrollLeft: function(){
		return this.getScroll().x;
	},

	getScrollHeight: function(){
		return this.getScrollSize().y;
	},

	getScrollWidth: function(){
		return this.getScrollSize().x;
	},

	getTop: function(){
		return this.getPosition().y;
	},

	getLeft: function(){
		return this.getPosition().x;
	}

});

/*
---

name: Fx

description: Contains the basic animation logic to be extended by all other Fx Classes.

license: MIT-style license.

requires: [Chain, Events, Options, Class.Thenable]

provides: Fx

...
*/

(function(){

var Fx = this.Fx = new Class({

	Implements: [Chain, Events, Options, Class.Thenable],

	options: {
		/*
		onStart: nil,
		onCancel: nil,
		onComplete: nil,
		*/
		fps: 60,
		unit: false,
		duration: 500,
		frames: null,
		frameSkip: true,
		link: 'ignore'
	},

	initialize: function(options){
		this.subject = this.subject || this;
		this.setOptions(options);
	},

	getTransition: function(){
		return function(p){
			return -(Math.cos(Math.PI * p) - 1) / 2;
		};
	},

	step: function(now){
		if (this.options.frameSkip){
			var diff = (this.time != null) ? (now - this.time) : 0, frames = diff / this.frameInterval;
			this.time = now;
			this.frame += frames;
		} else {
			this.frame++;
		}

		if (this.frame < this.frames){
			var delta = this.transition(this.frame / this.frames);
			this.set(this.compute(this.from, this.to, delta));
		} else {
			this.frame = this.frames;
			this.set(this.compute(this.from, this.to, 1));
			this.stop();
		}
	},

	set: function(now){
		return now;
	},

	compute: function(from, to, delta){
		return Fx.compute(from, to, delta);
	},

	check: function(){
		if (!this.isRunning()) return true;
		switch (this.options.link){
			case 'cancel': this.cancel(); return true;
			case 'chain': this.chain(this.caller.pass(arguments, this)); return false;
		}
		return false;
	},

	start: function(from, to){
		if (!this.check(from, to)) return this;
		this.from = from;
		this.to = to;
		this.frame = (this.options.frameSkip) ? 0 : -1;
		this.time = null;
		this.transition = this.getTransition();
		var frames = this.options.frames, fps = this.options.fps, duration = this.options.duration;
		this.duration = Fx.Durations[duration] || duration.toInt();
		this.frameInterval = 1000 / fps;
		this.frames = frames || Math.round(this.duration / this.frameInterval);
		if (this.getThenableState() !== 'pending'){
			this.resetThenable(this.subject);
		}
		this.fireEvent('start', this.subject);
		pushInstance.call(this, fps);
		return this;
	},

	stop: function(){
		if (this.isRunning()){
			this.time = null;
			pullInstance.call(this, this.options.fps);
			if (this.frames == this.frame){
				this.fireEvent('complete', this.subject);
				if (!this.callChain()) this.fireEvent('chainComplete', this.subject);
			} else {
				this.fireEvent('stop', this.subject);
			}
			this.resolve(this.subject === this ? null : this.subject);
		}
		return this;
	},

	cancel: function(){
		if (this.isRunning()){
			this.time = null;
			pullInstance.call(this, this.options.fps);
			this.frame = this.frames;
			this.fireEvent('cancel', this.subject).clearChain();
			this.reject(this.subject);
		}
		return this;
	},

	pause: function(){
		if (this.isRunning()){
			this.time = null;
			pullInstance.call(this, this.options.fps);
		}
		return this;
	},

	resume: function(){
		if (this.isPaused()) pushInstance.call(this, this.options.fps);
		return this;
	},

	isRunning: function(){
		var list = instances[this.options.fps];
		return list && list.contains(this);
	},

	isPaused: function(){
		return (this.frame < this.frames) && !this.isRunning();
	}

});

Fx.compute = function(from, to, delta){
	return (to - from) * delta + from;
};

Fx.Durations = {'short': 250, 'normal': 500, 'long': 1000};

// global timers

var instances = {}, timers = {};

var loop = function(){
	var now = Date.now();
	for (var i = this.length; i--;){
		var instance = this[i];
		if (instance) instance.step(now);
	}
};

var pushInstance = function(fps){
	var list = instances[fps] || (instances[fps] = []);
	list.push(this);
	if (!timers[fps]) timers[fps] = loop.periodical(Math.round(1000 / fps), list);
};

var pullInstance = function(fps){
	var list = instances[fps];
	if (list){
		list.erase(this);
		if (!list.length && timers[fps]){
			delete instances[fps];
			timers[fps] = clearInterval(timers[fps]);
		}
	}
};

})();

/*
---

name: Fx.CSS

description: Contains the CSS animation logic. Used by Fx.Tween, Fx.Morph, Fx.Elements.

license: MIT-style license.

requires: [Fx, Element.Style]

provides: Fx.CSS

...
*/

Fx.CSS = new Class({

	Extends: Fx,

	//prepares the base from/to object

	prepare: function(element, property, values){
		values = Array.convert(values);
		var from = values[0], to = values[1];
		if (to == null){
			to = from;
			from = element.getStyle(property);
			var unit = this.options.unit;
			// adapted from: https://github.com/ryanmorr/fx/blob/master/fx.js#L299
			if (unit && from && typeof from == 'string' && from.slice(-unit.length) != unit && parseFloat(from) != 0){
				element.setStyle(property, to + unit);
				var value = element.getComputedStyle(property);
				// IE and Opera support pixelLeft or pixelWidth
				if (!(/px$/.test(value))){
					value = element.style[('pixel-' + property).camelCase()];
					if (value == null){
						// adapted from Dean Edwards' http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291
						var left = element.style.left;
						element.style.left = to + unit;
						value = element.style.pixelLeft;
						element.style.left = left;
					}
				}
				from = (to || 1) / (parseFloat(value) || 1) * (parseFloat(from) || 0);
				element.setStyle(property, from + unit);
			}
		}
		return {from: this.parse(from), to: this.parse(to)};
	},

	//parses a value into an array

	parse: function(value){
		value = Function.convert(value)();
		value = (typeof value == 'string') ? value.split(' ') : Array.convert(value);
		return value.map(function(val){
			val = String(val);
			var found = false;
			Object.each(Fx.CSS.Parsers, function(parser){
				if (found) return;
				var parsed = parser.parse(val);
				if (parsed || parsed === 0) found = {value: parsed, parser: parser};
			});
			found = found || {value: val, parser: Fx.CSS.Parsers.String};
			return found;
		});
	},

	//computes by a from and to prepared objects, using their parsers.

	compute: function(from, to, delta){
		var computed = [];
		(Math.min(from.length, to.length)).times(function(i){
			computed.push({value: from[i].parser.compute(from[i].value, to[i].value, delta), parser: from[i].parser});
		});
		computed.$family = Function.convert('fx:css:value');
		return computed;
	},

	//serves the value as settable

	serve: function(value, unit){
		if (typeOf(value) != 'fx:css:value') value = this.parse(value);
		var returned = [];
		value.each(function(bit){
			returned = returned.concat(bit.parser.serve(bit.value, unit));
		});
		return returned;
	},

	//renders the change to an element

	render: function(element, property, value, unit){
		element.setStyle(property, this.serve(value, unit));
	},

	//searches inside the page css to find the values for a selector

	search: function(selector){
		if (Fx.CSS.Cache[selector]) return Fx.CSS.Cache[selector];
		var to = {}, selectorTest = new RegExp('^' + selector.escapeRegExp() + '$');

		var searchStyles = function(rules){
			Array.each(rules, function(rule){
				if (rule.media){
					searchStyles(rule.rules || rule.cssRules);
					return;
				}
				if (!rule.style) return;
				var selectorText = (rule.selectorText) ? rule.selectorText.replace(/^\w+/, function(m){
					return m.toLowerCase();
				}) : null;
				if (!selectorText || !selectorTest.test(selectorText)) return;
				Object.each(Element.Styles, function(value, style){
					if (!rule.style[style] || Element.ShortStyles[style]) return;
					value = String(rule.style[style]);
					to[style] = ((/^rgb/).test(value)) ? value.rgbToHex() : value;
				});
			});
		};

		Array.each(document.styleSheets, function(sheet){
			var href = sheet.href;
			if (href && href.indexOf('://') > -1 && href.indexOf(document.domain) == -1) return;
			var rules = sheet.rules || sheet.cssRules;
			searchStyles(rules);
		});
		return Fx.CSS.Cache[selector] = to;
	}

});

Fx.CSS.Cache = {};

Fx.CSS.Parsers = {

	Color: {
		parse: function(value){
			if (value.match(/^#[0-9a-f]{3,6}$/i)) return value.hexToRgb(true);
			return ((value = value.match(/(\d+),\s*(\d+),\s*(\d+)/))) ? [value[1], value[2], value[3]] : false;
		},
		compute: function(from, to, delta){
			return from.map(function(value, i){
				return Math.round(Fx.compute(from[i], to[i], delta));
			});
		},
		serve: function(value){
			return value.map(Number);
		}
	},

	Number: {
		parse: parseFloat,
		compute: Fx.compute,
		serve: function(value, unit){
			return (unit) ? value + unit : value;
		}
	},

	String: {
		parse: Function.convert(false),
		compute: function(zero, one){
			return one;
		},
		serve: function(zero){
			return zero;
		}
	}

};



/*
---

name: Fx.Morph

description: Formerly Fx.Styles, effect to transition any number of CSS properties for an element using an object of rules, or CSS based selector rules.

license: MIT-style license.

requires: Fx.CSS

provides: Fx.Morph

...
*/

Fx.Morph = new Class({

	Extends: Fx.CSS,

	initialize: function(element, options){
		this.element = this.subject = document.id(element);
		this.parent(options);
	},

	set: function(now){
		if (typeof now == 'string') now = this.search(now);
		for (var p in now) this.render(this.element, p, now[p], this.options.unit);
		return this;
	},

	compute: function(from, to, delta){
		var now = {};
		for (var p in from) now[p] = this.parent(from[p], to[p], delta);
		return now;
	},

	start: function(properties){
		if (!this.check(properties)) return this;
		if (typeof properties == 'string') properties = this.search(properties);
		var from = {}, to = {};
		for (var p in properties){
			var parsed = this.prepare(this.element, p, properties[p]);
			from[p] = parsed.from;
			to[p] = parsed.to;
		}
		return this.parent(from, to);
	}

});

Element.Properties.morph = {

	set: function(options){
		this.get('morph').cancel().setOptions(options);
		return this;
	},

	get: function(){
		var morph = this.retrieve('morph');
		if (!morph){
			morph = new Fx.Morph(this, {link: 'cancel'});
			this.store('morph', morph);
		}
		return morph;
	}

};

Element.implement({

	morph: function(props){
		this.get('morph').start(props);
		return this;
	}

});

/*
---

name: Fx.Transitions

description: Contains a set of advanced transitions to be used with any of the Fx Classes.

license: MIT-style license.

credits:
  - Easing Equations by Robert Penner, <http://www.robertpenner.com/easing/>, modified and optimized to be used with MooTools.

requires: Fx

provides: Fx.Transitions

...
*/

Fx.implement({

	getTransition: function(){
		var trans = this.options.transition || Fx.Transitions.Sine.easeInOut;
		if (typeof trans == 'string'){
			var data = trans.split(':');
			trans = Fx.Transitions;
			trans = trans[data[0]] || trans[data[0].capitalize()];
			if (data[1]) trans = trans['ease' + data[1].capitalize() + (data[2] ? data[2].capitalize() : '')];
		}
		return trans;
	}

});

Fx.Transition = function(transition, params){
	params = Array.convert(params);
	var easeIn = function(pos){
		return transition(pos, params);
	};
	return Object.append(easeIn, {
		easeIn: easeIn,
		easeOut: function(pos){
			return 1 - transition(1 - pos, params);
		},
		easeInOut: function(pos){
			return (pos <= 0.5 ? transition(2 * pos, params) : (2 - transition(2 * (1 - pos), params))) / 2;
		}
	});
};

Fx.Transitions = {

	linear: function(zero){
		return zero;
	}

};



Fx.Transitions.extend = function(transitions){
	for (var transition in transitions) Fx.Transitions[transition] = new Fx.Transition(transitions[transition]);
};

Fx.Transitions.extend({

	Pow: function(p, x){
		return Math.pow(p, x && x[0] || 6);
	},

	Expo: function(p){
		return Math.pow(2, 8 * (p - 1));
	},

	Circ: function(p){
		return 1 - Math.sin(Math.acos(p));
	},

	Sine: function(p){
		return 1 - Math.cos(p * Math.PI / 2);
	},

	Back: function(p, x){
		x = x && x[0] || 1.618;
		return Math.pow(p, 2) * ((x + 1) * p - x);
	},

	Bounce: function(p){
		var value;
		for (var a = 0, b = 1; 1; a += b, b /= 2){
			if (p >= (7 - 4 * a) / 11){
				value = b * b - Math.pow((11 - 6 * a - 11 * p) / 4, 2);
				break;
			}
		}
		return value;
	},

	Elastic: function(p, x){
		return Math.pow(2, 10 * --p) * Math.cos(20 * p * Math.PI * (x && x[0] || 1) / 3);
	}

});

['Quad', 'Cubic', 'Quart', 'Quint'].each(function(transition, i){
	Fx.Transitions[transition] = new Fx.Transition(function(p){
		return Math.pow(p, i + 2);
	});
});

/*
---

name: Fx.Tween

description: Formerly Fx.Style, effect to transition any CSS property for an element.

license: MIT-style license.

requires: Fx.CSS

provides: [Fx.Tween, Element.fade, Element.highlight]

...
*/

Fx.Tween = new Class({

	Extends: Fx.CSS,

	initialize: function(element, options){
		this.element = this.subject = document.id(element);
		this.parent(options);
	},

	set: function(property, now){
		if (arguments.length == 1){
			now = property;
			property = this.property || this.options.property;
		}
		this.render(this.element, property, now, this.options.unit);
		return this;
	},

	start: function(property, from, to){
		if (!this.check(property, from, to)) return this;
		var args = Array.flatten(arguments);
		this.property = this.options.property || args.shift();
		var parsed = this.prepare(this.element, this.property, args);
		return this.parent(parsed.from, parsed.to);
	}

});

Element.Properties.tween = {

	set: function(options){
		this.get('tween').cancel().setOptions(options);
		return this;
	},

	get: function(){
		var tween = this.retrieve('tween');
		if (!tween){
			tween = new Fx.Tween(this, {link: 'cancel'});
			this.store('tween', tween);
		}
		return tween;
	}

};

Element.implement({

	tween: function(property, from, to){
		this.get('tween').start(property, from, to);
		return this;
	},

	fade: function(){
		var fade = this.get('tween'), method, args = ['opacity'].append(arguments), toggle;
		if (args[1] == null) args[1] = 'toggle';
		switch (args[1]){
			case 'in': method = 'start'; args[1] = 1; break;
			case 'out': method = 'start'; args[1] = 0; break;
			case 'show': method = 'set'; args[1] = 1; break;
			case 'hide': method = 'set'; args[1] = 0; break;
			case 'toggle':
				var flag = this.retrieve('fade:flag', this.getStyle('opacity') == 1);
				method = 'start';
				args[1] = flag ? 0 : 1;
				this.store('fade:flag', !flag);
				toggle = true;
				break;
			default: method = 'start';
		}
		if (!toggle) this.eliminate('fade:flag');
		fade[method].apply(fade, args);
		var to = args[args.length - 1];

		if (method == 'set'){
			this.setStyle('visibility', to == 0 ? 'hidden' : 'visible');
		} else if (to != 0){
			if (fade.$chain.length){
				fade.chain(function(){
					this.element.setStyle('visibility', 'visible');
					this.callChain();
				});
			} else {
				this.setStyle('visibility', 'visible');
			}
		} else {
			fade.chain(function(){
				if (this.element.getStyle('opacity')) return;
				this.element.setStyle('visibility', 'hidden');
				this.callChain();
			});
		}

		return this;
	},

	highlight: function(start, end){
		if (!end){
			end = this.retrieve('highlight:original', this.getStyle('background-color'));
			end = (end == 'transparent') ? '#fff' : end;
		}
		var tween = this.get('tween');
		tween.start('background-color', start || '#ffff88', end).chain(function(){
			this.setStyle('background-color', this.retrieve('highlight:original'));
			tween.callChain();
		}.bind(this));
		return this;
	}

});

/*
---

name: Request

description: Powerful all purpose Request Class. Uses XMLHTTPRequest.

license: MIT-style license.

requires: [Object, Element, Chain, Events, Options, Class.Thenable, Browser]

provides: Request

...
*/

(function(){

var empty = function(){},
	progressSupport = ('onprogress' in new Browser.Request);

var Request = this.Request = new Class({

	Implements: [Chain, Events, Options, Class.Thenable],

	options: {/*
		onRequest: function(){},
		onLoadstart: function(event, xhr){},
		onProgress: function(event, xhr){},
		onComplete: function(){},
		onCancel: function(){},
		onSuccess: function(responseText, responseXML){},
		onFailure: function(xhr){},
		onException: function(headerName, value){},
		onTimeout: function(){},
		user: '',
		password: '',
		withCredentials: false,*/
		url: '',
		data: '',
		headers: {
			'X-Requested-With': 'XMLHttpRequest',
			'Accept': 'text/javascript, text/html, application/xml, text/xml, */*'
		},
		async: true,
		format: false,
		method: 'post',
		link: 'ignore',
		isSuccess: null,
		emulation: true,
		urlEncoded: true,
		encoding: 'utf-8',
		evalScripts: false,
		evalResponse: false,
		timeout: 0,
		noCache: false
	},

	initialize: function(options){
		this.xhr = new Browser.Request();
		this.setOptions(options);
		this.headers = this.options.headers;
	},

	onStateChange: function(){
		var xhr = this.xhr;
		if (xhr.readyState != 4 || !this.running) return;
		this.running = false;
		this.status = 0;
		Function.attempt(function(){
			var status = xhr.status;
			this.status = (status == 1223) ? 204 : status;
		}.bind(this));
		xhr.onreadystatechange = empty;
		if (progressSupport) xhr.onprogress = xhr.onloadstart = empty;
		if (this.timer){
			clearTimeout(this.timer);
			delete this.timer;
		}

		this.response = {text: this.xhr.responseText || '', xml: this.xhr.responseXML};
		if (this.options.isSuccess.call(this, this.status))
			this.success(this.response.text, this.response.xml);
		else
			this.failure();
	},

	isSuccess: function(){
		var status = this.status;
		return (status >= 200 && status < 300);
	},

	isRunning: function(){
		return !!this.running;
	},

	processScripts: function(text){
		if (this.options.evalResponse || (/(ecma|java)script/).test(this.getHeader('Content-type'))) return Browser.exec(text);
		return text.stripScripts(this.options.evalScripts);
	},

	success: function(text, xml){
		this.onSuccess(this.processScripts(text), xml);
		this.resolve({text: text, xml: xml});
	},

	onSuccess: function(){
		this.fireEvent('complete', arguments).fireEvent('success', arguments).callChain();
	},

	failure: function(){
		this.onFailure();
		this.reject({reason: 'failure', xhr: this.xhr});
	},

	onFailure: function(){
		this.fireEvent('complete').fireEvent('failure', this.xhr);
	},

	loadstart: function(event){
		this.fireEvent('loadstart', [event, this.xhr]);
	},

	progress: function(event){
		this.fireEvent('progress', [event, this.xhr]);
	},

	timeout: function(){
		this.fireEvent('timeout', this.xhr);
		this.reject({reason: 'timeout', xhr: this.xhr});
	},

	setHeader: function(name, value){
		this.headers[name] = value;
		return this;
	},

	getHeader: function(name){
		return Function.attempt(function(){
			return this.xhr.getResponseHeader(name);
		}.bind(this));
	},

	check: function(){
		if (!this.running) return true;
		switch (this.options.link){
			case 'cancel': this.cancel(); return true;
			case 'chain': this.chain(this.caller.pass(arguments, this)); return false;
		}
		return false;
	},

	send: function(options){
		if (!this.check(options)) return this;

		this.options.isSuccess = this.options.isSuccess || this.isSuccess;
		this.running = true;

		var type = typeOf(options);
		if (type == 'string' || type == 'element') options = {data: options};

		var old = this.options;
		options = Object.append({data: old.data, url: old.url, method: old.method}, options);
		var data = options.data, url = String(options.url), method = options.method.toLowerCase();

		switch (typeOf(data)){
			case 'element': data = document.id(data).toQueryString(); break;
			case 'object': case 'hash': data = Object.toQueryString(data);
		}

		if (this.options.format){
			var format = 'format=' + this.options.format;
			data = (data) ? format + '&' + data : format;
		}

		if (this.options.emulation && !['get', 'post'].contains(method)){
			var _method = '_method=' + method;
			data = (data) ? _method + '&' + data : _method;
			method = 'post';
		}

		if (this.options.urlEncoded && ['post', 'put'].contains(method)){
			var encoding = (this.options.encoding) ? '; charset=' + this.options.encoding : '';
			this.headers['Content-type'] = 'application/x-www-form-urlencoded' + encoding;
		}

		if (!url) url = document.location.pathname;

		var trimPosition = url.lastIndexOf('/');
		if (trimPosition > -1 && (trimPosition = url.indexOf('#')) > -1) url = url.substr(0, trimPosition);

		if (this.options.noCache)
			url += (url.indexOf('?') > -1 ? '&' : '?') + String.uniqueID();

		if (data && (method == 'get' || method == 'delete')){
			url += (url.indexOf('?') > -1 ? '&' : '?') + data;
			data = null;
		}

		var xhr = this.xhr;
		if (progressSupport){
			xhr.onloadstart = this.loadstart.bind(this);
			xhr.onprogress = this.progress.bind(this);
		}

		xhr.open(method.toUpperCase(), url, this.options.async, this.options.user, this.options.password);
		if ((this.options.withCredentials) && 'withCredentials' in xhr) xhr.withCredentials = true;

		xhr.onreadystatechange = this.onStateChange.bind(this);

		Object.each(this.headers, function(value, key){
			try {
				xhr.setRequestHeader(key, value);
			} catch (e){
				this.fireEvent('exception', [key, value]);
				this.reject({reason: 'exception', xhr: xhr, exception: e});
			}
		}, this);

		if (this.getThenableState() !== 'pending'){
			this.resetThenable({reason: 'send'});
		}
		this.fireEvent('request');
		xhr.send(data);
		if (!this.options.async) this.onStateChange();
		else if (this.options.timeout) this.timer = this.timeout.delay(this.options.timeout, this);
		return this;
	},

	cancel: function(){
		if (!this.running) return this;
		this.running = false;
		var xhr = this.xhr;
		xhr.abort();
		if (this.timer){
			clearTimeout(this.timer);
			delete this.timer;
		}
		xhr.onreadystatechange = empty;
		if (progressSupport) xhr.onprogress = xhr.onloadstart = empty;
		this.xhr = new Browser.Request();
		this.fireEvent('cancel');
		this.reject({reason: 'cancel', xhr: xhr});
		return this;
	}

});

var methods = {};
['get', 'post', 'put', 'delete', 'patch', 'head', 'GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'HEAD'].each(function(method){
	methods[method] = function(data){
		var object = {
			method: method
		};
		if (data != null) object.data = data;
		return this.send(object);
	};
});

Request.implement(methods);

Element.Properties.send = {

	set: function(options){
		var send = this.get('send').cancel();
		send.setOptions(options);
		return this;
	},

	get: function(){
		var send = this.retrieve('send');
		if (!send){
			send = new Request({
				data: this, link: 'cancel', method: this.get('method') || 'post', url: this.get('action')
			});
			this.store('send', send);
		}
		return send;
	}

};

Element.implement({

	send: function(url){
		var sender = this.get('send');
		sender.send({data: this, url: url || sender.options.url});
		return this;
	}

});

})();

/*
---

name: Request.HTML

description: Extends the basic Request Class with additional methods for interacting with HTML responses.

license: MIT-style license.

requires: [Element, Request]

provides: Request.HTML

...
*/

Request.HTML = new Class({

	Extends: Request,

	options: {
		update: false,
		append: false,
		evalScripts: true,
		filter: false,
		headers: {
			Accept: 'text/html, application/xml, text/xml, */*'
		}
	},

	success: function(text){
		var options = this.options, response = this.response;

		response.html = text.stripScripts(function(script){
			response.javascript = script;
		});

		var match = response.html.match(/<body[^>]*>([\s\S]*?)<\/body>/i);
		if (match) response.html = match[1];
		var temp = new Element('div').set('html', response.html);

		response.tree = temp.childNodes;
		response.elements = temp.getElements(options.filter || '*');

		if (options.filter) response.tree = response.elements;
		if (options.update){
			var update = document.id(options.update).empty();
			if (options.filter) update.adopt(response.elements);
			else update.set('html', response.html);
		} else if (options.append){
			var append = document.id(options.append);
			if (options.filter) response.elements.reverse().inject(append);
			else append.adopt(temp.getChildren());
		}
		if (options.evalScripts) Browser.exec(response.javascript);

		this.onSuccess(response.tree, response.elements, response.html, response.javascript);
		this.resolve({tree: response.tree, elements: response.elements, html: response.html, javascript: response.javascript});
	}

});

Element.Properties.load = {

	set: function(options){
		var load = this.get('load').cancel();
		load.setOptions(options);
		return this;
	},

	get: function(){
		var load = this.retrieve('load');
		if (!load){
			load = new Request.HTML({data: this, link: 'cancel', update: this, method: 'get'});
			this.store('load', load);
		}
		return load;
	}

};

Element.implement({

	load: function(){
		this.get('load').send(Array.link(arguments, {data: Type.isObject, url: Type.isString}));
		return this;
	}

});

/*
---

name: JSON

description: JSON encoder and decoder.

license: MIT-style license.

SeeAlso: <http://www.json.org/>

requires: [Array, String, Number, Function]

provides: JSON

...
*/

if (typeof JSON == 'undefined') this.JSON = {};



(function(){

var special = {'\b': '\\b', '\t': '\\t', '\n': '\\n', '\f': '\\f', '\r': '\\r', '"' : '\\"', '\\': '\\\\'};

var escape = function(chr){
	return special[chr] || '\\u' + ('0000' + chr.charCodeAt(0).toString(16)).slice(-4);
};

JSON.validate = function(string){
	string = string.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@').
					replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, ']').
					replace(/(?:^|:|,)(?:\s*\[)+/g, '');

	return (/^[\],:{}\s]*$/).test(string);
};

JSON.encode = JSON.stringify ? function(obj){
	return JSON.stringify(obj);
} : function(obj){
	if (obj && obj.toJSON) obj = obj.toJSON();

	switch (typeOf(obj)){
		case 'string':
			return '"' + obj.replace(/[\x00-\x1f\\"]/g, escape) + '"';
		case 'array':
			return '[' + obj.map(JSON.encode).clean() + ']';
		case 'object': case 'hash':
			var string = [];
			Object.each(obj, function(value, key){
				var json = JSON.encode(value);
				if (json) string.push(JSON.encode(key) + ':' + json);
			});
			return '{' + string + '}';
		case 'number': case 'boolean': return '' + obj;
		case 'null': return 'null';
	}

	return null;
};

JSON.secure = true;


JSON.decode = function(string, secure){
	if (!string || typeOf(string) != 'string') return null;

	if (secure == null) secure = JSON.secure;
	if (secure){
		if (JSON.parse) return JSON.parse(string);
		if (!JSON.validate(string)) throw new Error('JSON could not decode the input; security is enabled and the value is not secure.');
	}

	return eval('(' + string + ')');
};

})();

/*
---

name: Request.JSON

description: Extends the basic Request Class with additional methods for sending and receiving JSON data.

license: MIT-style license.

requires: [Request, JSON]

provides: Request.JSON

...
*/

Request.JSON = new Class({

	Extends: Request,

	options: {
		/*onError: function(text, error){},*/
		secure: true
	},

	initialize: function(options){
		this.parent(options);
		Object.append(this.headers, {
			'Accept': 'application/json',
			'X-Request': 'JSON'
		});
	},

	success: function(text){
		var json;
		try {
			json = this.response.json = JSON.decode(text, this.options.secure);
		} catch (error){
			this.fireEvent('error', [text, error]);
			return;
		}
		if (json == null){
			this.failure();
		} else {
			this.onSuccess(json, text);
			this.resolve({json: json, text: text});
		}
	}

});

/*
---

name: Cookie

description: Class for creating, reading, and deleting browser Cookies.

license: MIT-style license.

credits:
  - Based on the functions by Peter-Paul Koch (http://quirksmode.org).

requires: [Options, Browser]

provides: Cookie

...
*/

var Cookie = new Class({

	Implements: Options,

	options: {
		path: '/',
		domain: false,
		duration: false,
		secure: false,
		document: document,
		encode: true,
		httpOnly: false
	},

	initialize: function(key, options){
		this.key = key;
		this.setOptions(options);
	},

	write: function(value){
		if (this.options.encode) value = encodeURIComponent(value);
		if (this.options.domain) value += '; domain=' + this.options.domain;
		if (this.options.path) value += '; path=' + this.options.path;
		if (this.options.duration){
			var date = new Date();
			date.setTime(date.getTime() + this.options.duration * 24 * 60 * 60 * 1000);
			value += '; expires=' + date.toGMTString();
		}
		if (this.options.secure) value += '; secure';
		if (this.options.httpOnly) value += '; HttpOnly';
		this.options.document.cookie = this.key + '=' + value;
		return this;
	},

	read: function(){
		var value = this.options.document.cookie.match('(?:^|;)\\s*' + this.key.escapeRegExp() + '=([^;]*)');
		return (value) ? decodeURIComponent(value[1]) : null;
	},

	dispose: function(){
		new Cookie(this.key, Object.merge({}, this.options, {duration: -1})).write('');
		return this;
	}

});

Cookie.write = function(key, value, options){
	return new Cookie(key, options).write(value);
};

Cookie.read = function(key){
	return new Cookie(key).read();
};

Cookie.dispose = function(key, options){
	return new Cookie(key, options).dispose();
};

/*
---

name: DOMReady

description: Contains the custom event domready.

license: MIT-style license.

requires: [Browser, Element, Element.Event]

provides: [DOMReady, DomReady]

...
*/

(function(window, document){

var ready,
	loaded,
	checks = [],
	shouldPoll,
	timer,
	testElement = document.createElement('div');

var domready = function(){
	clearTimeout(timer);
	if (!ready){
		Browser.loaded = ready = true;
		document.removeListener('DOMContentLoaded', domready).removeListener('readystatechange', check);
		document.fireEvent('domready');
		window.fireEvent('domready');
	}
	// cleanup scope vars
	document = window = testElement = null;
};

var check = function(){
	for (var i = checks.length; i--;) if (checks[i]()){
		domready();
		return true;
	}
	return false;
};

var poll = function(){
	clearTimeout(timer);
	if (!check()) timer = setTimeout(poll, 10);
};

document.addListener('DOMContentLoaded', domready);

/*<ltIE8>*/
// doScroll technique by Diego Perini http://javascript.nwbox.com/IEContentLoaded/
// testElement.doScroll() throws when the DOM is not ready, only in the top window
var doScrollWorks = function(){
	try {
		testElement.doScroll();
		return true;
	} catch (e){}
	return false;
};
// If doScroll works already, it can't be used to determine domready
//   e.g. in an iframe
if (testElement.doScroll && !doScrollWorks()){
	checks.push(doScrollWorks);
	shouldPoll = true;
}
/*</ltIE8>*/

if (document.readyState) checks.push(function(){
	var state = document.readyState;
	return (state == 'loaded' || state == 'complete');
});

if ('onreadystatechange' in document) document.addListener('readystatechange', check);
else shouldPoll = true;

if (shouldPoll) poll();

Element.Events.domready = {
	onAdd: function(fn){
		if (ready) fn.call(this);
	}
};

// Make sure that domready fires before load
Element.Events.load = {
	base: 'load',
	onAdd: function(fn){
		if (loaded && this == window) fn.call(this);
	},
	condition: function(){
		if (this == window){
			domready();
			delete Element.Events.load;
		}
		return true;
	}
};

// This is based on the custom load event
window.addEvent('load', function(){
	loaded = true;
});

})(window, document);
/* MooTools: the javascript framework. license: MIT-style license. copyright: Copyright (c) 2006-2016 [Valerio Proietti](http://mad4milk.net/).*/ 
/*!
Web Build: http://mootools.net/more/builder/a3048f4bfdf603b22a69c141dbd0fca9
*/
/*
---

script: More.js

name: More

description: MooTools More

license: MIT-style license

authors:
  - Guillermo Rauch
  - Thomas Aylott
  - Scott Kyle
  - Arian Stolwijk
  - Tim Wienk
  - Christoph Pojer
  - Aaron Newton
  - Jacob Thornton

requires:
  - Core/MooTools

provides: [MooTools.More]

...
*/

MooTools.More = {
	version: '1.6.0',
	build: '45b71db70f879781a7e0b0d3fb3bb1307c2521eb'
};

/*
---

script: Chain.Wait.js

name: Chain.Wait

description: value, Adds a method to inject pauses between chained events.

license: MIT-style license.

authors:
  - Aaron Newton

requires:
  - Core/Chain
  - Core/Element
  - Core/Fx
  - MooTools.More

provides: [Chain.Wait]

...
*/

(function(){

var wait = {
	wait: function(duration){
		return this.chain(function(){
			this.callChain.delay(duration == null ? 500 : duration, this);
			return this;
		}.bind(this));
	}
};

Chain.implement(wait);

if (this.Fx) Fx.implement(wait);

if (this.Element && Element.implement && this.Fx){
	Element.implement({

		chains: function(effects){
			Array.convert(effects || ['tween', 'morph', 'reveal']).each(function(effect){
				effect = this.get(effect);
				if (!effect) return;
				effect.setOptions({
					link:'chain'
				});
			}, this);
			return this;
		},

		pauseFx: function(duration, effect){
			this.chains(effect).get(effect || 'tween').wait(duration);
			return this;
		}

	});
}

})();

/*
---

script: Class.Binds.js

name: Class.Binds

description: Automagically binds specified methods in a class to the instance of the class.

license: MIT-style license

authors:
  - Aaron Newton

requires:
  - Core/Class
  - MooTools.More

provides: [Class.Binds]

...
*/

Class.Mutators.Binds = function(binds){
	if (!this.prototype.initialize) this.implement('initialize', function(){});
	return Array.convert(binds).concat(this.prototype.Binds || []);
};

Class.Mutators.initialize = function(initialize){
	return function(){
		Array.convert(this.Binds).each(function(name){
			var original = this[name];
			if (original) this[name] = original.bind(this);
		}, this);
		return initialize.apply(this, arguments);
	};
};

/*
---

script: Class.Occlude.js

name: Class.Occlude

description: Prevents a class from being applied to a DOM element twice.

license: MIT-style license.

authors:
  - Aaron Newton

requires:
  - Core/Class
  - Core/Element
  - MooTools.More

provides: [Class.Occlude]

...
*/

Class.Occlude = new Class({

	occlude: function(property, element){
		element = document.id(element || this.element);
		var instance = element.retrieve(property || this.property);
		if (instance && !this.occluded)
			return (this.occluded = instance);

		this.occluded = false;
		element.store(property || this.property, this);
		return this.occluded;
	}

});

/*
---

script: Class.Refactor.js

name: Class.Refactor

description: Extends a class onto itself with new property, preserving any items attached to the class's namespace.

license: MIT-style license

authors:
  - Aaron Newton

requires:
  - Core/Class
  - MooTools.More

# Some modules declare themselves dependent on Class.Refactor
provides: [Class.refactor, Class.Refactor]

...
*/

Class.refactor = function(original, refactors){

	Object.each(refactors, function(item, name){
		var origin = original.prototype[name];
		origin = (origin && origin.$origin) || origin || function(){};
		original.implement(name, (typeof item == 'function') ? function(){
			var old = this.previous;
			this.previous = origin;
			var value = item.apply(this, arguments);
			this.previous = old;
			return value;
		} : item);
	});

	return original;

};

/*
---

script: Class.Singleton.js

name: Class.Singleton

description: Always provides a single instance of a class

license: MIT-style license.

authors:
  - Hristo Chakarov

requires:
  - Core/Class

provides: [Class.Singleton]

...
*/

Class.Singleton = new Class({

	initialize : function(descriptor){
		// here we keep reference of the single instance
		var singleton;
		// create a regular Class
		var constructor = new Class(descriptor);
		// We return another constructor, because we need to make sure that we
		// always return the same one and only instance.
		return function(){
			if (singleton){
				return singleton;
			}
			// Obviously we instantiate that class for the first time.
			// Create brand new object & extend it with the prototype of the
			// original `constructor`.
			singleton = Object.append({}, constructor.prototype);
			singleton.constructor = constructor;
			// We also need to call the constructor as a function, passing the
			// arguments object.
			var returnValue = constructor.apply(singleton, arguments);
			// In case the `constructor` returns something other than `this` -
			// return that value; otherwise return the `singleton`.
			singleton = typeof returnValue == 'object' ? returnValue : singleton;
			return singleton;
		};
	}

});

/*
---

name: Events.Pseudos

description: Adds the functionality to add pseudo events

license: MIT-style license

authors:
  - Arian Stolwijk

requires: [Core/Class.Extras, Core/Slick.Parser, MooTools.More]

provides: [Events.Pseudos]

...
*/

(function(){

Events.Pseudos = function(pseudos, addEvent, removeEvent){

	var storeKey = '_monitorEvents:';

	var storageOf = function(object){
		return {
			store: object.store ? function(key, value){
				object.store(storeKey + key, value);
			} : function(key, value){
				(object._monitorEvents || (object._monitorEvents = {}))[key] = value;
			},
			retrieve: object.retrieve ? function(key, dflt){
				return object.retrieve(storeKey + key, dflt);
			} : function(key, dflt){
				if (!object._monitorEvents) return dflt;
				return object._monitorEvents[key] || dflt;
			}
		};
	};

	var splitType = function(type){
		if (type.indexOf(':') == -1 || !pseudos) return null;

		var parsed = Slick.parse(type).expressions[0][0],
			parsedPseudos = parsed.pseudos,
			l = parsedPseudos.length,
			splits = [];

		while (l--){
			var pseudo = parsedPseudos[l].key,
				listener = pseudos[pseudo];
			if (listener != null) splits.push({
				event: parsed.tag,
				value: parsedPseudos[l].value,
				pseudo: pseudo,
				original: type,
				listener: listener
			});
		}
		return splits.length ? splits : null;
	};

	return {

		addEvent: function(type, fn, internal){
			var split = splitType(type);
			if (!split) return addEvent.call(this, type, fn, internal);

			var storage = storageOf(this),
				events = storage.retrieve(type, []),
				eventType = split[0].event,
				args = Array.slice(arguments, 2),
				stack = fn,
				self = this;

			split.each(function(item){
				var listener = item.listener,
					stackFn = stack;
				if (listener == false) eventType += ':' + item.pseudo + '(' + item.value + ')';
				else stack = function(){
					listener.call(self, item, stackFn, arguments, stack);
				};
			});

			events.include({type: eventType, event: fn, monitor: stack});
			storage.store(type, events);

			if (type != eventType) addEvent.apply(this, [type, fn].concat(args));
			return addEvent.apply(this, [eventType, stack].concat(args));
		},

		removeEvent: function(type, fn){
			var split = splitType(type);
			if (!split) return removeEvent.call(this, type, fn);

			var storage = storageOf(this),
				events = storage.retrieve(type);
			if (!events) return this;

			var args = Array.slice(arguments, 2);

			removeEvent.apply(this, [type, fn].concat(args));
			events.each(function(monitor, i){
				if (!fn || monitor.event == fn) removeEvent.apply(this, [monitor.type, monitor.monitor].concat(args));
				delete events[i];
			}, this);

			storage.store(type, events);
			return this;
		}

	};

};

var pseudos = {

	once: function(split, fn, args, monitor){
		fn.apply(this, args);
		this.removeEvent(split.event, monitor)
			.removeEvent(split.original, fn);
	},

	throttle: function(split, fn, args){
		if (!fn._throttled){
			fn.apply(this, args);
			fn._throttled = setTimeout(function(){
				fn._throttled = false;
			}, split.value || 250);
		}
	},

	pause: function(split, fn, args){
		clearTimeout(fn._pause);
		fn._pause = fn.delay(split.value || 250, this, args);
	}

};

Events.definePseudo = function(key, listener){
	pseudos[key] = listener;
	return this;
};

Events.lookupPseudo = function(key){
	return pseudos[key];
};

var proto = Events.prototype;
Events.implement(Events.Pseudos(pseudos, proto.addEvent, proto.removeEvent));

['Request', 'Fx'].each(function(klass){
	if (this[klass]) this[klass].implement(Events.prototype);
});

})();

/*
---

script: Drag.js

name: Drag

description: The base Drag Class. Can be used to drag and resize Elements using mouse events.

license: MIT-style license

authors:
  - Valerio Proietti
  - Tom Occhinno
  - Jan Kassens

requires:
  - Core/Events
  - Core/Options
  - Core/Element.Event
  - Core/Element.Style
  - Core/Element.Dimensions
  - MooTools.More

provides: [Drag]
...

*/
(function(){

var Drag = this.Drag = new Class({

	Implements: [Events, Options],

	options: {/*
		onBeforeStart: function(thisElement){},
		onStart: function(thisElement, event){},
		onSnap: function(thisElement){},
		onDrag: function(thisElement, event){},
		onCancel: function(thisElement){},
		onComplete: function(thisElement, event){},*/
		snap: 6,
		unit: 'px',
		grid: false,
		style: true,
		limit: false,
		handle: false,
		invert: false,
		unDraggableTags: ['button', 'input', 'a', 'textarea', 'select', 'option'],
		preventDefault: false,
		stopPropagation: false,
		compensateScroll: false,
		modifiers: {x: 'left', y: 'top'}
	},

	initialize: function(){
		var params = Array.link(arguments, {
			'options': Type.isObject,
			'element': function(obj){
				return obj != null;
			}
		});

		this.element = document.id(params.element);
		this.document = this.element.getDocument();
		this.setOptions(params.options || {});
		var htype = typeOf(this.options.handle);
		this.handles = ((htype == 'array' || htype == 'collection') ? $$(this.options.handle) : document.id(this.options.handle)) || this.element;
		this.mouse = {'now': {}, 'pos': {}};
		this.value = {'start': {}, 'now': {}};
		this.offsetParent = (function(el){
			var offsetParent = el.getOffsetParent();
			var isBody = !offsetParent || (/^(?:body|html)$/i).test(offsetParent.tagName);
			return isBody ? window : document.id(offsetParent);
		})(this.element);
		this.selection = 'selectstart' in document ? 'selectstart' : 'mousedown';

		this.compensateScroll = {start: {}, diff: {}, last: {}};

		if ('ondragstart' in document && !('FileReader' in window) && !Drag.ondragstartFixed){
			document.ondragstart = Function.convert(false);
			Drag.ondragstartFixed = true;
		}

		this.bound = {
			start: this.start.bind(this),
			check: this.check.bind(this),
			drag: this.drag.bind(this),
			stop: this.stop.bind(this),
			cancel: this.cancel.bind(this),
			eventStop: Function.convert(false),
			scrollListener: this.scrollListener.bind(this)
		};
		this.attach();
	},

	attach: function(){
		this.handles.addEvent('mousedown', this.bound.start);
		this.handles.addEvent('touchstart', this.bound.start);
		if (this.options.compensateScroll) this.offsetParent.addEvent('scroll', this.bound.scrollListener);
		return this;
	},

	detach: function(){
		this.handles.removeEvent('mousedown', this.bound.start);
		this.handles.removeEvent('touchstart', this.bound.start);
		if (this.options.compensateScroll) this.offsetParent.removeEvent('scroll', this.bound.scrollListener);
		return this;
	},

	scrollListener: function(){

		if (!this.mouse.start) return;
		var newScrollValue = this.offsetParent.getScroll();

		if (this.element.getStyle('position') == 'absolute'){
			var scrollDiff = this.sumValues(newScrollValue, this.compensateScroll.last, -1);
			this.mouse.now = this.sumValues(this.mouse.now, scrollDiff, 1);
		} else {
			this.compensateScroll.diff = this.sumValues(newScrollValue, this.compensateScroll.start, -1);
		}
		if (this.offsetParent != window) this.compensateScroll.diff = this.sumValues(this.compensateScroll.start, newScrollValue, -1);
		this.compensateScroll.last = newScrollValue;
		this.render(this.options);
	},

	sumValues: function(alpha, beta, op){
		var sum = {}, options = this.options;
		for (var z in options.modifiers){
			if (!options.modifiers[z]) continue;
			sum[z] = alpha[z] + beta[z] * op;
		}
		return sum;
	},

	start: function(event){
		if (this.options.unDraggableTags.contains(event.target.get('tag'))) return;

		var options = this.options;

		if (event.rightClick) return;

		if (options.preventDefault) event.preventDefault();
		if (options.stopPropagation) event.stopPropagation();
		this.compensateScroll.start = this.compensateScroll.last = this.offsetParent.getScroll();
		this.compensateScroll.diff = {x: 0, y: 0};
		this.mouse.start = event.page;
		this.fireEvent('beforeStart', this.element);

		var limit = options.limit;
		this.limit = {x: [], y: []};

		var z, coordinates, offsetParent = this.offsetParent == window ? null : this.offsetParent;
		for (z in options.modifiers){
			if (!options.modifiers[z]) continue;

			var style = this.element.getStyle(options.modifiers[z]);

			// Some browsers (IE and Opera) don't always return pixels.
			if (style && !style.match(/px$/)){
				if (!coordinates) coordinates = this.element.getCoordinates(offsetParent);
				style = coordinates[options.modifiers[z]];
			}

			if (options.style) this.value.now[z] = (style || 0).toInt();
			else this.value.now[z] = this.element[options.modifiers[z]];

			if (options.invert) this.value.now[z] *= -1;

			this.mouse.pos[z] = event.page[z] - this.value.now[z];

			if (limit && limit[z]){
				var i = 2;
				while (i--){
					var limitZI = limit[z][i];
					if (limitZI || limitZI === 0) this.limit[z][i] = (typeof limitZI == 'function') ? limitZI() : limitZI;
				}
			}
		}

		if (typeOf(this.options.grid) == 'number') this.options.grid = {
			x: this.options.grid,
			y: this.options.grid
		};

		var events = {
			mousemove: this.bound.check,
			mouseup: this.bound.cancel,
			touchmove: this.bound.check,
			touchend: this.bound.cancel
		};
		events[this.selection] = this.bound.eventStop;
		this.document.addEvents(events);
	},

	check: function(event){
		if (this.options.preventDefault) event.preventDefault();
		var distance = Math.round(Math.sqrt(Math.pow(event.page.x - this.mouse.start.x, 2) + Math.pow(event.page.y - this.mouse.start.y, 2)));
		if (distance > this.options.snap){
			this.cancel();
			this.document.addEvents({
				mousemove: this.bound.drag,
				mouseup: this.bound.stop,
				touchmove: this.bound.drag,
				touchend: this.bound.stop
			});
			this.fireEvent('start', [this.element, event]).fireEvent('snap', this.element);
		}
	},

	drag: function(event){
		var options = this.options;
		if (options.preventDefault) event.preventDefault();
		this.mouse.now = this.sumValues(event.page, this.compensateScroll.diff, -1);

		this.render(options);
		this.fireEvent('drag', [this.element, event]);
	},

	render: function(options){
		for (var z in options.modifiers){
			if (!options.modifiers[z]) continue;
			this.value.now[z] = this.mouse.now[z] - this.mouse.pos[z];

			if (options.invert) this.value.now[z] *= -1;
			if (options.limit && this.limit[z]){
				if ((this.limit[z][1] || this.limit[z][1] === 0) && (this.value.now[z] > this.limit[z][1])){
					this.value.now[z] = this.limit[z][1];
				} else if ((this.limit[z][0] || this.limit[z][0] === 0) && (this.value.now[z] < this.limit[z][0])){
					this.value.now[z] = this.limit[z][0];
				}
			}
			if (options.grid[z]) this.value.now[z] -= ((this.value.now[z] - (this.limit[z][0]||0)) % options.grid[z]);
			if (options.style) this.element.setStyle(options.modifiers[z], this.value.now[z] + options.unit);
			else this.element[options.modifiers[z]] = this.value.now[z];
		}
	},

	cancel: function(event){
		this.document.removeEvents({
			mousemove: this.bound.check,
			mouseup: this.bound.cancel,
			touchmove: this.bound.check,
			touchend: this.bound.cancel
		});
		if (event){
			this.document.removeEvent(this.selection, this.bound.eventStop);
			this.fireEvent('cancel', this.element);
		}
	},

	stop: function(event){
		var events = {
			mousemove: this.bound.drag,
			mouseup: this.bound.stop,
			touchmove: this.bound.drag,
			touchend: this.bound.stop
		};
		events[this.selection] = this.bound.eventStop;
		this.document.removeEvents(events);
		this.mouse.start = null;
		if (event) this.fireEvent('complete', [this.element, event]);
	}

});

})();


Element.implement({

	makeResizable: function(options){
		var drag = new Drag(this, Object.merge({
			modifiers: {
				x: 'width',
				y: 'height'
			}
		}, options));

		this.store('resizer', drag);
		return drag.addEvent('drag', function(){
			this.fireEvent('resize', drag);
		}.bind(this));
	}

});

/*
---

script: Drag.Move.js

name: Drag.Move

description: A Drag extension that provides support for the constraining of draggables to containers and droppables.

license: MIT-style license

authors:
  - Valerio Proietti
  - Tom Occhinno
  - Jan Kassens
  - Aaron Newton
  - Scott Kyle

requires:
  - Core/Element.Dimensions
  - Drag

provides: [Drag.Move]

...
*/

Drag.Move = new Class({

	Extends: Drag,

	options: {/*
		onEnter: function(thisElement, overed){},
		onLeave: function(thisElement, overed){},
		onDrop: function(thisElement, overed, event){},*/
		droppables: [],
		container: false,
		precalculate: false,
		includeMargins: true,
		checkDroppables: true
	},

	initialize: function(element, options){
		this.parent(element, options);
		element = this.element;

		this.droppables = $$(this.options.droppables);
		this.setContainer(this.options.container);

		if (this.options.style){
			if (this.options.modifiers.x == 'left' && this.options.modifiers.y == 'top'){
				var parent = element.getOffsetParent(),
					styles = element.getStyles('left', 'top');
				if (parent && (styles.left == 'auto' || styles.top == 'auto')){
					element.setPosition(element.getPosition(parent));
				}
			}

			if (element.getStyle('position') == 'static') element.setStyle('position', 'absolute');
		}

		this.addEvent('start', this.checkDroppables, true);
		this.overed = null;
	},

	setContainer: function(container){
		this.container = document.id(container);
		if (this.container && typeOf(this.container) != 'element'){
			this.container = document.id(this.container.getDocument().body);
		}
	},

	start: function(event){
		if (this.container) this.options.limit = this.calculateLimit();

		if (this.options.precalculate){
			this.positions = this.droppables.map(function(el){
				return el.getCoordinates();
			});
		}

		this.parent(event);
	},

	calculateLimit: function(){
		var element = this.element,
			container = this.container,

			offsetParent = document.id(element.getOffsetParent()) || document.body,
			containerCoordinates = container.getCoordinates(offsetParent),
			elementMargin = {},
			elementBorder = {},
			containerMargin = {},
			containerBorder = {},
			offsetParentPadding = {},
			offsetScroll = offsetParent.getScroll();

		['top', 'right', 'bottom', 'left'].each(function(pad){
			elementMargin[pad] = element.getStyle('margin-' + pad).toInt();
			elementBorder[pad] = element.getStyle('border-' + pad).toInt();
			containerMargin[pad] = container.getStyle('margin-' + pad).toInt();
			containerBorder[pad] = container.getStyle('border-' + pad).toInt();
			offsetParentPadding[pad] = offsetParent.getStyle('padding-' + pad).toInt();
		}, this);

		var width = element.offsetWidth + elementMargin.left + elementMargin.right,
			height = element.offsetHeight + elementMargin.top + elementMargin.bottom,
			left = 0 + offsetScroll.x,
			top = 0 + offsetScroll.y,
			right = containerCoordinates.right - containerBorder.right - width + offsetScroll.x,
			bottom = containerCoordinates.bottom - containerBorder.bottom - height + offsetScroll.y;

		if (this.options.includeMargins){
			left += elementMargin.left;
			top += elementMargin.top;
		} else {
			right += elementMargin.right;
			bottom += elementMargin.bottom;
		}

		if (element.getStyle('position') == 'relative'){
			var coords = element.getCoordinates(offsetParent);
			coords.left -= element.getStyle('left').toInt();
			coords.top -= element.getStyle('top').toInt();

			left -= coords.left;
			top -= coords.top;
			if (container.getStyle('position') != 'relative'){
				left += containerBorder.left;
				top += containerBorder.top;
			}
			right += elementMargin.left - coords.left;
			bottom += elementMargin.top - coords.top;

			if (container != offsetParent){
				left += containerMargin.left + offsetParentPadding.left;
				if (!offsetParentPadding.left && left < 0) left = 0;
				top += offsetParent == document.body ? 0 : containerMargin.top + offsetParentPadding.top;
				if (!offsetParentPadding.top && top < 0) top = 0;
			}
		} else {
			left -= elementMargin.left;
			top -= elementMargin.top;
			if (container != offsetParent){
				left += containerCoordinates.left + containerBorder.left;
				top += containerCoordinates.top + containerBorder.top;
			}
		}

		return {
			x: [left, right],
			y: [top, bottom]
		};
	},

	getDroppableCoordinates: function(element){
		var position = element.getCoordinates();
		if (element.getStyle('position') == 'fixed'){
			var scroll = window.getScroll();
			position.left += scroll.x;
			position.right += scroll.x;
			position.top += scroll.y;
			position.bottom += scroll.y;
		}
		return position;
	},

	checkDroppables: function(){
		var overed = this.droppables.filter(function(el, i){
			el = this.positions ? this.positions[i] : this.getDroppableCoordinates(el);
			var now = this.mouse.now;
			return (now.x > el.left && now.x < el.right && now.y < el.bottom && now.y > el.top);
		}, this).getLast();

		if (this.overed != overed){
			if (this.overed) this.fireEvent('leave', [this.element, this.overed]);
			if (overed) this.fireEvent('enter', [this.element, overed]);
			this.overed = overed;
		}
	},

	drag: function(event){
		this.parent(event);
		if (this.options.checkDroppables && this.droppables.length) this.checkDroppables();
	},

	stop: function(event){
		this.checkDroppables();
		this.fireEvent('drop', [this.element, this.overed, event]);
		this.overed = null;
		return this.parent(event);
	}

});

Element.implement({

	makeDraggable: function(options){
		var drag = new Drag.Move(this, options);
		this.store('dragger', drag);
		return drag;
	}

});

/*
---

script: Element.Measure.js

name: Element.Measure

description: Extends the Element native object to include methods useful in measuring dimensions.

credits: "Element.measure / .expose methods by Daniel Steigerwald License: MIT-style license. Copyright: Copyright (c) 2008 Daniel Steigerwald, daniel.steigerwald.cz"

license: MIT-style license

authors:
  - Aaron Newton

requires:
  - Core/Element.Style
  - Core/Element.Dimensions
  - MooTools.More

provides: [Element.Measure]

...
*/

(function(){

var getStylesList = function(styles, planes){
	var list = [];
	Object.each(planes, function(directions){
		Object.each(directions, function(edge){
			styles.each(function(style){
				list.push(style + '-' + edge + (style == 'border' ? '-width' : ''));
			});
		});
	});
	return list;
};

var calculateEdgeSize = function(edge, styles){
	var total = 0;
	Object.each(styles, function(value, style){
		if (style.test(edge)) total = total + value.toInt();
	});
	return total;
};

var isVisible = function(el){
	return !!(!el || el.offsetHeight || el.offsetWidth);
};


Element.implement({

	measure: function(fn){
		if (isVisible(this)) return fn.call(this);
		var parent = this.getParent(),
			toMeasure = [];
		while (!isVisible(parent) && parent != document.body){
			toMeasure.push(parent.expose());
			parent = parent.getParent();
		}
		var restore = this.expose(),
			result = fn.call(this);
		restore();
		toMeasure.each(function(restore){
			restore();
		});
		return result;
	},

	expose: function(){
		if (this.getStyle('display') != 'none') return function(){};
		var before = this.style.cssText;
		this.setStyles({
			display: 'block',
			position: 'absolute',
			visibility: 'hidden'
		});
		return function(){
			this.style.cssText = before;
		}.bind(this);
	},

	getDimensions: function(options){
		options = Object.merge({computeSize: false}, options);
		var dim = {x: 0, y: 0};

		var getSize = function(el, options){
			return (options.computeSize) ? el.getComputedSize(options) : el.getSize();
		};

		var parent = this.getParent('body');

		if (parent && this.getStyle('display') == 'none'){
			dim = this.measure(function(){
				return getSize(this, options);
			});
		} else if (parent){
			try { //safari sometimes crashes here, so catch it
				dim = getSize(this, options);
			} catch (e){}
		}

		return Object.append(dim, (dim.x || dim.x === 0) ? {
			width: dim.x,
			height: dim.y
		} : {
			x: dim.width,
			y: dim.height
		});
	},

	getComputedSize: function(options){
		

		options = Object.merge({
			styles: ['padding','border'],
			planes: {
				height: ['top','bottom'],
				width: ['left','right']
			},
			mode: 'both'
		}, options);

		var styles = {},
			size = {width: 0, height: 0},
			dimensions;

		if (options.mode == 'vertical'){
			delete size.width;
			delete options.planes.width;
		} else if (options.mode == 'horizontal'){
			delete size.height;
			delete options.planes.height;
		}

		getStylesList(options.styles, options.planes).each(function(style){
			styles[style] = this.getStyle(style).toInt();
		}, this);

		Object.each(options.planes, function(edges, plane){

			var capitalized = plane.capitalize(),
				style = this.getStyle(plane);

			if (style == 'auto' && !dimensions) dimensions = this.getDimensions();

			style = styles[plane] = (style == 'auto') ? dimensions[plane] : style.toInt();
			size['total' + capitalized] = style;

			edges.each(function(edge){
				var edgesize = calculateEdgeSize(edge, styles);
				size['computed' + edge.capitalize()] = edgesize;
				size['total' + capitalized] += edgesize;
			});

		}, this);

		return Object.append(size, styles);
	}

});

})();

/*
---

script: Slider.js

name: Slider

description: Class for creating horizontal and vertical slider controls.

license: MIT-style license

authors:
  - Valerio Proietti

requires:
  - Core/Element.Dimensions
  - Core/Number
  - Class.Binds
  - Drag
  - Element.Measure

provides: [Slider]

...
*/
(function(){

var Slider = this.Slider = new Class({

	Implements: [Events, Options],

	Binds: ['clickedElement', 'draggedKnob', 'scrolledElement'],

	options: {/*
		onTick: function(intPosition){},
		onMove: function(){},
		onChange: function(intStep){},
		onComplete: function(strStep){},*/
		onTick: function(position){
			this.setKnobPosition(position);
		},
		initialStep: 0,
		snap: false,
		offset: 0,
		range: false,
		wheel: false,
		steps: 100,
		mode: 'horizontal'
	},

	initialize: function(element, knob, options){
		this.setOptions(options);
		options = this.options;
		this.element = document.id(element);
		knob = this.knob = document.id(knob);
		this.previousChange = this.previousEnd = this.step = options.initialStep ? options.initialStep : options.range ? options.range[0] : 0;

		var limit = {},
			modifiers = {x: false, y: false};

		switch (options.mode){
			case 'vertical':
				this.axis = 'y';
				this.property = 'top';
				this.offset = 'offsetHeight';
				break;
			case 'horizontal':
				this.axis = 'x';
				this.property = 'left';
				this.offset = 'offsetWidth';
		}

		this.setSliderDimensions();
		this.setRange(options.range, null, true);

		if (knob.getStyle('position') == 'static') knob.setStyle('position', 'relative');
		knob.setStyle(this.property, -options.offset);
		modifiers[this.axis] = this.property;
		limit[this.axis] = [-options.offset, this.full - options.offset];

		var dragOptions = {
			snap: 0,
			limit: limit,
			modifiers: modifiers,
			onDrag: this.draggedKnob,
			onStart: this.draggedKnob,
			onBeforeStart: (function(){
				this.isDragging = true;
			}).bind(this),
			onCancel: function(){
				this.isDragging = false;
			}.bind(this),
			onComplete: function(){
				this.isDragging = false;
				this.draggedKnob();
				this.end();
			}.bind(this)
		};
		if (options.snap) this.setSnap(dragOptions);

		this.drag = new Drag(knob, dragOptions);
		if (options.initialStep != null) this.set(options.initialStep, true);
		this.attach();
	},

	attach: function(){
		this.element.addEvent('mousedown', this.clickedElement);
		if (this.options.wheel) this.element.addEvent('mousewheel', this.scrolledElement);
		this.drag.attach();
		return this;
	},

	detach: function(){
		this.element.removeEvent('mousedown', this.clickedElement)
			.removeEvent('mousewheel', this.scrolledElement);
		this.drag.detach();
		return this;
	},

	autosize: function(){
		this.setSliderDimensions()
			.setKnobPosition(this.toPosition(this.step));
		this.drag.options.limit[this.axis] = [-this.options.offset, this.full - this.options.offset];
		if (this.options.snap) this.setSnap();
		return this;
	},

	setSnap: function(options){
		if (!options) options = this.drag.options;
		options.grid = Math.ceil(this.stepWidth);
		options.limit[this.axis][1] = this.element[this.offset];
		return this;
	},

	setKnobPosition: function(position){
		if (this.options.snap) position = this.toPosition(this.step);
		this.knob.setStyle(this.property, position);
		return this;
	},

	setSliderDimensions: function(){
		this.full = this.element.measure(function(){
			this.half = this.knob[this.offset] / 2;
			return this.element[this.offset] - this.knob[this.offset] + (this.options.offset * 2);
		}.bind(this));
		return this;
	},

	set: function(step, silently){
		if (!((this.range > 0) ^ (step < this.min))) step = this.min;
		if (!((this.range > 0) ^ (step > this.max))) step = this.max;

		this.step = (step).round(this.modulus.decimalLength);
		if (silently) this.checkStep().setKnobPosition(this.toPosition(this.step));
		else this.checkStep().fireEvent('tick', this.toPosition(this.step)).fireEvent('move').end();
		return this;
	},

	setRange: function(range, pos, silently){
		this.min = Array.pick([range[0], 0]);
		this.max = Array.pick([range[1], this.options.steps]);
		this.range = this.max - this.min;
		this.steps = this.options.steps || this.full;
		var stepSize = this.stepSize = Math.abs(this.range) / this.steps;
		this.stepWidth = this.stepSize * this.full / Math.abs(this.range);
		this.setModulus();

		if (range) this.set(Array.pick([pos, this.step]).limit(this.min,this.max), silently);
		return this;
	},

	setModulus: function(){
		var decimals = ((this.stepSize + '').split('.')[1] || []).length,
			modulus = 1 + '';
		while (decimals--) modulus += '0';
		this.modulus = {multiplier: (modulus).toInt(10), decimalLength: modulus.length - 1};
	},

	clickedElement: function(event){
		if (this.isDragging || event.target == this.knob) return;

		var dir = this.range < 0 ? -1 : 1,
			position = event.page[this.axis] - this.element.getPosition()[this.axis] - this.half;

		position = position.limit(-this.options.offset, this.full - this.options.offset);

		this.step = (this.min + dir * this.toStep(position)).round(this.modulus.decimalLength);

		this.checkStep()
			.fireEvent('tick', position)
			.fireEvent('move')
			.end();
	},

	scrolledElement: function(event){
		var mode = (this.options.mode == 'horizontal') ? (event.wheel < 0) : (event.wheel > 0);
		this.set(this.step + (mode ? -1 : 1) * this.stepSize);
		event.stop();
	},

	draggedKnob: function(){
		var dir = this.range < 0 ? -1 : 1,
			position = this.drag.value.now[this.axis];

		position = position.limit(-this.options.offset, this.full -this.options.offset);

		this.step = (this.min + dir * this.toStep(position)).round(this.modulus.decimalLength);
		this.checkStep();
		this.fireEvent('move');
	},

	checkStep: function(){
		var step = this.step;
		if (this.previousChange != step){
			this.previousChange = step;
			this.fireEvent('change', step);
		}
		return this;
	},

	end: function(){
		var step = this.step;
		if (this.previousEnd !== step){
			this.previousEnd = step;
			this.fireEvent('complete', step + '');
		}
		return this;
	},

	toStep: function(position){
		var step = (position + this.options.offset) * this.stepSize / this.full * this.steps;
		return this.options.steps ? (step - (step * this.modulus.multiplier) % (this.stepSize * this.modulus.multiplier) / this.modulus.multiplier).round(this.modulus.decimalLength) : step;
	},

	toPosition: function(step){
		return (this.full * Math.abs(this.min - step)) / (this.steps * this.stepSize) - this.options.offset || 0;
	}

});

})();


/*
---

script: Sortables.js

name: Sortables

description: Class for creating a drag and drop sorting interface for lists of items.

license: MIT-style license

authors:
  - Tom Occhino

requires:
  - Core/Fx.Morph
  - Drag.Move

provides: [Sortables]

...
*/
(function(){

var Sortables = this.Sortables = new Class({

	Implements: [Events, Options],

	options: {/*
		onSort: function(element, clone){},
		onStart: function(element, clone){},
		onComplete: function(element){},*/
		opacity: 1,
		clone: false,
		revert: false,
		handle: false,
		dragOptions: {},
		unDraggableTags: ['button', 'input', 'a', 'textarea', 'select', 'option']
	},

	initialize: function(lists, options){
		this.setOptions(options);

		this.elements = [];
		this.lists = [];
		this.idle = true;

		this.addLists($$(document.id(lists) || lists));

		if (!this.options.clone) this.options.revert = false;
		if (this.options.revert) this.effect = new Fx.Morph(null, Object.merge({
			duration: 250,
			link: 'cancel'
		}, this.options.revert));
	},

	attach: function(){
		this.addLists(this.lists);
		return this;
	},

	detach: function(){
		this.lists = this.removeLists(this.lists);
		return this;
	},

	addItems: function(){
		Array.flatten(arguments).each(function(element){
			this.elements.push(element);
			var start = element.retrieve('sortables:start', function(event){
				this.start.call(this, event, element);
			}.bind(this));
			(this.options.handle ? element.getElement(this.options.handle) || element : element).addEvent('mousedown', start);
		}, this);
		return this;
	},

	addLists: function(){
		Array.flatten(arguments).each(function(list){
			this.lists.include(list);
			this.addItems(list.getChildren());
		}, this);
		return this;
	},

	removeItems: function(){
		return $$(Array.flatten(arguments).map(function(element){
			this.elements.erase(element);
			var start = element.retrieve('sortables:start');
			(this.options.handle ? element.getElement(this.options.handle) || element : element).removeEvent('mousedown', start);

			return element;
		}, this));
	},

	removeLists: function(){
		return $$(Array.flatten(arguments).map(function(list){
			this.lists.erase(list);
			this.removeItems(list.getChildren());

			return list;
		}, this));
	},

	getDroppableCoordinates: function(element){
		var offsetParent = element.getOffsetParent();
		var position = element.getPosition(offsetParent);
		var scroll = {
			w: window.getScroll(),
			offsetParent: offsetParent.getScroll()
		};
		position.x += scroll.offsetParent.x;
		position.y += scroll.offsetParent.y;

		if (offsetParent.getStyle('position') == 'fixed'){
			position.x -= scroll.w.x;
			position.y -= scroll.w.y;
		}

		return position;
	},

	getClone: function(event, element){
		if (!this.options.clone) return new Element(element.tagName).inject(document.body);
		if (typeOf(this.options.clone) == 'function') return this.options.clone.call(this, event, element, this.list);
		var clone = element.clone(true).setStyles({
			margin: 0,
			position: 'absolute',
			visibility: 'hidden',
			width: element.getStyle('width')
		}).addEvent('mousedown', function(event){
			element.fireEvent('mousedown', event);
		});
		//prevent the duplicated radio inputs from unchecking the real one
		if (clone.get('html').test('radio')){
			clone.getElements('input[type=radio]').each(function(input, i){
				input.set('name', 'clone_' + i);
				if (input.get('checked')) element.getElements('input[type=radio]')[i].set('checked', true);
			});
		}

		return clone.inject(this.list).setPosition(this.getDroppableCoordinates(this.element));
	},

	getDroppables: function(){
		var droppables = this.list.getChildren().erase(this.clone).erase(this.element);
		if (!this.options.constrain) droppables.append(this.lists).erase(this.list);
		return droppables;
	},

	insert: function(dragging, element){
		var where = 'inside';
		if (this.lists.contains(element)){
			this.list = element;
			this.drag.droppables = this.getDroppables();
		} else {
			where = this.element.getAllPrevious().contains(element) ? 'before' : 'after';
		}
		this.element.inject(element, where);
		this.fireEvent('sort', [this.element, this.clone]);
	},

	start: function(event, element){
		if (
			!this.idle ||
			event.rightClick ||
			(!this.options.handle && this.options.unDraggableTags.contains(event.target.get('tag')))
		) return;

		this.idle = false;
		this.element = element;
		this.opacity = element.getStyle('opacity');
		this.list = element.getParent();
		this.clone = this.getClone(event, element);

		this.drag = new Drag.Move(this.clone, Object.merge({
			
			droppables: this.getDroppables()
		}, this.options.dragOptions)).addEvents({
			onSnap: function(){
				event.stop();
				this.clone.setStyle('visibility', 'visible');
				this.element.setStyle('opacity', this.options.opacity || 0);
				this.fireEvent('start', [this.element, this.clone]);
			}.bind(this),
			onEnter: this.insert.bind(this),
			onCancel: this.end.bind(this),
			onComplete: this.end.bind(this)
		});

		this.clone.inject(this.element, 'before');
		this.drag.start(event);
	},

	end: function(){
		this.drag.detach();
		this.element.setStyle('opacity', this.opacity);
		var self = this;
		if (this.effect){
			var dim = this.element.getStyles('width', 'height'),
				clone = this.clone,
				pos = clone.computePosition(this.getDroppableCoordinates(clone));

			var destroy = function(){
				this.removeEvent('cancel', destroy);
				clone.destroy();
				self.reset();
			};

			this.effect.element = clone;
			this.effect.start({
				top: pos.top,
				left: pos.left,
				width: dim.width,
				height: dim.height,
				opacity: 0.25
			}).addEvent('cancel', destroy).chain(destroy);
		} else {
			this.clone.destroy();
			self.reset();
		}

	},

	reset: function(){
		this.idle = true;
		this.fireEvent('complete', this.element);
	},

	serialize: function(){
		var params = Array.link(arguments, {
			modifier: Type.isFunction,
			index: function(obj){
				return obj != null;
			}
		});
		var serial = this.lists.map(function(list){
			return list.getChildren().map(params.modifier || function(element){
				return element.get('id');
			}, this);
		}, this);

		var index = params.index;
		if (this.lists.length == 1) index = 0;
		return (index || index === 0) && index >= 0 && index < this.lists.length ? serial[index] : serial;
	}

});

})();

/*
---

name: Element.Event.Pseudos

description: Adds the functionality to add pseudo events for Elements

license: MIT-style license

authors:
  - Arian Stolwijk

requires: [Core/Element.Event, Core/Element.Delegation, Events.Pseudos]

provides: [Element.Event.Pseudos, Element.Delegation.Pseudo]

...
*/

(function(){

var pseudos = {relay: false},
	copyFromEvents = ['once', 'throttle', 'pause'],
	count = copyFromEvents.length;

while (count--) pseudos[copyFromEvents[count]] = Events.lookupPseudo(copyFromEvents[count]);

DOMEvent.definePseudo = function(key, listener){
	pseudos[key] = listener;
	return this;
};

var proto = Element.prototype;
[Element, Window, Document].invoke('implement', Events.Pseudos(pseudos, proto.addEvent, proto.removeEvent));

})();

/*
---

name: Element.Event.Pseudos.Keys

description: Adds functionality fire events if certain keycombinations are pressed

license: MIT-style license

authors:
  - Arian Stolwijk

requires: [Element.Event.Pseudos]

provides: [Element.Event.Pseudos.Keys]

...
*/

(function(){

var keysStoreKey = '$moo:keys-pressed',
	keysKeyupStoreKey = '$moo:keys-keyup';


DOMEvent.definePseudo('keys', function(split, fn, args){

	var event = args[0],
		keys = [],
		pressed = this.retrieve(keysStoreKey, []),
		value = split.value;

	if (value != '+') keys.append(value.replace('++', function(){
		keys.push('+'); // shift++ and shift+++a
		return '';
	}).split('+'));
	else keys = ['+'];

	pressed.include(event.key);

	if (keys.every(function(key){
		return pressed.contains(key);
	})) fn.apply(this, args);

	this.store(keysStoreKey, pressed);

	if (!this.retrieve(keysKeyupStoreKey)){
		var keyup = function(event){
			(function(){
				pressed = this.retrieve(keysStoreKey, []).erase(event.key);
				this.store(keysStoreKey, pressed);
			}).delay(0, this); // Fix for IE
		};
		this.store(keysKeyupStoreKey, keyup).addEvent('keyup', keyup);
	}

});

DOMEvent.defineKeys({
	'16': 'shift',
	'17': 'control',
	'18': 'alt',
	'20': 'capslock',
	'33': 'pageup',
	'34': 'pagedown',
	'35': 'end',
	'36': 'home',
	'144': 'numlock',
	'145': 'scrolllock',
	'186': ';',
	'187': '=',
	'188': ',',
	'190': '.',
	'191': '/',
	'192': '`',
	'219': '[',
	'220': '\\',
	'221': ']',
	'222': "'",
	'107': '+',
	'109': '-', // subtract
	'189': '-'  // dash
});

})();

/*
---

script: String.Extras.js

name: String.Extras

description: Extends the String native object to include methods useful in managing various kinds of strings (query strings, urls, html, etc).

license: MIT-style license

authors:
  - Aaron Newton
  - Guillermo Rauch
  - Christopher Pitt

requires:
  - Core/String
  - Core/Array
  - MooTools.More

provides: [String.Extras]

...
*/

(function(){

var special = {
		'a': /[Ã Ã¡Ã¢Ã£Ã¤Ã¥ÄƒÄ…]/g,
		'A': /[Ã€ÃÃ‚ÃƒÃ„Ã…Ä‚Ä„]/g,
		'c': /[Ä‡ÄÃ§]/g,
		'C': /[Ä†ÄŒÃ‡]/g,
		'd': /[ÄÄ‘]/g,
		'D': /[ÄŽÃ]/g,
		'e': /[Ã¨Ã©ÃªÃ«Ä›Ä™]/g,
		'E': /[ÃˆÃ‰ÃŠÃ‹ÄšÄ˜]/g,
		'g': /[ÄŸ]/g,
		'G': /[Äž]/g,
		'i': /[Ã¬Ã­Ã®Ã¯]/g,
		'I': /[ÃŒÃÃŽÃ]/g,
		'l': /[ÄºÄ¾Å‚]/g,
		'L': /[Ä¹Ä½Å]/g,
		'n': /[Ã±ÅˆÅ„]/g,
		'N': /[Ã‘Å‡Åƒ]/g,
		'o': /[Ã²Ã³Ã´ÃµÃ¶Ã¸Å‘]/g,
		'O': /[Ã’Ã“Ã”Ã•Ã–Ã˜]/g,
		'r': /[Å™Å•]/g,
		'R': /[Å˜Å”]/g,
		's': /[Å¡Å¡ÅŸ]/g,
		'S': /[Å ÅžÅš]/g,
		't': /[Å¥Å£]/g,
		'T': /[Å¤Å¢]/g,
		'u': /[Ã¹ÃºÃ»Å¯Ã¼Âµ]/g,
		'U': /[Ã™ÃšÃ›Å®Ãœ]/g,
		'y': /[Ã¿Ã½]/g,
		'Y': /[Å¸Ã]/g,
		'z': /[Å¾ÅºÅ¼]/g,
		'Z': /[Å½Å¹Å»]/g,
		'th': /[Ã¾]/g,
		'TH': /[Ãž]/g,
		'dh': /[Ã°]/g,
		'DH': /[Ã]/g,
		'ss': /[ÃŸ]/g,
		'oe': /[Å“]/g,
		'OE': /[Å’]/g,
		'ae': /[Ã¦]/g,
		'AE': /[Ã†]/g
	},

	tidy = {
		' ': /[\xa0\u2002\u2003\u2009]/g,
		'*': /[\xb7]/g,
		'\'': /[\u2018\u2019]/g,
		'"': /[\u201c\u201d]/g,
		'...': /[\u2026]/g,
		'-': /[\u2013]/g,
	//	'--': /[\u2014]/g,
		'&raquo;': /[\uFFFD]/g
	},

	conversions = {
		ms: 1,
		s: 1000,
		m: 6e4,
		h: 36e5
	},

	findUnits = /(\d*.?\d+)([msh]+)/;

var walk = function(string, replacements){
	var result = string, key;
	for (key in replacements) result = result.replace(replacements[key], key);
	return result;
};

var getRegexForTag = function(tag, contents){
	tag = tag || (contents ? '' : '\\w+');
	var regstr = contents ? '<' + tag + '(?!\\w)[^>]*>([\\s\\S]*?)<\/' + tag + '(?!\\w)>' : '<\/?' + tag + '\/?>|<' + tag + '[\\s|\/][^>]*>';
	return new RegExp(regstr, 'gi');
};

String.implement({

	standardize: function(){
		return walk(this, special);
	},

	repeat: function(times){
		return new Array(times + 1).join(this);
	},

	pad: function(length, str, direction){
		if (this.length >= length) return this;

		var pad = (str == null ? ' ' : '' + str)
			.repeat(length - this.length)
			.substr(0, length - this.length);

		if (!direction || direction == 'right') return this + pad;
		if (direction == 'left') return pad + this;

		return pad.substr(0, (pad.length / 2).floor()) + this + pad.substr(0, (pad.length / 2).ceil());
	},

	getTags: function(tag, contents){
		return this.match(getRegexForTag(tag, contents)) || [];
	},

	stripTags: function(tag, contents){
		return this.replace(getRegexForTag(tag, contents), '');
	},

	tidy: function(){
		return walk(this, tidy);
	},

	truncate: function(max, trail, atChar){
		var string = this;
		if (trail == null && arguments.length == 1) trail = 'â€¦';
		if (string.length > max){
			string = string.substring(0, max);
			if (atChar){
				var index = string.lastIndexOf(atChar);
				if (index != -1) string = string.substr(0, index);
			}
			if (trail) string += trail;
		}
		return string;
	},

	ms: function(){
		// "Borrowed" from https://gist.github.com/1503944
		var units = findUnits.exec(this);
		if (units == null) return Number(this);
		return Number(units[1]) * conversions[units[2]];
	}

});

})();

/*
---

script: Element.Forms.js

name: Element.Forms

description: Extends the Element native object to include methods useful in managing inputs.

license: MIT-style license

authors:
  - Aaron Newton

requires:
  - Core/Element
  - String.Extras
  - MooTools.More

provides: [Element.Forms]

...
*/

Element.implement({

	tidy: function(){
		this.set('value', this.get('value').tidy());
	},

	getTextInRange: function(start, end){
		return this.get('value').substring(start, end);
	},

	getSelectedText: function(){
		if (this.setSelectionRange) return this.getTextInRange(this.getSelectionStart(), this.getSelectionEnd());
		return document.selection.createRange().text;
	},

	getSelectedRange: function(){
		if (this.selectionStart != null){
			return {
				start: this.selectionStart,
				end: this.selectionEnd
			};
		}

		var pos = {
			start: 0,
			end: 0
		};
		var range = this.getDocument().selection.createRange();
		if (!range || range.parentElement() != this) return pos;
		var duplicate = range.duplicate();

		if (this.type == 'text'){
			pos.start = 0 - duplicate.moveStart('character', -100000);
			pos.end = pos.start + range.text.length;
		} else {
			var value = this.get('value');
			var offset = value.length;
			duplicate.moveToElementText(this);
			duplicate.setEndPoint('StartToEnd', range);
			if (duplicate.text.length) offset -= value.match(/[\n\r]*$/)[0].length;
			pos.end = offset - duplicate.text.length;
			duplicate.setEndPoint('StartToStart', range);
			pos.start = offset - duplicate.text.length;
		}
		return pos;
	},

	getSelectionStart: function(){
		return this.getSelectedRange().start;
	},

	getSelectionEnd: function(){
		return this.getSelectedRange().end;
	},

	setCaretPosition: function(pos){
		if (pos == 'end') pos = this.get('value').length;
		this.selectRange(pos, pos);
		return this;
	},

	getCaretPosition: function(){
		return this.getSelectedRange().start;
	},

	selectRange: function(start, end){
		if (this.setSelectionRange){
			this.focus();
			this.setSelectionRange(start, end);
		} else {
			var value = this.get('value');
			var diff = value.substr(start, end - start).replace(/\r/g, '').length;
			start = value.substr(0, start).replace(/\r/g, '').length;
			var range = this.createTextRange();
			range.collapse(true);
			range.moveEnd('character', start + diff);
			range.moveStart('character', start);
			range.select();
		}
		return this;
	},

	insertAtCursor: function(value, select){
		var pos = this.getSelectedRange();
		var text = this.get('value');
		this.set('value', text.substring(0, pos.start) + value + text.substring(pos.end, text.length));
		if (select !== false) this.selectRange(pos.start, pos.start + value.length);
		else this.setCaretPosition(pos.start + value.length);
		return this;
	},

	insertAroundCursor: function(options, select){
		options = Object.append({
			before: '',
			defaultMiddle: '',
			after: ''
		}, options);

		var value = this.getSelectedText() || options.defaultMiddle;
		var pos = this.getSelectedRange();
		var text = this.get('value');

		if (pos.start == pos.end){
			this.set('value', text.substring(0, pos.start) + options.before + value + options.after + text.substring(pos.end, text.length));
			this.selectRange(pos.start + options.before.length, pos.end + options.before.length + value.length);
		} else {
			var current = text.substring(pos.start, pos.end);
			this.set('value', text.substring(0, pos.start) + options.before + current + options.after + text.substring(pos.end, text.length));
			var selStart = pos.start + options.before.length;
			if (select !== false) this.selectRange(selStart, selStart + current.length);
			else this.setCaretPosition(selStart + text.length);
		}
		return this;
	}

});

/*
---

script: Element.Pin.js

name: Element.Pin

description: Extends the Element native object to include the pin method useful for fixed positioning for elements.

license: MIT-style license

authors:
  - Aaron Newton

requires:
  - Core/Element.Event
  - Core/Element.Dimensions
  - Core/Element.Style
  - MooTools.More

provides: [Element.Pin]

...
*/

(function(){
var supportsPositionFixed = false,
	supportTested = false;

var testPositionFixed = function(){
	var test = new Element('div').setStyles({
		position: 'fixed',
		top: 0,
		right: 0
	}).inject(document.body);
	supportsPositionFixed = (test.offsetTop === 0);
	test.dispose();
	supportTested = true;
};

Element.implement({

	pin: function(enable, forceScroll){
		if (!supportTested) testPositionFixed();
		if (this.getStyle('display') == 'none') return this;

		var pinnedPosition,
			scroll = window.getScroll(),
			parent,
			scrollFixer;

		if (enable !== false){
			pinnedPosition = this.getPosition();
			if (!this.retrieve('pin:_pinned')){
				var currentPosition = {
					top: pinnedPosition.y - scroll.y,
					left: pinnedPosition.x - scroll.x,
					margin: '0px',
					padding: '0px'
				};

				if (supportsPositionFixed && !forceScroll){
					this.setStyle('position', 'fixed').setStyles(currentPosition);
				} else {

					parent = this.getOffsetParent();
					var position = this.getPosition(parent),
						styles = this.getStyles('left', 'top');

					if (parent && styles.left == 'auto' || styles.top == 'auto') this.setPosition(position);
					if (this.getStyle('position') == 'static') this.setStyle('position', 'absolute');

					position = {
						x: styles.left.toInt() - scroll.x,
						y: styles.top.toInt() - scroll.y
					};

					scrollFixer = function(){
						if (!this.retrieve('pin:_pinned')) return;
						var scroll = window.getScroll();
						this.setStyles({
							left: position.x + scroll.x,
							top: position.y + scroll.y
						});
					}.bind(this);

					this.store('pin:_scrollFixer', scrollFixer);
					window.addEvent('scroll', scrollFixer);
				}
				this.store('pin:_pinned', true);
			}

		} else {
			if (!this.retrieve('pin:_pinned')) return this;

			parent = this.getParent();
			var offsetParent = (parent.getComputedStyle('position') != 'static' ? parent : parent.getOffsetParent());

			pinnedPosition = this.getPosition();

			this.store('pin:_pinned', false);
			scrollFixer = this.retrieve('pin:_scrollFixer');
			if (!scrollFixer){
				this.setStyles({
					position: 'absolute',
					top: pinnedPosition.y + scroll.y,
					left: pinnedPosition.x + scroll.x
				});
			} else {
				this.store('pin:_scrollFixer', null);
				window.removeEvent('scroll', scrollFixer);
			}
			this.removeClass('isPinned');
		}
		return this;
	},

	unpin: function(){
		return this.pin(false);
	},

	togglePin: function(){
		return this.pin(!this.retrieve('pin:_pinned'));
	}

});



})();

/*
---

script: Element.Position.js

name: Element.Position

description: Extends the Element native object to include methods useful positioning elements relative to others.

license: MIT-style license

authors:
  - Aaron Newton
  - Jacob Thornton

requires:
  - Core/Options
  - Core/Element.Dimensions
  - Element.Measure

provides: [Element.Position]

...
*/

(function(original){

var local = Element.Position = {

	options: {/*
		edge: false,
		returnPos: false,
		minimum: {x: 0, y: 0},
		maximum: {x: 0, y: 0},
		relFixedPosition: false,
		ignoreMargins: false,
		ignoreScroll: false,
		allowNegative: false,*/
		relativeTo: document.body,
		position: {
			x: 'center', //left, center, right
			y: 'center' //top, center, bottom
		},
		offset: {x: 0, y: 0}
	},

	getOptions: function(element, options){
		options = Object.merge({}, local.options, options);
		local.setPositionOption(options);
		local.setEdgeOption(options);
		local.setOffsetOption(element, options);
		local.setDimensionsOption(element, options);
		return options;
	},

	setPositionOption: function(options){
		options.position = local.getCoordinateFromValue(options.position);
	},

	setEdgeOption: function(options){
		var edgeOption = local.getCoordinateFromValue(options.edge);
		options.edge = edgeOption ? edgeOption :
			(options.position.x == 'center' && options.position.y == 'center') ? {x: 'center', y: 'center'} :
			{x: 'left', y: 'top'};
	},

	setOffsetOption: function(element, options){
		var parentOffset = {x: 0, y: 0};
		var parentScroll = {x: 0, y: 0};
		var offsetParent = element.measure(function(){
			return document.id(this.getOffsetParent());
		});

		if (!offsetParent || offsetParent == element.getDocument().body) return;

		parentScroll = offsetParent.getScroll();
		parentOffset = offsetParent.measure(function(){
			var position = this.getPosition();
			if (this.getStyle('position') == 'fixed'){
				var scroll = window.getScroll();
				position.x += scroll.x;
				position.y += scroll.y;
			}
			return position;
		});

		options.offset = {
			parentPositioned: offsetParent != document.id(options.relativeTo),
			x: options.offset.x - parentOffset.x + parentScroll.x,
			y: options.offset.y - parentOffset.y + parentScroll.y
		};
	},

	setDimensionsOption: function(element, options){
		options.dimensions = element.getDimensions({
			computeSize: true,
			styles: ['padding', 'border', 'margin']
		});
	},

	getPosition: function(element, options){
		var position = {};
		options = local.getOptions(element, options);
		var relativeTo = document.id(options.relativeTo) || document.body;

		local.setPositionCoordinates(options, position, relativeTo);
		if (options.edge) local.toEdge(position, options);

		var offset = options.offset;
		position.left = ((position.x >= 0 || offset.parentPositioned || options.allowNegative) ? position.x : 0).toInt();
		position.top = ((position.y >= 0 || offset.parentPositioned || options.allowNegative) ? position.y : 0).toInt();

		local.toMinMax(position, options);

		if (options.relFixedPosition || relativeTo.getStyle('position') == 'fixed') local.toRelFixedPosition(relativeTo, position);
		if (options.ignoreScroll) local.toIgnoreScroll(relativeTo, position);
		if (options.ignoreMargins) local.toIgnoreMargins(position, options);

		position.left = Math.ceil(position.left);
		position.top = Math.ceil(position.top);
		delete position.x;
		delete position.y;

		return position;
	},

	setPositionCoordinates: function(options, position, relativeTo){
		var offsetY = options.offset.y,
			offsetX = options.offset.x,
			calc = (relativeTo == document.body) ? window.getScroll() : relativeTo.getPosition(),
			top = calc.y,
			left = calc.x,
			winSize = window.getSize();

		switch (options.position.x){
			case 'left': position.x = left + offsetX; break;
			case 'right': position.x = left + offsetX + relativeTo.offsetWidth; break;
			default: position.x = left + ((relativeTo == document.body ? winSize.x : relativeTo.offsetWidth) / 2) + offsetX; break;
		}

		switch (options.position.y){
			case 'top': position.y = top + offsetY; break;
			case 'bottom': position.y = top + offsetY + relativeTo.offsetHeight; break;
			default: position.y = top + ((relativeTo == document.body ? winSize.y : relativeTo.offsetHeight) / 2) + offsetY; break;
		}
	},

	toMinMax: function(position, options){
		var xy = {left: 'x', top: 'y'}, value;
		['minimum', 'maximum'].each(function(minmax){
			['left', 'top'].each(function(lr){
				value = options[minmax] ? options[minmax][xy[lr]] : null;
				if (value != null && ((minmax == 'minimum') ? position[lr] < value : position[lr] > value)) position[lr] = value;
			});
		});
	},

	toRelFixedPosition: function(relativeTo, position){
		var winScroll = window.getScroll();
		position.top += winScroll.y;
		position.left += winScroll.x;
	},

	toIgnoreScroll: function(relativeTo, position){
		var relScroll = relativeTo.getScroll();
		position.top -= relScroll.y;
		position.left -= relScroll.x;
	},

	toIgnoreMargins: function(position, options){
		position.left += options.edge.x == 'right'
			? options.dimensions['margin-right']
			: (options.edge.x != 'center'
				? -options.dimensions['margin-left']
				: -options.dimensions['margin-left'] + ((options.dimensions['margin-right'] + options.dimensions['margin-left']) / 2));

		position.top += options.edge.y == 'bottom'
			? options.dimensions['margin-bottom']
			: (options.edge.y != 'center'
				? -options.dimensions['margin-top']
				: -options.dimensions['margin-top'] + ((options.dimensions['margin-bottom'] + options.dimensions['margin-top']) / 2));
	},

	toEdge: function(position, options){
		var edgeOffset = {},
			dimensions = options.dimensions,
			edge = options.edge;

		switch (edge.x){
			case 'left': edgeOffset.x = 0; break;
			case 'right': edgeOffset.x = -dimensions.x - dimensions.computedRight - dimensions.computedLeft; break;
			// center
			default: edgeOffset.x = -(Math.round(dimensions.totalWidth / 2)); break;
		}

		switch (edge.y){
			case 'top': edgeOffset.y = 0; break;
			case 'bottom': edgeOffset.y = -dimensions.y - dimensions.computedTop - dimensions.computedBottom; break;
			// center
			default: edgeOffset.y = -(Math.round(dimensions.totalHeight / 2)); break;
		}

		position.x += edgeOffset.x;
		position.y += edgeOffset.y;
	},

	getCoordinateFromValue: function(option){
		if (typeOf(option) != 'string') return option;
		option = option.toLowerCase();

		return {
			x: option.test('left') ? 'left'
				: (option.test('right') ? 'right' : 'center'),
			y: option.test(/upper|top/) ? 'top'
				: (option.test('bottom') ? 'bottom' : 'center')
		};
	}

};

Element.implement({

	position: function(options){
		if (options && (options.x != null || options.y != null)){
			return (original ? original.apply(this, arguments) : this);
		}
		var position = this.setStyle('position', 'absolute').calculatePosition(options);
		return (options && options.returnPos) ? position : this.setStyles(position);
	},

	calculatePosition: function(options){
		return local.getPosition(this, options);
	}

});

})(Element.prototype.position);

/*
---

script: Element.Shortcuts.js

name: Element.Shortcuts

description: Extends the Element native object to include some shortcut methods.

license: MIT-style license

authors:
  - Aaron Newton

requires:
  - Core/Element.Style
  - MooTools.More

provides: [Element.Shortcuts]

...
*/

Element.implement({

	isDisplayed: function(){
		return this.getStyle('display') != 'none';
	},

	isVisible: function(){
		var w = this.offsetWidth,
			h = this.offsetHeight;
		return (w == 0 && h == 0) ? false : (w > 0 && h > 0) ? true : this.style.display != 'none';
	},

	toggle: function(){
		return this[this.isDisplayed() ? 'hide' : 'show']();
	},

	hide: function(){
		var d;
		try {
			//IE fails here if the element is not in the dom
			d = this.getStyle('display');
		} catch (e){}
		if (d == 'none') return this;
		return this.store('element:_originalDisplay', d || '').setStyle('display', 'none');
	},

	show: function(display){
		if (!display && this.isDisplayed()) return this;
		display = display || this.retrieve('element:_originalDisplay') || 'block';
		return this.setStyle('display', (display == 'none') ? 'block' : display);
	},

	swapClass: function(remove, add){
		return this.removeClass(remove).addClass(add);
	}

});

Document.implement({

	clearSelection: function(){
		if (window.getSelection){
			var selection = window.getSelection();
			if (selection && selection.removeAllRanges) selection.removeAllRanges();
		} else if (document.selection && document.selection.empty){
			try {
				//IE fails here if selected element is not in dom
				document.selection.empty();
			} catch (e){}
		}
	}

});

/*
---

script: Elements.From.js

name: Elements.From

description: Returns a collection of elements from a string of html.

license: MIT-style license

authors:
  - Aaron Newton

requires:
  - Core/String
  - Core/Element
  - MooTools.More

provides: [Elements.from, Elements.From]

...
*/

Elements.from = function(text, excludeScripts){
	if (excludeScripts || excludeScripts == null) text = text.stripScripts();

	var container, match = text.match(/^\s*(?:<!--.*?-->\s*)*<(t[dhr]|tbody|tfoot|thead)/i);

	if (match){
		container = new Element('table');
		var tag = match[1].toLowerCase();
		if (['td', 'th', 'tr'].contains(tag)){
			container = new Element('tbody').inject(container);
			if (tag != 'tr') container = new Element('tr').inject(container);
		}
	}

	return (container || new Element('div')).set('html', text).getChildren();
};

/*
---

script: IframeShim.js

name: IframeShim

description: Defines IframeShim, a class for obscuring select lists and flash objects in IE.

license: MIT-style license

authors:
  - Aaron Newton

requires:
  - Core/Element.Event
  - Core/Element.Style
  - Core/Options
  - Core/Events
  - Element.Position
  - Class.Occlude

provides: [IframeShim]

...
*/

(function(){

var browsers = false;


var IframeShim = this.IframeShim = new Class({

	Implements: [Options, Events, Class.Occlude],

	options: {
		className: 'iframeShim',
		src: 'javascript:false;document.write("");',
		display: false,
		zIndex: null,
		margin: 0,
		offset: {x: 0, y: 0},
		browsers: browsers
	},

	property: 'IframeShim',

	initialize: function(element, options){
		this.element = document.id(element);
		if (this.occlude()) return this.occluded;
		this.setOptions(options);
		this.makeShim();
		return this;
	},

	makeShim: function(){
		if (this.options.browsers){
			var zIndex = this.element.getStyle('zIndex').toInt();

			if (!zIndex){
				zIndex = 1;
				var pos = this.element.getStyle('position');
				if (pos == 'static' || !pos) this.element.setStyle('position', 'relative');
				this.element.setStyle('zIndex', zIndex);
			}
			zIndex = ((this.options.zIndex != null || this.options.zIndex === 0) && zIndex > this.options.zIndex) ? this.options.zIndex : zIndex - 1;
			if (zIndex < 0) zIndex = 1;
			this.shim = new Element('iframe', {
				src: this.options.src,
				scrolling: 'no',
				frameborder: 0,
				styles: {
					zIndex: zIndex,
					position: 'absolute',
					border: 'none',
					filter: 'progid:DXImageTransform.Microsoft.Alpha(style=0,opacity=0)'
				},
				'class': this.options.className
			}).store('IframeShim', this);
			var inject = (function(){
				this.shim.inject(this.element, 'after');
				this[this.options.display ? 'show' : 'hide']();
				this.fireEvent('inject');
			}).bind(this);
			if (!IframeShim.ready) window.addEvent('load', inject);
			else inject();
		} else {
			this.position = this.hide = this.show = this.dispose = Function.convert(this);
		}
	},

	position: function(){
		if (!IframeShim.ready || !this.shim) return this;
		var size = this.element.measure(function(){
			return this.getSize();
		});
		if (this.options.margin != undefined){
			size.x = size.x - (this.options.margin * 2);
			size.y = size.y - (this.options.margin * 2);
			this.options.offset.x += this.options.margin;
			this.options.offset.y += this.options.margin;
		}
		this.shim.set({width: size.x, height: size.y}).position({
			relativeTo: this.element,
			offset: this.options.offset
		});
		return this;
	},

	hide: function(){
		if (this.shim) this.shim.setStyle('display', 'none');
		return this;
	},

	show: function(){
		if (this.shim) this.shim.setStyle('display', 'block');
		return this.position();
	},

	dispose: function(){
		if (this.shim) this.shim.dispose();
		return this;
	},

	destroy: function(){
		if (this.shim) this.shim.destroy();
		return this;
	}

});

})();

window.addEvent('load', function(){
	IframeShim.ready = true;
});

/*
---

script: Mask.js

name: Mask

description: Creates a mask element to cover another.

license: MIT-style license

authors:
  - Aaron Newton

requires:
  - Core/Options
  - Core/Events
  - Core/Element.Event
  - Class.Binds
  - Element.Position
  - IframeShim

provides: [Mask]

...
*/
(function(){

var Mask = this.Mask = new Class({

	Implements: [Options, Events],

	Binds: ['position'],

	options: {/*
		onShow: function(){},
		onHide: function(){},
		onDestroy: function(){},
		onClick: function(event){},
		inject: {
			where: 'after',
			target: null,
		},
		hideOnClick: false,
		id: null,
		destroyOnHide: false,*/
		style: {},
		'class': 'mask',
		maskMargins: false,
		useIframeShim: true,
		iframeShimOptions: {}
	},

	initialize: function(target, options){
		this.target = document.id(target) || document.id(document.body);
		this.target.store('mask', this);
		this.setOptions(options);
		this.render();
		this.inject();
	},

	render: function(){
		this.element = new Element('div', {
			'class': this.options['class'],
			id: this.options.id || 'mask-' + String.uniqueID(),
			styles: Object.merge({}, this.options.style, {
				display: 'none'
			}),
			events: {
				click: function(event){
					this.fireEvent('click', event);
					if (this.options.hideOnClick) this.hide();
				}.bind(this)
			}
		});

		this.hidden = true;
	},

	toElement: function(){
		return this.element;
	},

	inject: function(target, where){
		where = where || (this.options.inject ? this.options.inject.where : '') || (this.target == document.body ? 'inside' : 'after');
		target = target || (this.options.inject && this.options.inject.target) || this.target;

		this.element.inject(target, where);

		if (this.options.useIframeShim){
			this.shim = new IframeShim(this.element, this.options.iframeShimOptions);

			this.addEvents({
				show: this.shim.show.bind(this.shim),
				hide: this.shim.hide.bind(this.shim),
				destroy: this.shim.destroy.bind(this.shim)
			});
		}
	},

	position: function(){
		this.resize(this.options.width, this.options.height);

		this.element.position({
			relativeTo: this.target,
			position: 'topLeft',
			ignoreMargins: !this.options.maskMargins,
			ignoreScroll: this.target == document.body
		});

		return this;
	},

	resize: function(x, y){
		var opt = {
			styles: ['padding', 'border']
		};
		if (this.options.maskMargins) opt.styles.push('margin');

		var dim = this.target.getComputedSize(opt);
		if (this.target == document.body){
			this.element.setStyles({width: 0, height: 0});
			var win = window.getScrollSize();
			if (dim.totalHeight < win.y) dim.totalHeight = win.y;
			if (dim.totalWidth < win.x) dim.totalWidth = win.x;
		}
		this.element.setStyles({
			width: Array.pick([x, dim.totalWidth, dim.x]),
			height: Array.pick([y, dim.totalHeight, dim.y])
		});

		return this;
	},

	show: function(){
		if (!this.hidden) return this;

		window.addEvent('resize', this.position);
		this.position();
		this.showMask.apply(this, arguments);

		return this;
	},

	showMask: function(){
		this.element.setStyle('display', 'block');
		this.hidden = false;
		this.fireEvent('show');
	},

	hide: function(){
		if (this.hidden) return this;

		window.removeEvent('resize', this.position);
		this.hideMask.apply(this, arguments);
		if (this.options.destroyOnHide) return this.destroy();

		return this;
	},

	hideMask: function(){
		this.element.setStyle('display', 'none');
		this.hidden = true;
		this.fireEvent('hide');
	},

	toggle: function(){
		this[this.hidden ? 'show' : 'hide']();
	},

	destroy: function(){
		this.hide();
		this.element.destroy();
		this.fireEvent('destroy');
		this.target.eliminate('mask');
	}

});

})();


Element.Properties.mask = {

	set: function(options){
		var mask = this.retrieve('mask');
		if (mask) mask.destroy();
		return this.eliminate('mask').store('mask:options', options);
	},

	get: function(){
		var mask = this.retrieve('mask');
		if (!mask){
			mask = new Mask(this, this.retrieve('mask:options'));
			this.store('mask', mask);
		}
		return mask;
	}

};

Element.implement({

	mask: function(options){
		if (options) this.set('mask', options);
		this.get('mask').show();
		return this;
	},

	unmask: function(){
		this.get('mask').hide();
		return this;
	}

});

/*
---

script: Spinner.js

name: Spinner

description: Adds a semi-transparent overlay over a dom element with a spinnin ajax icon.

license: MIT-style license

authors:
  - Aaron Newton

requires:
  - Core/Fx.Tween
  - Core/Request
  - Class.refactor
  - Mask

provides: [Spinner]

...
*/
(function(){

var Spinner = this.Spinner = new Class({

	Extends: this.Mask,

	Implements: Chain,

	options: {/*
		message: false,*/
		'class': 'spinner',
		containerPosition: {},
		content: {
			'class': 'spinner-content'
		},
		messageContainer: {
			'class': 'spinner-msg'
		},
		img: {
			'class': 'spinner-img'
		},
		fxOptions: {
			link: 'chain'
		}
	},

	initialize: function(target, options){
		this.target = document.id(target) || document.id(document.body);
		this.target.store('spinner', this);
		this.setOptions(options);
		this.render();
		this.inject();

		// Add this to events for when noFx is true; parent methods handle hide/show.
		var deactivate = function(){ this.active = false; }.bind(this);
		this.addEvents({
			hide: deactivate,
			show: deactivate
		});
	},

	render: function(){
		this.parent();

		this.element.set('id', this.options.id || 'spinner-' + String.uniqueID());

		this.content = document.id(this.options.content) || new Element('div', this.options.content);
		this.content.inject(this.element);

		if (this.options.message){
			this.msg = document.id(this.options.message) || new Element('p', this.options.messageContainer).appendText(this.options.message);
			this.msg.inject(this.content);
		}

		if (this.options.img){
			this.img = document.id(this.options.img) || new Element('div', this.options.img);
			this.img.inject(this.content);
		}

		this.element.set('tween', this.options.fxOptions);
	},

	show: function(noFx){
		if (this.active) return this.chain(this.show.bind(this));
		if (!this.hidden){
			this.callChain.delay(20, this);
			return this;
		}

		this.target.set('aria-busy', 'true');
		this.active = true;

		return this.parent(noFx);
	},

	showMask: function(noFx){
		var pos = function(){
			this.content.position(Object.merge({
				relativeTo: this.element
			}, this.options.containerPosition));
		}.bind(this);

		if (noFx){
			this.parent();
			pos();
		} else {
			if (!this.options.style.opacity) this.options.style.opacity = this.element.getStyle('opacity').toFloat();
			this.element.setStyles({
				display: 'block',
				opacity: 0
			}).tween('opacity', this.options.style.opacity);
			pos();
			this.hidden = false;
			this.fireEvent('show');
			this.callChain();
		}
	},

	hide: function(noFx){
		if (this.active) return this.chain(this.hide.bind(this));
		if (this.hidden){
			this.callChain.delay(20, this);
			return this;
		}

		this.target.set('aria-busy', 'false');
		this.active = true;

		return this.parent(noFx);
	},

	hideMask: function(noFx){
		if (noFx) return this.parent();
		this.element.tween('opacity', 0).get('tween').chain(function(){
			this.element.setStyle('display', 'none');
			this.hidden = true;
			this.fireEvent('hide');
			this.callChain();
		}.bind(this));
	},

	destroy: function(){
		this.content.destroy();
		this.parent();
		this.target.eliminate('spinner');
	}

});

})();

Request = Class.refactor(Request, {

	options: {
		useSpinner: false,
		spinnerOptions: {},
		spinnerTarget: false
	},

	initialize: function(options){
		this._send = this.send;
		this.send = function(options){
			var spinner = this.getSpinner();
			if (spinner) spinner.chain(this._send.pass(options, this)).show();
			else this._send(options);
			return this;
		};
		this.previous(options);
	},

	getSpinner: function(){
		if (!this.spinner){
			var update = document.id(this.options.spinnerTarget) || document.id(this.options.update);
			if (this.options.useSpinner && update){
				update.set('spinner', this.options.spinnerOptions);
				var spinner = this.spinner = update.get('spinner');
				['complete', 'exception', 'cancel'].each(function(event){
					this.addEvent(event, spinner.hide.bind(spinner));
				}, this);
			}
		}
		return this.spinner;
	}

});

Element.Properties.spinner = {

	set: function(options){
		var spinner = this.retrieve('spinner');
		if (spinner) spinner.destroy();
		return this.eliminate('spinner').store('spinner:options', options);
	},

	get: function(){
		var spinner = this.retrieve('spinner');
		if (!spinner){
			spinner = new Spinner(this, this.retrieve('spinner:options'));
			this.store('spinner', spinner);
		}
		return spinner;
	}

};

Element.implement({

	spin: function(options){
		if (options) this.set('spinner', options);
		this.get('spinner').show();
		return this;
	},

	unspin: function(){
		this.get('spinner').hide();
		return this;
	}

});

/*
---

script: String.QueryString.js

name: String.QueryString

description: Methods for dealing with URI query strings.

license: MIT-style license

authors:
  - Sebastian MarkbÃ¥ge
  - Aaron Newton
  - Lennart Pilon
  - Valerio Proietti

requires:
  - Core/Array
  - Core/String
  - MooTools.More

provides: [String.QueryString]

...
*/

(function(){

/**
 * decodeURIComponent doesn't do the correct thing with query parameter keys or
 * values. Specifically, it leaves '+' as '+' when it should be converting them
 * to spaces as that's the specification. When browsers submit HTML forms via
 * GET, the values are encoded using 'application/x-www-form-urlencoded'
 * which converts spaces to '+'.
 *
 * See: http://unixpapa.com/js/querystring.html for a description of the
 * problem.
 */
var decodeComponent = function(str){
	return decodeURIComponent(str.replace(/\+/g, ' '));
};

String.implement({

	parseQueryString: function(decodeKeys, decodeValues){
		if (decodeKeys == null) decodeKeys = true;
		if (decodeValues == null) decodeValues = true;

		var vars = this.split(/[&;]/),
			object = {};
		if (!vars.length) return object;

		vars.each(function(val){
			var index = val.indexOf('=') + 1,
				value = index ? val.substr(index) : '',
				keys = index ? val.substr(0, index - 1).match(/([^\]\[]+|(\B)(?=\]))/g) : [val],
				obj = object;
			if (!keys) return;
			if (decodeValues) value = decodeComponent(value);
			keys.each(function(key, i){
				if (decodeKeys) key = decodeComponent(key);
				var current = obj[key];

				if (i < keys.length - 1) obj = obj[key] = current || {};
				else if (typeOf(current) == 'array') current.push(value);
				else obj[key] = current != null ? [current, value] : value;
			});
		});

		return object;
	},

	cleanQueryString: function(method){
		return this.split('&').filter(function(val){
			var index = val.indexOf('='),
				key = index < 0 ? '' : val.substr(0, index),
				value = val.substr(index + 1);

			return method ? method.call(null, key, value) : (value || value === 0);
		}).join('&');
	}

});

})();

/*
---

script: Form.Request.js

name: Form.Request

description: Handles the basic functionality of submitting a form and updating a dom element with the result.

license: MIT-style license

authors:
  - Aaron Newton

requires:
  - Core/Request.HTML
  - Class.Binds
  - Class.Occlude
  - Spinner
  - String.QueryString
  - Element.Delegation.Pseudo

provides: [Form.Request]

...
*/

if (!window.Form) window.Form = {};

(function(){

Form.Request = new Class({

	Binds: ['onSubmit', 'onFormValidate'],

	Implements: [Options, Events, Class.Occlude],

	options: {/*
		onFailure: function(){},
		onSuccess: function(){}, // aliased to onComplete,
		onSend: function(){}*/
		requestOptions: {
			evalScripts: true,
			useSpinner: true,
			emulation: false,
			link: 'ignore'
		},
		sendButtonClicked: true,
		extraData: {},
		resetForm: true
	},

	property: 'form.request',

	initialize: function(form, target, options){
		this.element = document.id(form);
		if (this.occlude()) return this.occluded;
		this.setOptions(options)
			.setTarget(target)
			.attach();
	},

	setTarget: function(target){
		this.target = document.id(target);
		if (!this.request){
			this.makeRequest();
		} else {
			this.request.setOptions({
				update: this.target
			});
		}
		return this;
	},

	toElement: function(){
		return this.element;
	},

	makeRequest: function(){
		var self = this;
		this.request = new Request.HTML(Object.merge({
			update: this.target,
			emulation: false,
			spinnerTarget: this.element,
			method: this.element.get('method') || 'post'
		}, this.options.requestOptions)).addEvents({
			success: function(tree, elements, html, javascript){
				['complete', 'success'].each(function(evt){
					self.fireEvent(evt, [self.target, tree, elements, html, javascript]);
				});
			},
			failure: function(){
				self.fireEvent('complete', arguments).fireEvent('failure', arguments);
			},
			exception: function(){
				self.fireEvent('failure', arguments);
			}
		});
		return this.attachReset();
	},

	attachReset: function(){
		if (!this.options.resetForm) return this;
		this.request.addEvent('success', function(){
			Function.attempt(function(){
				this.element.reset();
			}.bind(this));
			if (window.OverText) OverText.update();
		}.bind(this));
		return this;
	},

	attach: function(attach){
		var method = (attach != false) ? 'addEvent' : 'removeEvent';
		this.element[method]('click:relay(button, input[type=submit])', this.saveClickedButton.bind(this));

		var fv = this.element.retrieve('validator');
		if (fv) fv[method]('onFormValidate', this.onFormValidate);
		else this.element[method]('submit', this.onSubmit);

		return this;
	},

	detach: function(){
		return this.attach(false);
	},

	//public method
	enable: function(){
		return this.attach();
	},

	//public method
	disable: function(){
		return this.detach();
	},

	onFormValidate: function(valid, form, event){
		//if there's no event, then this wasn't a submit event
		if (!event) return;
		var fv = this.element.retrieve('validator');
		if (valid || (fv && !fv.options.stopOnFailure)){
			event.stop();
			this.send();
		}
	},

	onSubmit: function(event){
		var fv = this.element.retrieve('validator');
		if (fv){
			//form validator was created after Form.Request
			this.element.removeEvent('submit', this.onSubmit);
			fv.addEvent('onFormValidate', this.onFormValidate);
			fv.validate(event);
			return;
		}
		if (event) event.stop();
		this.send();
	},

	saveClickedButton: function(event, target){
		var targetName = target.get('name');
		if (!targetName || !this.options.sendButtonClicked) return;
		this.options.extraData[targetName] = target.get('value') || true;
		this.clickedCleaner = function(){
			delete this.options.extraData[targetName];
			this.clickedCleaner = function(){};
		}.bind(this);
	},

	clickedCleaner: function(){},

	send: function(){
		var str = this.element.toQueryString().trim(),
			data = Object.toQueryString(this.options.extraData);

		if (str) str += '&' + data;
		else str = data;

		this.fireEvent('send', [this.element, str.parseQueryString()]);
		this.request.send({
			data: str,
			url: this.options.requestOptions.url || this.element.get('action')
		});
		this.clickedCleaner();
		return this;
	}

});

Element.implement('formUpdate', function(update, options){
	var fq = this.retrieve('form.request');
	if (!fq){
		fq = new Form.Request(this, update, options);
	} else {
		if (update) fq.setTarget(update);
		if (options) fq.setOptions(options).makeRequest();
	}
	fq.send();
	return this;
});

})();

/*
---

script: Fx.Reveal.js

name: Fx.Reveal

description: Defines Fx.Reveal, a class that shows and hides elements with a transition.

license: MIT-style license

authors:
  - Aaron Newton

requires:
  - Core/Fx.Morph
  - Element.Shortcuts
  - Element.Measure

provides: [Fx.Reveal]

...
*/

(function(){


var hideTheseOf = function(object){
	var hideThese = object.options.hideInputs;
	if (window.OverText){
		var otClasses = [null];
		OverText.each(function(ot){
			otClasses.include('.' + ot.options.labelClass);
		});
		if (otClasses) hideThese += otClasses.join(', ');
	}
	return (hideThese) ? object.element.getElements(hideThese) : null;
};


Fx.Reveal = new Class({

	Extends: Fx.Morph,

	options: {/*
		onShow: function(thisElement){},
		onHide: function(thisElement){},
		onComplete: function(thisElement){},
		heightOverride: null,
		widthOverride: null,*/
		link: 'cancel',
		styles: ['padding', 'border', 'margin'],
		transitionOpacity: 'opacity' in document.documentElement,
		mode: 'vertical',
		display: function(){
			return this.element.get('tag') != 'tr' ? 'block' : 'table-row';
		},
		opacity: 1,
		hideInputs: !('opacity' in document.documentElement) ? 'select, input, textarea, object, embed' : null
	},

	dissolve: function(){
		if (!this.hiding && !this.showing){
			if (this.element.getStyle('display') != 'none'){
				this.hiding = true;
				this.showing = false;
				this.hidden = true;
				this.cssText = this.element.style.cssText;

				var startStyles = this.element.getComputedSize({
					styles: this.options.styles,
					mode: this.options.mode
				});
				if (this.options.transitionOpacity) startStyles.opacity = this.options.opacity;

				var zero = {};
				Object.each(startStyles, function(style, name){
					zero[name] = [style, 0];
				});

				this.element.setStyles({
					display: Function.convert(this.options.display).call(this),
					overflow: 'hidden'
				});

				var hideThese = hideTheseOf(this);
				if (hideThese) hideThese.setStyle('visibility', 'hidden');

				this.$chain.unshift(function(){
					if (this.hidden){
						this.hiding = false;
						this.element.style.cssText = this.cssText;
						this.element.setStyle('display', 'none');
						if (hideThese) hideThese.setStyle('visibility', 'visible');
					}
					this.fireEvent('hide', this.element);
					this.callChain();
				}.bind(this));

				this.start(zero);
			} else {
				this.callChain.delay(10, this);
				this.fireEvent('complete', this.element);
				this.fireEvent('hide', this.element);
			}
		} else if (this.options.link == 'chain'){
			this.chain(this.dissolve.bind(this));
		} else if (this.options.link == 'cancel' && !this.hiding){
			this.cancel();
			this.dissolve();
		}
		return this;
	},

	reveal: function(){
		if (!this.showing && !this.hiding){
			if (this.element.getStyle('display') == 'none'){
				this.hiding = false;
				this.showing = true;
				this.hidden = false;
				this.cssText = this.element.style.cssText;

				var startStyles;
				this.element.measure(function(){
					startStyles = this.element.getComputedSize({
						styles: this.options.styles,
						mode: this.options.mode
					});
				}.bind(this));
				if (this.options.heightOverride != null) startStyles.height = this.options.heightOverride.toInt();
				if (this.options.widthOverride != null) startStyles.width = this.options.widthOverride.toInt();
				if (this.options.transitionOpacity){
					this.element.setStyle('opacity', 0);
					startStyles.opacity = this.options.opacity;
				}

				var zero = {
					height: 0,
					display: Function.convert(this.options.display).call(this)
				};
				Object.each(startStyles, function(style, name){
					zero[name] = 0;
				});
				zero.overflow = 'hidden';

				this.element.setStyles(zero);

				var hideThese = hideTheseOf(this);
				if (hideThese) hideThese.setStyle('visibility', 'hidden');

				this.$chain.unshift(function(){
					this.element.style.cssText = this.cssText;
					this.element.setStyle('display', Function.convert(this.options.display).call(this));
					if (!this.hidden) this.showing = false;
					if (hideThese) hideThese.setStyle('visibility', 'visible');
					this.callChain();
					this.fireEvent('show', this.element);
				}.bind(this));

				this.start(startStyles);
			} else {
				this.callChain();
				this.fireEvent('complete', this.element);
				this.fireEvent('show', this.element);
			}
		} else if (this.options.link == 'chain'){
			this.chain(this.reveal.bind(this));
		} else if (this.options.link == 'cancel' && !this.showing){
			this.cancel();
			this.reveal();
		}
		return this;
	},

	toggle: function(){
		if (this.element.getStyle('display') == 'none'){
			this.reveal();
		} else {
			this.dissolve();
		}
		return this;
	},

	cancel: function(){
		this.parent.apply(this, arguments);
		if (this.cssText != null) this.element.style.cssText = this.cssText;
		this.hiding = false;
		this.showing = false;
		return this;
	}

});

Element.Properties.reveal = {

	set: function(options){
		this.get('reveal').cancel().setOptions(options);
		return this;
	},

	get: function(){
		var reveal = this.retrieve('reveal');
		if (!reveal){
			reveal = new Fx.Reveal(this);
			this.store('reveal', reveal);
		}
		return reveal;
	}

};

Element.Properties.dissolve = Element.Properties.reveal;

Element.implement({

	reveal: function(options){
		this.get('reveal').setOptions(options).reveal();
		return this;
	},

	dissolve: function(options){
		this.get('reveal').setOptions(options).dissolve();
		return this;
	},

	nix: function(options){
		var params = Array.link(arguments, {destroy: Type.isBoolean, options: Type.isObject});
		this.get('reveal').setOptions(options).dissolve().chain(function(){
			this[params.destroy ? 'destroy' : 'dispose']();
		}.bind(this));
		return this;
	},

	wink: function(){
		var params = Array.link(arguments, {duration: Type.isNumber, options: Type.isObject});
		var reveal = this.get('reveal').setOptions(params.options);
		reveal.reveal().chain(function(){
			(function(){
				reveal.dissolve();
			}).delay(params.duration || 2000);
		});
	}

});

})();

/*
---

script: Form.Request.Append.js

name: Form.Request.Append

description: Handles the basic functionality of submitting a form and updating a dom element with the result. The result is appended to the DOM element instead of replacing its contents.

license: MIT-style license

authors:
  - Aaron Newton

requires:
  - Form.Request
  - Fx.Reveal
  - Elements.from

provides: [Form.Request.Append]

...
*/

Form.Request.Append = new Class({

	Extends: Form.Request,

	options: {
		//onBeforeEffect: function(){},
		useReveal: true,
		revealOptions: {},
		inject: 'bottom'
	},

	makeRequest: function(){
		this.request = new Request.HTML(Object.merge({
			url: this.element.get('action'),
			method: this.element.get('method') || 'post',
			spinnerTarget: this.element
		}, this.options.requestOptions, {
			evalScripts: false
		})).addEvents({
			success: function(tree, elements, html, javascript){
				var container;
				var kids = Elements.from(html);
				if (kids.length == 1){
					container = kids[0];
				} else {
					container = new Element('div', {
						styles: {
							display: 'none'
						}
					}).adopt(kids);
				}
				container.inject(this.target, this.options.inject);
				if (this.options.requestOptions.evalScripts) Browser.exec(javascript);
				this.fireEvent('beforeEffect', container);
				var finish = function(){
					this.fireEvent('success', [container, this.target, tree, elements, html, javascript]);
				}.bind(this);
				if (this.options.useReveal){
					container.set('reveal', this.options.revealOptions).get('reveal').chain(finish);
					container.reveal();
				} else {
					finish();
				}
			}.bind(this),
			failure: function(xhr){
				this.fireEvent('failure', xhr);
			}.bind(this)
		});
		this.attachReset();
	}

});

/*
---

script: Object.Extras.js

name: Object.Extras

description: Extra Object generics, like getFromPath which allows a path notation to child elements.

license: MIT-style license

authors:
  - Aaron Newton

requires:
  - Core/Object
  - MooTools.More

provides: [Object.Extras]

...
*/

(function(){

var defined = function(value){
	return value != null;
};

var hasOwnProperty = Object.prototype.hasOwnProperty;

Object.extend({

	getFromPath: function(source, parts){
		if (typeof parts == 'string') parts = parts.split('.');
		for (var i = 0, l = parts.length; i < l; i++){
			if (hasOwnProperty.call(source, parts[i])) source = source[parts[i]];
			else return null;
		}
		return source;
	},

	cleanValues: function(object, method){
		method = method || defined;
		for (var key in object) if (!method(object[key])){
			delete object[key];
		}
		return object;
	},

	erase: function(object, key){
		if (hasOwnProperty.call(object, key)) delete object[key];
		return object;
	},

	run: function(object){
		var args = Array.slice(arguments, 1);
		for (var key in object) if (object[key].apply){
			object[key].apply(object, args);
		}
		return object;
	}

});

})();

/*
---

script: Locale.js

name: Locale

description: Provides methods for localization.

license: MIT-style license

authors:
  - Aaron Newton
  - Arian Stolwijk

requires:
  - Core/Events
  - Object.Extras
  - MooTools.More

provides: [Locale, Lang]

...
*/

(function(){

var current = null,
	locales = {},
	inherits = {};

var getSet = function(set){
	if (instanceOf(set, Locale.Set)) return set;
	else return locales[set];
};

var Locale = this.Locale = {

	define: function(locale, set, key, value){
		var name;
		if (instanceOf(locale, Locale.Set)){
			name = locale.name;
			if (name) locales[name] = locale;
		} else {
			name = locale;
			if (!locales[name]) locales[name] = new Locale.Set(name);
			locale = locales[name];
		}

		if (set) locale.define(set, key, value);

		

		if (!current) current = locale;

		return locale;
	},

	use: function(locale){
		locale = getSet(locale);

		if (locale){
			current = locale;

			this.fireEvent('change', locale);

			
		}

		return this;
	},

	getCurrent: function(){
		return current;
	},

	get: function(key, args){
		return (current) ? current.get(key, args) : '';
	},

	inherit: function(locale, inherits, set){
		locale = getSet(locale);

		if (locale) locale.inherit(inherits, set);
		return this;
	},

	list: function(){
		return Object.keys(locales);
	}

};

Object.append(Locale, new Events);

Locale.Set = new Class({

	sets: {},

	inherits: {
		locales: [],
		sets: {}
	},

	initialize: function(name){
		this.name = name || '';
	},

	define: function(set, key, value){
		var defineData = this.sets[set];
		if (!defineData) defineData = {};

		if (key){
			if (typeOf(key) == 'object') defineData = Object.merge(defineData, key);
			else defineData[key] = value;
		}
		this.sets[set] = defineData;

		return this;
	},

	get: function(key, args, _base){
		var value = Object.getFromPath(this.sets, key);
		if (value != null){
			var type = typeOf(value);
			if (type == 'function') value = value.apply(null, Array.convert(args));
			else if (type == 'object') value = Object.clone(value);
			return value;
		}

		// get value of inherited locales
		var index = key.indexOf('.'),
			set = index < 0 ? key : key.substr(0, index),
			names = (this.inherits.sets[set] || []).combine(this.inherits.locales).include('en-US');
		if (!_base) _base = [];

		for (var i = 0, l = names.length; i < l; i++){
			if (_base.contains(names[i])) continue;
			_base.include(names[i]);

			var locale = locales[names[i]];
			if (!locale) continue;

			value = locale.get(key, args, _base);
			if (value != null) return value;
		}

		return '';
	},

	inherit: function(names, set){
		names = Array.convert(names);

		if (set && !this.inherits.sets[set]) this.inherits.sets[set] = [];

		var l = names.length;
		while (l--) (set ? this.inherits.sets[set] : this.inherits.locales).unshift(names[l]);

		return this;
	}

});



})();

/*
---

name: Locale.en-US.Date

description: Date messages for US English.

license: MIT-style license

authors:
  - Aaron Newton

requires:
  - Locale

provides: [Locale.en-US.Date]

...
*/

Locale.define('en-US', 'Date', {

	months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
	months_abbr: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
	days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
	days_abbr: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],

	// Culture's date order: MM/DD/YYYY
	dateOrder: ['month', 'date', 'year'],
	shortDate: '%m/%d/%Y',
	shortTime: '%I:%M%p',
	AM: 'AM',
	PM: 'PM',
	firstDayOfWeek: 0,

	// Date.Extras
	ordinal: function(dayOfMonth){
		// 1st, 2nd, 3rd, etc.
		return (dayOfMonth > 3 && dayOfMonth < 21) ? 'th' : ['th', 'st', 'nd', 'rd', 'th'][Math.min(dayOfMonth % 10, 4)];
	},

	lessThanMinuteAgo: 'less than a minute ago',
	minuteAgo: 'about a minute ago',
	minutesAgo: '{delta} minutes ago',
	hourAgo: 'about an hour ago',
	hoursAgo: 'about {delta} hours ago',
	dayAgo: '1 day ago',
	daysAgo: '{delta} days ago',
	weekAgo: '1 week ago',
	weeksAgo: '{delta} weeks ago',
	monthAgo: '1 month ago',
	monthsAgo: '{delta} months ago',
	yearAgo: '1 year ago',
	yearsAgo: '{delta} years ago',

	lessThanMinuteUntil: 'less than a minute from now',
	minuteUntil: 'about a minute from now',
	minutesUntil: '{delta} minutes from now',
	hourUntil: 'about an hour from now',
	hoursUntil: 'about {delta} hours from now',
	dayUntil: '1 day from now',
	daysUntil: '{delta} days from now',
	weekUntil: '1 week from now',
	weeksUntil: '{delta} weeks from now',
	monthUntil: '1 month from now',
	monthsUntil: '{delta} months from now',
	yearUntil: '1 year from now',
	yearsUntil: '{delta} years from now'

});

/*
---

script: Date.js

name: Date

description: Extends the Date native object to include methods useful in managing dates.

license: MIT-style license

authors:
  - Aaron Newton
  - Nicholas Barthelemy - https://svn.nbarthelemy.com/date-js/
  - Harald Kirshner - mail [at] digitarald.de; http://digitarald.de
  - Scott Kyle - scott [at] appden.com; http://appden.com

requires:
  - Core/Array
  - Core/String
  - Core/Number
  - MooTools.More
  - Locale
  - Locale.en-US.Date

provides: [Date]

...
*/

(function(){

var Date = this.Date;

var DateMethods = Date.Methods = {
	ms: 'Milliseconds',
	year: 'FullYear',
	min: 'Minutes',
	mo: 'Month',
	sec: 'Seconds',
	hr: 'Hours'
};

[
	'Date', 'Day', 'FullYear', 'Hours', 'Milliseconds', 'Minutes', 'Month', 'Seconds', 'Time', 'TimezoneOffset',
	'Week', 'Timezone', 'GMTOffset', 'DayOfYear', 'LastMonth', 'LastDayOfMonth', 'UTCDate', 'UTCDay', 'UTCFullYear',
	'AMPM', 'Ordinal', 'UTCHours', 'UTCMilliseconds', 'UTCMinutes', 'UTCMonth', 'UTCSeconds', 'UTCMilliseconds'
].each(function(method){
	Date.Methods[method.toLowerCase()] = method;
});

var pad = function(n, digits, string){
	if (digits == 1) return n;
	return n < Math.pow(10, digits - 1) ? (string || '0') + pad(n, digits - 1, string) : n;
};

Date.implement({

	set: function(prop, value){
		prop = prop.toLowerCase();
		var method = DateMethods[prop] && 'set' + DateMethods[prop];
		if (method && this[method]) this[method](value);
		return this;
	}.overloadSetter(),

	get: function(prop){
		prop = prop.toLowerCase();
		var method = DateMethods[prop] && 'get' + DateMethods[prop];
		if (method && this[method]) return this[method]();
		return null;
	}.overloadGetter(),

	clone: function(){
		return new Date(this.get('time'));
	},

	increment: function(interval, times){
		interval = interval || 'day';
		times = times != null ? times : 1;

		switch (interval){
			case 'year':
				return this.increment('month', times * 12);
			case 'month':
				var d = this.get('date');
				this.set('date', 1).set('mo', this.get('mo') + times);
				return this.set('date', d.min(this.get('lastdayofmonth')));
			case 'week':
				return this.increment('day', times * 7);
			case 'day':
				return this.set('date', this.get('date') + times);
		}

		if (!Date.units[interval]) throw new Error(interval + ' is not a supported interval');

		return this.set('time', this.get('time') + times * Date.units[interval]());
	},

	decrement: function(interval, times){
		return this.increment(interval, -1 * (times != null ? times : 1));
	},

	isLeapYear: function(){
		return Date.isLeapYear(this.get('year'));
	},

	clearTime: function(){
		return this.set({hr: 0, min: 0, sec: 0, ms: 0});
	},

	diff: function(date, resolution){
		if (typeOf(date) == 'string') date = Date.parse(date);

		return ((date - this) / Date.units[resolution || 'day'](3, 3)).round(); // non-leap year, 30-day month
	},

	getLastDayOfMonth: function(){
		return Date.daysInMonth(this.get('mo'), this.get('year'));
	},

	getDayOfYear: function(){
		return (Date.UTC(this.get('year'), this.get('mo'), this.get('date') + 1)
			- Date.UTC(this.get('year'), 0, 1)) / Date.units.day();
	},

	setDay: function(day, firstDayOfWeek){
		if (firstDayOfWeek == null){
			firstDayOfWeek = Date.getMsg('firstDayOfWeek');
			if (firstDayOfWeek === '') firstDayOfWeek = 1;
		}

		day = (7 + Date.parseDay(day, true) - firstDayOfWeek) % 7;
		var currentDay = (7 + this.get('day') - firstDayOfWeek) % 7;

		return this.increment('day', day - currentDay);
	},

	getWeek: function(firstDayOfWeek){
		if (firstDayOfWeek == null){
			firstDayOfWeek = Date.getMsg('firstDayOfWeek');
			if (firstDayOfWeek === '') firstDayOfWeek = 1;
		}

		var date = this,
			dayOfWeek = (7 + date.get('day') - firstDayOfWeek) % 7,
			dividend = 0,
			firstDayOfYear;

		if (firstDayOfWeek == 1){
			// ISO-8601, week belongs to year that has the most days of the week (i.e. has the thursday of the week)
			var month = date.get('month'),
				startOfWeek = date.get('date') - dayOfWeek;

			if (month == 11 && startOfWeek > 28) return 1; // Week 1 of next year

			if (month == 0 && startOfWeek < -2){
				// Use a date from last year to determine the week
				date = new Date(date).decrement('day', dayOfWeek);
				dayOfWeek = 0;
			}

			firstDayOfYear = new Date(date.get('year'), 0, 1).get('day') || 7;
			if (firstDayOfYear > 4) dividend = -7; // First week of the year is not week 1
		} else {
			// In other cultures the first week of the year is always week 1 and the last week always 53 or 54.
			// Days in the same week can have a different weeknumber if the week spreads across two years.
			firstDayOfYear = new Date(date.get('year'), 0, 1).get('day');
		}

		dividend += date.get('dayofyear');
		dividend += 6 - dayOfWeek; // Add days so we calculate the current date's week as a full week
		dividend += (7 + firstDayOfYear - firstDayOfWeek) % 7; // Make up for first week of the year not being a full week

		return (dividend / 7);
	},

	getOrdinal: function(day){
		return Date.getMsg('ordinal', day || this.get('date'));
	},

	getTimezone: function(){
		return this.toString()
			.replace(/^.*? ([A-Z]{3}).[0-9]{4}.*$/, '$1')
			.replace(/^.*?\(([A-Z])[a-z]+ ([A-Z])[a-z]+ ([A-Z])[a-z]+\)$/, '$1$2$3');
	},

	getGMTOffset: function(){
		var off = this.get('timezoneOffset');
		return ((off > 0) ? '-' : '+') + pad((off.abs() / 60).floor(), 2) + pad(off % 60, 2);
	},

	setAMPM: function(ampm){
		ampm = ampm.toUpperCase();
		var hr = this.get('hr');
		if (hr > 11 && ampm == 'AM') return this.decrement('hour', 12);
		else if (hr < 12 && ampm == 'PM') return this.increment('hour', 12);
		return this;
	},

	getAMPM: function(){
		return (this.get('hr') < 12) ? 'AM' : 'PM';
	},

	parse: function(str){
		this.set('time', Date.parse(str));
		return this;
	},

	isValid: function(date){
		if (!date) date = this;
		return typeOf(date) == 'date' && !isNaN(date.valueOf());
	},

	format: function(format){
		if (!this.isValid()) return 'invalid date';

		if (!format) format = '%x %X';
		if (typeof format == 'string') format = formats[format.toLowerCase()] || format;
		if (typeof format == 'function') return format(this);

		var d = this;
		return format.replace(/%([a-z%])/gi,
			function($0, $1){
				switch ($1){
					case 'a': return Date.getMsg('days_abbr')[d.get('day')];
					case 'A': return Date.getMsg('days')[d.get('day')];
					case 'b': return Date.getMsg('months_abbr')[d.get('month')];
					case 'B': return Date.getMsg('months')[d.get('month')];
					case 'c': return d.format('%a %b %d %H:%M:%S %Y');
					case 'd': return pad(d.get('date'), 2);
					case 'e': return pad(d.get('date'), 2, ' ');
					case 'H': return pad(d.get('hr'), 2);
					case 'I': return pad((d.get('hr') % 12) || 12, 2);
					case 'j': return pad(d.get('dayofyear'), 3);
					case 'k': return pad(d.get('hr'), 2, ' ');
					case 'l': return pad((d.get('hr') % 12) || 12, 2, ' ');
					case 'L': return pad(d.get('ms'), 3);
					case 'm': return pad((d.get('mo') + 1), 2);
					case 'M': return pad(d.get('min'), 2);
					case 'o': return d.get('ordinal');
					case 'p': return Date.getMsg(d.get('ampm'));
					case 's': return Math.round(d / 1000);
					case 'S': return pad(d.get('seconds'), 2);
					case 'T': return d.format('%H:%M:%S');
					case 'U': return pad(d.get('week'), 2);
					case 'w': return d.get('day');
					case 'x': return d.format(Date.getMsg('shortDate'));
					case 'X': return d.format(Date.getMsg('shortTime'));
					case 'y': return d.get('year').toString().substr(2);
					case 'Y': return d.get('year');
					case 'z': return d.get('GMTOffset');
					case 'Z': return d.get('Timezone');
				}
				return $1;
			}
		);
	},

	toISOString: function(){
		return this.format('iso8601');
	}

}).alias({
	toJSON: 'toISOString',
	compare: 'diff',
	strftime: 'format'
});

// The day and month abbreviations are standardized, so we cannot use simply %a and %b because they will get localized
var rfcDayAbbr = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
	rfcMonthAbbr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

var formats = {
	db: '%Y-%m-%d %H:%M:%S',
	compact: '%Y%m%dT%H%M%S',
	'short': '%d %b %H:%M',
	'long': '%B %d, %Y %H:%M',
	rfc822: function(date){
		return rfcDayAbbr[date.get('day')] + date.format(', %d ') + rfcMonthAbbr[date.get('month')] + date.format(' %Y %H:%M:%S %Z');
	},
	rfc2822: function(date){
		return rfcDayAbbr[date.get('day')] + date.format(', %d ') + rfcMonthAbbr[date.get('month')] + date.format(' %Y %H:%M:%S %z');
	},
	iso8601: function(date){
		return (
			date.getUTCFullYear() + '-' +
			pad(date.getUTCMonth() + 1, 2) + '-' +
			pad(date.getUTCDate(), 2) + 'T' +
			pad(date.getUTCHours(), 2) + ':' +
			pad(date.getUTCMinutes(), 2) + ':' +
			pad(date.getUTCSeconds(), 2) + '.' +
			pad(date.getUTCMilliseconds(), 3) + 'Z'
		);
	}
};

var parsePatterns = [],
	nativeParse = Date.parse;

var parseWord = function(type, word, num){
	var ret = -1,
		translated = Date.getMsg(type + 's');
	switch (typeOf(word)){
		case 'object':
			ret = translated[word.get(type)];
			break;
		case 'number':
			ret = translated[word];
			if (!ret) throw new Error('Invalid ' + type + ' index: ' + word);
			break;
		case 'string':
			var match = translated.filter(function(name){
				return this.test(name);
			}, new RegExp('^' + word, 'i'));
			if (!match.length) throw new Error('Invalid ' + type + ' string');
			if (match.length > 1) throw new Error('Ambiguous ' + type);
			ret = match[0];
	}

	return (num) ? translated.indexOf(ret) : ret;
};

var startCentury = 1900,
	startYear = 70;

Date.extend({

	getMsg: function(key, args){
		return Locale.get('Date.' + key, args);
	},

	units: {
		ms: Function.convert(1),
		second: Function.convert(1000),
		minute: Function.convert(60000),
		hour: Function.convert(3600000),
		day: Function.convert(86400000),
		week: Function.convert(608400000),
		month: function(month, year){
			var d = new Date;
			return Date.daysInMonth(month != null ? month : d.get('mo'), year != null ? year : d.get('year')) * 86400000;
		},
		year: function(year){
			year = year || new Date().get('year');
			return Date.isLeapYear(year) ? 31622400000 : 31536000000;
		}
	},

	daysInMonth: function(month, year){
		return [31, Date.isLeapYear(year) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];
	},

	isLeapYear: function(year){
		return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);
	},

	parse: function(from){
		var t = typeOf(from);
		if (t == 'number') return new Date(from);
		if (t != 'string') return from;
		from = from.clean();
		if (!from.length) return null;

		var parsed;
		parsePatterns.some(function(pattern){
			var bits = pattern.re.exec(from);
			return (bits) ? (parsed = pattern.handler(bits)) : false;
		});

		if (!(parsed && parsed.isValid())){
			parsed = new Date(nativeParse(from));
			if (!(parsed && parsed.isValid())) parsed = new Date(from.toInt());
		}
		return parsed;
	},

	parseDay: function(day, num){
		return parseWord('day', day, num);
	},

	parseMonth: function(month, num){
		return parseWord('month', month, num);
	},

	parseUTC: function(value){
		var localDate = new Date(value);
		var utcSeconds = Date.UTC(
			localDate.get('year'),
			localDate.get('mo'),
			localDate.get('date'),
			localDate.get('hr'),
			localDate.get('min'),
			localDate.get('sec'),
			localDate.get('ms')
		);
		return new Date(utcSeconds);
	},

	orderIndex: function(unit){
		return Date.getMsg('dateOrder').indexOf(unit) + 1;
	},

	defineFormat: function(name, format){
		formats[name] = format;
		return this;
	},

	

	defineParser: function(pattern){
		parsePatterns.push((pattern.re && pattern.handler) ? pattern : build(pattern));
		return this;
	},

	defineParsers: function(){
		Array.flatten(arguments).each(Date.defineParser);
		return this;
	},

	define2DigitYearStart: function(year){
		startYear = year % 100;
		startCentury = year - startYear;
		return this;
	}

}).extend({
	defineFormats: Date.defineFormat.overloadSetter()
});

var regexOf = function(type){
	return new RegExp('(?:' + Date.getMsg(type).map(function(name){
		return name.substr(0, 3);
	}).join('|') + ')[a-z]*');
};

var replacers = function(key){
	switch (key){
		case 'T':
			return '%H:%M:%S';
		case 'x': // iso8601 covers yyyy-mm-dd, so just check if month is first
			return ((Date.orderIndex('month') == 1) ? '%m[-./]%d' : '%d[-./]%m') + '([-./]%y)?';
		case 'X':
			return '%H([.:]%M)?([.:]%S([.:]%s)?)? ?%p? ?%z?';
	}
	return null;
};

var keys = {
	d: /[0-2]?[0-9]|3[01]/,
	H: /[01]?[0-9]|2[0-3]/,
	I: /0?[1-9]|1[0-2]/,
	M: /[0-5]?\d/,
	s: /\d+/,
	o: /[a-z]*/,
	p: /[ap]\.?m\.?/,
	y: /\d{2}|\d{4}/,
	Y: /\d{4}/,
	z: /Z|[+-]\d{2}(?::?\d{2})?/
};

keys.m = keys.I;
keys.S = keys.M;

var currentLanguage;

var recompile = function(language){
	currentLanguage = language;

	keys.a = keys.A = regexOf('days');
	keys.b = keys.B = regexOf('months');

	parsePatterns.each(function(pattern, i){
		if (pattern.format) parsePatterns[i] = build(pattern.format);
	});
};

var build = function(format){
	if (!currentLanguage) return {format: format};

	var parsed = [];
	var re = (format.source || format) // allow format to be regex
	.replace(/%([a-z])/gi,
		function($0, $1){
			return replacers($1) || $0;
		}
	).replace(/\((?!\?)/g, '(?:') // make all groups non-capturing
	.replace(/ (?!\?|\*)/g, ',? ') // be forgiving with spaces and commas
	.replace(/%([a-z%])/gi,
		function($0, $1){
			var p = keys[$1];
			if (!p) return $1;
			parsed.push($1);
			return '(' + p.source + ')';
		}
	).replace(/\[a-z\]/gi, '[a-z\\u00c0-\\uffff;\&]'); // handle unicode words

	return {
		format: format,
		re: new RegExp('^' + re + '$', 'i'),
		handler: function(bits){
			bits = bits.slice(1).associate(parsed);
			var date = new Date().clearTime(),
				year = bits.y || bits.Y;

			if (year != null) handle.call(date, 'y', year); // need to start in the right year
			if ('d' in bits) handle.call(date, 'd', 1);
			if ('m' in bits || bits.b || bits.B) handle.call(date, 'm', 1);

			for (var key in bits) handle.call(date, key, bits[key]);
			return date;
		}
	};
};

var handle = function(key, value){
	if (!value) return this;

	switch (key){
		case 'a': case 'A': return this.set('day', Date.parseDay(value, true));
		case 'b': case 'B': return this.set('mo', Date.parseMonth(value, true));
		case 'd': return this.set('date', value);
		case 'H': case 'I': return this.set('hr', value);
		case 'm': return this.set('mo', value - 1);
		case 'M': return this.set('min', value);
		case 'p': return this.set('ampm', value.replace(/\./g, ''));
		case 'S': return this.set('sec', value);
		case 's': return this.set('ms', ('0.' + value) * 1000);
		case 'w': return this.set('day', value);
		case 'Y': return this.set('year', value);
		case 'y':
			value = +value;
			if (value < 100) value += startCentury + (value < startYear ? 100 : 0);
			return this.set('year', value);
		case 'z':
			if (value == 'Z') value = '+00';
			var offset = value.match(/([+-])(\d{2}):?(\d{2})?/);
			offset = (offset[1] + '1') * (offset[2] * 60 + (+offset[3] || 0)) + this.getTimezoneOffset();
			return this.set('time', this - offset * 60000);
	}

	return this;
};

Date.defineParsers(
	'%Y([-./]%m([-./]%d((T| )%X)?)?)?', // "1999-12-31", "1999-12-31 11:59pm", "1999-12-31 23:59:59", ISO8601
	'%Y%m%d(T%H(%M%S?)?)?', // "19991231", "19991231T1159", compact
	'%x( %X)?', // "12/31", "12.31.99", "12-31-1999", "12/31/2008 11:59 PM"
	'%d%o( %b( %Y)?)?( %X)?', // "31st", "31st December", "31 Dec 1999", "31 Dec 1999 11:59pm"
	'%b( %d%o)?( %Y)?( %X)?', // Same as above with month and day switched
	'%Y %b( %d%o( %X)?)?', // Same as above with year coming first
	'%o %b %d %X %z %Y', // "Thu Oct 22 08:11:23 +0000 2009"
	'%T', // %H:%M:%S
	'%H:%M( ?%p)?' // "11:05pm", "11:05 am" and "11:05"
);

Locale.addEvent('change', function(language){
	if (Locale.get('Date')) recompile(language);
}).fireEvent('change', Locale.getCurrent());

})();

/*
---

name: Locale.en-US.Form.Validator

description: Form Validator messages for English.

license: MIT-style license

authors:
  - Aaron Newton

requires:
  - Locale

provides: [Locale.en-US.Form.Validator]

...
*/

Locale.define('en-US', 'FormValidator', {

	required: 'This field is required.',
	length: 'Please enter {length} characters (you entered {elLength} characters)',
	minLength: 'Please enter at least {minLength} characters (you entered {length} characters).',
	maxLength: 'Please enter no more than {maxLength} characters (you entered {length} characters).',
	integer: 'Please enter an integer in this field. Numbers with decimals (e.g. 1.25) are not permitted.',
	numeric: 'Please enter only numeric values in this field (i.e. "1" or "1.1" or "-1" or "-1.1").',
	digits: 'Please use numbers and punctuation only in this field (for example, a phone number with dashes or dots is permitted).',
	alpha: 'Please use only letters (a-z) within this field. No spaces or other characters are allowed.',
	alphanum: 'Please use only letters (a-z) or numbers (0-9) in this field. No spaces or other characters are allowed.',
	dateSuchAs: 'Please enter a valid date such as {date}',
	dateInFormatMDY: 'Please enter a valid date such as MM/DD/YYYY (i.e. "12/31/1999")',
	email: 'Please enter a valid email address. For example "fred@domain.com".',
	url: 'Please enter a valid URL such as http://www.example.com.',
	currencyDollar: 'Please enter a valid $ amount. For example $100.00 .',
	oneRequired: 'Please enter something for at least one of these inputs.',
	errorPrefix: 'Error: ',
	warningPrefix: 'Warning: ',

	// Form.Validator.Extras
	noSpace: 'There can be no spaces in this input.',
	reqChkByNode: 'No items are selected.',
	requiredChk: 'This field is required.',
	reqChkByName: 'Please select a {label}.',
	match: 'This field needs to match the {matchName} field',
	startDate: 'the start date',
	endDate: 'the end date',
	currentDate: 'the current date',
	afterDate: 'The date should be the same or after {label}.',
	beforeDate: 'The date should be the same or before {label}.',
	startMonth: 'Please select a start month',
	sameMonth: 'These two dates must be in the same month - you must change one or the other.',
	creditcard: 'The credit card number entered is invalid. Please check the number and try again. {length} digits entered.'

});

/*
---

script: Form.Validator.js

name: Form.Validator

description: A css-class based form validation system.

license: MIT-style license

authors:
  - Aaron Newton

requires:
  - Core/Options
  - Core/Events
  - Core/Element.Delegation
  - Core/Slick.Finder
  - Core/Element.Event
  - Core/Element.Style
  - Core/JSON
  - Locale
  - Class.Binds
  - Date
  - Element.Forms
  - Locale.en-US.Form.Validator
  - Element.Shortcuts

provides: [Form.Validator, InputValidator, FormValidator.BaseValidators]

...
*/
if (!window.Form) window.Form = {};

var InputValidator = this.InputValidator = new Class({

	Implements: [Options],

	options: {
		errorMsg: 'Validation failed.',
		test: Function.convert(true)
	},

	initialize: function(className, options){
		this.setOptions(options);
		this.className = className;
	},

	test: function(field, props){
		field = document.id(field);
		return (field) ? this.options.test(field, props || this.getProps(field)) : false;
	},

	getError: function(field, props){
		field = document.id(field);
		var err = this.options.errorMsg;
		if (typeOf(err) == 'function') err = err(field, props || this.getProps(field));
		return err;
	},

	getProps: function(field){
		field = document.id(field);
		return (field) ? field.get('validatorProps') : {};
	}

});

Element.Properties.validators = {

	get: function(){
		return (this.get('data-validators') || this.className).clean().replace(/'(\\.|[^'])*'|"(\\.|[^"])*"/g, function(match){
			return match.replace(' ', '\\x20');
		}).split(' ');
	}

};

Element.Properties.validatorProps = {

	set: function(props){
		return this.eliminate('$moo:validatorProps').store('$moo:validatorProps', props);
	},

	get: function(props){
		if (props) this.set(props);
		if (this.retrieve('$moo:validatorProps')) return this.retrieve('$moo:validatorProps');
		if (this.getProperty('data-validator-properties') || this.getProperty('validatorProps')){
			try {
				this.store('$moo:validatorProps', JSON.decode(this.getProperty('validatorProps') || this.getProperty('data-validator-properties'), false));
			} catch (e){
				return {};
			}
		} else {
			var vals = this.get('validators').filter(function(cls){
				return cls.test(':');
			});
			if (!vals.length){
				this.store('$moo:validatorProps', {});
			} else {
				props = {};
				vals.each(function(cls){
					var split = cls.split(':');
					if (split[1]){
						try {
							props[split[0]] = JSON.decode(split[1], false);
						} catch (e){}
					}
				});
				this.store('$moo:validatorProps', props);
			}
		}
		return this.retrieve('$moo:validatorProps');
	}

};

Form.Validator = new Class({

	Implements: [Options, Events],

	options: {/*
		onFormValidate: function(isValid, form, event){},
		onElementValidate: function(isValid, field, className, warn){},
		onElementPass: function(field){},
		onElementFail: function(field, validatorsFailed){}, */
		fieldSelectors: 'input, select, textarea',
		ignoreHidden: true,
		ignoreDisabled: true,
		useTitles: false,
		evaluateOnSubmit: true,
		evaluateFieldsOnBlur: true,
		evaluateFieldsOnChange: true,
		serial: true,
		stopOnFailure: true,
		warningPrefix: function(){
			return Form.Validator.getMsg('warningPrefix') || 'Warning: ';
		},
		errorPrefix: function(){
			return Form.Validator.getMsg('errorPrefix') || 'Error: ';
		}
	},

	initialize: function(form, options){
		this.setOptions(options);
		this.element = document.id(form);
		this.warningPrefix = Function.convert(this.options.warningPrefix)();
		this.errorPrefix = Function.convert(this.options.errorPrefix)();
		this._bound = {
			onSubmit: this.onSubmit.bind(this),
			blurOrChange: function(event, field){
				this.validationMonitor(field, true);
			}.bind(this)
		};
		this.enable();
	},

	toElement: function(){
		return this.element;
	},

	getFields: function(){
		return (this.fields = this.element.getElements(this.options.fieldSelectors));
	},

	enable: function(){
		this.element.store('validator', this);
		if (this.options.evaluateOnSubmit) this.element.addEvent('submit', this._bound.onSubmit);
		if (this.options.evaluateFieldsOnBlur){
			this.element.addEvent('blur:relay(input,select,textarea)', this._bound.blurOrChange);
		}
		if (this.options.evaluateFieldsOnChange){
			this.element.addEvent('change:relay(input,select,textarea)', this._bound.blurOrChange);
		}
	},

	disable: function(){
		this.element.eliminate('validator');
		this.element.removeEvents({
			submit: this._bound.onSubmit,
			'blur:relay(input,select,textarea)': this._bound.blurOrChange,
			'change:relay(input,select,textarea)': this._bound.blurOrChange
		});
	},

	validationMonitor: function(){
		clearTimeout(this.timer);
		this.timer = this.validateField.delay(50, this, arguments);
	},

	onSubmit: function(event){
		if (this.validate(event)) this.reset();
	},

	reset: function(){
		this.getFields().each(this.resetField, this);
		return this;
	},

	validate: function(event){
		var result = this.getFields().map(function(field){
			return this.validateField(field, true);
		}, this).every(function(v){
			return v;
		});
		this.fireEvent('formValidate', [result, this.element, event]);
		if (this.options.stopOnFailure && !result && event) event.preventDefault();
		return result;
	},

	validateField: function(field, force){
		if (this.paused) return true;
		field = document.id(field);
		var passed = !field.hasClass('validation-failed');
		var failed, warned;
		if (this.options.serial && !force){
			failed = this.element.getElement('.validation-failed');
			warned = this.element.getElement('.warning');
		}
		if (field && (!failed || force || field.hasClass('validation-failed') || (failed && !this.options.serial))){
			var validationTypes = field.get('validators');
			var validators = validationTypes.some(function(cn){
				return this.getValidator(cn);
			}, this);
			var validatorsFailed = [];
			validationTypes.each(function(className){
				if (className && !this.test(className, field)) validatorsFailed.include(className);
			}, this);
			passed = validatorsFailed.length === 0;
			if (validators && !this.hasValidator(field, 'warnOnly')){
				if (passed){
					field.addClass('validation-passed').removeClass('validation-failed');
					this.fireEvent('elementPass', [field]);
				} else {
					field.addClass('validation-failed').removeClass('validation-passed');
					this.fireEvent('elementFail', [field, validatorsFailed]);
				}
			}
			if (!warned){
				var warnings = validationTypes.some(function(cn){
					if (cn.test('^warn'))
						return this.getValidator(cn.replace(/^warn-/,''));
					else return null;
				}, this);
				field.removeClass('warning');
				var warnResult = validationTypes.map(function(cn){
					if (cn.test('^warn'))
						return this.test(cn.replace(/^warn-/,''), field, true);
					else return null;
				}, this);
			}
		}
		return passed;
	},

	test: function(className, field, warn){
		field = document.id(field);
		if ((this.options.ignoreHidden && !field.isVisible()) || (this.options.ignoreDisabled && field.get('disabled'))) return true;
		var validator = this.getValidator(className);
		if (warn != null) warn = false;
		if (this.hasValidator(field, 'warnOnly')) warn = true;
		var isValid = field.hasClass('ignoreValidation') || (validator ? validator.test(field) : true);
		if (validator) this.fireEvent('elementValidate', [isValid, field, className, warn]);
		if (warn) return true;
		return isValid;
	},

	hasValidator: function(field, value){
		return field.get('validators').contains(value);
	},

	resetField: function(field){
		field = document.id(field);
		if (field){
			field.get('validators').each(function(className){
				if (className.test('^warn-')) className = className.replace(/^warn-/, '');
				field.removeClass('validation-failed');
				field.removeClass('warning');
				field.removeClass('validation-passed');
			}, this);
		}
		return this;
	},

	stop: function(){
		this.paused = true;
		return this;
	},

	start: function(){
		this.paused = false;
		return this;
	},

	ignoreField: function(field, warn){
		field = document.id(field);
		if (field){
			this.enforceField(field);
			if (warn) field.addClass('warnOnly');
			else field.addClass('ignoreValidation');
		}
		return this;
	},

	enforceField: function(field){
		field = document.id(field);
		if (field) field.removeClass('warnOnly').removeClass('ignoreValidation');
		return this;
	}

});

Form.Validator.getMsg = function(key){
	return Locale.get('FormValidator.' + key);
};

Form.Validator.adders = {

	validators:{},

	add : function(className, options){
		this.validators[className] = new InputValidator(className, options);
		//if this is a class (this method is used by instances of Form.Validator and the Form.Validator namespace)
		//extend these validators into it
		//this allows validators to be global and/or per instance
		if (!this.initialize){
			this.implement({
				validators: this.validators
			});
		}
	},

	addAllThese : function(validators){
		Array.convert(validators).each(function(validator){
			this.add(validator[0], validator[1]);
		}, this);
	},

	getValidator: function(className){
		return this.validators[className.split(':')[0]];
	}

};

Object.append(Form.Validator, Form.Validator.adders);

Form.Validator.implement(Form.Validator.adders);

Form.Validator.add('IsEmpty', {

	errorMsg: false,
	test: function(element){
		if (element.type == 'select-one' || element.type == 'select')
			return !(element.selectedIndex >= 0 && element.options[element.selectedIndex].value != '');
		else
			return ((element.get('value') == null) || (element.get('value').length == 0));
	}

});

Form.Validator.addAllThese([

	['required', {
		errorMsg: function(){
			return Form.Validator.getMsg('required');
		},
		test: function(element){
			return !Form.Validator.getValidator('IsEmpty').test(element);
		}
	}],

	['length', {
		errorMsg: function(element, props){
			if (typeOf(props.length) != 'null')
				return Form.Validator.getMsg('length').substitute({length: props.length, elLength: element.get('value').length});
			else return '';
		},
		test: function(element, props){
			if (typeOf(props.length) != 'null') return (element.get('value').length == props.length || element.get('value').length == 0);
			else return true;
		}
	}],

	['minLength', {
		errorMsg: function(element, props){
			if (typeOf(props.minLength) != 'null')
				return Form.Validator.getMsg('minLength').substitute({minLength: props.minLength, length: element.get('value').length});
			else return '';
		},
		test: function(element, props){
			if (typeOf(props.minLength) != 'null') return (element.get('value').length >= (props.minLength || 0));
			else return true;
		}
	}],

	['maxLength', {
		errorMsg: function(element, props){
			//props is {maxLength:10}
			if (typeOf(props.maxLength) != 'null')
				return Form.Validator.getMsg('maxLength').substitute({maxLength: props.maxLength, length: element.get('value').length});
			else return '';
		},
		test: function(element, props){
			return element.get('value').length <= (props.maxLength || 10000);
		}
	}],

	['validate-integer', {
		errorMsg: Form.Validator.getMsg.pass('integer'),
		test: function(element){
			return Form.Validator.getValidator('IsEmpty').test(element) || (/^(-?[1-9]\d*|0)$/).test(element.get('value'));
		}
	}],

	['validate-numeric', {
		errorMsg: Form.Validator.getMsg.pass('numeric'),
		test: function(element){
			return Form.Validator.getValidator('IsEmpty').test(element) ||
				(/^-?(?:0$0(?=\d*\.)|[1-9]|0)\d*(\.\d+)?$/).test(element.get('value'));
		}
	}],

	['validate-digits', {
		errorMsg: Form.Validator.getMsg.pass('digits'),
		test: function(element){
			return Form.Validator.getValidator('IsEmpty').test(element) || (/^[\d() .:\-\+#]+$/.test(element.get('value')));
		}
	}],

	['validate-alpha', {
		errorMsg: Form.Validator.getMsg.pass('alpha'),
		test: function(element){
			return Form.Validator.getValidator('IsEmpty').test(element) || (/^[a-zA-Z]+$/).test(element.get('value'));
		}
	}],

	['validate-alphanum', {
		errorMsg: Form.Validator.getMsg.pass('alphanum'),
		test: function(element){
			return Form.Validator.getValidator('IsEmpty').test(element) || !(/\W/).test(element.get('value'));
		}
	}],

	['validate-date', {
		errorMsg: function(element, props){
			if (Date.parse){
				var format = props.dateFormat || '%x';
				return Form.Validator.getMsg('dateSuchAs').substitute({date: new Date().format(format)});
			} else {
				return Form.Validator.getMsg('dateInFormatMDY');
			}
		},
		test: function(element, props){
			if (Form.Validator.getValidator('IsEmpty').test(element)) return true;
			var dateLocale = Locale.get('Date'),
				dateNouns = new RegExp([dateLocale.days, dateLocale.days_abbr, dateLocale.months, dateLocale.months_abbr, dateLocale.AM, dateLocale.PM].flatten().join('|'), 'i'),
				value = element.get('value'),
				wordsInValue = value.match(/[a-z]+/gi);

			if (wordsInValue && !wordsInValue.every(dateNouns.exec, dateNouns)) return false;

			var date = Date.parse(value);
			if (!date) return false;

			var format = props.dateFormat || '%x',
				formatted = date.format(format);
			if (formatted != 'invalid date') element.set('value', formatted);
			return date.isValid();
		}
	}],

	['validate-email', {
		errorMsg: Form.Validator.getMsg.pass('email'),
		test: function(element){
			/*
			var chars = "[a-z0-9!#$%&'*+/=?^_`{|}~-]",
				local = '(?:' + chars + '\\.?){0,63}' + chars,

				label = '[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?',
				hostname = '(?:' + label + '\\.)*' + label;

				octet = '(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)',
				ipv4 = '\\[(?:' + octet + '\\.){3}' + octet + '\\]',

				domain = '(?:' + hostname + '|' + ipv4 + ')';

			var regex = new RegExp('^' + local + '@' + domain + '$', 'i');
			*/
			return Form.Validator.getValidator('IsEmpty').test(element) || (/^(?:[a-z0-9!#$%&'*+\/=?^_`{|}~-]\.?){0,63}[a-z0-9!#$%&'*+\/=?^_`{|}~-]@(?:(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\.)*[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\])$/i).test(element.get('value'));
		}
	}],

	['validate-url', {
		errorMsg: Form.Validator.getMsg.pass('url'),
		test: function(element){
			return Form.Validator.getValidator('IsEmpty').test(element) || (/^(https?|ftp|rmtp|mms):\/\/(([A-Z0-9][A-Z0-9_-]*)(\.[A-Z0-9][A-Z0-9_-]*)+)(:(\d+))?\/?/i).test(element.get('value'));
		}
	}],

	['validate-currency-dollar', {
		errorMsg: Form.Validator.getMsg.pass('currencyDollar'),
		test: function(element){
			return Form.Validator.getValidator('IsEmpty').test(element) || (/^\$?\-?([1-9]{1}[0-9]{0,2}(\,[0-9]{3})*(\.[0-9]{0,2})?|[1-9]{1}\d*(\.[0-9]{0,2})?|0(\.[0-9]{0,2})?|(\.[0-9]{1,2})?)$/).test(element.get('value'));
		}
	}],

	['validate-one-required', {
		errorMsg: Form.Validator.getMsg.pass('oneRequired'),
		test: function(element, props){
			var p = document.id(props['validate-one-required']) || element.getParent(props['validate-one-required']);
			return p.getElements('input').some(function(el){
				if (['checkbox', 'radio'].contains(el.get('type'))) return el.get('checked');
				return el.get('value');
			});
		}
	}]

]);

Element.Properties.validator = {

	set: function(options){
		this.get('validator').setOptions(options);
	},

	get: function(){
		var validator = this.retrieve('validator');
		if (!validator){
			validator = new Form.Validator(this);
			this.store('validator', validator);
		}
		return validator;
	}

};

Element.implement({

	validate: function(options){
		if (options) this.set('validator', options);
		return this.get('validator').validate();
	}

});






/*
---

script: Form.Validator.Extras.js

name: Form.Validator.Extras

description: Additional validators for the Form.Validator class.

license: MIT-style license

authors:
  - Aaron Newton

requires:
  - Form.Validator

provides: [Form.Validator.Extras]

...
*/

(function(){

function getItems(props, preference, children, cssSelector){
	if (preference && props[preference]) return props[preference];
	var el = document.id(props[children]);
	if (!el) return [];
	return el.getElements(cssSelector);
}

Form.Validator.addAllThese([

	['validate-enforce-oncheck', {
		test: function(element, props){
			var fv = element.getParent('form').retrieve('validator');
			if (!fv) return true;
			getItems(props, 'toEnforce', 'enforceChildrenOf', 'input, select, textarea').each(function(item){
				if (element.checked){
					fv.enforceField(item);
				} else {
					fv.ignoreField(item);
					fv.resetField(item);
				}
			});
			return true;
		}
	}],

	['validate-ignore-oncheck', {
		test: function(element, props){
			var fv = element.getParent('form').retrieve('validator');
			if (!fv) return true;
			getItems(props, 'toIgnore', 'ignoreChildrenOf', 'input, select, textarea').each(function(item){
				if (element.checked){
					fv.ignoreField(item);
					fv.resetField(item);
				} else {
					fv.enforceField(item);
				}
			});
			return true;
		}
	}],

	['validate-enforce-onselect-value', {
		test: function(element, props){
			if (!props.value) return true;
			var fv = element.getParent('form').retrieve('validator');
			if (!fv) return true;
			getItems(props, 'toEnforce', 'enforceChildrenOf', 'input, select, textarea').each(function(item){
				if (props.value == element.value){
					fv.enforceField(item);
				} else {
					fv.ignoreField(item);
					fv.resetField(item);
				}
			});
			return true;
		}
	}],

	['validate-nospace', {
		errorMsg: function(){
			return Form.Validator.getMsg('noSpace');
		},
		test: function(element, props){
			return !element.get('value').test(/\s/);
		}
	}],

	['validate-toggle-oncheck', {
		test: function(element, props){
			var fv = element.getParent('form').retrieve('validator');
			if (!fv) return true;
			var eleArr = getItems(props, 'toToggle', 'toToggleChildrenOf', 'input, select, textarea');
			if (!element.checked){
				eleArr.each(function(item){
					fv.ignoreField(item);
					fv.resetField(item);
				});
			} else {
				eleArr.each(function(item){
					fv.enforceField(item);
				});
			}
			return true;
		}
	}],

	['validate-reqchk-bynode', {
		errorMsg: function(){
			return Form.Validator.getMsg('reqChkByNode');
		},
		test: function(element, props){
			return getItems(props, false, 'nodeId', props.selector || 'input[type=checkbox], input[type=radio]').some(function(item){
				return item.checked;
			});
		}
	}],

	['validate-required-check', {
		errorMsg: function(element, props){
			return props.useTitle ? element.get('title') : Form.Validator.getMsg('requiredChk');
		},
		test: function(element, props){
			return !!element.checked;
		}
	}],

	['validate-reqchk-byname', {
		errorMsg: function(element, props){
			return Form.Validator.getMsg('reqChkByName').substitute({label: props.label || element.get('type')});
		},
		test: function(element, props){
			var grpName = props.groupName || element.get('name');
			var grpNameEls = $$('[name=' + grpName +']');
			var oneCheckedItem = grpNameEls.some(function(item, index){
				return item.checked;
			});
			var fv = element.getParent('form').retrieve('validator');
			if (oneCheckedItem && fv){
				grpNameEls.each(function(item, index){ fv.resetField(item); });
			}
			return oneCheckedItem;
		}
	}],

	['validate-match', {
		errorMsg: function(element, props){
			return Form.Validator.getMsg('match').substitute({matchName: decodeURIComponent((props.matchName+'').replace(/\+/g, '%20')) || document.id(props.matchInput).get('name')});
		},
		test: function(element, props){
			var eleVal = element.get('value');
			var matchVal = document.id(props.matchInput) && document.id(props.matchInput).get('value');
			return eleVal && matchVal ? eleVal == matchVal : true;
		}
	}],

	['validate-after-date', {
		errorMsg: function(element, props){
			return Form.Validator.getMsg('afterDate').substitute({
				label: props.afterLabel || (props.afterElement ? Form.Validator.getMsg('startDate') : Form.Validator.getMsg('currentDate'))
			});
		},
		test: function(element, props){
			var start = document.id(props.afterElement) ? Date.parse(document.id(props.afterElement).get('value')) : new Date();
			var end = Date.parse(element.get('value'));
			return end && start ? end >= start : true;
		}
	}],

	['validate-before-date', {
		errorMsg: function(element, props){
			return Form.Validator.getMsg('beforeDate').substitute({
				label: props.beforeLabel || (props.beforeElement ? Form.Validator.getMsg('endDate') : Form.Validator.getMsg('currentDate'))
			});
		},
		test: function(element, props){
			var start = Date.parse(element.get('value'));
			var end = document.id(props.beforeElement) ? Date.parse(document.id(props.beforeElement).get('value')) : new Date();
			return end && start ? end >= start : true;
		}
	}],

	['validate-custom-required', {
		errorMsg: function(){
			return Form.Validator.getMsg('required');
		},
		test: function(element, props){
			return element.get('value') != props.emptyValue;
		}
	}],

	['validate-same-month', {
		errorMsg: function(element, props){
			var startMo = document.id(props.sameMonthAs) && document.id(props.sameMonthAs).get('value');
			var eleVal = element.get('value');
			if (eleVal != '') return Form.Validator.getMsg(startMo ? 'sameMonth' : 'startMonth');
		},
		test: function(element, props){
			var d1 = Date.parse(element.get('value'));
			var d2 = Date.parse(document.id(props.sameMonthAs) && document.id(props.sameMonthAs).get('value'));
			return d1 && d2 ? d1.format('%B') == d2.format('%B') : true;
		}
	}],


	['validate-cc-num', {
		errorMsg: function(element){
			var ccNum = element.get('value').replace(/[^0-9]/g, '');
			return Form.Validator.getMsg('creditcard').substitute({length: ccNum.length});
		},
		test: function(element){
			// required is a different test
			if (Form.Validator.getValidator('IsEmpty').test(element)) return true;

			// Clean number value
			var ccNum = element.get('value');
			ccNum = ccNum.replace(/[^0-9]/g, '');

			var validType = false;

			if (ccNum.test(/^4[0-9]{12}([0-9]{3})?$/)) validType = 'Visa';
			else if (ccNum.test(/^5[1-5]([0-9]{14})$/)) validType = 'Master Card';
			else if (ccNum.test(/^3[47][0-9]{13}$/)) validType = 'American Express';
			else if (ccNum.test(/^6(?:011|5[0-9]{2})[0-9]{12}$/)) validType = 'Discover';
			else if (ccNum.test(/^3(?:0[0-5]|[68][0-9])[0-9]{11}$/)) validType = 'Diners Club';

			if (validType){
				var sum = 0;
				var cur = 0;

				for (var i=ccNum.length-1; i>=0; --i){
					cur = ccNum.charAt(i).toInt();
					if (cur == 0) continue;

					if ((ccNum.length-i) % 2 == 0) cur += cur;
					if (cur > 9){
						cur = cur.toString().charAt(0).toInt() + cur.toString().charAt(1).toInt();
					}

					sum += cur;
				}
				if ((sum % 10) == 0) return true;
			}

			var chunks = '';
			while (ccNum != ''){
				chunks += ' ' + ccNum.substr(0,4);
				ccNum = ccNum.substr(4);
			}

			element.getParent('form').retrieve('validator').ignoreField(element);
			element.set('value', chunks.clean());
			element.getParent('form').retrieve('validator').enforceField(element);
			return false;
		}
	}]

]);

})();

/*
---

script: Form.Validator.Inline.js

name: Form.Validator.Inline

description: Extends Form.Validator to add inline messages.

license: MIT-style license

authors:
  - Aaron Newton

requires:
  - Form.Validator

provides: [Form.Validator.Inline]

...
*/

Form.Validator.Inline = new Class({

	Extends: Form.Validator,

	options: {
		showError: function(errorElement){
			if (errorElement.reveal) errorElement.reveal();
			else errorElement.setStyle('display', 'block');
		},
		hideError: function(errorElement){
			if (errorElement.dissolve) errorElement.dissolve();
			else errorElement.setStyle('display', 'none');
		},
		scrollToErrorsOnSubmit: true,
		scrollToErrorsOnBlur: false,
		scrollToErrorsOnChange: false,
		scrollFxOptions: {
			transition: 'quad:out',
			offset: {
				y: -20
			}
		}
	},

	initialize: function(form, options){
		this.parent(form, options);
		this.addEvent('onElementValidate', function(isValid, field, className, warn){
			var validator = this.getValidator(className);
			if (!isValid && validator.getError(field)){
				if (warn) field.addClass('warning');
				var advice = this.makeAdvice(className, field, validator.getError(field), warn);
				this.insertAdvice(advice, field);
				this.showAdvice(className, field);
			} else {
				this.hideAdvice(className, field);
			}
		});
	},

	makeAdvice: function(className, field, error, warn){
		var errorMsg = (warn) ? this.warningPrefix : this.errorPrefix;
		errorMsg += (this.options.useTitles) ? field.title || error:error;
		var cssClass = (warn) ? 'warning-advice' : 'validation-advice';
		var advice = this.getAdvice(className, field);
		if (advice){
			advice = advice.set('html', errorMsg);
		} else {
			advice = new Element('div', {
				html: errorMsg,
				styles: { display: 'none' },
				id: 'advice-' + className.split(':')[0] + '-' + this.getFieldId(field)
			}).addClass(cssClass);
		}
		field.store('$moo:advice-' + className, advice);
		return advice;
	},

	getFieldId : function(field){
		return field.id ? field.id : field.id = 'input_' + field.name;
	},

	showAdvice: function(className, field){
		var advice = this.getAdvice(className, field);
		if (
			advice &&
			!field.retrieve('$moo:' + this.getPropName(className)) &&
			(
				advice.getStyle('display') == 'none' ||
				advice.getStyle('visibility') == 'hidden' ||
				advice.getStyle('opacity') == 0
			)
		){
			field.store('$moo:' + this.getPropName(className), true);
			this.options.showError(advice);
			this.fireEvent('showAdvice', [field, advice, className]);
		}
	},

	hideAdvice: function(className, field){
		var advice = this.getAdvice(className, field);
		if (advice && field.retrieve('$moo:' + this.getPropName(className))){
			field.store('$moo:' + this.getPropName(className), false);
			this.options.hideError(advice);
			this.fireEvent('hideAdvice', [field, advice, className]);
		}
	},

	getPropName: function(className){
		return 'advice' + className;
	},

	resetField: function(field){
		field = document.id(field);
		if (!field) return this;
		this.parent(field);
		field.get('validators').each(function(className){
			this.hideAdvice(className, field);
		}, this);
		return this;
	},

	getAllAdviceMessages: function(field, force){
		var advice = [];
		if (field.hasClass('ignoreValidation') && !force) return advice;
		var validators = field.get('validators').some(function(cn){
			var warner = cn.test('^warn-') || field.hasClass('warnOnly');
			if (warner) cn = cn.replace(/^warn-/, '');
			var validator = this.getValidator(cn);
			if (!validator) return;
			advice.push({
				message: validator.getError(field),
				warnOnly: warner,
				passed: validator.test(),
				validator: validator
			});
		}, this);
		return advice;
	},

	getAdvice: function(className, field){
		return field.retrieve('$moo:advice-' + className);
	},

	insertAdvice: function(advice, field){
		//Check for error position prop
		var props = field.get('validatorProps');
		//Build advice
		if (!props.msgPos || !document.id(props.msgPos)){
			if (field.type && field.type.toLowerCase() == 'radio') field.getParent().adopt(advice);
			else advice.inject(document.id(field), 'after');
		} else {
			document.id(props.msgPos).grab(advice);
		}
	},

	validateField: function(field, force, scroll){
		var result = this.parent(field, force);
		if (((this.options.scrollToErrorsOnSubmit && scroll == null) || scroll) && !result){
			var failed = document.id(this).getElement('.validation-failed');
			var par = document.id(this).getParent();
			while (par != document.body && par.getScrollSize().y == par.getSize().y){
				par = par.getParent();
			}
			var fx = par.retrieve('$moo:fvScroller');
			if (!fx && window.Fx && Fx.Scroll){
				fx = new Fx.Scroll(par, this.options.scrollFxOptions);
				par.store('$moo:fvScroller', fx);
			}
			if (failed){
				if (fx) fx.toElement(failed);
				else par.scrollTo(par.getScroll().x, failed.getPosition(par).y - 20);
			}
		}
		return result;
	},

	watchFields: function(fields){
		fields.each(function(el){
			if (this.options.evaluateFieldsOnBlur){
				el.addEvent('blur', this.validationMonitor.pass([el, false, this.options.scrollToErrorsOnBlur], this));
			}
			if (this.options.evaluateFieldsOnChange){
				el.addEvent('change', this.validationMonitor.pass([el, true, this.options.scrollToErrorsOnChange], this));
			}
		}, this);
	}

});

/*
---

script: OverText.js

name: OverText

description: Shows text over an input that disappears when the user clicks into it. The text remains hidden if the user adds a value.

license: MIT-style license

authors:
  - Aaron Newton

requires:
  - Core/Options
  - Core/Events
  - Core/Element.Event
  - Class.Binds
  - Class.Occlude
  - Element.Position
  - Element.Shortcuts

provides: [OverText]

...
*/
(function(){

var OverText = this.OverText = new Class({

	Implements: [Options, Events, Class.Occlude],

	Binds: ['reposition', 'assert', 'focus', 'hide'],

	options: {/*
		textOverride: null,
		onFocus: function(){},
		onTextHide: function(textEl, inputEl){},
		onTextShow: function(textEl, inputEl){}, */
		element: 'label',
		labelClass: 'overTxtLabel',
		positionOptions: {
			position: 'upperLeft',
			edge: 'upperLeft',
			offset: {
				x: 4,
				y: 2
			}
		},
		poll: false,
		pollInterval: 250,
		wrap: false
	},

	property: 'OverText',

	initialize: function(element, options){
		element = this.element = document.id(element);

		if (this.occlude()) return this.occluded;
		this.setOptions(options);

		this.attach(element);
		OverText.instances.push(this);

		if (this.options.poll) this.poll();
	},

	toElement: function(){
		return this.element;
	},

	attach: function(){
		var element = this.element,
			options = this.options,
			value = options.textOverride || element.get('alt') || element.get('title');

		if (!value) return this;

		var text = this.text = new Element(options.element, {
			'class': options.labelClass,
			styles: {
				lineHeight: 'normal',
				position: 'absolute',
				cursor: 'text'
			},
			html: value,
			events: {
				click: this.hide.pass(options.element == 'label', this)
			}
		}).inject(element, 'after');

		if (options.element == 'label'){
			if (!element.get('id')) element.set('id', 'input_' + String.uniqueID());
			text.set('for', element.get('id'));
		}

		if (options.wrap){
			this.textHolder = new Element('div.overTxtWrapper', {
				styles: {
					lineHeight: 'normal',
					position: 'relative'
				}
			}).grab(text).inject(element, 'before');
		}

		return this.enable();
	},

	destroy: function(){
		this.element.eliminate(this.property); // Class.Occlude storage
		this.disable();
		if (this.text) this.text.destroy();
		if (this.textHolder) this.textHolder.destroy();
		return this;
	},

	disable: function(){
		this.element.removeEvents({
			focus: this.focus,
			blur: this.assert,
			change: this.assert
		});
		window.removeEvent('resize', this.reposition);
		this.hide(true, true);
		return this;
	},

	enable: function(){
		this.element.addEvents({
			focus: this.focus,
			blur: this.assert,
			change: this.assert
		});
		window.addEvent('resize', this.reposition);
		this.reposition();
		return this;
	},

	wrap: function(){
		if (this.options.element == 'label'){
			if (!this.element.get('id')) this.element.set('id', 'input_' + String.uniqueID());
			this.text.set('for', this.element.get('id'));
		}
	},

	startPolling: function(){
		this.pollingPaused = false;
		return this.poll();
	},

	poll: function(stop){
		//start immediately
		//pause on focus
		//resumeon blur
		if (this.poller && !stop) return this;
		if (stop){
			clearInterval(this.poller);
		} else {
			this.poller = (function(){
				if (!this.pollingPaused) this.assert(true);
			}).periodical(this.options.pollInterval, this);
		}

		return this;
	},

	stopPolling: function(){
		this.pollingPaused = true;
		return this.poll(true);
	},

	focus: function(){
		if (this.text && (!this.text.isDisplayed() || this.element.get('disabled'))) return this;
		return this.hide();
	},

	hide: function(suppressFocus, force){
		if (this.text && (this.text.isDisplayed() && (!this.element.get('disabled') || force))){
			this.text.hide();
			this.fireEvent('textHide', [this.text, this.element]);
			this.pollingPaused = true;
			if (!suppressFocus){
				try {
					this.element.fireEvent('focus');
					this.element.focus();
				} catch (e){} //IE barfs if you call focus on hidden elements
			}
		}
		return this;
	},

	show: function(){
		if (document.id(this.text) && !this.text.isDisplayed()){
			this.text.show();
			this.reposition();
			this.fireEvent('textShow', [this.text, this.element]);
			this.pollingPaused = false;
		}
		return this;
	},

	test: function(){
		return !this.element.get('value');
	},

	assert: function(suppressFocus){
		return this[this.test() ? 'show' : 'hide'](suppressFocus);
	},

	reposition: function(){
		this.assert(true);
		if (!this.element.isVisible()) return this.stopPolling().hide();
		if (this.text && this.test()){
			this.text.position(Object.merge(this.options.positionOptions, {
				relativeTo: this.element
			}));
		}
		return this;
	}

});

})();

OverText.instances = [];

Object.append(OverText, {

	each: function(fn){
		return OverText.instances.each(function(ot, i){
			if (ot.element && ot.text) fn.call(OverText, ot, i);
		});
	},

	update: function(){

		return OverText.each(function(ot){
			return ot.reposition();
		});

	},

	hideAll: function(){

		return OverText.each(function(ot){
			return ot.hide(true, true);
		});

	},

	showAll: function(){
		return OverText.each(function(ot){
			return ot.show();
		});
	}

});


/*
---

script: Fx.Elements.js

name: Fx.Elements

description: Effect to change any number of CSS properties of any number of Elements.

license: MIT-style license

authors:
  - Valerio Proietti

requires:
  - Core/Fx.CSS
  - MooTools.More

provides: [Fx.Elements]

...
*/

Fx.Elements = new Class({

	Extends: Fx.CSS,

	initialize: function(elements, options){
		this.elements = this.subject = $$(elements);
		this.parent(options);
	},

	compute: function(from, to, delta){
		var now = {};

		for (var i in from){
			var iFrom = from[i], iTo = to[i], iNow = now[i] = {};
			for (var p in iFrom) iNow[p] = this.parent(iFrom[p], iTo[p], delta);
		}

		return now;
	},

	set: function(now){
		for (var i in now){
			if (!this.elements[i]) continue;

			var iNow = now[i];
			for (var p in iNow) this.render(this.elements[i], p, iNow[p], this.options.unit);
		}

		return this;
	},

	start: function(obj){
		if (!this.check(obj)) return this;
		var from = {}, to = {};

		for (var i in obj){
			if (!this.elements[i]) continue;

			var iProps = obj[i], iFrom = from[i] = {}, iTo = to[i] = {};

			for (var p in iProps){
				var parsed = this.prepare(this.elements[i], p, iProps[p]);
				iFrom[p] = parsed.from;
				iTo[p] = parsed.to;
			}
		}

		return this.parent(from, to);
	}

});

/*
---

script: Fx.Accordion.js

name: Fx.Accordion

description: An Fx.Elements extension which allows you to easily create accordion type controls.

license: MIT-style license

authors:
  - Valerio Proietti

requires:
  - Core/Element.Event
  - Fx.Elements

provides: [Fx.Accordion]

...
*/

Fx.Accordion = new Class({

	Extends: Fx.Elements,

	options: {/*
		onActive: function(toggler, section){},
		onBackground: function(toggler, section){},*/
		fixedHeight: false,
		fixedWidth: false,
		display: 0,
		show: false,
		height: true,
		width: false,
		opacity: true,
		alwaysHide: false,
		trigger: 'click',
		initialDisplayFx: true,
		resetHeight: true,
		keepOpen: false
	},

	initialize: function(){
		var defined = function(obj){
			return obj != null;
		};

		var params = Array.link(arguments, {
			'container': Type.isElement, //deprecated
			'options': Type.isObject,
			'togglers': defined,
			'elements': defined
		});
		this.parent(params.elements, params.options);

		var options = this.options,
			togglers = this.togglers = $$(params.togglers);

		this.previous = -1;
		this.internalChain = new Chain();

		if (options.alwaysHide) this.options.link = 'chain';

		if (options.show || this.options.show === 0){
			options.display = false;
			this.previous = options.show;
		}

		if (options.start){
			options.display = false;
			options.show = false;
		}

		var effects = this.effects = {};

		if (options.opacity) effects.opacity = 'fullOpacity';
		if (options.width) effects.width = options.fixedWidth ? 'fullWidth' : 'offsetWidth';
		if (options.height) effects.height = options.fixedHeight ? 'fullHeight' : 'scrollHeight';

		for (var i = 0, l = togglers.length; i < l; i++) this.addSection(togglers[i], this.elements[i]);

		this.elements.each(function(el, i){
			if (options.show === i){
				this.fireEvent('active', [togglers[i], el]);
			} else {
				for (var fx in effects) el.setStyle(fx, 0);
			}
		}, this);

		if (options.display || options.display === 0 || options.initialDisplayFx === false){
			this.display(options.display, options.initialDisplayFx);
		}

		if (options.fixedHeight !== false) options.resetHeight = false;
		this.addEvent('complete', this.internalChain.callChain.bind(this.internalChain));
	},

	addSection: function(toggler, element){
		toggler = document.id(toggler);
		element = document.id(element);
		this.togglers.include(toggler);
		this.elements.include(element);

		var togglers = this.togglers,
			options = this.options,
			test = togglers.contains(toggler),
			idx = togglers.indexOf(toggler),
			displayer = this.display.pass(idx, this);

		toggler.store('accordion:display', displayer)
			.addEvent(options.trigger, displayer);

		if (options.height) element.setStyles({'padding-top': 0, 'border-top': 'none', 'padding-bottom': 0, 'border-bottom': 'none'});
		if (options.width) element.setStyles({'padding-left': 0, 'border-left': 'none', 'padding-right': 0, 'border-right': 'none'});

		element.fullOpacity = 1;
		if (options.fixedWidth) element.fullWidth = options.fixedWidth;
		if (options.fixedHeight) element.fullHeight = options.fixedHeight;
		element.setStyle('overflow', 'hidden');

		if (!test) for (var fx in this.effects){
			element.setStyle(fx, 0);
		}
		return this;
	},

	removeSection: function(toggler, displayIndex){
		var togglers = this.togglers,
			idx = togglers.indexOf(toggler),
			element = this.elements[idx];

		var remover = function(){
			togglers.erase(toggler);
			this.elements.erase(element);
			this.detach(toggler);
		}.bind(this);

		if (this.now == idx || displayIndex != null){
			this.display(displayIndex != null ? displayIndex : (idx - 1 >= 0 ? idx - 1 : 0)).chain(remover);
		} else {
			remover();
		}
		return this;
	},

	detach: function(toggler){
		var remove = function(toggler){
			toggler.removeEvent(this.options.trigger, toggler.retrieve('accordion:display'));
		}.bind(this);

		if (!toggler) this.togglers.each(remove);
		else remove(toggler);
		return this;
	},

	display: function(index, useFx){
		if (!this.check(index, useFx)) return this;

		var obj = {},
			elements = this.elements,
			options = this.options,
			effects = this.effects,
			keepOpen = options.keepOpen,
			alwaysHide = options.alwaysHide;

		if (useFx == null) useFx = true;
		if (typeOf(index) == 'element') index = elements.indexOf(index);
		if (index == this.current && !alwaysHide && !keepOpen) return this;

		if (options.resetHeight){
			var prev = elements[this.current];
			if (prev && !this.selfHidden){
				for (var fx in effects) prev.setStyle(fx, prev[effects[fx]]);
			}
		}

		if (this.timer && options.link == 'chain') return this;

		if (this.current != null) this.previous = this.current;
		this.current = index;
		this.selfHidden = false;

		elements.each(function(el, i){
			obj[i] = {};
			var hide, isOpen;
			if (!keepOpen || i == index){
				if (i == index) isOpen = (el.offsetHeight > 0 && options.height) || (el.offsetWidth > 0 && options.width);

				if (i != index){
					hide = true;
				} else if ((alwaysHide || keepOpen) && isOpen){
					hide = true;
					this.selfHidden = true;
				}
				this.fireEvent(hide ? 'background' : 'active', [this.togglers[i], el]);
				for (var fx in effects) obj[i][fx] = hide ? 0 : el[effects[fx]];
				if (!useFx && !hide && options.resetHeight) obj[i].height = 'auto';
			}
		}, this);

		this.internalChain.clearChain();
		this.internalChain.chain(function(){
			if (options.resetHeight && !this.selfHidden){
				var el = elements[index];
				if (el) el.setStyle('height', 'auto');
			}
		}.bind(this));

		return useFx ? this.start(obj) : this.set(obj).internalChain.callChain();
	}

});



/*
---

script: Fx.Move.js

name: Fx.Move

description: Defines Fx.Move, a class that works with Element.Position.js to transition an element from one location to another.

license: MIT-style license

authors:
  - Aaron Newton

requires:
  - Core/Fx.Morph
  - Element.Position

provides: [Fx.Move]

...
*/

Fx.Move = new Class({

	Extends: Fx.Morph,

	options: {
		relativeTo: document.body,
		position: 'center',
		edge: false,
		offset: {x: 0, y: 0}
	},

	start: function(destination){
		var element = this.element,
			topLeft = element.getStyles('top', 'left');
		if (topLeft.top == 'auto' || topLeft.left == 'auto'){
			element.setPosition(element.getPosition(element.getOffsetParent()));
		}
		return this.parent(element.position(Object.merge({}, this.options, destination, {returnPos: true})));
	}

});

Element.Properties.move = {

	set: function(options){
		this.get('move').cancel().setOptions(options);
		return this;
	},

	get: function(){
		var move = this.retrieve('move');
		if (!move){
			move = new Fx.Move(this, {link: 'cancel'});
			this.store('move', move);
		}
		return move;
	}

};

Element.implement({

	move: function(options){
		this.get('move').start(options);
		return this;
	}

});

/*
---

script: Fx.Scroll.js

name: Fx.Scroll

description: Effect to smoothly scroll any element, including the window.

license: MIT-style license

authors:
  - Valerio Proietti

requires:
  - Core/Fx
  - Core/Element.Event
  - Core/Element.Dimensions
  - MooTools.More

provides: [Fx.Scroll]

...
*/

(function(){

Fx.Scroll = new Class({

	Extends: Fx,

	options: {
		offset: {x: 0, y: 0},
		wheelStops: true
	},

	initialize: function(element, options){
		this.element = this.subject = document.id(element);
		this.parent(options);

		if (typeOf(this.element) != 'element') this.element = document.id(this.element.getDocument().body);

		if (this.options.wheelStops){
			var stopper = this.element,
				cancel = this.cancel.pass(false, this);
			this.addEvent('start', function(){
				stopper.addEvent('mousewheel', cancel);
			}, true);
			this.addEvent('complete', function(){
				stopper.removeEvent('mousewheel', cancel);
			}, true);
		}
	},

	set: function(){
		var now = Array.flatten(arguments);
		this.element.scrollTo(now[0], now[1]);
		return this;
	},

	compute: function(from, to, delta){
		return [0, 1].map(function(i){
			return Fx.compute(from[i], to[i], delta);
		});
	},

	start: function(x, y){
		if (!this.check(x, y)) return this;
		var scroll = this.element.getScroll();
		return this.parent([scroll.x, scroll.y], [x, y]);
	},

	calculateScroll: function(x, y){
		var element = this.element,
			scrollSize = element.getScrollSize(),
			scroll = element.getScroll(),
			size = element.getSize(),
			offset = this.options.offset,
			values = {x: x, y: y};

		for (var z in values){
			if (!values[z] && values[z] !== 0) values[z] = scroll[z];
			if (typeOf(values[z]) != 'number') values[z] = scrollSize[z] - size[z];
			values[z] += offset[z];
		}

		return [values.x, values.y];
	},

	toTop: function(){
		return this.start.apply(this, this.calculateScroll(false, 0));
	},

	toLeft: function(){
		return this.start.apply(this, this.calculateScroll(0, false));
	},

	toRight: function(){
		return this.start.apply(this, this.calculateScroll('right', false));
	},

	toBottom: function(){
		return this.start.apply(this, this.calculateScroll(false, 'bottom'));
	},

	toElement: function(el, axes){
		axes = axes ? Array.convert(axes) : ['x', 'y'];
		var scroll = isBody(this.element) ? {x: 0, y: 0} : this.element.getScroll();
		var position = Object.map(document.id(el).getPosition(this.element), function(value, axis){
			return axes.contains(axis) ? value + scroll[axis] : false;
		});
		return this.start.apply(this, this.calculateScroll(position.x, position.y));
	},

	toElementEdge: function(el, axes, offset){
		axes = axes ? Array.convert(axes) : ['x', 'y'];
		el = document.id(el);
		var to = {},
			position = el.getPosition(this.element),
			size = el.getSize(),
			scroll = this.element.getScroll(),
			containerSize = this.element.getSize(),
			edge = {
				x: position.x + size.x,
				y: position.y + size.y
			};

		['x', 'y'].each(function(axis){
			if (axes.contains(axis)){
				if (edge[axis] > scroll[axis] + containerSize[axis]) to[axis] = edge[axis] - containerSize[axis];
				if (position[axis] < scroll[axis]) to[axis] = position[axis];
			}
			if (to[axis] == null) to[axis] = scroll[axis];
			if (offset && offset[axis]) to[axis] = to[axis] + offset[axis];
		}, this);

		if (to.x != scroll.x || to.y != scroll.y) this.start(to.x, to.y);
		return this;
	},

	toElementCenter: function(el, axes, offset){
		axes = axes ? Array.convert(axes) : ['x', 'y'];
		el = document.id(el);
		var to = {},
			position = el.getPosition(this.element),
			size = el.getSize(),
			scroll = this.element.getScroll(),
			containerSize = this.element.getSize();

		['x', 'y'].each(function(axis){
			if (axes.contains(axis)){
				to[axis] = position[axis] - (containerSize[axis] - size[axis]) / 2;
			}
			if (to[axis] == null) to[axis] = scroll[axis];
			if (offset && offset[axis]) to[axis] = to[axis] + offset[axis];
		}, this);

		if (to.x != scroll.x || to.y != scroll.y) this.start(to.x, to.y);
		return this;
	}

});



function isBody(element){
	return (/^(?:body|html)$/i).test(element.tagName);
}

})();

/*
---

script: Fx.Slide.js

name: Fx.Slide

description: Effect to slide an element in and out of view.

license: MIT-style license

authors:
  - Valerio Proietti

requires:
  - Core/Fx
  - Core/Element.Style
  - MooTools.More

provides: [Fx.Slide]

...
*/

Fx.Slide = new Class({

	Extends: Fx,

	options: {
		mode: 'vertical',
		wrapper: false,
		hideOverflow: true,
		resetHeight: false
	},

	initialize: function(element, options){
		element = this.element = this.subject = document.id(element);
		this.parent(options);
		options = this.options;

		var wrapper = element.retrieve('wrapper'),
			styles = element.getStyles('margin', 'position', 'overflow');

		if (options.hideOverflow) styles = Object.append(styles, {overflow: 'hidden'});
		if (options.wrapper) wrapper = document.id(options.wrapper).setStyles(styles);

		if (!wrapper) wrapper = new Element('div', {
			styles: styles
		}).wraps(element);

		element.store('wrapper', wrapper).setStyle('margin', 0);
		if (element.getStyle('overflow') == 'visible') element.setStyle('overflow', 'hidden');

		this.now = [];
		this.open = true;
		this.wrapper = wrapper;

		this.addEvent('complete', function(){
			this.open = (wrapper['offset' + this.layout.capitalize()] != 0);
			if (this.open && this.options.resetHeight) wrapper.setStyle('height', '');
		}, true);
	},

	vertical: function(){
		this.margin = 'margin-top';
		this.layout = 'height';
		this.offset = this.element.offsetHeight;
	},

	horizontal: function(){
		this.margin = 'margin-left';
		this.layout = 'width';
		this.offset = this.element.offsetWidth;
	},

	set: function(now){
		this.element.setStyle(this.margin, now[0]);
		this.wrapper.setStyle(this.layout, now[1]);
		return this;
	},

	compute: function(from, to, delta){
		return [0, 1].map(function(i){
			return Fx.compute(from[i], to[i], delta);
		});
	},

	start: function(how, mode){
		if (!this.check(how, mode)) return this;
		this[mode || this.options.mode]();

		var margin = this.element.getStyle(this.margin).toInt(),
			layout = this.wrapper.getStyle(this.layout).toInt(),
			caseIn = [[margin, layout], [0, this.offset]],
			caseOut = [[margin, layout], [-this.offset, 0]],
			start;

		switch (how){
			case 'in': start = caseIn; break;
			case 'out': start = caseOut; break;
			case 'toggle': start = (layout == 0) ? caseIn : caseOut;
		}
		return this.parent(start[0], start[1]);
	},

	slideIn: function(mode){
		return this.start('in', mode);
	},

	slideOut: function(mode){
		return this.start('out', mode);
	},

	hide: function(mode){
		this[mode || this.options.mode]();
		this.open = false;
		return this.set([-this.offset, 0]);
	},

	show: function(mode){
		this[mode || this.options.mode]();
		this.open = true;
		return this.set([0, this.offset]);
	},

	toggle: function(mode){
		return this.start('toggle', mode);
	}

});

Element.Properties.slide = {

	set: function(options){
		this.get('slide').cancel().setOptions(options);
		return this;
	},

	get: function(){
		var slide = this.retrieve('slide');
		if (!slide){
			slide = new Fx.Slide(this, {link: 'cancel'});
			this.store('slide', slide);
		}
		return slide;
	}

};

Element.implement({

	slide: function(how, mode){
		how = how || 'toggle';
		var slide = this.get('slide'), toggle;
		switch (how){
			case 'hide': slide.hide(mode); break;
			case 'show': slide.show(mode); break;
			case 'toggle':
				var flag = this.retrieve('slide:flag', slide.open);
				slide[flag ? 'slideOut' : 'slideIn'](mode);
				this.store('slide:flag', !flag);
				toggle = true;
				break;
			default: slide.start(how, mode);
		}
		if (!toggle) this.eliminate('slide:flag');
		return this;
	}

});

/*
---

script: Fx.SmoothScroll.js

name: Fx.SmoothScroll

description: Class for creating a smooth scrolling effect to all internal links on the page.

license: MIT-style license

authors:
  - Valerio Proietti

requires:
  - Core/Slick.Finder
  - Fx.Scroll

provides: [Fx.SmoothScroll]

...
*/

Fx.SmoothScroll = new Class({

	Extends: Fx.Scroll,

	options: {
		axes: ['x', 'y']
	},

	initialize: function(options, context){
		context = context || document;
		this.doc = context.getDocument();
		this.parent(this.doc, options);

		var win = context.getWindow(),
			location = win.location.href.match(/^[^#]*/)[0] + '#',
			links = $$(this.options.links || this.doc.links);

		links.each(function(link){
			if (link.href.indexOf(location) != 0) return;
			var anchor = link.href.substr(location.length);
			if (anchor) this.useLink(link, anchor);
		}, this);

		this.addEvent('complete', function(){
			win.location.hash = this.anchor;
			this.element.scrollTo(this.to[0], this.to[1]);
		}, true);
	},

	useLink: function(link, anchor){

		link.addEvent('click', function(event){
			var el = document.id(anchor) || this.doc.getElement('a[name=' + anchor + ']');
			if (!el) return;

			event.preventDefault();
			this.toElement(el, this.options.axes).chain(function(){
				this.fireEvent('scrolledTo', [link, el]);
			}.bind(this));

			this.anchor = anchor;

		}.bind(this));

		return this;
	}
});

/*
---

script: Fx.Sort.js

name: Fx.Sort

description: Defines Fx.Sort, a class that reorders lists with a transition.

license: MIT-style license

authors:
  - Aaron Newton

requires:
  - Core/Element.Dimensions
  - Fx.Elements
  - Element.Measure

provides: [Fx.Sort]

...
*/

Fx.Sort = new Class({

	Extends: Fx.Elements,

	options: {
		mode: 'vertical'
	},

	initialize: function(elements, options){
		this.parent(elements, options);
		this.elements.each(function(el){
			if (el.getStyle('position') == 'static') el.setStyle('position', 'relative');
		});
		this.setDefaultOrder();
	},

	setDefaultOrder: function(){
		this.currentOrder = this.elements.map(function(el, index){
			return index;
		});
	},

	sort: function(){
		if (!this.check(arguments)) return this;
		var newOrder = Array.flatten(arguments);

		var top = 0,
			left = 0,
			next = {},
			zero = {},
			vert = this.options.mode == 'vertical';

		var current = this.elements.map(function(el, index){
			var size = el.getComputedSize({styles: ['border', 'padding', 'margin']});
			var val;
			if (vert){
				val = {
					top: top,
					margin: size['margin-top'],
					height: size.totalHeight
				};
				top += val.height - size['margin-top'];
			} else {
				val = {
					left: left,
					margin: size['margin-left'],
					width: size.totalWidth
				};
				left += val.width;
			}
			var plane = vert ? 'top' : 'left';
			zero[index] = {};
			var start = el.getStyle(plane).toInt();
			zero[index][plane] = start || 0;
			return val;
		}, this);

		this.set(zero);
		newOrder = newOrder.map(function(i){ return i.toInt(); });
		if (newOrder.length != this.elements.length){
			this.currentOrder.each(function(index){
				if (!newOrder.contains(index)) newOrder.push(index);
			});
			if (newOrder.length > this.elements.length)
				newOrder.splice(this.elements.length-1, newOrder.length - this.elements.length);
		}
		var margin = 0;
		top = left = 0;
		newOrder.each(function(item){
			var newPos = {};
			if (vert){
				newPos.top = top - current[item].top - margin;
				top += current[item].height;
			} else {
				newPos.left = left - current[item].left;
				left += current[item].width;
			}
			margin = margin + current[item].margin;
			next[item]=newPos;
		}, this);
		var mapped = {};
		Array.clone(newOrder).sort().each(function(index){
			mapped[index] = next[index];
		});
		this.start(mapped);
		this.currentOrder = newOrder;

		return this;
	},

	rearrangeDOM: function(newOrder){
		newOrder = newOrder || this.currentOrder;
		var parent = this.elements[0].getParent();
		var rearranged = [];
		this.elements.setStyle('opacity', 0);
		//move each element and store the new default order
		newOrder.each(function(index){
			rearranged.push(this.elements[index].inject(parent).setStyles({
				top: 0,
				left: 0
			}));
		}, this);
		this.elements.setStyle('opacity', 1);
		this.elements = $$(rearranged);
		this.setDefaultOrder();
		return this;
	},

	getDefaultOrder: function(){
		return this.elements.map(function(el, index){
			return index;
		});
	},

	getCurrentOrder: function(){
		return this.currentOrder;
	},

	forward: function(){
		return this.sort(this.getDefaultOrder());
	},

	backward: function(){
		return this.sort(this.getDefaultOrder().reverse());
	},

	reverse: function(){
		return this.sort(this.currentOrder.reverse());
	},

	sortByElements: function(elements){
		return this.sort(elements.map(function(el){
			return this.elements.indexOf(el);
		}, this));
	},

	swap: function(one, two){
		if (typeOf(one) == 'element') one = this.elements.indexOf(one);
		if (typeOf(two) == 'element') two = this.elements.indexOf(two);

		var newOrder = Array.clone(this.currentOrder);
		newOrder[this.currentOrder.indexOf(one)] = two;
		newOrder[this.currentOrder.indexOf(two)] = one;

		return this.sort(newOrder);
	}

});

/*
---

script: Keyboard.js

name: Keyboard

description: KeyboardEvents used to intercept events on a class for keyboard and format modifiers in a specific order so as to make alt+shift+c the same as shift+alt+c.

license: MIT-style license

authors:
  - Perrin Westrich
  - Aaron Newton
  - Scott Kyle

requires:
  - Core/Events
  - Core/Options
  - Core/Element.Event
  - Element.Event.Pseudos.Keys

provides: [Keyboard]

...
*/

(function(){

var Keyboard = this.Keyboard = new Class({

	Extends: Events,

	Implements: [Options],

	options: {/*
		onActivate: function(){},
		onDeactivate: function(){},*/
		defaultEventType: 'keydown',
		active: false,
		manager: null,
		events: {},
		nonParsedEvents: ['activate', 'deactivate', 'onactivate', 'ondeactivate', 'changed', 'onchanged']
	},

	initialize: function(options){
		if (options && options.manager){
			this._manager = options.manager;
			delete options.manager;
		}
		this.setOptions(options);
		this._setup();
	},

	addEvent: function(type, fn, internal){
		return this.parent(Keyboard.parse(type, this.options.defaultEventType, this.options.nonParsedEvents), fn, internal);
	},

	removeEvent: function(type, fn){
		return this.parent(Keyboard.parse(type, this.options.defaultEventType, this.options.nonParsedEvents), fn);
	},

	toggleActive: function(){
		return this[this.isActive() ? 'deactivate' : 'activate']();
	},

	activate: function(instance){
		if (instance){
			if (instance.isActive()) return this;
			//if we're stealing focus, store the last keyboard to have it so the relinquish command works
			if (this._activeKB && instance != this._activeKB){
				this.previous = this._activeKB;
				this.previous.fireEvent('deactivate');
			}
			//if we're enabling a child, assign it so that events are now passed to it
			this._activeKB = instance.fireEvent('activate');
			Keyboard.manager.fireEvent('changed');
		} else if (this._manager){
			//else we're enabling ourselves, we must ask our parent to do it for us
			this._manager.activate(this);
		}
		return this;
	},

	isActive: function(){
		return this._manager ? (this._manager._activeKB == this) : (Keyboard.manager == this);
	},

	deactivate: function(instance){
		if (instance){
			if (instance === this._activeKB){
				this._activeKB = null;
				instance.fireEvent('deactivate');
				Keyboard.manager.fireEvent('changed');
			}
		} else if (this._manager){
			this._manager.deactivate(this);
		}
		return this;
	},

	relinquish: function(){
		if (this.isActive() && this._manager && this._manager.previous) this._manager.activate(this._manager.previous);
		else this.deactivate();
		return this;
	},

	//management logic
	manage: function(instance){
		if (instance._manager) instance._manager.drop(instance);
		this._instances.push(instance);
		instance._manager = this;
		if (!this._activeKB) this.activate(instance);
		return this;
	},

	drop: function(instance){
		instance.relinquish();
		this._instances.erase(instance);
		if (this._activeKB == instance){
			if (this.previous && this._instances.contains(this.previous)) this.activate(this.previous);
			else this._activeKB = this._instances[0];
		}
		return this;
	},

	trace: function(){
		Keyboard.trace(this);
	},

	each: function(fn){
		Keyboard.each(this, fn);
	},

	/*
		PRIVATE METHODS
	*/

	_instances: [],

	_disable: function(instance){
		if (this._activeKB == instance) this._activeKB = null;
	},

	_setup: function(){
		this.addEvents(this.options.events);
		//if this is the root manager, nothing manages it
		if (Keyboard.manager && !this._manager) Keyboard.manager.manage(this);
		if (this.options.active) this.activate();
		else this.relinquish();
	},

	_handle: function(event, type){
		//Keyboard.stop(event) prevents key propagation
		if (event.preventKeyboardPropagation) return;

		var bubbles = !!this._manager;
		if (bubbles && this._activeKB){
			this._activeKB._handle(event, type);
			if (event.preventKeyboardPropagation) return;
		}
		this.fireEvent(type, event);

		if (!bubbles && this._activeKB) this._activeKB._handle(event, type);
	}

});

var parsed = {};
var modifiers = ['shift', 'control', 'alt', 'meta'];
var regex = /^(?:shift|control|ctrl|alt|meta)$/;

Keyboard.parse = function(type, eventType, ignore){
	if (ignore && ignore.contains(type.toLowerCase())) return type;

	type = type.toLowerCase().replace(/^(keyup|keydown):/, function($0, $1){
		eventType = $1;
		return '';
	});

	if (!parsed[type]){
		if (type != '+'){
			var key, mods = {};
			type.split('+').each(function(part){
				if (regex.test(part)) mods[part] = true;
				else key = part;
			});

			mods.control = mods.control || mods.ctrl; // allow both control and ctrl

			var keys = [];
			modifiers.each(function(mod){
				if (mods[mod]) keys.push(mod);
			});

			if (key) keys.push(key);
			parsed[type] = keys.join('+');
		} else {
			parsed[type] = type;
		}
	}

	return eventType + ':keys(' + parsed[type] + ')';
};

Keyboard.each = function(keyboard, fn){
	var current = keyboard || Keyboard.manager;
	while (current){
		fn(current);
		current = current._activeKB;
	}
};

Keyboard.stop = function(event){
	event.preventKeyboardPropagation = true;
};

Keyboard.manager = new Keyboard({
	active: true
});

Keyboard.trace = function(keyboard){
	keyboard = keyboard || Keyboard.manager;
	var hasConsole = window.console && console.log;
	if (hasConsole) console.log('the following items have focus: ');
	Keyboard.each(keyboard, function(current){
		if (hasConsole) console.log(document.id(current.widget) || current.wiget || current);
	});
};

var handler = function(event){
	var keys = [];
	modifiers.each(function(mod){
		if (event[mod]) keys.push(mod);
	});

	if (!regex.test(event.key)) keys.push(event.key);
	Keyboard.manager._handle(event, event.type + ':keys(' + keys.join('+') + ')');
};

document.addEvents({
	'keyup': handler,
	'keydown': handler
});

})();

/*
---

script: Keyboard.Extras.js

name: Keyboard.Extras

description: Enhances Keyboard by adding the ability to name and describe keyboard shortcuts, and the ability to grab shortcuts by name and bind the shortcut to different keys.

license: MIT-style license

authors:
  - Perrin Westrich

requires:
  - Keyboard
  - MooTools.More

provides: [Keyboard.Extras]

...
*/
Keyboard.prototype.options.nonParsedEvents.combine(['rebound', 'onrebound']);

Keyboard.implement({

	/*
		shortcut should be in the format of:
		{
			'keys': 'shift+s', // the default to add as an event.
			'description': 'blah blah blah', // a brief description of the functionality.
			'handler': function(){} // the event handler to run when keys are pressed.
		}
	*/
	addShortcut: function(name, shortcut){
		this._shortcuts = this._shortcuts || [];
		this._shortcutIndex = this._shortcutIndex || {};

		shortcut.getKeyboard = Function.convert(this);
		shortcut.name = name;
		this._shortcutIndex[name] = shortcut;
		this._shortcuts.push(shortcut);
		if (shortcut.keys) this.addEvent(shortcut.keys, shortcut.handler);
		return this;
	},

	addShortcuts: function(obj){
		for (var name in obj) this.addShortcut(name, obj[name]);
		return this;
	},

	removeShortcut: function(name){
		var shortcut = this.getShortcut(name);
		if (shortcut && shortcut.keys){
			this.removeEvent(shortcut.keys, shortcut.handler);
			delete this._shortcutIndex[name];
			this._shortcuts.erase(shortcut);
		}
		return this;
	},

	removeShortcuts: function(names){
		names.each(this.removeShortcut, this);
		return this;
	},

	getShortcuts: function(){
		return this._shortcuts || [];
	},

	getShortcut: function(name){
		return (this._shortcutIndex || {})[name];
	}

});

Keyboard.rebind = function(newKeys, shortcuts){
	Array.convert(shortcuts).each(function(shortcut){
		shortcut.getKeyboard().removeEvent(shortcut.keys, shortcut.handler);
		shortcut.getKeyboard().addEvent(newKeys, shortcut.handler);
		shortcut.keys = newKeys;
		shortcut.getKeyboard().fireEvent('rebound');
	});
};


Keyboard.getActiveShortcuts = function(keyboard){
	var activeKBS = [], activeSCS = [];
	Keyboard.each(keyboard, [].push.bind(activeKBS));
	activeKBS.each(function(kb){ activeSCS.extend(kb.getShortcuts()); });
	return activeSCS;
};

Keyboard.getShortcut = function(name, keyboard, opts){
	opts = opts || {};
	var shortcuts = opts.many ? [] : null,
		set = opts.many ? function(kb){
			var shortcut = kb.getShortcut(name);
			if (shortcut) shortcuts.push(shortcut);
		} : function(kb){
			if (!shortcuts) shortcuts = kb.getShortcut(name);
		};
	Keyboard.each(keyboard, set);
	return shortcuts;
};

Keyboard.getShortcuts = function(name, keyboard){
	return Keyboard.getShortcut(name, keyboard, { many: true });
};

/*
---

script: HtmlTable.js

name: HtmlTable

description: Builds table elements with methods to add rows.

license: MIT-style license

authors:
  - Aaron Newton

requires:
  - Core/Options
  - Core/Events
  - Class.Occlude

provides: [HtmlTable]

...
*/
(function(){

var HtmlTable = this.HtmlTable = new Class({

	Implements: [Options, Events, Class.Occlude],

	options: {
		properties: {
			cellpadding: 0,
			cellspacing: 0,
			border: 0
		},
		rows: [],
		headers: [],
		footers: []
	},

	property: 'HtmlTable',

	initialize: function(){
		var params = Array.link(arguments, {options: Type.isObject, table: Type.isElement, id: Type.isString});
		this.setOptions(params.options);
		if (!params.table && params.id) params.table = document.id(params.id);
		this.element = params.table || new Element('table', this.options.properties);
		if (this.occlude()) return this.occluded;
		this.build();
	},

	build: function(){
		this.element.store('HtmlTable', this);

		this.body = document.id(this.element.tBodies[0]) || new Element('tbody').inject(this.element);
		$$(this.body.rows);

		if (this.options.headers.length) this.setHeaders(this.options.headers);
		else this.thead = document.id(this.element.tHead);

		if (this.thead) this.head = this.getHead();
		if (this.options.footers.length) this.setFooters(this.options.footers);

		this.tfoot = document.id(this.element.tFoot);
		if (this.tfoot) this.foot = document.id(this.tfoot.rows[0]);

		this.options.rows.each(function(row){
			this.push(row);
		}, this);
	},

	toElement: function(){
		return this.element;
	},

	empty: function(){
		this.body.empty();
		return this;
	},

	set: function(what, items){
		var target = (what == 'headers') ? 'tHead' : 'tFoot',
			lower = target.toLowerCase();

		this[lower] = (document.id(this.element[target]) || new Element(lower).inject(this.element, 'top')).empty();
		var data = this.push(items, {}, this[lower], what == 'headers' ? 'th' : 'td');

		if (what == 'headers') this.head = this.getHead();
		else this.foot = this.getHead();

		return data;
	},

	getHead: function(){
		var rows = this.thead.rows;
		return rows.length > 1 ? $$(rows) : rows.length ? document.id(rows[0]) : false;
	},

	setHeaders: function(headers){
		this.set('headers', headers);
		return this;
	},

	setFooters: function(footers){
		this.set('footers', footers);
		return this;
	},

	update: function(tr, row, tag){
		var tds = tr.getChildren(tag || 'td'), last = tds.length - 1;

		row.each(function(data, index){
			var td = tds[index] || new Element(tag || 'td').inject(tr),
				content = ((data && Object.prototype.hasOwnProperty.call(data, 'content')) ? data.content : '') || data,
				type = typeOf(content);

			if (data && Object.prototype.hasOwnProperty.call(data, 'properties')) td.set(data.properties);
			if (/(element(s?)|array|collection)/.test(type)) td.empty().adopt(content);
			else td.set('html', content);

			if (index > last) tds.push(td);
			else tds[index] = td;
		});

		return {
			tr: tr,
			tds: tds
		};
	},

	push: function(row, rowProperties, target, tag, where){
		if (typeOf(row) == 'element' && row.get('tag') == 'tr'){
			row.inject(target || this.body, where);
			return {
				tr: row,
				tds: row.getChildren('td')
			};
		}
		return this.update(new Element('tr', rowProperties).inject(target || this.body, where), row, tag);
	},

	pushMany: function(rows, rowProperties, target, tag, where){
		return rows.map(function(row){
			return this.push(row, rowProperties, target, tag, where);
		}, this);
	}

});

})();


['adopt', 'inject', 'wraps', 'grab', 'replaces', 'dispose'].each(function(method){
	HtmlTable.implement(method, function(){
		this.element[method].apply(this.element, arguments);
		return this;
	});
});



/*
---

script: HtmlTable.Select.js

name: HtmlTable.Select

description: Builds a stripy, sortable table with methods to add rows. Rows can be selected with the mouse or keyboard navigation.

license: MIT-style license

authors:
  - Harald Kirschner
  - Aaron Newton

requires:
  - Keyboard
  - Keyboard.Extras
  - HtmlTable
  - Class.refactor
  - Element.Delegation.Pseudo
  - Element.Shortcuts

provides: [HtmlTable.Select]

...
*/

HtmlTable = Class.refactor(HtmlTable, {

	options: {
		/*onRowFocus: function(){},
		onRowUnfocus: function(){},*/
		useKeyboard: true,
		classRowSelected: 'table-tr-selected',
		classRowHovered: 'table-tr-hovered',
		classSelectable: 'table-selectable',
		shiftForMultiSelect: true,
		allowMultiSelect: true,
		selectable: false,
		selectHiddenRows: false
	},

	initialize: function(){
		this.previous.apply(this, arguments);
		if (this.occluded) return this.occluded;

		this.selectedRows = new Elements();

		if (!this.bound) this.bound = {};
		this.bound.mouseleave = this.mouseleave.bind(this);
		this.bound.clickRow = this.clickRow.bind(this);
		this.bound.activateKeyboard = function(){
			if (this.keyboard && this.selectEnabled) this.keyboard.activate();
		}.bind(this);

		if (this.options.selectable) this.enableSelect();
	},

	empty: function(){
		if (this.body.rows.length) this.selectNone();
		return this.previous();
	},

	enableSelect: function(){
		this.selectEnabled = true;
		this.attachSelects();
		this.element.addClass(this.options.classSelectable);
		return this;
	},

	disableSelect: function(){
		this.selectEnabled = false;
		this.attachSelects(false);
		this.element.removeClass(this.options.classSelectable);
		return this;
	},

	push: function(){
		var ret = this.previous.apply(this, arguments);
		this.updateSelects();
		return ret;
	},

	toggleRow: function(row){
		return this[(this.isSelected(row) ? 'de' : '') + 'selectRow'](row);
	},

	selectRow: function(row, _nocheck){
		//private variable _nocheck: boolean whether or not to confirm the row is in the table body
		//added here for optimization when selecting ranges
		if (this.isSelected(row) || (!_nocheck && !this.body.getChildren().contains(row))) return;
		if (!this.options.allowMultiSelect) this.selectNone();

		if (!this.isSelected(row)){
			this.selectedRows.push(row);
			row.addClass(this.options.classRowSelected);
			this.fireEvent('rowFocus', [row, this.selectedRows]);
			this.fireEvent('stateChanged');
		}

		this.focused = row;
		document.clearSelection();

		return this;
	},

	isSelected: function(row){
		return this.selectedRows.contains(row);
	},

	getSelected: function(){
		return this.selectedRows;
	},

	serialize: function(){
		var previousSerialization = this.previous.apply(this, arguments) || {};
		if (this.options.selectable){
			previousSerialization.selectedRows = this.selectedRows.map(function(row){
				return Array.indexOf(this.body.rows, row);
			}.bind(this));
		}
		return previousSerialization;
	},

	restore: function(tableState){
		if (this.options.selectable && tableState.selectedRows){
			tableState.selectedRows.each(function(index){
				this.selectRow(this.body.rows[index]);
			}.bind(this));
		}
		this.previous.apply(this, arguments);
	},

	deselectRow: function(row, _nocheck){
		if (!this.isSelected(row) || (!_nocheck && !this.body.getChildren().contains(row))) return;

		this.selectedRows = new Elements(Array.convert(this.selectedRows).erase(row));
		row.removeClass(this.options.classRowSelected);
		this.fireEvent('rowUnfocus', [row, this.selectedRows]);
		this.fireEvent('stateChanged');
		return this;
	},

	selectAll: function(selectNone){
		if (!selectNone && !this.options.allowMultiSelect) return;
		this.selectRange(0, this.body.rows.length, selectNone);
		return this;
	},

	selectNone: function(){
		return this.selectAll(true);
	},

	selectRange: function(startRow, endRow, _deselect){
		if (!this.options.allowMultiSelect && !_deselect) return;
		var method = _deselect ? 'deselectRow' : 'selectRow',
			rows = Array.clone(this.body.rows);

		if (typeOf(startRow) == 'element') startRow = rows.indexOf(startRow);
		if (typeOf(endRow) == 'element') endRow = rows.indexOf(endRow);
		endRow = endRow < rows.length - 1 ? endRow : rows.length - 1;

		if (endRow < startRow){
			var tmp = startRow;
			startRow = endRow;
			endRow = tmp;
		}

		for (var i = startRow; i <= endRow; i++){
			if (this.options.selectHiddenRows || rows[i].isDisplayed()) this[method](rows[i], true);
		}

		return this;
	},

	deselectRange: function(startRow, endRow){
		this.selectRange(startRow, endRow, true);
	},

/*
	Private methods:
*/

	enterRow: function(row){
		if (this.hovered) this.hovered = this.leaveRow(this.hovered);
		this.hovered = row.addClass(this.options.classRowHovered);
	},

	leaveRow: function(row){
		row.removeClass(this.options.classRowHovered);
	},

	updateSelects: function(){
		Array.each(this.body.rows, function(row){
			var binders = row.retrieve('binders');
			if (!binders && !this.selectEnabled) return;
			if (!binders){
				binders = {
					mouseenter: this.enterRow.pass([row], this),
					mouseleave: this.leaveRow.pass([row], this)
				};
				row.store('binders', binders);
			}
			if (this.selectEnabled) row.addEvents(binders);
			else row.removeEvents(binders);
		}, this);
	},

	shiftFocus: function(offset, event){
		if (!this.focused) return this.selectRow(this.body.rows[0], event);
		var to = this.getRowByOffset(offset, this.options.selectHiddenRows);
		if (to === null || this.focused == this.body.rows[to]) return this;
		this.toggleRow(this.body.rows[to], event);
	},

	clickRow: function(event, row){
		var selecting = (event.shift || event.meta || event.control) && this.options.shiftForMultiSelect;
		if (!selecting && !(event.rightClick && this.isSelected(row) && this.options.allowMultiSelect)) this.selectNone();

		if (event.rightClick) this.selectRow(row);
		else this.toggleRow(row);

		if (event.shift){
			this.selectRange(this.rangeStart || this.body.rows[0], row, this.rangeStart ? !this.isSelected(row) : true);
			this.focused = row;
		}
		this.rangeStart = row;
	},

	getRowByOffset: function(offset, includeHiddenRows){
		if (!this.focused) return 0;
		var index = Array.indexOf(this.body.rows, this.focused);
		if ((index == 0 && offset < 0) || (index == this.body.rows.length -1 && offset > 0)) return null;
		if (includeHiddenRows){
			index += offset;
		} else {
			var limit = 0,
				count = 0;
			if (offset > 0){
				while (count < offset && index < this.body.rows.length -1){
					if (this.body.rows[++index].isDisplayed()) count++;
				}
			} else {
				while (count > offset && index > 0){
					if (this.body.rows[--index].isDisplayed()) count--;
				}
			}
		}
		return index;
	},

	attachSelects: function(attach){
		attach = attach != null ? attach : true;

		var method = attach ? 'addEvents' : 'removeEvents';
		this.element[method]({
			mouseleave: this.bound.mouseleave,
			click: this.bound.activateKeyboard
		});

		this.body[method]({
			'click:relay(tr)': this.bound.clickRow,
			'contextmenu:relay(tr)': this.bound.clickRow
		});

		if (this.options.useKeyboard || this.keyboard){
			if (!this.keyboard) this.keyboard = new Keyboard();
			if (!this.selectKeysDefined){
				this.selectKeysDefined = true;
				var timer, held;

				var move = function(offset){
					var mover = function(e){
						clearTimeout(timer);
						e.preventDefault();
						var to = this.body.rows[this.getRowByOffset(offset, this.options.selectHiddenRows)];
						if (e.shift && to && this.isSelected(to)){
							this.deselectRow(this.focused);
							this.focused = to;
						} else {
							if (to && (!this.options.allowMultiSelect || !e.shift)){
								this.selectNone();
							}
							this.shiftFocus(offset, e);
						}

						if (held){
							timer = mover.delay(100, this, e);
						} else {
							timer = (function(){
								held = true;
								mover(e);
							}).delay(400);
						}
					}.bind(this);
					return mover;
				}.bind(this);

				var clear = function(){
					clearTimeout(timer);
					held = false;
				};

				this.keyboard.addEvents({
					'keydown:shift+up': move(-1),
					'keydown:shift+down': move(1),
					'keyup:shift+up': clear,
					'keyup:shift+down': clear,
					'keyup:up': clear,
					'keyup:down': clear
				});

				var shiftHint = '';
				if (this.options.allowMultiSelect && this.options.shiftForMultiSelect && this.options.useKeyboard){
					shiftHint = ' (Shift multi-selects).';
				}

				this.keyboard.addShortcuts({
					'Select Previous Row': {
						keys: 'up',
						shortcut: 'up arrow',
						handler: move(-1),
						description: 'Select the previous row in the table.' + shiftHint
					},
					'Select Next Row': {
						keys: 'down',
						shortcut: 'down arrow',
						handler: move(1),
						description: 'Select the next row in the table.' + shiftHint
					}
				});

			}
			this.keyboard[attach ? 'activate' : 'deactivate']();
		}
		this.updateSelects();
	},

	mouseleave: function(){
		if (this.hovered) this.leaveRow(this.hovered);
	}

});

/*
---

script: HtmlTable.Sort.js

name: HtmlTable.Sort

description: Builds a stripy, sortable table with methods to add rows.

license: MIT-style license

authors:
  - Harald Kirschner
  - Aaron Newton
  - Jacob Thornton

requires:
  - Core/Hash
  - HtmlTable
  - Class.refactor
  - Element.Delegation.Pseudo
  - String.Extras
  - Date

provides: [HtmlTable.Sort]

...
*/
(function(){

var readOnlyNess = document.createElement('table');
try {
	readOnlyNess.innerHTML = '<tr><td></td></tr>';
	readOnlyNess = readOnlyNess.childNodes.length === 0;
} catch (e){
	readOnlyNess = true;
}

HtmlTable = Class.refactor(HtmlTable, {

	options: {/*
		onSort: function(){}, */
		sortIndex: 0,
		sortReverse: false,
		parsers: [],
		defaultParser: 'string',
		classSortable: 'table-sortable',
		classHeadSort: 'table-th-sort',
		classHeadSortRev: 'table-th-sort-rev',
		classNoSort: 'table-th-nosort',
		classGroupHead: 'table-tr-group-head',
		classGroup: 'table-tr-group',
		classCellSort: 'table-td-sort',
		classSortSpan: 'table-th-sort-span',
		sortable: false,
		thSelector: 'th'
	},

	initialize: function(){
		this.previous.apply(this, arguments);
		if (this.occluded) return this.occluded;
		this.sorted = {index: null, dir: 1};
		if (!this.bound) this.bound = {};
		this.bound.headClick = this.headClick.bind(this);
		this.sortSpans = new Elements();
		if (this.options.sortable){
			this.enableSort();
			if (this.options.sortIndex != null) this.sort(this.options.sortIndex, this.options.sortReverse);
		}
	},

	attachSorts: function(attach){
		this.detachSorts();
		if (attach !== false) this.element.addEvent('click:relay(' + this.options.thSelector + ')', this.bound.headClick);
	},

	detachSorts: function(){
		this.element.removeEvents('click:relay(' + this.options.thSelector + ')');
	},

	setHeaders: function(){
		this.previous.apply(this, arguments);
		if (this.sortable) this.setParsers();
	},

	setParsers: function(){
		this.parsers = this.detectParsers();
	},

	detectParsers: function(){
		return this.head && this.head.getElements(this.options.thSelector).flatten().map(this.detectParser, this);
	},

	detectParser: function(cell, index){
		if (cell.hasClass(this.options.classNoSort) || cell.retrieve('htmltable-parser')) return cell.retrieve('htmltable-parser');
		var thDiv = new Element('div');
		thDiv.adopt(cell.childNodes).inject(cell);
		var sortSpan = new Element('span', {'class': this.options.classSortSpan}).inject(thDiv, 'top');
		this.sortSpans.push(sortSpan);
		var parser = this.options.parsers[index],
			rows = this.body.rows,
			cancel;
		switch (typeOf(parser)){
			case 'function': parser = {convert: parser}; cancel = true; break;
			case 'string': parser = parser; cancel = true; break;
		}
		if (!cancel){
			HtmlTable.ParserPriority.some(function(parserName){
				var current = HtmlTable.Parsers[parserName],
					match = current.match;
				if (!match) return false;
				for (var i = 0, j = rows.length; i < j; i++){
					var cell = document.id(rows[i].cells[index]),
						text = cell ? cell.get('html').clean() : '';
					if (text && match.test(text)){
						parser = current;
						return true;
					}
				}
			});
		}
		if (!parser) parser = this.options.defaultParser;
		cell.store('htmltable-parser', parser);
		return parser;
	},

	headClick: function(event, el){
		if (!this.head || el.hasClass(this.options.classNoSort)) return;
		return this.sort(Array.indexOf(this.head.getElements(this.options.thSelector).flatten(), el) % this.body.rows[0].cells.length);
	},

	serialize: function(){
		var previousSerialization = this.previous.apply(this, arguments) || {};
		if (this.options.sortable){
			previousSerialization.sortIndex = this.sorted.index;
			previousSerialization.sortReverse = this.sorted.reverse;
		}
		return previousSerialization;
	},

	restore: function(tableState){
		if (this.options.sortable && tableState.sortIndex){
			this.sort(tableState.sortIndex, tableState.sortReverse);
		}
		this.previous.apply(this, arguments);
	},

	setSortedState: function(index, reverse){
		if (reverse != null) this.sorted.reverse = reverse;
		else if (this.sorted.index == index) this.sorted.reverse = !this.sorted.reverse;
		else this.sorted.reverse = this.sorted.index == null;

		if (index != null) this.sorted.index = index;
	},

	setHeadSort: function(sorted){
		var head = $$(!this.head.length ? this.head.cells[this.sorted.index] : this.head.map(function(row){
			return row.getElements(this.options.thSelector)[this.sorted.index];
		}, this).clean());
		if (!head.length) return;
		if (sorted){
			head.addClass(this.options.classHeadSort);
			if (this.sorted.reverse) head.addClass(this.options.classHeadSortRev);
			else head.removeClass(this.options.classHeadSortRev);
		} else {
			head.removeClass(this.options.classHeadSort).removeClass(this.options.classHeadSortRev);
		}
	},

	setRowSort: function(data, pre){
		var count = data.length,
			body = this.body,
			group,
			rowIndex;

		while (count){
			var item = data[--count],
				position = item.position,
				row = body.rows[position];

			if (row.disabled) continue;
			if (!pre){
				group = this.setGroupSort(group, row, item);
				this.setRowStyle(row, count);
			}
			body.appendChild(row);

			for (rowIndex = 0; rowIndex < count; rowIndex++){
				if (data[rowIndex].position > position) data[rowIndex].position--;
			}
		}
	},

	setRowStyle: function(row, i){
		this.previous(row, i);
		row.cells[this.sorted.index].addClass(this.options.classCellSort);
	},

	setGroupSort: function(group, row, item){
		if (group == item.value) row.removeClass(this.options.classGroupHead).addClass(this.options.classGroup);
		else row.removeClass(this.options.classGroup).addClass(this.options.classGroupHead);
		return item.value;
	},

	getParser: function(){
		var parser = this.parsers[this.sorted.index];
		return typeOf(parser) == 'string' ? HtmlTable.Parsers[parser] : parser;
	},

	sort: function(index, reverse, pre, sortFunction){
		if (!this.head) return;

		if (!pre){
			this.clearSort();
			this.setSortedState(index, reverse);
			this.setHeadSort(true);
		}

		var parser = this.getParser();
		if (!parser) return;

		var rel;
		if (!readOnlyNess){
			rel = this.body.getParent();
			this.body.dispose();
		}

		var data = this.parseData(parser).sort(sortFunction ? sortFunction : function(a, b){
			if (a.value === b.value) return 0;
			return a.value > b.value ? 1 : -1;
		});

		var reversed = this.sorted.reverse == (parser == HtmlTable.Parsers['input-checked']);
		if (reversed) data.reverse(true);
		this.setRowSort(data, pre);

		if (rel) rel.grab(this.body);
		this.fireEvent('stateChanged');
		return this.fireEvent('sort', [this.body, this.sorted.index, reversed ? 'asc' : 'desc']);
	},

	parseData: function(parser){
		return Array.map(this.body.rows, function(row, i){
			var value = parser.convert.call(document.id(row.cells[this.sorted.index]));
			return {
				position: i,
				value: value
			};
		}, this);
	},

	clearSort: function(){
		this.setHeadSort(false);
		this.body.getElements('td').removeClass(this.options.classCellSort);
	},

	reSort: function(){
		if (this.sortable) this.sort.call(this, this.sorted.index, this.sorted.reverse);
		return this;
	},

	enableSort: function(){
		this.element.addClass(this.options.classSortable);
		this.attachSorts(true);
		this.setParsers();
		this.sortable = true;
		return this;
	},

	disableSort: function(){
		this.element.removeClass(this.options.classSortable);
		this.attachSorts(false);
		this.sortSpans.each(function(span){
			span.destroy();
		});
		this.sortSpans.empty();
		this.sortable = false;
		return this;
	}

});

HtmlTable.ParserPriority = ['date', 'input-checked', 'input-value', 'float', 'number'];

HtmlTable.Parsers = {

	'date': {
		match: /^\d{2}[-\/ ]\d{2}[-\/ ]\d{2,4}$/,
		convert: function(){
			var d = Date.parse(this.get('text').stripTags());
			return (typeOf(d) == 'date') ? d.format('db') : '';
		},
		type: 'date'
	},
	'input-checked': {
		match: / type="(radio|checkbox)"/,
		convert: function(){
			return this.getElement('input').checked;
		}
	},
	'input-value': {
		match: /<input/,
		convert: function(){
			return this.getElement('input').value;
		}
	},
	'number': {
		match: /^\d+[^\d.,]*$/,
		convert: function(){
			return this.get('text').stripTags().toInt();
		},
		number: true
	},
	'numberLax': {
		match: /^[^\d]+\d+$/,
		convert: function(){
			return this.get('text').replace(/[^-?^0-9]/, '').stripTags().toInt();
		},
		number: true
	},
	'float': {
		match: /^[\d]+\.[\d]+/,
		convert: function(){
			return this.get('text').replace(/[^-?^\d.e]/, '').stripTags().toFloat();
		},
		number: true
	},
	'floatLax': {
		match: /^[^\d]+[\d]+\.[\d]+$/,
		convert: function(){
			return this.get('text').replace(/[^-?^\d.]/, '').stripTags().toFloat();
		},
		number: true
	},
	'string': {
		match: null,
		convert: function(){
			return this.get('text').stripTags().toLowerCase();
		}
	},
	'title': {
		match: null,
		convert: function(){
			return this.title;
		}
	}

};



HtmlTable.defineParsers = function(parsers){
	HtmlTable.Parsers = Object.append(HtmlTable.Parsers, parsers);
	for (var parser in parsers){
		HtmlTable.ParserPriority.unshift(parser);
	}
};

})();


/*
---

script: HtmlTable.Zebra.js

name: HtmlTable.Zebra

description: Builds a stripy table with methods to add rows.

license: MIT-style license

authors:
  - Harald Kirschner
  - Aaron Newton

requires:
  - HtmlTable
  - Element.Shortcuts
  - Class.refactor

provides: [HtmlTable.Zebra]

...
*/

HtmlTable = Class.refactor(HtmlTable, {

	options: {
		classZebra: 'table-tr-odd',
		zebra: true,
		zebraOnlyVisibleRows: true
	},

	initialize: function(){
		this.previous.apply(this, arguments);
		if (this.occluded) return this.occluded;
		if (this.options.zebra) this.updateZebras();
	},

	updateZebras: function(){
		var index = 0;
		Array.each(this.body.rows, function(row){
			if (!this.options.zebraOnlyVisibleRows || row.isDisplayed()){
				this.zebra(row, index++);
			}
		}, this);
	},

	setRowStyle: function(row, i){
		if (this.previous) this.previous(row, i);
		this.zebra(row, i);
	},

	zebra: function(row, i){
		return row[((i % 2) ? 'remove' : 'add')+'Class'](this.options.classZebra);
	},

	push: function(){
		var pushed = this.previous.apply(this, arguments);
		if (this.options.zebra) this.updateZebras();
		return pushed;
	}

});

/*
---

script: Scroller.js

name: Scroller

description: Class which scrolls the contents of any Element (including the window) when the mouse reaches the Element's boundaries.

license: MIT-style license

authors:
  - Valerio Proietti

requires:
  - Core/Events
  - Core/Options
  - Core/Element.Event
  - Core/Element.Dimensions
  - MooTools.More

provides: [Scroller]

...
*/
(function(){

var Scroller = this.Scroller = new Class({

	Implements: [Events, Options],

	options: {
		area: 20,
		velocity: 1,
		onChange: function(x, y){
			this.element.scrollTo(x, y);
		},
		fps: 50
	},

	initialize: function(element, options){
		this.setOptions(options);
		this.element = document.id(element);
		this.docBody = document.id(this.element.getDocument().body);
		this.listener = (typeOf(this.element) != 'element') ? this.docBody : this.element;
		this.timer = null;
		this.bound = {
			attach: this.attach.bind(this),
			detach: this.detach.bind(this),
			getCoords: this.getCoords.bind(this)
		};
	},

	start: function(){
		this.listener.addEvents({
			mouseover: this.bound.attach,
			mouseleave: this.bound.detach
		});
		return this;
	},

	stop: function(){
		this.listener.removeEvents({
			mouseover: this.bound.attach,
			mouseleave: this.bound.detach
		});
		this.detach();
		this.timer = clearInterval(this.timer);
		return this;
	},

	attach: function(){
		this.listener.addEvent('mousemove', this.bound.getCoords);
	},

	detach: function(){
		this.listener.removeEvent('mousemove', this.bound.getCoords);
		this.timer = clearInterval(this.timer);
	},

	getCoords: function(event){
		this.page = (this.listener.get('tag') == 'body') ? event.client : event.page;
		if (!this.timer) this.timer = this.scroll.periodical(Math.round(1000 / this.options.fps), this);
	},

	scroll: function(){
		var size = this.element.getSize(),
			scroll = this.element.getScroll(),
			pos = ((this.element != this.docBody) && (this.element != window)) ? this.element.getOffsets() : {x: 0, y: 0},
			scrollSize = this.element.getScrollSize(),
			change = {x: 0, y: 0},
			top = this.options.area.top || this.options.area,
			bottom = this.options.area.bottom || this.options.area;
		for (var z in this.page){
			if (this.page[z] < (top + pos[z]) && scroll[z] != 0){
				change[z] = (this.page[z] - top - pos[z]) * this.options.velocity;
			} else if (this.page[z] + bottom > (size[z] + pos[z]) && scroll[z] + size[z] != scrollSize[z]){
				change[z] = (this.page[z] - size[z] + bottom - pos[z]) * this.options.velocity;
			}
			change[z] = change[z].round();
		}
		if (change.y || change.x) this.fireEvent('change', [scroll.x + change.x, scroll.y + change.y]);
	}

});

})();


/*
---

script: Tips.js

name: Tips

description: Class for creating nice tips that follow the mouse cursor when hovering an element.

license: MIT-style license

authors:
  - Valerio Proietti
  - Christoph Pojer
  - Luis Merino

requires:
  - Core/Options
  - Core/Events
  - Core/Element.Event
  - Core/Element.Style
  - Core/Element.Dimensions
  - MooTools.More

provides: [Tips]

...
*/

(function(){

var read = function(option, element){
	return (option) ? (typeOf(option) == 'function' ? option(element) : element.get(option)) : '';
};

var Tips = this.Tips = new Class({

	Implements: [Events, Options],

	options: {/*
		id: null,
		onAttach: function(element){},
		onDetach: function(element){},
		onBound: function(coords){},*/
		onShow: function(){
			this.tip.setStyle('display', 'block');
		},
		onHide: function(){
			this.tip.setStyle('display', 'none');
		},
		title: 'title',
		text: function(element){
			return element.get('rel') || element.get('href');
		},
		showDelay: 100,
		hideDelay: 100,
		className: 'tip-wrap',
		offset: {x: 16, y: 16},
		windowPadding: {x:0, y:0},
		fixed: false,
		waiAria: true,
		hideEmpty: false
	},

	initialize: function(){
		var params = Array.link(arguments, {
			options: Type.isObject,
			elements: function(obj){
				return obj != null;
			}
		});
		this.setOptions(params.options);
		if (params.elements) this.attach(params.elements);
		this.container = new Element('div', {'class': 'tip'});

		if (this.options.id){
			this.container.set('id', this.options.id);
			if (this.options.waiAria) this.attachWaiAria();
		}
	},

	toElement: function(){
		if (this.tip) return this.tip;

		this.tip = new Element('div', {
			'class': this.options.className,
			styles: {
				position: 'absolute',
				top: 0,
				left: 0,
				display: 'none'
			}
		}).adopt(
			new Element('div', {'class': 'tip-top'}),
			this.container,
			new Element('div', {'class': 'tip-bottom'})
		);

		return this.tip;
	},

	attachWaiAria: function(){
		var id = this.options.id;
		this.container.set('role', 'tooltip');

		if (!this.waiAria){
			this.waiAria = {
				show: function(element){
					if (id) element.set('aria-describedby', id);
					this.container.set('aria-hidden', 'false');
				},
				hide: function(element){
					if (id) element.erase('aria-describedby');
					this.container.set('aria-hidden', 'true');
				}
			};
		}
		this.addEvents(this.waiAria);
	},

	detachWaiAria: function(){
		if (this.waiAria){
			this.container.erase('role');
			this.container.erase('aria-hidden');
			this.removeEvents(this.waiAria);
		}
	},

	attach: function(elements){
		$$(elements).each(function(element){
			var title = read(this.options.title, element),
				text = read(this.options.text, element);

			element.set('title', '').store('tip:native', title).retrieve('tip:title', title);
			element.retrieve('tip:text', text);
			this.fireEvent('attach', [element]);

			var events = ['enter', 'leave'];
			if (!this.options.fixed) events.push('move');

			events.each(function(value){
				var event = element.retrieve('tip:' + value);
				if (!event) event = function(event){
					this['element' + value.capitalize()].apply(this, [event, element]);
				}.bind(this);

				element.store('tip:' + value, event).addEvent('mouse' + value, event);
			}, this);
		}, this);

		return this;
	},

	detach: function(elements){
		$$(elements).each(function(element){
			['enter', 'leave', 'move'].each(function(value){
				element.removeEvent('mouse' + value, element.retrieve('tip:' + value)).eliminate('tip:' + value);
			});

			this.fireEvent('detach', [element]);

			if (this.options.title == 'title'){ // This is necessary to check if we can revert the title
				var original = element.retrieve('tip:native');
				if (original) element.set('title', original);
			}
		}, this);

		return this;
	},

	elementEnter: function(event, element){
		clearTimeout(this.timer);
		this.timer = (function(){
			this.container.empty();
			var showTip = !this.options.hideEmpty;
			['title', 'text'].each(function(value){
				var content = element.retrieve('tip:' + value);
				var div = this['_' + value + 'Element'] = new Element('div', {
					'class': 'tip-' + value
				}).inject(this.container);
				if (content){
					this.fill(div, content);
					showTip = true;
				}
			}, this);
			if (showTip){
				this.show(element);
			} else {
				this.hide(element);
			}
			this.position((this.options.fixed) ? {page: element.getPosition()} : event);
		}).delay(this.options.showDelay, this);
	},

	elementLeave: function(event, element){
		clearTimeout(this.timer);
		this.timer = this.hide.delay(this.options.hideDelay, this, element);
		this.fireForParent(event, element);
	},

	setTitle: function(title){
		if (this._titleElement){
			this._titleElement.empty();
			this.fill(this._titleElement, title);
		}
		return this;
	},

	setText: function(text){
		if (this._textElement){
			this._textElement.empty();
			this.fill(this._textElement, text);
		}
		return this;
	},

	fireForParent: function(event, element){
		element = element.getParent();
		if (!element || element == document.body) return;
		if (element.retrieve('tip:enter')) element.fireEvent('mouseenter', event);
		else this.fireForParent(event, element);
	},

	elementMove: function(event, element){
		this.position(event);
	},

	position: function(event){
		if (!this.tip) document.id(this);

		var size = window.getSize(), scroll = window.getScroll(),
			tip = {x: this.tip.offsetWidth, y: this.tip.offsetHeight},
			props = {x: 'left', y: 'top'},
			bounds = {y: false, x2: false, y2: false, x: false},
			obj = {};

		for (var z in props){
			obj[props[z]] = event.page[z] + this.options.offset[z];
			if (obj[props[z]] < 0) bounds[z] = true;
			if ((obj[props[z]] + tip[z] - scroll[z]) > size[z] - this.options.windowPadding[z]){
				obj[props[z]] = event.page[z] - this.options.offset[z] - tip[z];
				bounds[z+'2'] = true;
			}
		}

		this.fireEvent('bound', bounds);
		this.tip.setStyles(obj);
	},

	fill: function(element, contents){
		if (typeof contents == 'string') element.set('html', contents);
		else element.adopt(contents);
	},

	show: function(element){
		if (!this.tip) document.id(this);
		if (!this.tip.getParent()) this.tip.inject(document.body);
		this.fireEvent('show', [this.tip, element]);
	},

	hide: function(element){
		if (!this.tip) document.id(this);
		this.fireEvent('hide', [this.tip, element]);
	}

});

})();

/*
---
name: Locale.CH.Number
description: Number messages for Switzerland.
license: MIT-style license
authors:
  - Kim D. Jeker
requires:
  - Locale
provides: [Locale.CH.Number]
...
*/

Locale.define('CH', 'Number', {

	decimal: ',',
	group: '\'',

	currency: {
		decimal: '.',
		suffix: ' CHF'
	}

});

/*
---

name: Locale.EU.Number

description: Number messages for Europe.

license: MIT-style license

authors:
  - Arian Stolwijk

requires:
  - Locale

provides: [Locale.EU.Number]

...
*/

Locale.define('EU', 'Number', {

	decimal: ',',
	group: '.',

	currency: {
		prefix: 'â‚¬ '
	}

});

/*
---

script: Locale.Set.From.js

name: Locale.Set.From

description: Provides an alternative way to create Locale.Set objects.

license: MIT-style license

authors:
  - Tim Wienk

requires:
  - Core/JSON
  - Locale

provides: Locale.Set.From

...
*/

(function(){

var parsers = {
	'json': JSON.decode
};

Locale.Set.defineParser = function(name, fn){
	parsers[name] = fn;
};

Locale.Set.from = function(set, type){
	if (instanceOf(set, Locale.Set)) return set;

	if (!type && typeOf(set) == 'string') type = 'json';
	if (parsers[type]) set = parsers[type](set);

	var locale = new Locale.Set;

	locale.sets = set.sets || {};

	if (set.inherits){
		locale.inherits.locales = Array.convert(set.inherits.locales);
		locale.inherits.sets = set.inherits.sets || {};
	}

	return locale;
};

})();

/*
---

name: Locale.ZA.Number

description: Number messages for ZA.

license: MIT-style license

authors:
  - Werner Mollentze

requires:
  - Locale

provides: [Locale.ZA.Number]

...
*/

Locale.define('ZA', 'Number', {

	decimal: '.',
	group: ',',

	currency: {
		prefix: 'R '
	}

});



/*
---

name: Locale.af-ZA.Date

description: Date messages for ZA Afrikaans.

license: MIT-style license

authors:
  - Werner Mollentze

requires:
  - Locale

provides: [Locale.af-ZA.Date]

...
*/

Locale.define('af-ZA', 'Date', {

	months: ['Januarie', 'Februarie', 'Maart', 'April', 'Mei', 'Junie', 'Julie', 'Augustus', 'September', 'Oktober', 'November', 'Desember'],
	months_abbr: ['Jan', 'Feb', 'Mrt', 'Apr', 'Mei', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Des'],
	days: ['Sondag', 'Maandag', 'Dinsdag', 'Woensdag', 'Donderdag', 'Vrydag', 'Saterdag'],
	days_abbr: ['Son', 'Maa', 'Din', 'Woe', 'Don', 'Vry', 'Sat'],

	// Culture's date order: MM/DD/YYYY
	dateOrder: ['date', 'month', 'year'],
	shortDate: '%d-%m-%Y',
	shortTime: '%H:%M',
	AM: 'VM',
	PM: 'NM',
	firstDayOfWeek: 1,

	// Date.Extras
	ordinal: function(dayOfMonth){
		return ((dayOfMonth > 1 && dayOfMonth < 20 && dayOfMonth != 8) || (dayOfMonth > 100 && dayOfMonth.toString().substr(-2, 1) == '1')) ? 'de' : 'ste';
	},

	lessThanMinuteAgo: 'minder as \'n minuut gelede',
	minuteAgo: 'ongeveer \'n minuut gelede',
	minutesAgo: '{delta} minute gelede',
	hourAgo: 'omtret \'n uur gelede',
	hoursAgo: 'ongeveer {delta} ure gelede',
	dayAgo: '1 dag gelede',
	daysAgo: '{delta} dae gelede',
	weekAgo: '1 week gelede',
	weeksAgo: '{delta} weke gelede',
	monthAgo: '1 maand gelede',
	monthsAgo: '{delta} maande gelede',
	yearAgo: '1 jaar gelede',
	yearsAgo: '{delta} jare gelede',

	lessThanMinuteUntil: 'oor minder as \'n minuut',
	minuteUntil: 'oor ongeveer \'n minuut',
	minutesUntil: 'oor {delta} minute',
	hourUntil: 'oor ongeveer \'n uur',
	hoursUntil: 'oor {delta} uur',
	dayUntil: 'oor ongeveer \'n dag',
	daysUntil: 'oor {delta} dae',
	weekUntil: 'oor \'n week',
	weeksUntil: 'oor {delta} weke',
	monthUntil: 'oor \'n maand',
	monthsUntil: 'oor {delta} maande',
	yearUntil: 'oor \'n jaar',
	yearsUntil: 'oor {delta} jaar'

});

/*
---

name: Locale.af-ZA.Form.Validator

description: Form Validator messages for Afrikaans.

license: MIT-style license

authors:
  - Werner Mollentze

requires:
  - Locale

provides: [Locale.af-ZA.Form.Validator]

...
*/

Locale.define('af-ZA', 'FormValidator', {

	required: 'Hierdie veld word vereis.',
	length: 'Voer asseblief {length} karakters in (u het {elLength} karakters ingevoer)',
	minLength: 'Voer asseblief ten minste {minLength} karakters in (u het {length} karakters ingevoer).',
	maxLength: 'Moet asseblief nie meer as {maxLength} karakters invoer nie (u het {length} karakters ingevoer).',
	integer: 'Voer asseblief \'n heelgetal in hierdie veld in. Getalle met desimale (bv. 1.25) word nie toegelaat nie.',
	numeric: 'Voer asseblief slegs numeriese waardes in hierdie veld in (bv. "1" of "1.1" of "-1" of "-1.1").',
	digits: 'Gebruik asseblief slegs nommers en punktuasie in hierdie veld. (by voorbeeld, \'n telefoon nommer wat koppeltekens en punte bevat is toelaatbaar).',
	alpha: 'Gebruik asseblief slegs letters (a-z) binne-in hierdie veld. Geen spasies of ander karakters word toegelaat nie.',
	alphanum: 'Gebruik asseblief slegs letters (a-z) en nommers (0-9) binne-in hierdie veld. Geen spasies of ander karakters word toegelaat nie.',
	dateSuchAs: 'Voer asseblief \'n geldige datum soos {date} in',
	dateInFormatMDY: 'Voer asseblief \'n geldige datum soos MM/DD/YYYY in (bv. "12/31/1999")',
	email: 'Voer asseblief \'n geldige e-pos adres in. Byvoorbeeld "fred@domain.com".',
	url: 'Voer asseblief \'n geldige bronadres (URL) soos http://www.example.com in.',
	currencyDollar: 'Voer asseblief \'n geldige $ bedrag in. Byvoorbeeld $100.00 .',
	oneRequired: 'Voer asseblief iets in vir ten minste een van hierdie velde.',
	errorPrefix: 'Fout: ',
	warningPrefix: 'Waarskuwing: ',

	// Form.Validator.Extras
	noSpace: 'Daar mag geen spasies in hierdie toevoer wees nie.',
	reqChkByNode: 'Geen items is gekies nie.',
	requiredChk: 'Hierdie veld word vereis.',
	reqChkByName: 'Kies asseblief \'n {label}.',
	match: 'Hierdie veld moet by die {matchName} veld pas',
	startDate: 'die begin datum',
	endDate: 'die eind datum',
	currentDate: 'die huidige datum',
	afterDate: 'Die datum moet dieselfde of na {label} wees.',
	beforeDate: 'Die datum moet dieselfde of voor {label} wees.',
	startMonth: 'Kies asseblief \'n begin maand',
	sameMonth: 'Hierdie twee datums moet in dieselfde maand wees - u moet een of beide verander.',
	creditcard: 'Die ingevoerde kredietkaart nommer is ongeldig. Bevestig asseblief die nommer en probeer weer. {length} syfers is ingevoer.'

});

/*
---

name: Locale.af-ZA.Number

description: Number messages for ZA Afrikaans.

license: MIT-style license

authors:
  - Werner Mollentze

requires:
  - Locale
  - Locale.ZA.Number

provides: [Locale.af-ZA.Number]

...
*/

Locale.define('af-ZA').inherit('ZA', 'Number');

/*
---

name: Locale.ar.Date

description: Date messages for Arabic.

license: MIT-style license

authors:
  - Chafik Barbar

requires:
  - Locale

provides: [Locale.ar.Date]

...
*/

Locale.define('ar', 'Date', {

	// Culture's date order: DD/MM/YYYY
	dateOrder: ['date', 'month', 'year'],
	shortDate: '%d/%m/%Y',
	shortTime: '%H:%M'

});

/*
---

name: Locale.ar.Form.Validator

description: Form Validator messages for Arabic.

license: MIT-style license

authors:
  - Chafik Barbar

requires:
  - Locale

provides: [Locale.ar.Form.Validator]

...
*/

Locale.define('ar', 'FormValidator', {

	required: 'Ù‡Ø°Ø§ Ø§Ù„Ø­Ù‚Ù„ Ù…Ø·Ù„ÙˆØ¨.',
	minLength: 'Ø±Ø¬Ø§Ø¡Ù‹ Ø¥Ø¯Ø®Ø§Ù„ {minLength} Ø£Ø­Ø±Ù Ø¹Ù„Ù‰ Ø§Ù„Ø£Ù‚Ù„ (ØªÙ… Ø¥Ø¯Ø®Ø§Ù„ {length} Ø£Ø­Ø±Ù).',
	maxLength: 'Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø¹Ø¯Ù… Ø¥Ø¯Ø®Ø§Ù„ Ø£ÙƒØ«Ø± Ù…Ù† {maxLength} Ø£Ø­Ø±Ù (ØªÙ… Ø¥Ø¯Ø®Ø§Ù„ {length} Ø£Ø­Ø±Ù).',
	integer: 'Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø¥Ø¯Ø®Ø§Ù„ Ø¹Ø¯Ø¯ ØµØ­ÙŠØ­ ÙÙŠ Ù‡Ø°Ø§ Ø§Ù„Ø­Ù‚Ù„. Ø£ÙŠ Ø±Ù‚Ù… Ø°Ùˆ ÙƒØ³Ø± Ø¹Ø´Ø±ÙŠ Ø£Ùˆ Ù…Ø¦ÙˆÙŠ (Ù…Ø«Ø§Ù„ 1.25 ) ØºÙŠØ± Ù…Ø³Ù…ÙˆØ­.',
	numeric: 'Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø¥Ø¯Ø®Ø§Ù„ Ù‚ÙŠÙ… Ø±Ù‚Ù…ÙŠØ© ÙÙŠ Ù‡Ø°Ø§ Ø§Ù„Ø­Ù‚Ù„ (Ù…Ø«Ø§Ù„ "1" Ø£Ùˆ "1.1" Ø£Ùˆ "-1" Ø£Ùˆ "-1.1").',
	digits: 'Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø£Ø³ØªØ®Ø¯Ø§Ù… Ù‚ÙŠÙ… Ø±Ù‚Ù…ÙŠØ© ÙˆØ¹Ù„Ø§Ù…Ø§Øª ØªØ±Ù‚ÙŠÙ…ÙŠØ© ÙÙ‚Ø· ÙÙŠ Ù‡Ø°Ø§ Ø§Ù„Ø­Ù‚Ù„ (Ù…Ø«Ø§Ù„, Ø±Ù‚Ù… Ù‡Ø§ØªÙ Ù…Ø¹ Ù†Ù‚Ø·Ø© Ø£Ùˆ Ø´Ø­Ø·Ø©)',
	alpha: 'Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø£Ø³ØªØ®Ø¯Ø§Ù… Ø£Ø­Ø±Ù ÙÙ‚Ø· (Ø§-ÙŠ) ÙÙŠ Ù‡Ø°Ø§ Ø§Ù„Ø­Ù‚Ù„. Ø£ÙŠ ÙØ±Ø§ØºØ§Øª Ø£Ùˆ Ø¹Ù„Ø§Ù…Ø§Øª ØºÙŠØ± Ù…Ø³Ù…ÙˆØ­Ø©.',
	alphanum: 'Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø£Ø³ØªØ®Ø¯Ø§Ù… Ø£Ø­Ø±Ù ÙÙ‚Ø· (Ø§-ÙŠ) Ø£Ùˆ Ø£Ø±Ù‚Ø§Ù… (0-9) ÙÙ‚Ø· ÙÙŠ Ù‡Ø°Ø§ Ø§Ù„Ø­Ù‚Ù„. Ø£ÙŠ ÙØ±Ø§ØºØ§Øª Ø£Ùˆ Ø¹Ù„Ø§Ù…Ø§Øª ØºÙŠØ± Ù…Ø³Ù…ÙˆØ­Ø©.',
	dateSuchAs: 'Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø¥Ø¯Ø®Ø§Ù„ ØªØ§Ø±ÙŠØ® ØµØ­ÙŠØ­ ÙƒØ§Ù„ØªØ§Ù„ÙŠ {date}',
	dateInFormatMDY: 'Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø¥Ø¯Ø®Ø§Ù„ ØªØ§Ø±ÙŠØ® ØµØ­ÙŠØ­ (Ù…Ø«Ø§Ù„, 31-12-1999)',
	email: 'Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø¥Ø¯Ø®Ø§Ù„ Ø¨Ø±ÙŠØ¯ Ø¥Ù„ÙƒØªØ±ÙˆÙ†ÙŠ ØµØ­ÙŠØ­.',
	url: 'Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø¥Ø¯Ø®Ø§Ù„ Ø¹Ù†ÙˆØ§Ù† Ø¥Ù„ÙƒØªØ±ÙˆÙ†ÙŠ ØµØ­ÙŠØ­ Ù…Ø«Ù„ http://www.example.com',
	currencyDollar: 'Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø¥Ø¯Ø®Ø§Ù„ Ù‚ÙŠÙ…Ø© $ ØµØ­ÙŠØ­Ø©. Ù…Ø«Ø§Ù„, 100.00$',
	oneRequired: 'Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø¥Ø¯Ø®Ø§Ù„ Ù‚ÙŠÙ…Ø© ÙÙŠ Ø£Ø­Ø¯ Ù‡Ø°Ù‡ Ø§Ù„Ø­Ù‚ÙˆÙ„ Ø¹Ù„Ù‰ Ø§Ù„Ø£Ù‚Ù„.',
	errorPrefix: 'Ø®Ø·Ø£: ',
	warningPrefix: 'ØªØ­Ø°ÙŠØ±: '

});

/*
---

name: Locale.ca-CA.Date

description: Date messages for Catalan.

license: MIT-style license

authors:
  - Ãƒlfons Sanchez

requires:
  - Locale

provides: [Locale.ca-CA.Date]

...
*/

Locale.define('ca-CA', 'Date', {

	months: ['Gener', 'Febrer', 'MarÃ§', 'Abril', 'Maig', 'Juny', 'Juli', 'Agost', 'Setembre', 'Octubre', 'Novembre', 'Desembre'],
	months_abbr: ['gen.', 'febr.', 'marÃ§', 'abr.', 'maig', 'juny', 'jul.', 'ag.', 'set.', 'oct.', 'nov.', 'des.'],
	days: ['Diumenge', 'Dilluns', 'Dimarts', 'Dimecres', 'Dijous', 'Divendres', 'Dissabte'],
	days_abbr: ['dg', 'dl', 'dt', 'dc', 'dj', 'dv', 'ds'],

	// Culture's date order: DD/MM/YYYY
	dateOrder: ['date', 'month', 'year'],
	shortDate: '%d/%m/%Y',
	shortTime: '%H:%M',
	AM: 'AM',
	PM: 'PM',
	firstDayOfWeek: 0,

	// Date.Extras
	ordinal: '',

	lessThanMinuteAgo: 'fa menys d`un minut',
	minuteAgo: 'fa un minut',
	minutesAgo: 'fa {delta} minuts',
	hourAgo: 'fa un hora',
	hoursAgo: 'fa unes {delta} hores',
	dayAgo: 'fa un dia',
	daysAgo: 'fa {delta} dies',

	lessThanMinuteUntil: 'menys d`un minut des d`ara',
	minuteUntil: 'un minut des d`ara',
	minutesUntil: '{delta} minuts des d`ara',
	hourUntil: 'un hora des d`ara',
	hoursUntil: 'unes {delta} hores des d`ara',
	dayUntil: '1 dia des d`ara',
	daysUntil: '{delta} dies des d`ara'

});

/*
---

name: Locale.ca-CA.Form.Validator

description: Form Validator messages for Catalan.

license: MIT-style license

authors:
  - Miquel Hudin
  - Ãƒlfons Sanchez

requires:
  - Locale

provides: [Locale.ca-CA.Form.Validator]

...
*/

Locale.define('ca-CA', 'FormValidator', {

	required: 'Aquest camp es obligatori.',
	minLength: 'Per favor introdueix al menys {minLength} caracters (has introduit {length} caracters).',
	maxLength: 'Per favor introdueix no mes de {maxLength} caracters (has introduit {length} caracters).',
	integer: 'Per favor introdueix un nombre enter en aquest camp. Nombres amb decimals (p.e. 1,25) no estan permesos.',
	numeric: 'Per favor introdueix sols valors numerics en aquest camp (p.e. "1" o "1,1" o "-1" o "-1,1").',
	digits: 'Per favor usa sols numeros i puntuacio en aquest camp (per exemple, un nombre de telefon amb guions i punts no esta permes).',
	alpha: 'Per favor utilitza lletres nomes (a-z) en aquest camp. No sÂ´admiteixen espais ni altres caracters.',
	alphanum: 'Per favor, utilitza nomes lletres (a-z) o numeros (0-9) en aquest camp. No sÂ´admiteixen espais ni altres caracters.',
	dateSuchAs: 'Per favor introdueix una data valida com {date}',
	dateInFormatMDY: 'Per favor introdueix una data valida com DD/MM/YYYY (p.e. "31/12/1999")',
	email: 'Per favor, introdueix una adreÃ§a de correu electronic valida. Per exemple, "fred@domain.com".',
	url: 'Per favor introdueix una URL valida com http://www.example.com.',
	currencyDollar: 'Per favor introdueix una quantitat valida de â‚¬. Per exemple â‚¬100,00 .',
	oneRequired: 'Per favor introdueix alguna cosa per al menys una dÂ´aquestes entrades.',
	errorPrefix: 'Error: ',
	warningPrefix: 'Avis: ',

	// Form.Validator.Extras
	noSpace: 'No poden haver espais en aquesta entrada.',
	reqChkByNode: 'No hi han elements seleccionats.',
	requiredChk: 'Aquest camp es obligatori.',
	reqChkByName: 'Per favor selecciona una {label}.',
	match: 'Aquest camp necessita coincidir amb el camp {matchName}',
	startDate: 'la data de inici',
	endDate: 'la data de fi',
	currentDate: 'la data actual',
	afterDate: 'La data deu ser igual o posterior a {label}.',
	beforeDate: 'La data deu ser igual o anterior a {label}.',
	startMonth: 'Per favor selecciona un mes dÂ´orige',
	sameMonth: 'Aquestes dos dates deuen estar dins del mateix mes - deus canviar una o altra.'

});

/*
---

name: Locale.cs-CZ.Date

description: Date messages for Czech.

license: MIT-style license

authors:
  - Jan ÄŒernÃ½ chemiX
  - Christopher Zukowski

requires:
  - Locale

provides: [Locale.cs-CZ.Date]

...
*/
(function(){

// Czech language pluralization rules, see http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html
// one -> n is 1;            1
// few -> n in 2..4;         2-4
// other -> everything else  0, 5-999, 1.31, 2.31, 5.31...
var pluralize = function(n, one, few, other){
	if (n == 1) return one;
	else if (n == 2 || n == 3 || n == 4) return few;
	else return other;
};

Locale.define('cs-CZ', 'Date', {

	months: ['Leden', 'Ãšnor', 'BÅ™ezen', 'Duben', 'KvÄ›ten', 'ÄŒerven', 'ÄŒervenec', 'Srpen', 'ZÃ¡Å™Ã­', 'Å˜Ã­jen', 'Listopad', 'Prosinec'],
	months_abbr: ['ledna', 'Ãºnora', 'bÅ™ezna', 'dubna', 'kvÄ›tna', 'Äervna', 'Äervence', 'srpna', 'zÃ¡Å™Ã­', 'Å™Ã­jna', 'listopadu', 'prosince'],
	days: ['NedÄ›le', 'PondÄ›lÃ­', 'ÃšterÃ½', 'StÅ™eda', 'ÄŒtvrtek', 'PÃ¡tek', 'Sobota'],
	days_abbr: ['ne', 'po', 'Ãºt', 'st', 'Ät', 'pÃ¡', 'so'],

	// Culture's date order: DD.MM.YYYY
	dateOrder: ['date', 'month', 'year'],
	shortDate: '%d.%m.%Y',
	shortTime: '%H:%M',
	AM: 'dop.',
	PM: 'odp.',
	firstDayOfWeek: 1,

	// Date.Extras
	ordinal: '.',

	lessThanMinuteAgo: 'pÅ™ed chvÃ­lÃ­',
	minuteAgo: 'pÅ™ibliÅ¾nÄ› pÅ™ed minutou',
	minutesAgo: function(delta){ return 'pÅ™ed {delta} ' + pluralize(delta, 'minutou', 'minutami', 'minutami'); },
	hourAgo: 'pÅ™ibliÅ¾nÄ› pÅ™ed hodinou',
	hoursAgo: function(delta){ return 'pÅ™ed {delta} ' + pluralize(delta, 'hodinou', 'hodinami', 'hodinami'); },
	dayAgo: 'pÅ™ed dnem',
	daysAgo: function(delta){ return 'pÅ™ed {delta} ' + pluralize(delta, 'dnem', 'dny', 'dny'); },
	weekAgo: 'pÅ™ed tÃ½dnem',
	weeksAgo: function(delta){ return 'pÅ™ed {delta} ' + pluralize(delta, 'tÃ½dnem', 'tÃ½dny', 'tÃ½dny'); },
	monthAgo: 'pÅ™ed mÄ›sÃ­cem',
	monthsAgo: function(delta){ return 'pÅ™ed {delta} ' + pluralize(delta, 'mÄ›sÃ­cem', 'mÄ›sÃ­ci', 'mÄ›sÃ­ci'); },
	yearAgo: 'pÅ™ed rokem',
	yearsAgo: function(delta){ return 'pÅ™ed {delta} ' + pluralize(delta, 'rokem', 'lety', 'lety'); },

	lessThanMinuteUntil: 'za chvÃ­li',
	minuteUntil: 'pÅ™ibliÅ¾nÄ› za minutu',
	minutesUntil: function(delta){ return 'za {delta} ' + pluralize(delta, 'minutu', 'minuty', 'minut'); },
	hourUntil: 'pÅ™ibliÅ¾nÄ› za hodinu',
	hoursUntil: function(delta){ return 'za {delta} ' + pluralize(delta, 'hodinu', 'hodiny', 'hodin'); },
	dayUntil: 'za den',
	daysUntil: function(delta){ return 'za {delta} ' + pluralize(delta, 'den', 'dny', 'dnÅ¯'); },
	weekUntil: 'za tÃ½den',
	weeksUntil: function(delta){ return 'za {delta} ' + pluralize(delta, 'tÃ½den', 'tÃ½dny', 'tÃ½dnÅ¯'); },
	monthUntil: 'za mÄ›sÃ­c',
	monthsUntil: function(delta){ return 'za {delta} ' + pluralize(delta, 'mÄ›sÃ­c', 'mÄ›sÃ­ce', 'mÄ›sÃ­cÅ¯'); },
	yearUntil: 'za rok',
	yearsUntil: function(delta){ return 'za {delta} ' + pluralize(delta, 'rok', 'roky', 'let'); }
});

})();

/*
---

name: Locale.cs-CZ.Form.Validator

description: Form Validator messages for Czech.

license: MIT-style license

authors:
  - Jan ÄŒernÃ½ chemiX

requires:
  - Locale

provides: [Locale.cs-CZ.Form.Validator]

...
*/

Locale.define('cs-CZ', 'FormValidator', {

	required: 'Tato poloÅ¾ka je povinnÃ¡.',
	minLength: 'Zadejte prosÃ­m alespoÅˆ {minLength} znakÅ¯ (napsÃ¡no {length} znakÅ¯).',
	maxLength: 'Zadejte prosÃ­m mÃ©nÄ› neÅ¾ {maxLength} znakÅ¯ (nÃ¡psÃ¡no {length} znakÅ¯).',
	integer: 'Zadejte prosÃ­m celÃ© ÄÃ­slo. DesetinnÃ¡ ÄÃ­sla (napÅ™. 1.25) nejsou povolena.',
	numeric: 'Zadejte jen ÄÃ­selnÃ© hodnoty (tj. "1" nebo "1.1" nebo "-1" nebo "-1.1").',
	digits: 'Zadejte prosÃ­m pouze ÄÃ­sla a interpunkÄnÃ­ znamÃ©nka(napÅ™Ã­klad telefonnÃ­ ÄÃ­slo s pomlÄkami nebo teÄkami je povoleno).',
	alpha: 'Zadejte prosÃ­m pouze pÃ­smena (a-z). Mezery nebo jinÃ© znaky nejsou povoleny.',
	alphanum: 'Zadejte prosÃ­m pouze pÃ­smena (a-z) nebo ÄÃ­slice (0-9). Mezery nebo jinÃ© znaky nejsou povoleny.',
	dateSuchAs: 'Zadejte prosÃ­m platnÃ© datum jako {date}',
	dateInFormatMDY: 'Zadejte prosÃ­m platnÃ© datum jako MM / DD / RRRR (tj. "12/31/1999")',
	email: 'Zadejte prosÃ­m platnou e-mailovou adresu. NapÅ™Ã­klad "fred@domain.com".',
	url: 'Zadejte prosÃ­m platnou URL adresu jako http://www.example.com.',
	currencyDollar: 'Zadejte prosÃ­m platnou ÄÃ¡stku. NapÅ™Ã­klad $100.00.',
	oneRequired: 'Zadejte prosÃ­m alespoÅˆ jednu hodnotu pro tyto poloÅ¾ky.',
	errorPrefix: 'Chyba: ',
	warningPrefix: 'UpozornÄ›nÃ­: ',

	// Form.Validator.Extras
	noSpace: 'V tÃ©to poloÅ¾ce nejsou povoleny mezery',
	reqChkByNode: 'Nejsou vybrÃ¡ny Å¾Ã¡dnÃ© poloÅ¾ky.',
	requiredChk: 'Tato poloÅ¾ka je vyÅ¾adovÃ¡na.',
	reqChkByName: 'ProsÃ­m vyberte {label}.',
	match: 'Tato poloÅ¾ka se musÃ­ shodovat s poloÅ¾kou {matchName}',
	startDate: 'datum zahÃ¡jenÃ­',
	endDate: 'datum ukonÄenÃ­',
	currentDate: 'aktuÃ¡lnÃ­ datum',
	afterDate: 'Datum by mÄ›lo bÃ½t stejnÃ© nebo vÄ›tÅ¡Ã­ neÅ¾ {label}.',
	beforeDate: 'Datum by mÄ›lo bÃ½t stejnÃ© nebo menÅ¡Ã­ neÅ¾ {label}.',
	startMonth: 'Vyberte poÄÃ¡teÄnÃ­ mÄ›sÃ­c.',
	sameMonth: 'Tyto dva datumy musÃ­ bÃ½t ve stejnÃ©m mÄ›sÃ­ci - zmÄ›Åˆte jeden z nich.',
	creditcard: 'ZadanÃ© ÄÃ­slo kreditnÃ­ karty je neplatnÃ©. ProsÃ­m opravte ho. Bylo zadÃ¡no {length} ÄÃ­sel.'

});

/*
---

name: Locale.da-DK.Date

description: Date messages for Danish.

license: MIT-style license

authors:
  - Martin Overgaard
  - Henrik Hansen

requires:
  - Locale

provides: [Locale.da-DK.Date]

...
*/

Locale.define('da-DK', 'Date', {

	months: ['Januar', 'Februar', 'Marts', 'April', 'Maj', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'December'],
	months_abbr: ['jan.', 'feb.', 'mar.', 'apr.', 'maj.', 'jun.', 'jul.', 'aug.', 'sep.', 'okt.', 'nov.', 'dec.'],
	days: ['SÃ¸ndag', 'Mandag', 'Tirsdag', 'Onsdag', 'Torsdag', 'Fredag', 'LÃ¸rdag'],
	days_abbr: ['sÃ¸n', 'man', 'tir', 'ons', 'tor', 'fre', 'lÃ¸r'],

	// Culture's date order: DD-MM-YYYY
	dateOrder: ['date', 'month', 'year'],
	shortDate: '%d-%m-%Y',
	shortTime: '%H:%M',
	AM: 'AM',
	PM: 'PM',
	firstDayOfWeek: 1,

	// Date.Extras
	ordinal: '.',

	lessThanMinuteAgo: 'mindre end et minut siden',
	minuteAgo: 'omkring et minut siden',
	minutesAgo: '{delta} minutter siden',
	hourAgo: 'omkring en time siden',
	hoursAgo: 'omkring {delta} timer siden',
	dayAgo: '1 dag siden',
	daysAgo: '{delta} dage siden',
	weekAgo: '1 uge siden',
	weeksAgo: '{delta} uger siden',
	monthAgo: '1 mÃ¥ned siden',
	monthsAgo: '{delta} mÃ¥neder siden',
	yearAgo: '1 Ã¥r siden',
	yearsAgo: '{delta} Ã¥r siden',

	lessThanMinuteUntil: 'mindre end et minut fra nu',
	minuteUntil: 'omkring et minut fra nu',
	minutesUntil: '{delta} minutter fra nu',
	hourUntil: 'omkring en time fra nu',
	hoursUntil: 'omkring {delta} timer fra nu',
	dayUntil: '1 dag fra nu',
	daysUntil: '{delta} dage fra nu',
	weekUntil: '1 uge fra nu',
	weeksUntil: '{delta} uger fra nu',
	monthUntil: '1 mÃ¥ned fra nu',
	monthsUntil: '{delta} mÃ¥neder fra nu',
	yearUntil: '1 Ã¥r fra nu',
	yearsUntil: '{delta} Ã¥r fra nu'

});

/*
---

name: Locale.da-DK.Form.Validator

description: Form Validator messages for Danish.

license: MIT-style license

authors:
  - Martin Overgaard

requires:
  - Locale

provides: [Locale.da-DK.Form.Validator]

...
*/

Locale.define('da-DK', 'FormValidator', {

	required: 'Feltet skal udfyldes.',
	minLength: 'Skriv mindst {minLength} tegn (du skrev {length} tegn).',
	maxLength: 'Skriv maksimalt {maxLength} tegn (du skrev {length} tegn).',
	integer: 'Skriv et tal i dette felt. Decimal tal (f.eks. 1.25) er ikke tilladt.',
	numeric: 'Skriv kun tal i dette felt (i.e. "1" eller "1.1" eller "-1" eller "-1.1").',
	digits: 'Skriv kun tal og tegnsÃ¦tning i dette felt (eksempel, et telefon nummer med bindestreg eller punktum er tilladt).',
	alpha: 'Skriv kun bogstaver (a-z) i dette felt. Mellemrum og andre tegn er ikke tilladt.',
	alphanum: 'Skriv kun bogstaver (a-z) eller tal (0-9) i dette felt. Mellemrum og andre tegn er ikke tilladt.',
	dateSuchAs: 'Skriv en gyldig dato som {date}',
	dateInFormatMDY: 'Skriv dato i formatet DD-MM-YYYY (f.eks. "31-12-1999")',
	email: 'Skriv en gyldig e-mail adresse. F.eks "fred@domain.com".',
	url: 'Skriv en gyldig URL adresse. F.eks "http://www.example.com".',
	currencyDollar: 'Skriv et gldigt belÃ¸b. F.eks Kr.100.00 .',
	oneRequired: 'Et eller flere af felterne i denne formular skal udfyldes.',
	errorPrefix: 'Fejl: ',
	warningPrefix: 'Advarsel: ',

	// Form.Validator.Extras
	noSpace: 'Der mÃ¥ ikke benyttes mellemrum i dette felt.',
	reqChkByNode: 'Foretag et valg.',
	requiredChk: 'Dette felt skal udfyldes.',
	reqChkByName: 'VÃ¦lg en {label}.',
	match: 'Dette felt skal matche {matchName} feltet',
	startDate: 'start dato',
	endDate: 'slut dato',
	currentDate: 'dags dato',
	afterDate: 'Datoen skal vÃ¦re stÃ¸rre end eller lig med {label}.',
	beforeDate: 'Datoen skal vÃ¦re mindre end eller lig med {label}.',
	startMonth: 'VÃ¦lg en start mÃ¥ned',
	sameMonth: 'De valgte datoer skal vÃ¦re i samme mÃ¥ned - skift en af dem.'

});

/*
---

name: Locale.de-DE.Date

description: Date messages for German.

license: MIT-style license

authors:
  - Christoph Pojer
  - Frank Rossi
  - Ulrich Petri
  - Fabian Beiner

requires:
  - Locale

provides: [Locale.de-DE.Date]

...
*/

Locale.define('de-DE', 'Date', {

	months: ['Januar', 'Februar', 'MÃ¤rz', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember'],
	months_abbr: ['Jan', 'Feb', 'MÃ¤r', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez'],
	days: ['Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag'],
	days_abbr: ['So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa'],

	// Culture's date order: DD.MM.YYYY
	dateOrder: ['date', 'month', 'year'],
	shortDate: '%d.%m.%Y',
	shortTime: '%H:%M',
	AM: 'vormittags',
	PM: 'nachmittags',
	firstDayOfWeek: 1,

	// Date.Extras
	ordinal: '.',

	lessThanMinuteAgo: 'vor weniger als einer Minute',
	minuteAgo: 'vor einer Minute',
	minutesAgo: 'vor {delta} Minuten',
	hourAgo: 'vor einer Stunde',
	hoursAgo: 'vor {delta} Stunden',
	dayAgo: 'vor einem Tag',
	daysAgo: 'vor {delta} Tagen',
	weekAgo: 'vor einer Woche',
	weeksAgo: 'vor {delta} Wochen',
	monthAgo: 'vor einem Monat',
	monthsAgo: 'vor {delta} Monaten',
	yearAgo: 'vor einem Jahr',
	yearsAgo: 'vor {delta} Jahren',

	lessThanMinuteUntil: 'in weniger als einer Minute',
	minuteUntil: 'in einer Minute',
	minutesUntil: 'in {delta} Minuten',
	hourUntil: 'in ca. einer Stunde',
	hoursUntil: 'in ca. {delta} Stunden',
	dayUntil: 'in einem Tag',
	daysUntil: 'in {delta} Tagen',
	weekUntil: 'in einer Woche',
	weeksUntil: 'in {delta} Wochen',
	monthUntil: 'in einem Monat',
	monthsUntil: 'in {delta} Monaten',
	yearUntil: 'in einem Jahr',
	yearsUntil: 'in {delta} Jahren'

});

/*
---

name: Locale.de-CH.Date

description: Date messages for German (Switzerland).

license: MIT-style license

authors:
  - Michael van der Weg

requires:
  - Locale
  - Locale.de-DE.Date

provides: [Locale.de-CH.Date]

...
*/

Locale.define('de-CH').inherit('de-DE', 'Date');

/*
---

name: Locale.de-CH.Form.Validator

description: Form Validator messages for German (Switzerland).

license: MIT-style license

authors:
  - Michael van der Weg

requires:
  - Locale

provides: [Locale.de-CH.Form.Validator]

...
*/

Locale.define('de-CH', 'FormValidator', {

	required: 'Dieses Feld ist obligatorisch.',
	minLength: 'Geben Sie bitte mindestens {minLength} Zeichen ein (Sie haben {length} Zeichen eingegeben).',
	maxLength: 'Bitte geben Sie nicht mehr als {maxLength} Zeichen ein (Sie haben {length} Zeichen eingegeben).',
	integer: 'Geben Sie bitte eine ganze Zahl ein. Dezimalzahlen (z.B. 1.25) sind nicht erlaubt.',
	numeric: 'Geben Sie bitte nur Zahlenwerte in dieses Eingabefeld ein (z.B. &quot;1&quot;, &quot;1.1&quot;, &quot;-1&quot; oder &quot;-1.1&quot;).',
	digits: 'Benutzen Sie bitte nur Zahlen und Satzzeichen in diesem Eingabefeld (erlaubt ist z.B. eine Telefonnummer mit Bindestrichen und Punkten).',
	alpha: 'Benutzen Sie bitte nur Buchstaben (a-z) in diesem Feld. Leerzeichen und andere Zeichen sind nicht erlaubt.',
	alphanum: 'Benutzen Sie bitte nur Buchstaben (a-z) und Zahlen (0-9) in diesem Eingabefeld. Leerzeichen und andere Zeichen sind nicht erlaubt.',
	dateSuchAs: 'Geben Sie bitte ein g&uuml;ltiges Datum ein. Wie zum Beispiel {date}',
	dateInFormatMDY: 'Geben Sie bitte ein g&uuml;ltiges Datum ein. Wie zum Beispiel TT.MM.JJJJ (z.B. &quot;31.12.1999&quot;)',
	email: 'Geben Sie bitte eine g&uuml;ltige E-Mail Adresse ein. Wie zum Beispiel &quot;maria@bernasconi.ch&quot;.',
	url: 'Geben Sie bitte eine g&uuml;ltige URL ein. Wie zum Beispiel http://www.example.com.',
	currencyDollar: 'Geben Sie bitte einen g&uuml;ltigen Betrag in Schweizer Franken ein. Wie zum Beispiel 100.00 CHF .',
	oneRequired: 'Machen Sie f&uuml;r mindestens eines der Eingabefelder einen Eintrag.',
	errorPrefix: 'Fehler: ',
	warningPrefix: 'Warnung: ',

	// Form.Validator.Extras
	noSpace: 'In diesem Eingabefeld darf kein Leerzeichen sein.',
	reqChkByNode: 'Es wurden keine Elemente gew&auml;hlt.',
	requiredChk: 'Dieses Feld ist obligatorisch.',
	reqChkByName: 'Bitte w&auml;hlen Sie ein {label}.',
	match: 'Dieses Eingabefeld muss mit dem Feld {matchName} &uuml;bereinstimmen.',
	startDate: 'Das Anfangsdatum',
	endDate: 'Das Enddatum',
	currentDate: 'Das aktuelle Datum',
	afterDate: 'Das Datum sollte zur gleichen Zeit oder sp&auml;ter sein {label}.',
	beforeDate: 'Das Datum sollte zur gleichen Zeit oder fr&uuml;her sein {label}.',
	startMonth: 'W&auml;hlen Sie bitte einen Anfangsmonat',
	sameMonth: 'Diese zwei Datumsangaben m&uuml;ssen im selben Monat sein - Sie m&uuml;ssen eine von beiden ver&auml;ndern.',
	creditcard: 'Die eingegebene Kreditkartennummer ist ung&uuml;ltig. Bitte &uuml;berpr&uuml;fen Sie diese und versuchen Sie es erneut. {length} Zahlen eingegeben.'

});

/*
---
name: Locale.de-CH.Number
description: Number messages for Switzerland.
license: MIT-style license
authors:
  - Kim D. Jeker
requires:
  - Locale
  - Locale.CH.Number
provides: [Locale.de-CH.Number]
...
*/

Locale.define('de-CH').inherit('CH', 'Number');

/*
---

name: Locale.de-DE.Form.Validator

description: Form Validator messages for German.

license: MIT-style license

authors:
  - Frank Rossi
  - Ulrich Petri
  - Fabian Beiner

requires:
  - Locale

provides: [Locale.de-DE.Form.Validator]

...
*/

Locale.define('de-DE', 'FormValidator', {

	required: 'Dieses Eingabefeld muss ausgefÃ¼llt werden.',
	minLength: 'Geben Sie bitte mindestens {minLength} Zeichen ein (Sie haben nur {length} Zeichen eingegeben).',
	maxLength: 'Geben Sie bitte nicht mehr als {maxLength} Zeichen ein (Sie haben {length} Zeichen eingegeben).',
	integer: 'Geben Sie in diesem Eingabefeld bitte eine ganze Zahl ein. Dezimalzahlen (z.B. "1.25") sind nicht erlaubt.',
	numeric: 'Geben Sie in diesem Eingabefeld bitte nur Zahlenwerte (z.B. "1", "1.1", "-1" oder "-1.1") ein.',
	digits: 'Geben Sie in diesem Eingabefeld bitte nur Zahlen und Satzzeichen ein (z.B. eine Telefonnummer mit Bindestrichen und Punkten ist erlaubt).',
	alpha: 'Geben Sie in diesem Eingabefeld bitte nur Buchstaben (a-z) ein. Leerzeichen und andere Zeichen sind nicht erlaubt.',
	alphanum: 'Geben Sie in diesem Eingabefeld bitte nur Buchstaben (a-z) und Zahlen (0-9) ein. Leerzeichen oder andere Zeichen sind nicht erlaubt.',
	dateSuchAs: 'Geben Sie bitte ein gÃ¼ltiges Datum ein (z.B. "{date}").',
	dateInFormatMDY: 'Geben Sie bitte ein gÃ¼ltiges Datum im Format TT.MM.JJJJ ein (z.B. "31.12.1999").',
	email: 'Geben Sie bitte eine gÃ¼ltige E-Mail-Adresse ein (z.B. "max@mustermann.de").',
	url: 'Geben Sie bitte eine gÃ¼ltige URL ein (z.B. "http://www.example.com").',
	currencyDollar: 'Geben Sie bitte einen gÃ¼ltigen Betrag in EURO ein (z.B. 100.00â‚¬).',
	oneRequired: 'Bitte fÃ¼llen Sie mindestens ein Eingabefeld aus.',
	errorPrefix: 'Fehler: ',
	warningPrefix: 'Warnung: ',

	// Form.Validator.Extras
	noSpace: 'Es darf kein Leerzeichen in diesem Eingabefeld sein.',
	reqChkByNode: 'Es wurden keine Elemente gewÃ¤hlt.',
	requiredChk: 'Dieses Feld muss ausgefÃ¼llt werden.',
	reqChkByName: 'Bitte wÃ¤hlen Sie ein {label}.',
	match: 'Dieses Eingabefeld muss mit dem {matchName} Eingabefeld Ã¼bereinstimmen.',
	startDate: 'Das Anfangsdatum',
	endDate: 'Das Enddatum',
	currentDate: 'Das aktuelle Datum',
	afterDate: 'Das Datum sollte zur gleichen Zeit oder spÃ¤ter sein als {label}.',
	beforeDate: 'Das Datum sollte zur gleichen Zeit oder frÃ¼her sein als {label}.',
	startMonth: 'WÃ¤hlen Sie bitte einen Anfangsmonat',
	sameMonth: 'Diese zwei Datumsangaben mÃ¼ssen im selben Monat sein - Sie mÃ¼ssen eines von beiden verÃ¤ndern.',
	creditcard: 'Die eingegebene Kreditkartennummer ist ungÃ¼ltig. Bitte Ã¼berprÃ¼fen Sie diese und versuchen Sie es erneut. {length} Zahlen eingegeben.'

});

/*
---

name: Locale.de-DE.Number

description: Number messages for German.

license: MIT-style license

authors:
  - Christoph Pojer

requires:
  - Locale
  - Locale.EU.Number

provides: [Locale.de-DE.Number]

...
*/

Locale.define('de-DE').inherit('EU', 'Number');

/*
---

name: Locale.el-GR.Date

description: Date messages for Greek language.

license: MIT-style license

authors:
  - Periklis Argiriadis

requires:
  - Locale

provides: [Locale.el-GR.Date]

...
*/

Locale.define('el-GR', 'Date', {

	months: ['Î™Î±Î½Î¿Ï…Î¬ÏÎ¹Î¿Ï‚', 'Î¦ÎµÎ²ÏÎ¿Ï…Î¬ÏÎ¹Î¿Ï‚', 'ÎœÎ¬ÏÏ„Î¹Î¿Ï‚', 'Î‘Ï€ÏÎ¯Î»Î¹Î¿Ï‚', 'ÎœÎ¬Î¹Î¿Ï‚', 'Î™Î¿ÏÎ½Î¹Î¿Ï‚', 'Î™Î¿ÏÎ»Î¹Î¿Ï‚', 'Î‘ÏÎ³Î¿Ï…ÏƒÏ„Î¿Ï‚', 'Î£ÎµÏ€Ï„Î­Î¼Î²ÏÎ¹Î¿Ï‚', 'ÎŸÎºÏ„ÏŽÎ²ÏÎ¹Î¿Ï‚', 'ÎÎ¿Î­Î¼Î²ÏÎ¹Î¿Ï‚', 'Î”ÎµÎºÎ­Î¼Î²ÏÎ¹Î¿Ï‚'],
	months_abbr: ['Î™Î±Î½', 'Î¦ÎµÎ²', 'ÎœÎ±Ï', 'Î‘Ï€Ï', 'ÎœÎ¬Î¹', 'Î™Î¿Ï…Î½', 'Î™Î¿Ï…Î»', 'Î‘Ï…Î³', 'Î£ÎµÏ€', 'ÎŸÎºÏ„', 'ÎÎ¿Îµ', 'Î”ÎµÎº'],
	days: ['ÎšÏ…ÏÎ¹Î±ÎºÎ®', 'Î”ÎµÏ…Ï„Î­ÏÎ±', 'Î¤ÏÎ¯Ï„Î·', 'Î¤ÎµÏ„Î¬ÏÏ„Î·', 'Î Î­Î¼Ï€Ï„Î·', 'Î Î±ÏÎ±ÏƒÎºÎµÏ…Î®', 'Î£Î¬Î²Î²Î±Ï„Î¿'],
	days_abbr: ['ÎšÏ…Ï', 'Î”ÎµÏ…', 'Î¤ÏÎ¹', 'Î¤ÎµÏ„', 'Î ÎµÎ¼', 'Î Î±Ï', 'Î£Î±Î²'],

	// Culture's date order: DD/MM/YYYY
	dateOrder: ['date', 'month', 'year'],
	shortDate: '%d/%m/%Y',
	shortTime: '%I:%M%p',
	AM: 'Ï€Î¼',
	PM: 'Î¼Î¼',
	firstDayOfWeek: 1,

	// Date.Extras
	ordinal: function(dayOfMonth){
		// 1st, 2nd, 3rd, etc.
		return (dayOfMonth > 3 && dayOfMonth < 21) ? 'Î¿Ï‚' : ['Î¿Ï‚'][Math.min(dayOfMonth % 10, 4)];
	},

	lessThanMinuteAgo: 'Î»Î¹Î³ÏŒÏ„ÎµÏÎ¿ Î±Ï€ÏŒ Î­Î½Î± Î»ÎµÏ€Ï„ÏŒ Ï€ÏÎ¹Î½',
	minuteAgo: 'Ï€ÎµÏÎ¯Ï€Î¿Ï… Î­Î½Î± Î»ÎµÏ€Ï„ÏŒ Ï€ÏÎ¹Î½',
	minutesAgo: '{delta} Î»ÎµÏ€Ï„Î¬ Ï€ÏÎ¹Î½',
	hourAgo: 'Ï€ÎµÏÎ¯Ï€Î¿Ï… Î¼Î¹Î± ÏŽÏÎ± Ï€ÏÎ¹Î½',
	hoursAgo: 'Ï€ÎµÏÎ¯Ï€Î¿Ï… {delta} ÏŽÏÎµÏ‚ Ï€ÏÎ¹Î½',
	dayAgo: '1 Î·Î¼Î­ÏÎ± Ï€ÏÎ¹Î½',
	daysAgo: '{delta} Î·Î¼Î­ÏÎµÏ‚ Ï€ÏÎ¹Î½',
	weekAgo: '1 ÎµÎ²Î´Î¿Î¼Î¬Î´Î± Ï€ÏÎ¹Î½',
	weeksAgo: '{delta} ÎµÎ²Î´Î¿Î¼Î¬Î´ÎµÏ‚ Ï€ÏÎ¹Î½',
	monthAgo: '1 Î¼Î®Î½Î± Ï€ÏÎ¹Î½',
	monthsAgo: '{delta} Î¼Î®Î½ÎµÏ‚ Ï€ÏÎ¹Î½',
	yearAgo: '1 Ï‡ÏÏŒÎ½Î¿ Ï€ÏÎ¹Î½',
	yearsAgo: '{delta} Ï‡ÏÏŒÎ½Î¹Î± Ï€ÏÎ¹Î½',

	lessThanMinuteUntil: 'Î»Î¹Î³ÏŒÏ„ÎµÏÎ¿ Î±Ï€ÏŒ Î»ÎµÏ€Ï„ÏŒ Î±Ï€ÏŒ Ï„ÏŽÏÎ±',
	minuteUntil: 'Ï€ÎµÏÎ¯Ï€Î¿Ï… Î­Î½Î± Î»ÎµÏ€Ï„ÏŒ Î±Ï€ÏŒ Ï„ÏŽÏÎ±',
	minutesUntil: '{delta} Î»ÎµÏ€Ï„Î¬ Î±Ï€ÏŒ Ï„ÏŽÏÎ±',
	hourUntil: 'Ï€ÎµÏÎ¯Ï€Î¿Ï… Î¼Î¹Î± ÏŽÏÎ± Î±Ï€ÏŒ Ï„ÏŽÏÎ±',
	hoursUntil: 'Ï€ÎµÏÎ¯Ï€Î¿Ï… {delta} ÏŽÏÎµÏ‚ Î±Ï€ÏŒ Ï„ÏŽÏÎ±',
	dayUntil: '1 Î·Î¼Î­ÏÎ± Î±Ï€ÏŒ Ï„ÏŽÏÎ±',
	daysUntil: '{delta} Î·Î¼Î­ÏÎµÏ‚ Î±Ï€ÏŒ Ï„ÏŽÏÎ±',
	weekUntil: '1 ÎµÎ²Î´Î¿Î¼Î¬Î´Î± Î±Ï€ÏŒ Ï„ÏŽÏÎ±',
	weeksUntil: '{delta} ÎµÎ²Î´Î¿Î¼Î¬Î´ÎµÏ‚ Î±Ï€ÏŒ Ï„ÏŽÏÎ±',
	monthUntil: '1 Î¼Î®Î½Î±Ï‚ Î±Ï€ÏŒ Ï„ÏŽÏÎ±',
	monthsUntil: '{delta} Î¼Î®Î½ÎµÏ‚ Î±Ï€ÏŒ Ï„ÏŽÏÎ±',
	yearUntil: '1 Ï‡ÏÏŒÎ½Î¿Ï‚ Î±Ï€ÏŒ Ï„ÏŽÏÎ±',
	yearsUntil: '{delta} Ï‡ÏÏŒÎ½Î¹Î± Î±Ï€ÏŒ Ï„ÏŽÏÎ±'

});

/*
---

name: Locale.el-GR.Form.Validator

description: Form Validator messages for Greek language.

license: MIT-style license

authors:
  - Dimitris Tsironis

requires:
  - Locale

provides: [Locale.el-GR.Form.Validator]

...
*/

Locale.define('el-GR', 'FormValidator', {

	required: 'Î‘Ï…Ï„ÏŒ Ï„Î¿ Ï€ÎµÎ´Î¯Î¿ ÎµÎ¯Î½Î±Î¹ Î±Ï€Î±ÏÎ±Î¯Ï„Î·Ï„Î¿.',
	length: 'Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, ÎµÎ¹ÏƒÎ¬Î³ÎµÏ„Îµ {length} Ï‡Î±ÏÎ±ÎºÏ„Î®ÏÎµÏ‚ (Î­Ï‡ÎµÏ„Îµ Î®Î´Î· ÎµÎ¹ÏƒÎ¬Î³ÎµÎ¹ {elLength} Ï‡Î±ÏÎ±ÎºÏ„Î®ÏÎµÏ‚).',
	minLength: 'Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, ÎµÎ¹ÏƒÎ¬Î³ÎµÏ„Îµ Ï„Î¿Ï…Î»Î¬Ï‡Î¹ÏƒÏ„Î¿Î½ {minLength} Ï‡Î±ÏÎ±ÎºÏ„Î®ÏÎµÏ‚ (Î­Ï‡ÎµÏ„Îµ Î®Î´Î· ÎµÎ¹ÏƒÎ¬Î³Îµ {length} Ï‡Î±ÏÎ±ÎºÏ„Î®ÏÎµÏ‚).',
	maxlength: 'Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, ÎµÎ¹ÏƒÎ¬Î³ÎµÏ„Îµ ÎµÏŽÏ‚ {maxlength} Ï‡Î±ÏÎ±ÎºÏ„Î®ÏÎµÏ‚ (Î­Ï‡ÎµÏ„Îµ Î®Î´Î· ÎµÎ¹ÏƒÎ¬Î³Îµ {length} Ï‡Î±ÏÎ±ÎºÏ„Î®ÏÎµÏ‚).',
	integer: 'Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, ÎµÎ¹ÏƒÎ¬Î³ÎµÏ„Îµ Î­Î½Î±Î½ Î±ÎºÎ­ÏÎ±Î¹Î¿ Î±ÏÎ¹Î¸Î¼ÏŒ ÏƒÎµ Î±Ï…Ï„ÏŒ Ï„Î¿ Ï€ÎµÎ´Î¯Î¿. ÎŸÎ¹ Î±ÏÎ¹Î¸Î¼Î¿Î¯ Î¼Îµ Î´ÎµÎºÎ±Î´Î¹ÎºÎ¬ ÏˆÎ·Ï†Î¯Î± (Ï€.Ï‡. 1.25) Î´ÎµÎ½ ÎµÏ€Î¹Ï„ÏÎ­Ï€Î¿Î½Ï„Î±Î¹.',
	numeric: 'Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, ÎµÎ¹ÏƒÎ¬Î³ÎµÏ„Îµ Î¼ÏŒÎ½Î¿ Î±ÏÎ¹Î¸Î¼Î·Ï„Î¹ÎºÎ­Ï‚ Ï„Î¹Î¼Î­Ï‚ ÏƒÎµ Î±Ï…Ï„ÏŒ Ï„Î¿ Ï€ÎµÎ´Î¯Î¿ (Ï€.Ï‡." 1 " Î® " 1.1 " Î® " -1 " Î® " -1.1 " ).',
	digits: 'Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, Ï‡ÏÎ·ÏƒÎ¹Î¼Î¿Ï€Î¿Î¹Î®ÏƒÏ„Îµ Î¼ÏŒÎ½Î¿ Î±ÏÎ¹Î¸Î¼Î¿ÏÏ‚ ÎºÎ±Î¹ ÏƒÎ·Î¼ÎµÎ¯Î± ÏƒÏ„Î¯Î¾Î·Ï‚ ÏƒÎµ Î±Ï…Ï„ÏŒÎ½ Ï„Î¿Î½ Ï„Î¿Î¼Î­Î± (Ï€.Ï‡. ÎµÏ€Î¹Ï„ÏÎ­Ï€ÎµÏ„Î±Î¹ Î±ÏÎ¹Î¸Î¼ÏŒÏ‚ Ï„Î·Î»ÎµÏ†ÏŽÎ½Î¿Ï… Î¼Îµ Ï€Î±ÏÎ»ÎµÏ‚ Î® Ï„ÎµÎ»ÎµÎ¯ÎµÏ‚).',
	alpha: 'Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, Ï‡ÏÎ·ÏƒÎ¹Î¼Î¿Ï€Î¿Î¹Î®ÏƒÏ„Îµ Î¼ÏŒÎ½Î¿ Î³ÏÎ¬Î¼Î¼Î±Ï„Î± (a-z) ÏƒÎµ Î±Ï…Ï„ÏŒ Ï„Î¿ Ï€ÎµÎ´Î¯Î¿. Î”ÎµÎ½ ÎµÏ€Î¹Ï„ÏÎ­Ï€Î¿Î½Ï„Î±Î¹ ÎºÎµÎ½Î¬ Î® Î¬Î»Î»Î¿Î¹ Ï‡Î±ÏÎ±ÎºÏ„Î®ÏÎµÏ‚.',
	alphanum: 'Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, Ï‡ÏÎ·ÏƒÎ¹Î¼Î¿Ï€Î¿Î¹Î®ÏƒÏ„Îµ Î¼ÏŒÎ½Î¿ Î³ÏÎ¬Î¼Î¼Î±Ï„Î± (a-z) Î® Î±ÏÎ¹Î¸Î¼Î¿ÏÏ‚ (0-9) ÏƒÎµ Î±Ï…Ï„ÏŒÎ½ Ï„Î¿Î½ Ï„Î¿Î¼Î­Î±. Î”ÎµÎ½ ÎµÏ€Î¹Ï„ÏÎ­Ï€Î¿Î½Ï„Î±Î¹ ÎºÎµÎ½Î¬ Î® Î¬Î»Î»Î¿Î¹ Ï‡Î±ÏÎ±ÎºÏ„Î®ÏÎµÏ‚.',
	dateSuchAs: 'Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, ÎµÎ¹ÏƒÎ¬Î³ÎµÏ„Îµ Î¼Î¹Î± Î­Î³ÎºÏ…ÏÎ· Î·Î¼ÎµÏÎ¿Î¼Î·Î½Î¯Î±, ÏŒÏ€Ï‰Ï‚ {date}',
	dateInFormatMDY: 'Î Î±ÏÎ±ÎºÎ±Î»ÏŽ ÎµÎ¹ÏƒÎ¬Î³ÎµÏ„Îµ Î¼Î¹Î± Î­Î³ÎºÏ…ÏÎ· Î·Î¼ÎµÏÎ¿Î¼Î·Î½Î¯Î±, ÏŒÏ€Ï‰Ï‚ ÎœÎœ/Î—Î—/Î•Î•Î•Î• (Ï€.Ï‡. "12/31/1999").',
	email: 'Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, ÎµÎ¹ÏƒÎ¬Î³ÎµÏ„Îµ Î¼Î¹Î± Î­Î³ÎºÏ…ÏÎ· Î´Î¹ÎµÏÎ¸Ï…Î½ÏƒÎ· Î·Î»ÎµÎºÏ„ÏÎ¿Î½Î¹ÎºÎ¿Ï Ï„Î±Ï‡Ï…Î´ÏÎ¿Î¼ÎµÎ¯Î¿Ï… (Ï€.Ï‡. "fred@domain.com").',
	url: 'Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, ÎµÎ¹ÏƒÎ¬Î³ÎµÏ„Îµ Î¼Î¹Î± Î­Î³ÎºÏ…ÏÎ· URL Î´Î¹ÎµÏÎ¸Ï…Î½ÏƒÎ·, ÏŒÏ€Ï‰Ï‚ http://www.example.com',
	currencyDollar: 'Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, ÎµÎ¹ÏƒÎ¬Î³ÎµÏ„Îµ Î­Î½Î± Î­Î³ÎºÏ…ÏÎ¿ Ï€Î¿ÏƒÏŒ ÏƒÎµ Î´Î¿Î»Î»Î¬ÏÎ¹Î± (Ï€.Ï‡. $100.00).',
	oneRequired: 'Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, ÎµÎ¹ÏƒÎ¬Î³ÎµÏ„Îµ ÎºÎ¬Ï„Î¹ Î³Î¹Î± Ï„Î¿Ï…Î»Î¬Ï‡Î¹ÏƒÏ„Î¿Î½ Î­Î½Î± Î±Ï€ÏŒ Î±Ï…Ï„Î¬ Ï„Î± Ï€ÎµÎ´Î¯Î±.',
	errorPrefix: 'Î£Ï†Î¬Î»Î¼Î±: ',
	warningPrefix: 'Î ÏÎ¿ÏƒÎ¿Ï‡Î®: ',

	// Form.Validator.Extras
	noSpace: 'Î”ÎµÎ½ ÎµÏ€Î¹Ï„ÏÎ­Ï€Î¿Î½Ï„Î±Î¹ Ï„Î± ÎºÎµÎ½Î¬ ÏƒÎµ Î±Ï…Ï„ÏŒ Ï„Î¿ Ï€ÎµÎ´Î¯Î¿.',
	reqChkByNode: 'Î”ÎµÎ½ Î­Ï‡ÎµÎ¹ ÎµÏ€Î¹Î»ÎµÎ³ÎµÎ¯ ÎºÎ¬Ï€Î¿Î¹Î¿ Î±Î½Ï„Î¹ÎºÎµÎ¯Î¼ÎµÎ½Î¿',
	requiredChk: 'Î‘Ï…Ï„ÏŒ Ï„Î¿ Ï€ÎµÎ´Î¯Î¿ ÎµÎ¯Î½Î±Î¹ Î±Ï€Î±ÏÎ±Î¯Ï„Î·Ï„Î¿.',
	reqChkByName: 'Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, ÎµÏ€Î¹Î»Î­Î¾Ï„Îµ Î¼Î¹Î± ÎµÏ„Î¹ÎºÎ­Ï„Î± {label}.',
	match: 'Î‘Ï…Ï„ÏŒ Ï„Î¿ Ï€ÎµÎ´Î¯Î¿ Ï€ÏÎ­Ï€ÎµÎ¹ Î½Î± Ï„Î±Î¹ÏÎ¹Î¬Î¶ÎµÎ¹ Î¼Îµ Ï„Î¿ Ï€ÎµÎ´Î¯Î¿ {matchName}.',
	startDate: 'Î· Î·Î¼ÎµÏÎ¿Î¼Î·Î½Î¯Î± Î­Î½Î±ÏÎ¾Î·Ï‚',
	endDate: 'Î· Î·Î¼ÎµÏÎ¿Î¼Î·Î½Î¯Î± Î»Î®Î¾Î·Ï‚',
	currentDate: 'Î· Ï„ÏÎ­Ï‡Î¿Ï…ÏƒÎ± Î·Î¼ÎµÏÎ¿Î¼Î·Î½Î¯Î±',
	afterDate: 'Î— Î·Î¼ÎµÏÎ¿Î¼Î·Î½Î¯Î± Ï€ÏÎ­Ï€ÎµÎ¹ Î½Î± ÎµÎ¯Î½Î±Î¹ Î· Î¯Î´Î¹Î± Î® Î¼ÎµÏ„Î¬ Î±Ï€ÏŒ Ï„Î·Î½ {label}.',
	beforeDate: 'Î— Î·Î¼ÎµÏÎ¿Î¼Î·Î½Î¯Î± Ï€ÏÎ­Ï€ÎµÎ¹ Î½Î± ÎµÎ¯Î½Î±Î¹ Î· Î¯Î´Î¹Î± Î® Ï€ÏÎ¹Î½ Î±Ï€ÏŒ Ï„Î·Î½ {label}.',
	startMonth: 'Î Î±ÏÎ±ÎºÎ±Î»ÏŽ ÎµÏ€Î¹Î»Î­Î¾Ï„Îµ Î­Î½Î± Î¼Î®Î½Î± Î±ÏÏ‡Î®Ï‚.',
	sameMonth: 'Î‘Ï…Ï„Î­Ï‚ Î¿Î¹ Î´ÏÎ¿ Î·Î¼ÎµÏÎ¿Î¼Î·Î½Î¯ÎµÏ‚ Ï€ÏÎ­Ï€ÎµÎ¹ Î½Î± Î­Ï‡Î¿Ï…Î½ Ï„Î¿Î½ Î¯Î´Î¹Î¿ Î¼Î®Î½Î± - Î¸Î± Ï€ÏÎ­Ï€ÎµÎ¹ Î½Î± Î±Î»Î»Î¬Î¾ÎµÏ„Îµ Î® Ï„Î¿ Î­Î½Î± Î® Ï„Î¿ Î¬Î»Î»Î¿',
	creditcard: 'ÎŸ Î±ÏÎ¹Î¸Î¼ÏŒÏ‚ Ï„Î·Ï‚ Ï€Î¹ÏƒÏ„Ï‰Ï„Î¹ÎºÎ®Ï‚ ÎºÎ¬ÏÏ„Î±Ï‚ Î´ÎµÎ½ ÎµÎ¯Î½Î±Î¹ Î­Î³ÎºÏ…ÏÎ¿Ï‚. Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ ÎµÎ»Î­Î³Î¾Ï„Îµ Ï„Î¿Î½ Î±ÏÎ¹Î¸Î¼ÏŒ ÎºÎ±Î¹ Î´Î¿ÎºÎ¹Î¼Î¬ÏƒÏ„Îµ Î¾Î±Î½Î¬. {length} Î¼Î®ÎºÎ¿Ï‚ ÏˆÎ·Ï†Î¯Ï‰Î½.'

});

/*
---

name: Locale.en-GB.Date

description: Date messages for British English.

license: MIT-style license

authors:
  - Aaron Newton

requires:
  - Locale
  - Locale.en-US.Date

provides: [Locale.en-GB.Date]

...
*/

Locale.define('en-GB', 'Date', {

	// Culture's date order: DD/MM/YYYY
	dateOrder: ['date', 'month', 'year'],
	shortDate: '%d/%m/%Y',
	shortTime: '%H:%M'

}).inherit('en-US', 'Date');

/*
---

name: Locale.en-US.Number

description: Number messages for US English.

license: MIT-style license

authors:
  - Arian Stolwijk

requires:
  - Locale

provides: [Locale.en-US.Number]

...
*/

Locale.define('en-US', 'Number', {

	decimal: '.',
	group: ',',

/* 	Commented properties are the defaults for Number.format
	decimals: 0,
	precision: 0,
	scientific: null,

	prefix: null,
	suffic: null,

	// Negative/Currency/percentage will mixin Number
	negative: {
		prefix: '-'
	},*/

	currency: {
//		decimals: 2,
		prefix: '$ '
	}/*,

	percentage: {
		decimals: 2,
		suffix: '%'
	}*/

});



/*
---

name: Locale.es-ES.Date

description: Date messages for Spanish.

license: MIT-style license

authors:
  - Ãƒlfons Sanchez

requires:
  - Locale

provides: [Locale.es-ES.Date]

...
*/

Locale.define('es-ES', 'Date', {

	months: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
	months_abbr: ['ene', 'feb', 'mar', 'abr', 'may', 'jun', 'jul', 'ago', 'sep', 'oct', 'nov', 'dic'],
	days: ['Domingo', 'Lunes', 'Martes', 'MiÃ©rcoles', 'Jueves', 'Viernes', 'SÃ¡bado'],
	days_abbr: ['dom', 'lun', 'mar', 'miÃ©', 'juv', 'vie', 'sÃ¡b'],

	// Culture's date order: DD/MM/YYYY
	dateOrder: ['date', 'month', 'year'],
	shortDate: '%d/%m/%Y',
	shortTime: '%H:%M',
	AM: 'AM',
	PM: 'PM',
	firstDayOfWeek: 1,

	// Date.Extras
	ordinal: '',

	lessThanMinuteAgo: 'hace menos de un minuto',
	minuteAgo: 'hace un minuto',
	minutesAgo: 'hace {delta} minutos',
	hourAgo: 'hace una hora',
	hoursAgo: 'hace unas {delta} horas',
	dayAgo: 'hace un dÃ­a',
	daysAgo: 'hace {delta} dÃ­as',
	weekAgo: 'hace una semana',
	weeksAgo: 'hace unas {delta} semanas',
	monthAgo: 'hace un mes',
	monthsAgo: 'hace {delta} meses',
	yearAgo: 'hace un aÃ±o',
	yearsAgo: 'hace {delta} aÃ±os',

	lessThanMinuteUntil: 'menos de un minuto desde ahora',
	minuteUntil: 'un minuto desde ahora',
	minutesUntil: '{delta} minutos desde ahora',
	hourUntil: 'una hora desde ahora',
	hoursUntil: 'unas {delta} horas desde ahora',
	dayUntil: 'un dÃ­a desde ahora',
	daysUntil: '{delta} dÃ­as desde ahora',
	weekUntil: 'una semana desde ahora',
	weeksUntil: 'unas {delta} semanas desde ahora',
	monthUntil: 'un mes desde ahora',
	monthsUntil: '{delta} meses desde ahora',
	yearUntil: 'un aÃ±o desde ahora',
	yearsUntil: '{delta} aÃ±os desde ahora'

});

/*
---

name: Locale.es-AR.Date

description: Date messages for Spanish (Argentina).

license: MIT-style license

authors:
  - Ãƒlfons Sanchez
  - Diego Massanti

requires:
  - Locale
  - Locale.es-ES.Date

provides: [Locale.es-AR.Date]

...
*/

Locale.define('es-AR').inherit('es-ES', 'Date');

/*
---

name: Locale.es-AR.Form.Validator

description: Form Validator messages for Spanish (Argentina).

license: MIT-style license

authors:
  - Diego Massanti

requires:
  - Locale

provides: [Locale.es-AR.Form.Validator]

...
*/

Locale.define('es-AR', 'FormValidator', {

	required: 'Este campo es obligatorio.',
	minLength: 'Por favor ingrese al menos {minLength} caracteres (ha ingresado {length} caracteres).',
	maxLength: 'Por favor no ingrese mÃ¡s de {maxLength} caracteres (ha ingresado {length} caracteres).',
	integer: 'Por favor ingrese un nÃºmero entero en este campo. NÃºmeros con decimales (p.e. 1,25) no se permiten.',
	numeric: 'Por favor ingrese solo valores numÃ©ricos en este campo (p.e. "1" o "1,1" o "-1" o "-1,1").',
	digits: 'Por favor use sÃ³lo nÃºmeros y puntuaciÃ³n en este campo (por ejemplo, un nÃºmero de telÃ©fono con guiones y/o puntos no estÃ¡ permitido).',
	alpha: 'Por favor use sÃ³lo letras (a-z) en este campo. No se permiten espacios ni otros caracteres.',
	alphanum: 'Por favor, usa sÃ³lo letras (a-z) o nÃºmeros (0-9) en este campo. No se permiten espacios u otros caracteres.',
	dateSuchAs: 'Por favor ingrese una fecha vÃ¡lida como {date}',
	dateInFormatMDY: 'Por favor ingrese una fecha vÃ¡lida, utulizando el formato DD/MM/YYYY (p.e. "31/12/1999")',
	email: 'Por favor, ingrese una direcciÃ³n de e-mail vÃ¡lida. Por ejemplo, "fred@dominio.com".',
	url: 'Por favor ingrese una URL vÃ¡lida como http://www.example.com.',
	currencyDollar: 'Por favor ingrese una cantidad vÃ¡lida de pesos. Por ejemplo $100,00 .',
	oneRequired: 'Por favor ingrese algo para por lo menos una de estas entradas.',
	errorPrefix: 'Error: ',
	warningPrefix: 'Advertencia: ',

	// Form.Validator.Extras
	noSpace: 'No se permiten espacios en este campo.',
	reqChkByNode: 'No hay elementos seleccionados.',
	requiredChk: 'Este campo es obligatorio.',
	reqChkByName: 'Por favor selecciona una {label}.',
	match: 'Este campo necesita coincidir con el campo {matchName}',
	startDate: 'la fecha de inicio',
	endDate: 'la fecha de fin',
	currentDate: 'la fecha actual',
	afterDate: 'La fecha debe ser igual o posterior a {label}.',
	beforeDate: 'La fecha debe ser igual o anterior a {label}.',
	startMonth: 'Por favor selecciona un mes de origen',
	sameMonth: 'Estas dos fechas deben estar en el mismo mes - debes cambiar una u otra.'

});

/*
---

name: Locale.es-AR.Number

description: Number messages for es Argentina.

license: MIT-style license

authors:
  - Oscar Kuchuk

requires:
  - Locale

provides: [Locale.es-AR.Number]

...
*/

Locale.define('es-AR', 'Number', {

	decimal: ',',
	group: '.',

/* 	Commented properties are the defaults for Number.format
	decimals: 0,
	precision: 0,
	scientific: null,

	prefix: null,
	suffic: null,

	// Negative/Currency/percentage will mixin Number
	negative: {
		prefix: '-'
	},*/

	currency: {
		decimals: 2,
		prefix: '$ '
	}/*,

	percentage: {
		decimals: 2,
		suffix: '%'
	}*/

});


/*
---

name: Locale.es-ES.Form.Validator

description: Form Validator messages for Spanish.

license: MIT-style license

authors:
  - Ãƒlfons Sanchez

requires:
  - Locale

provides: [Locale.es-ES.Form.Validator]

...
*/

Locale.define('es-ES', 'FormValidator', {

	required: 'Este campo es obligatorio.',
	minLength: 'Por favor introduce al menos {minLength} caracteres (has introducido {length} caracteres).',
	maxLength: 'Por favor introduce no m&aacute;s de {maxLength} caracteres (has introducido {length} caracteres).',
	integer: 'Por favor introduce un n&uacute;mero entero en este campo. N&uacute;meros con decimales (p.e. 1,25) no se permiten.',
	numeric: 'Por favor introduce solo valores num&eacute;ricos en este campo (p.e. "1" o "1,1" o "-1" o "-1,1").',
	digits: 'Por favor usa solo n&uacute;meros y puntuaci&oacute;n en este campo (por ejemplo, un n&uacute;mero de tel&eacute;fono con guiones y puntos no esta permitido).',
	alpha: 'Por favor usa letras solo (a-z) en este campo. No se admiten espacios ni otros caracteres.',
	alphanum: 'Por favor, usa solo letras (a-z) o n&uacute;meros (0-9) en este campo. No se admiten espacios ni otros caracteres.',
	dateSuchAs: 'Por favor introduce una fecha v&aacute;lida como {date}',
	dateInFormatMDY: 'Por favor introduce una fecha v&aacute;lida como DD/MM/YYYY (p.e. "31/12/1999")',
	email: 'Por favor, introduce una direcci&oacute;n de email v&aacute;lida. Por ejemplo, "fred@domain.com".',
	url: 'Por favor introduce una URL v&aacute;lida como http://www.example.com.',
	currencyDollar: 'Por favor introduce una cantidad v&aacute;lida de â‚¬. Por ejemplo â‚¬100,00 .',
	oneRequired: 'Por favor introduce algo para por lo menos una de estas entradas.',
	errorPrefix: 'Error: ',
	warningPrefix: 'Aviso: ',

	// Form.Validator.Extras
	noSpace: 'No pueden haber espacios en esta entrada.',
	reqChkByNode: 'No hay elementos seleccionados.',
	requiredChk: 'Este campo es obligatorio.',
	reqChkByName: 'Por favor selecciona una {label}.',
	match: 'Este campo necesita coincidir con el campo {matchName}',
	startDate: 'la fecha de inicio',
	endDate: 'la fecha de fin',
	currentDate: 'la fecha actual',
	afterDate: 'La fecha debe ser igual o posterior a {label}.',
	beforeDate: 'La fecha debe ser igual o anterior a {label}.',
	startMonth: 'Por favor selecciona un mes de origen',
	sameMonth: 'Estas dos fechas deben estar en el mismo mes - debes cambiar una u otra.'

});

/*
---

name: Locale.es-VE.Date

description: Date messages for Spanish (Venezuela).

license: MIT-style license

authors:
  - Daniel Barreto

requires:
  - Locale
  - Locale.es-ES.Date

provides: [Locale.es-VE.Date]

...
*/

Locale.define('es-VE').inherit('es-ES', 'Date');

/*
---

name: Locale.es-VE.Form.Validator

description: Form Validator messages for Spanish (Venezuela).

license: MIT-style license

authors:
  - Daniel Barreto

requires:
  - Locale
  - Locale.es-ES.Form.Validator

provides: [Locale.es-VE.Form.Validator]

...
*/

Locale.define('es-VE', 'FormValidator', {

	digits: 'Por favor usa solo n&uacute;meros y puntuaci&oacute;n en este campo. Por ejemplo, un n&uacute;mero de tel&eacute;fono con guiones y puntos no esta permitido.',
	alpha: 'Por favor usa solo letras (a-z) en este campo. No se admiten espacios ni otros caracteres.',
	currencyDollar: 'Por favor introduce una cantidad v&aacute;lida de Bs. Por ejemplo Bs. 100,00 .',
	oneRequired: 'Por favor introduce un valor para por lo menos una de estas entradas.',

	// Form.Validator.Extras
	startDate: 'La fecha de inicio',
	endDate: 'La fecha de fin',
	currentDate: 'La fecha actual'

}).inherit('es-ES', 'FormValidator');

/*
---

name: Locale.es-VE.Number

description: Number messages for Spanish (Venezuela).

license: MIT-style license

authors:
  - Daniel Barreto

requires:
  - Locale

provides: [Locale.es-VE.Number]

...
*/

Locale.define('es-VE', 'Number', {

	decimal: ',',
	group: '.',
/*
	decimals: 0,
	precision: 0,
*/
	// Negative/Currency/percentage will mixin Number
	negative: {
		prefix: '-'
	},

	currency: {
		decimals: 2,
		prefix: 'Bs. '
	},

	percentage: {
		decimals: 2,
		suffix: '%'
	}

});

/*
---

name: Locale.et-EE.Date

description: Date messages for Estonian.

license: MIT-style license

authors:
  - Kevin Valdek

requires:
  - Locale

provides: [Locale.et-EE.Date]

...
*/

Locale.define('et-EE', 'Date', {

	months: ['jaanuar', 'veebruar', 'mÃ¤rts', 'aprill', 'mai', 'juuni', 'juuli', 'august', 'september', 'oktoober', 'november', 'detsember'],
	months_abbr: ['jaan', 'veebr', 'mÃ¤rts', 'apr', 'mai', 'juuni', 'juuli', 'aug', 'sept', 'okt', 'nov', 'dets'],
	days: ['pÃ¼hapÃ¤ev', 'esmaspÃ¤ev', 'teisipÃ¤ev', 'kolmapÃ¤ev', 'neljapÃ¤ev', 'reede', 'laupÃ¤ev'],
	days_abbr: ['pÃ¼hap', 'esmasp', 'teisip', 'kolmap', 'neljap', 'reede', 'laup'],

	// Culture's date order: MM.DD.YYYY
	dateOrder: ['month', 'date', 'year'],
	shortDate: '%m.%d.%Y',
	shortTime: '%H:%M',
	AM: 'AM',
	PM: 'PM',
	firstDayOfWeek: 1,

	// Date.Extras
	ordinal: '',

	lessThanMinuteAgo: 'vÃ¤hem kui minut aega tagasi',
	minuteAgo: 'umbes minut aega tagasi',
	minutesAgo: '{delta} minutit tagasi',
	hourAgo: 'umbes tund aega tagasi',
	hoursAgo: 'umbes {delta} tundi tagasi',
	dayAgo: '1 pÃ¤ev tagasi',
	daysAgo: '{delta} pÃ¤eva tagasi',
	weekAgo: '1 nÃ¤dal tagasi',
	weeksAgo: '{delta} nÃ¤dalat tagasi',
	monthAgo: '1 kuu tagasi',
	monthsAgo: '{delta} kuud tagasi',
	yearAgo: '1 aasta tagasi',
	yearsAgo: '{delta} aastat tagasi',

	lessThanMinuteUntil: 'vÃ¤hem kui minuti aja pÃ¤rast',
	minuteUntil: 'umbes minuti aja pÃ¤rast',
	minutesUntil: '{delta} minuti pÃ¤rast',
	hourUntil: 'umbes tunni aja pÃ¤rast',
	hoursUntil: 'umbes {delta} tunni pÃ¤rast',
	dayUntil: '1 pÃ¤eva pÃ¤rast',
	daysUntil: '{delta} pÃ¤eva pÃ¤rast',
	weekUntil: '1 nÃ¤dala pÃ¤rast',
	weeksUntil: '{delta} nÃ¤dala pÃ¤rast',
	monthUntil: '1 kuu pÃ¤rast',
	monthsUntil: '{delta} kuu pÃ¤rast',
	yearUntil: '1 aasta pÃ¤rast',
	yearsUntil: '{delta} aasta pÃ¤rast'

});

/*
---

name: Locale.et-EE.Form.Validator

description: Form Validator messages for Estonian.

license: MIT-style license

authors:
  - Kevin Valdek

requires:
  - Locale

provides: [Locale.et-EE.Form.Validator]

...
*/

Locale.define('et-EE', 'FormValidator', {

	required: 'VÃ¤li peab olema tÃ¤idetud.',
	minLength: 'Palun sisestage vÃ¤hemalt {minLength} tÃ¤hte (te sisestasite {length} tÃ¤hte).',
	maxLength: 'Palun Ã¤rge sisestage rohkem kui {maxLength} tÃ¤hte (te sisestasite {length} tÃ¤hte).',
	integer: 'Palun sisestage vÃ¤ljale tÃ¤isarv. KÃ¼mnendarvud (nÃ¤iteks 1.25) ei ole lubatud.',
	numeric: 'Palun sisestage ainult numbreid vÃ¤ljale (nÃ¤iteks "1", "1.1", "-1" vÃµi "-1.1").',
	digits: 'Palun kasutage ainult numbreid ja kirjavahemÃ¤rke (telefoninumbri sisestamisel on lubatud kasutada kriipse ja punkte).',
	alpha: 'Palun kasutage ainult tÃ¤hti (a-z). TÃ¼hikud ja teised sÃ¼mbolid on keelatud.',
	alphanum: 'Palun kasutage ainult tÃ¤hti (a-z) vÃµi numbreid (0-9). TÃ¼hikud ja teised sÃ¼mbolid on keelatud.',
	dateSuchAs: 'Palun sisestage kehtiv kuupÃ¤ev kujul {date}',
	dateInFormatMDY: 'Palun sisestage kehtiv kuupÃ¤ev kujul MM.DD.YYYY (nÃ¤iteks: "12.31.1999").',
	email: 'Palun sisestage kehtiv e-maili aadress (nÃ¤iteks: "fred@domain.com").',
	url: 'Palun sisestage kehtiv URL (nÃ¤iteks: http://www.example.com).',
	currencyDollar: 'Palun sisestage kehtiv $ summa (nÃ¤iteks: $100.00).',
	oneRequired: 'Palun sisestage midagi vÃ¤hemalt Ã¼hele antud vÃ¤ljadest.',
	errorPrefix: 'Viga: ',
	warningPrefix: 'Hoiatus: ',

	// Form.Validator.Extras
	noSpace: 'VÃ¤li ei tohi sisaldada tÃ¼hikuid.',
	reqChkByNode: 'Ãœkski vÃ¤ljadest pole valitud.',
	requiredChk: 'VÃ¤lja tÃ¤itmine on vajalik.',
	reqChkByName: 'Palun valige Ã¼ks {label}.',
	match: 'VÃ¤li peab sobima {matchName} vÃ¤ljaga',
	startDate: 'algkuupÃ¤ev',
	endDate: 'lÃµppkuupÃ¤ev',
	currentDate: 'praegune kuupÃ¤ev',
	afterDate: 'KuupÃ¤ev peab olema vÃµrdne vÃµi pÃ¤rast {label}.',
	beforeDate: 'KuupÃ¤ev peab olema vÃµrdne vÃµi enne {label}.',
	startMonth: 'Palun valige algkuupÃ¤ev.',
	sameMonth: 'Antud kaks kuupÃ¤eva peavad olema samas kuus - peate muutma Ã¼hte kuupÃ¤eva.'

});

/*
---

name: Locale.fa.Date

description: Date messages for Persian.

license: MIT-style license

authors:
  - Amir Hossein Hodjaty Pour

requires:
  - Locale

provides: [Locale.fa.Date]

...
*/

Locale.define('fa', 'Date', {

	months: ['Ú˜Ø§Ù†ÙˆÛŒÙ‡', 'ÙÙˆØ±ÛŒÙ‡', 'Ù…Ø§Ø±Ø³', 'Ø¢Ù¾Ø±ÛŒÙ„', 'Ù…Ù‡', 'Ú˜ÙˆØ¦Ù†', 'Ú˜ÙˆØ¦ÛŒÙ‡', 'Ø¢Ú¯ÙˆØ³Øª', 'Ø³Ù¾ØªØ§Ù…Ø¨Ø±', 'Ø§Ú©ØªØ¨Ø±', 'Ù†ÙˆØ§Ù…Ø¨Ø±', 'Ø¯Ø³Ø§Ù…Ø¨Ø±'],
	months_abbr: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],
	days: ['ÛŒÚ©Ø´Ù†Ø¨Ù‡', 'Ø¯ÙˆØ´Ù†Ø¨Ù‡', 'Ø³Ù‡ Ø´Ù†Ø¨Ù‡', 'Ú†Ù‡Ø§Ø±Ø´Ù†Ø¨Ù‡', 'Ù¾Ù†Ø¬Ø´Ù†Ø¨Ù‡', 'Ø¬Ù…Ø¹Ù‡', 'Ø´Ù†Ø¨Ù‡'],
	days_abbr: ['ÙŠ', 'Ø¯', 'Ø³', 'Ú†', 'Ù¾', 'Ø¬', 'Ø´'],

	// Culture's date order: MM/DD/YYYY
	dateOrder: ['month', 'date', 'year'],
	shortDate: '%m/%d/%Y',
	shortTime: '%I:%M%p',
	AM: 'Ù‚.Ø¸',
	PM: 'Ø¨.Ø¸',

	// Date.Extras
	ordinal: 'Ø§Ù…',

	lessThanMinuteAgo: 'Ú©Ù…ØªØ± Ø§Ø² ÛŒÚ© Ø¯Ù‚ÛŒÙ‚Ù‡ Ù¾ÛŒØ´',
	minuteAgo: 'Ø­Ø¯ÙˆØ¯ ÛŒÚ© Ø¯Ù‚ÛŒÙ‚Ù‡ Ù¾ÛŒØ´',
	minutesAgo: '{delta} Ø¯Ù‚ÛŒÙ‚Ù‡ Ù¾ÛŒØ´',
	hourAgo: 'Ø­Ø¯ÙˆØ¯ ÛŒÚ© Ø³Ø§Ø¹Øª Ù¾ÛŒØ´',
	hoursAgo: 'Ø­Ø¯ÙˆØ¯ {delta} Ø³Ø§Ø¹Øª Ù¾ÛŒØ´',
	dayAgo: '1 Ø±ÙˆØ² Ù¾ÛŒØ´',
	daysAgo: '{delta} Ø±ÙˆØ² Ù¾ÛŒØ´',
	weekAgo: '1 Ù‡ÙØªÙ‡ Ù¾ÛŒØ´',
	weeksAgo: '{delta} Ù‡ÙØªÙ‡ Ù¾ÛŒØ´',
	monthAgo: '1 Ù…Ø§Ù‡ Ù¾ÛŒØ´',
	monthsAgo: '{delta} Ù…Ø§Ù‡ Ù¾ÛŒØ´',
	yearAgo: '1 Ø³Ø§Ù„ Ù¾ÛŒØ´',
	yearsAgo: '{delta} Ø³Ø§Ù„ Ù¾ÛŒØ´',

	lessThanMinuteUntil: 'Ú©Ù…ØªØ± Ø§Ø² ÛŒÚ© Ø¯Ù‚ÛŒÙ‚Ù‡ Ø§Ø² Ø­Ø§Ù„Ø§',
	minuteUntil: 'Ø­Ø¯ÙˆØ¯ ÛŒÚ© Ø¯Ù‚ÛŒÙ‚Ù‡ Ø§Ø² Ø­Ø§Ù„Ø§',
	minutesUntil: '{delta} Ø¯Ù‚ÛŒÙ‚Ù‡ Ø§Ø² Ø­Ø§Ù„Ø§',
	hourUntil: 'Ø­Ø¯ÙˆØ¯ ÛŒÚ© Ø³Ø§Ø¹Øª Ø§Ø² Ø­Ø§Ù„Ø§',
	hoursUntil: 'Ø­Ø¯ÙˆØ¯ {delta} Ø³Ø§Ø¹Øª Ø§Ø² Ø­Ø§Ù„Ø§',
	dayUntil: '1 Ø±ÙˆØ² Ø§Ø² Ø­Ø§Ù„Ø§',
	daysUntil: '{delta} Ø±ÙˆØ² Ø§Ø² Ø­Ø§Ù„Ø§',
	weekUntil: '1 Ù‡ÙØªÙ‡ Ø§Ø² Ø­Ø§Ù„Ø§',
	weeksUntil: '{delta} Ù‡ÙØªÙ‡ Ø§Ø² Ø­Ø§Ù„Ø§',
	monthUntil: '1 Ù…Ø§Ù‡ Ø§Ø² Ø­Ø§Ù„Ø§',
	monthsUntil: '{delta} Ù…Ø§Ù‡ Ø§Ø² Ø­Ø§Ù„Ø§',
	yearUntil: '1 Ø³Ø§Ù„ Ø§Ø² Ø­Ø§Ù„Ø§',
	yearsUntil: '{delta} Ø³Ø§Ù„ Ø§Ø² Ø­Ø§Ù„Ø§'

});

/*
---

name: Locale.fa.Form.Validator

description: Form Validator messages for Persian.

license: MIT-style license

authors:
  - Amir Hossein Hodjaty Pour

requires:
  - Locale

provides: [Locale.fa.Form.Validator]

...
*/

Locale.define('fa', 'FormValidator', {

	required: 'Ø§ÛŒÙ† ÙÛŒÙ„Ø¯ Ø§Ù„Ø²Ø§Ù…ÛŒ Ø§Ø³Øª.',
	minLength: 'Ø´Ù…Ø§ Ø¨Ø§ÛŒØ¯ Ø­Ø¯Ø§Ù‚Ù„ {minLength} Ø­Ø±Ù ÙˆØ§Ø±Ø¯ Ú©Ù†ÛŒØ¯ ({length} Ø­Ø±Ù ÙˆØ§Ø±Ø¯ Ú©Ø±Ø¯Ù‡ Ø§ÛŒØ¯).',
	maxLength: 'Ù„Ø·ÙØ§ Ø­Ø¯Ø§Ú©Ø«Ø± {maxLength} Ø­Ø±Ù ÙˆØ§Ø±Ø¯ Ú©Ù†ÛŒØ¯ (Ø´Ù…Ø§ {length} Ø­Ø±Ù ÙˆØ§Ø±Ø¯ Ú©Ø±Ø¯Ù‡ Ø§ÛŒØ¯).',
	integer: 'Ù„Ø·ÙØ§ Ø§Ø² Ø¹Ø¯Ø¯ ØµØ­ÛŒØ­ Ø§Ø³ØªÙØ§Ø¯Ù‡ Ú©Ù†ÛŒØ¯. Ø§Ø¹Ø¯Ø§Ø¯ Ø§Ø¹Ø´Ø§Ø±ÛŒ (Ù…Ø§Ù†Ù†Ø¯ 1.25) Ù…Ø¬Ø§Ø² Ù†ÛŒØ³ØªÙ†Ø¯.',
	numeric: 'Ù„Ø·ÙØ§ ÙÙ‚Ø· Ø¯Ø§Ø¯Ù‡ Ø¹Ø¯Ø¯ÛŒ ÙˆØ§Ø±Ø¯ Ú©Ù†ÛŒØ¯ (Ù…Ø§Ù†Ù†Ø¯ "1" ÛŒØ§ "1.1" ÛŒØ§ "1-" ÛŒØ§ "1.1-").',
	digits: 'Ù„Ø·ÙØ§ ÙÙ‚Ø· Ø§Ø² Ø§Ø¹Ø¯Ø§Ø¯ Ùˆ Ø¹Ù„Ø§Ù…ØªÙ‡Ø§ Ø¯Ø± Ø§ÛŒÙ† ÙÛŒÙ„Ø¯ Ø§Ø³ØªÙØ§Ø¯Ù‡ Ú©Ù†ÛŒØ¯ (Ø¨Ø±Ø§ÛŒ Ù…Ø«Ø§Ù„ Ø´Ù…Ø§Ø±Ù‡ ØªÙ„ÙÙ† Ø¨Ø§ Ø®Ø· ØªÛŒØ±Ù‡ Ùˆ Ù†Ù‚Ø·Ù‡ Ù‚Ø§Ø¨Ù„ Ù‚Ø¨ÙˆÙ„ Ø§Ø³Øª).',
	alpha: 'Ù„Ø·ÙØ§ ÙÙ‚Ø· Ø§Ø² Ø­Ø±ÙˆÙ Ø§Ù„ÙØ¨Ø§Ø¡ Ø¨Ø±Ø§ÛŒ Ø§ÛŒÙ† Ø¨Ø®Ø´ Ø§Ø³ØªÙØ§Ø¯Ù‡ Ú©Ù†ÛŒØ¯. Ú©Ø§Ø±Ø§Ú©ØªØ±Ù‡Ø§ÛŒ Ø¯ÛŒÚ¯Ø± Ùˆ ÙØ§ØµÙ„Ù‡ Ù…Ø¬Ø§Ø² Ù†ÛŒØ³ØªÙ†Ø¯.',
	alphanum: 'Ù„Ø·ÙØ§ ÙÙ‚Ø· Ø§Ø² Ø­Ø±ÙˆÙ Ø§Ù„ÙØ¨Ø§Ø¡ Ùˆ Ø§Ø¹Ø¯Ø§Ø¯ Ø¯Ø± Ø§ÛŒÙ† Ø¨Ø®Ø´ Ø§Ø³ØªÙØ§Ø¯Ù‡ Ú©Ù†ÛŒØ¯. Ú©Ø§Ø±Ø§Ú©ØªØ±Ù‡Ø§ÛŒ Ø¯ÛŒÚ¯Ø± Ùˆ ÙØ§ØµÙ„Ù‡ Ù…Ø¬Ø§Ø² Ù†ÛŒØ³ØªÙ†Ø¯.',
	dateSuchAs: 'Ù„Ø·ÙØ§ ÛŒÚ© ØªØ§Ø±ÛŒØ® Ù…Ø¹ØªØ¨Ø± Ù…Ø§Ù†Ù†Ø¯ {date} ÙˆØ§Ø±Ø¯ Ú©Ù†ÛŒØ¯.',
	dateInFormatMDY: 'Ù„Ø·ÙØ§ ÛŒÚ© ØªØ§Ø±ÛŒØ® Ù…Ø¹ØªØ¨Ø± Ø¨Ù‡ Ø´Ú©Ù„ MM/DD/YYYY ÙˆØ§Ø±Ø¯ Ú©Ù†ÛŒØ¯ (Ù…Ø§Ù†Ù†Ø¯ "12/31/1999").',
	email: 'Ù„Ø·ÙØ§ ÛŒÚ© Ø¢Ø¯Ø±Ø³ Ø§ÛŒÙ…ÛŒÙ„ Ù…Ø¹ØªØ¨Ø± ÙˆØ§Ø±Ø¯ Ú©Ù†ÛŒØ¯. Ø¨Ø±Ø§ÛŒ Ù…Ø«Ø§Ù„ "fred@domain.com".',
	url: 'Ù„Ø·ÙØ§ ÛŒÚ© URL Ù…Ø¹ØªØ¨Ø± Ù…Ø§Ù†Ù†Ø¯ http://www.example.com ÙˆØ§Ø±Ø¯ Ú©Ù†ÛŒØ¯.',
	currencyDollar: 'Ù„Ø·ÙØ§ ÛŒÚ© Ù…Ø­Ø¯ÙˆØ¯Ù‡ Ù…Ø¹ØªØ¨Ø± Ø¨Ø±Ø§ÛŒ Ø§ÛŒÙ† Ø¨Ø®Ø´ ÙˆØ§Ø±Ø¯ Ú©Ù†ÛŒØ¯ Ù…Ø§Ù†Ù†Ø¯ 100.00$ .',
	oneRequired: 'Ù„Ø·ÙØ§ Ø­Ø¯Ø§Ù‚Ù„ ÛŒÚ©ÛŒ Ø§Ø² ÙÛŒÙ„Ø¯Ù‡Ø§ Ø±Ø§ Ù¾Ø± Ú©Ù†ÛŒØ¯.',
	errorPrefix: 'Ø®Ø·Ø§: ',
	warningPrefix: 'Ù‡Ø´Ø¯Ø§Ø±: ',

	// Form.Validator.Extras
	noSpace: 'Ø§Ø³ØªÙØ§Ø¯Ù‡ Ø§Ø² ÙØ§ØµÙ„Ù‡ Ø¯Ø± Ø§ÛŒÙ† Ø¨Ø®Ø´ Ù…Ø¬Ø§Ø² Ù†ÛŒØ³Øª.',
	reqChkByNode: 'Ù…ÙˆØ±Ø¯ÛŒ Ø§Ù†ØªØ®Ø§Ø¨ Ù†Ø´Ø¯Ù‡ Ø§Ø³Øª.',
	requiredChk: 'Ø§ÛŒÙ† ÙÛŒÙ„Ø¯ Ø§Ù„Ø²Ø§Ù…ÛŒ Ø§Ø³Øª.',
	reqChkByName: 'Ù„Ø·ÙØ§ ÛŒÚ© {label} Ø±Ø§ Ø§Ù†ØªØ®Ø§Ø¨ Ú©Ù†ÛŒØ¯.',
	match: 'Ø§ÛŒÙ† ÙÛŒÙ„Ø¯ Ø¨Ø§ÛŒØ¯ Ø¨Ø§ ÙÛŒÙ„Ø¯ {matchName} Ù…Ø·Ø§Ø¨Ù‚Øª Ø¯Ø§Ø´ØªÙ‡ Ø¨Ø§Ø´Ø¯.',
	startDate: 'ØªØ§Ø±ÛŒØ® Ø´Ø±ÙˆØ¹',
	endDate: 'ØªØ§Ø±ÛŒØ® Ù¾Ø§ÛŒØ§Ù†',
	currentDate: 'ØªØ§Ø±ÛŒØ® Ú©Ù†ÙˆÙ†ÛŒ',
	afterDate: 'ØªØ§Ø±ÛŒØ® Ù…ÛŒØ¨Ø§ÛŒØ³Øª Ø¨Ø±Ø§Ø¨Ø± ÛŒØ§ Ø¨Ø¹Ø¯ Ø§Ø² {label} Ø¨Ø§Ø´Ø¯',
	beforeDate: 'ØªØ§Ø±ÛŒØ® Ù…ÛŒØ¨Ø§ÛŒØ³Øª Ø¨Ø±Ø§Ø¨Ø± ÛŒØ§ Ù‚Ø¨Ù„ Ø§Ø² {label} Ø¨Ø§Ø´Ø¯',
	startMonth: 'Ù„Ø·ÙØ§ Ù…Ø§Ù‡ Ø´Ø±ÙˆØ¹ Ø±Ø§ Ø§Ù†ØªØ®Ø§Ø¨ Ú©Ù†ÛŒØ¯',
	sameMonth: 'Ø§ÛŒÙ† Ø¯Ùˆ ØªØ§Ø±ÛŒØ® Ø¨Ø§ÛŒØ¯ Ø¯Ø± ÛŒÚ© Ù…Ø§Ù‡ Ø¨Ø§Ø´Ù†Ø¯ - Ø´Ù…Ø§ Ø¨Ø§ÛŒØ¯ ÛŒÚ©ÛŒ ÛŒØ§ Ù‡Ø± Ø¯Ùˆ Ø±Ø§ ØªØºÛŒÛŒØ± Ø¯Ù‡ÛŒØ¯.',
	creditcard: 'Ø´Ù…Ø§Ø±Ù‡ Ú©Ø§Ø±Øª Ø§Ø¹ØªØ¨Ø§Ø±ÛŒ Ú©Ù‡ ÙˆØ§Ø±Ø¯ Ú©Ø±Ø¯Ù‡ Ø§ÛŒØ¯ Ù…Ø¹ØªØ¨Ø± Ù†ÛŒØ³Øª. Ù„Ø·ÙØ§ Ø´Ù…Ø§Ø±Ù‡ Ø±Ø§ Ø¨Ø±Ø±Ø³ÛŒ Ú©Ù†ÛŒØ¯ Ùˆ Ù…Ø¬Ø¯Ø¯Ø§ ØªÙ„Ø§Ø´ Ú©Ù†ÛŒØ¯. {length} Ø±Ù‚Ù… ÙˆØ§Ø±Ø¯ Ø´Ø¯Ù‡ Ø§Ø³Øª.'

});

/*
---

name: Locale.fi-FI.Date

description: Date messages for Finnish.

license: MIT-style license

authors:
  - ksel

requires:
  - Locale

provides: [Locale.fi-FI.Date]

...
*/

Locale.define('fi-FI', 'Date', {

	// NOTE: months and days are not capitalized in finnish
	months: ['tammikuu', 'helmikuu', 'maaliskuu', 'huhtikuu', 'toukokuu', 'kesÃ¤kuu', 'heinÃ¤kuu', 'elokuu', 'syyskuu', 'lokakuu', 'marraskuu', 'joulukuu'],

	// these abbreviations are really not much used in finnish because they obviously won't abbreviate very much. ;)
	// NOTE: sometimes one can see forms such as "tammi", "helmi", etc. but that is not proper finnish.
	months_abbr: ['tammik.', 'helmik.', 'maalisk.', 'huhtik.', 'toukok.', 'kesÃ¤k.', 'heinÃ¤k.', 'elok.', 'syysk.', 'lokak.', 'marrask.', 'jouluk.'],

	days: ['sunnuntai', 'maanantai', 'tiistai', 'keskiviikko', 'torstai', 'perjantai', 'lauantai'],
	days_abbr: ['su', 'ma', 'ti', 'ke', 'to', 'pe', 'la'],

	// Culture's date order: DD/MM/YYYY
	dateOrder: ['date', 'month', 'year'],
	shortDate: '%d.%m.%Y',
	shortTime: '%H:%M',
	AM: 'AM',
	PM: 'PM',
	firstDayOfWeek: 1,

	// Date.Extras
	ordinal: '.',

	lessThanMinuteAgo: 'vajaa minuutti sitten',
	minuteAgo: 'noin minuutti sitten',
	minutesAgo: '{delta} minuuttia sitten',
	hourAgo: 'noin tunti sitten',
	hoursAgo: 'noin {delta} tuntia sitten',
	dayAgo: 'pÃ¤ivÃ¤ sitten',
	daysAgo: '{delta} pÃ¤ivÃ¤Ã¤ sitten',
	weekAgo: 'viikko sitten',
	weeksAgo: '{delta} viikkoa sitten',
	monthAgo: 'kuukausi sitten',
	monthsAgo: '{delta} kuukautta sitten',
	yearAgo: 'vuosi sitten',
	yearsAgo: '{delta} vuotta sitten',

	lessThanMinuteUntil: 'vajaan minuutin kuluttua',
	minuteUntil: 'noin minuutin kuluttua',
	minutesUntil: '{delta} minuutin kuluttua',
	hourUntil: 'noin tunnin kuluttua',
	hoursUntil: 'noin {delta} tunnin kuluttua',
	dayUntil: 'pÃ¤ivÃ¤n kuluttua',
	daysUntil: '{delta} pÃ¤ivÃ¤n kuluttua',
	weekUntil: 'viikon kuluttua',
	weeksUntil: '{delta} viikon kuluttua',
	monthUntil: 'kuukauden kuluttua',
	monthsUntil: '{delta} kuukauden kuluttua',
	yearUntil: 'vuoden kuluttua',
	yearsUntil: '{delta} vuoden kuluttua'

});

/*
---

name: Locale.fi-FI.Form.Validator

description: Form Validator messages for Finnish.

license: MIT-style license

authors:
  - ksel

requires:
  - Locale

provides: [Locale.fi-FI.Form.Validator]

...
*/

Locale.define('fi-FI', 'FormValidator', {

	required: 'TÃ¤mÃ¤ kenttÃ¤ on pakollinen.',
	minLength: 'Ole hyvÃ¤ ja anna vÃ¤hintÃ¤Ã¤n {minLength} merkkiÃ¤ (annoit {length} merkkiÃ¤).',
	maxLength: 'Ã„lÃ¤ anna enempÃ¤Ã¤ kuin {maxLength} merkkiÃ¤ (annoit {length} merkkiÃ¤).',
	integer: 'Ole hyvÃ¤ ja anna kokonaisluku. Luvut, joissa on desimaaleja (esim. 1.25) eivÃ¤t ole sallittuja.',
	numeric: 'Anna tÃ¤hÃ¤n kenttÃ¤Ã¤n lukuarvo (kuten "1" tai "1.1" tai "-1" tai "-1.1").',
	digits: 'KÃ¤ytÃ¤ pelkÃ¤stÃ¤Ã¤n numeroita ja vÃ¤limerkkejÃ¤ tÃ¤ssÃ¤ kentÃ¤ssÃ¤ (syÃ¶tteet, kuten esim. puhelinnumero, jossa on vÃ¤liviivoja, pilkkuja tai pisteitÃ¤, kelpaa).',
	alpha: 'Anna tÃ¤hÃ¤n kenttÃ¤Ã¤n vain kirjaimia (a-z). VÃ¤lilyÃ¶nnit tai muut merkit eivÃ¤t ole sallittuja.',
	alphanum: 'Anna tÃ¤hÃ¤n kenttÃ¤Ã¤n vain kirjaimia (a-z) tai numeroita (0-9). VÃ¤lilyÃ¶nnit tai muut merkit eivÃ¤t ole sallittuja.',
	dateSuchAs: 'Ole hyvÃ¤ ja anna kelvollinen pÃ¤ivmÃ¤Ã¤rÃ¤, kuten esimerkiksi {date}',
	dateInFormatMDY: 'Ole hyvÃ¤ ja anna kelvollinen pÃ¤ivÃ¤mÃ¤Ã¤rÃ¤ muodossa pp/kk/vvvv (kuten "12/31/1999")',
	email: 'Ole hyvÃ¤ ja anna kelvollinen sÃ¤hkÃ¶postiosoite (kuten esimerkiksi "matti@meikalainen.com").',
	url: 'Ole hyvÃ¤ ja anna kelvollinen URL, kuten esimerkiksi http://www.example.com.',
	currencyDollar: 'Ole hyvÃ¤ ja anna kelvollinen eurosumma (kuten esimerkiksi 100,00 EUR) .',
	oneRequired: 'Ole hyvÃ¤ ja syÃ¶tÃ¤ jotakin ainakin johonkin nÃ¤istÃ¤ kentistÃ¤.',
	errorPrefix: 'Virhe: ',
	warningPrefix: 'Varoitus: ',

	// Form.Validator.Extras
	noSpace: 'TÃ¤ssÃ¤ syÃ¶tteessÃ¤ ei voi olla vÃ¤lilyÃ¶ntejÃ¤',
	reqChkByNode: 'Ei valintoja.',
	requiredChk: 'TÃ¤mÃ¤ kenttÃ¤ on pakollinen.',
	reqChkByName: 'Ole hyvÃ¤ ja valitse {label}.',
	match: 'TÃ¤mÃ¤n kentÃ¤n tulee vastata kenttÃ¤Ã¤ {matchName}',
	startDate: 'alkupÃ¤ivÃ¤mÃ¤Ã¤rÃ¤',
	endDate: 'loppupÃ¤ivÃ¤mÃ¤Ã¤rÃ¤',
	currentDate: 'nykyinen pÃ¤ivÃ¤mÃ¤Ã¤rÃ¤',
	afterDate: 'PÃ¤ivÃ¤mÃ¤Ã¤rÃ¤n tulisi olla sama tai myÃ¶hÃ¤isempi ajankohta kuin {label}.',
	beforeDate: 'PÃ¤ivÃ¤mÃ¤Ã¤rÃ¤n tulisi olla sama tai aikaisempi ajankohta kuin {label}.',
	startMonth: 'Ole hyvÃ¤ ja valitse aloituskuukausi',
	sameMonth: 'NÃ¤iden kahden pÃ¤ivÃ¤mÃ¤Ã¤rÃ¤n tulee olla saman kuun sisÃ¤llÃ¤ -- sinun pitÃ¤Ã¤ muuttaa jompaa kumpaa.',
	creditcard: 'Annettu luottokortin numero ei kelpaa. Ole hyvÃ¤ ja tarkista numero sekÃ¤ yritÃ¤ uudelleen. {length} numeroa syÃ¶tetty.'

});

/*
---

name: Locale.fi-FI.Number

description: Finnish number messages

license: MIT-style license

authors:
  - ksel

requires:
  - Locale
  - Locale.EU.Number

provides: [Locale.fi-FI.Number]

...
*/

Locale.define('fi-FI', 'Number', {

	group: ' ' // grouped by space

}).inherit('EU', 'Number');

/*
---

name: Locale.fr-FR.Date

description: Date messages for French.

license: MIT-style license

authors:
  - Nicolas Sorosac
  - Antoine Abt

requires:
  - Locale

provides: [Locale.fr-FR.Date]

...
*/

Locale.define('fr-FR', 'Date', {

	months: ['Janvier', 'FÃ©vrier', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'AoÃ»t', 'Septembre', 'Octobre', 'Novembre', 'DÃ©cembre'],
	months_abbr: ['janv.', 'fÃ©vr.', 'mars', 'avr.', 'mai', 'juin', 'juil.', 'aoÃ»t', 'sept.', 'oct.', 'nov.', 'dÃ©c.'],
	days: ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'],
	days_abbr: ['dim.', 'lun.', 'mar.', 'mer.', 'jeu.', 'ven.', 'sam.'],

	// Culture's date order: DD/MM/YYYY
	dateOrder: ['date', 'month', 'year'],
	shortDate: '%d/%m/%Y',
	shortTime: '%H:%M',
	AM: 'AM',
	PM: 'PM',
	firstDayOfWeek: 1,

	// Date.Extras
	ordinal: function(dayOfMonth){
		return (dayOfMonth > 1) ? '' : 'er';
	},

	lessThanMinuteAgo: "il y a moins d'une minute",
	minuteAgo: 'il y a une minute',
	minutesAgo: 'il y a {delta} minutes',
	hourAgo: 'il y a une heure',
	hoursAgo: 'il y a {delta} heures',
	dayAgo: 'il y a un jour',
	daysAgo: 'il y a {delta} jours',
	weekAgo: 'il y a une semaine',
	weeksAgo: 'il y a {delta} semaines',
	monthAgo: 'il y a 1 mois',
	monthsAgo: 'il y a {delta} mois',
	yearthAgo: 'il y a 1 an',
	yearsAgo: 'il y a {delta} ans',

	lessThanMinuteUntil: "dans moins d'une minute",
	minuteUntil: 'dans une minute',
	minutesUntil: 'dans {delta} minutes',
	hourUntil: 'dans une heure',
	hoursUntil: 'dans {delta} heures',
	dayUntil: 'dans un jour',
	daysUntil: 'dans {delta} jours',
	weekUntil: 'dans 1 semaine',
	weeksUntil: 'dans {delta} semaines',
	monthUntil: 'dans 1 mois',
	monthsUntil: 'dans {delta} mois',
	yearUntil: 'dans 1 an',
	yearsUntil: 'dans {delta} ans'

});

/*
---

name: Locale.fr-FR.Form.Validator

description: Form Validator messages for French.

license: MIT-style license

authors:
  - Miquel Hudin
  - Nicolas Sorosac

requires:
  - Locale

provides: [Locale.fr-FR.Form.Validator]

...
*/

/*eslint mootools-whitespace:0*/

Locale.define('fr-FR', 'FormValidator', {

	required: 'Ce champ est obligatoire.',
	length: 'Veuillez saisir {length} caract&egrave;re(s) (vous avez saisi {elLength} caract&egrave;re(s)',
	minLength: 'Veuillez saisir un minimum de {minLength} caract&egrave;re(s) (vous avez saisi {length} caract&egrave;re(s)).',
	maxLength: 'Veuillez saisir un maximum de {maxLength} caract&egrave;re(s) (vous avez saisi {length} caract&egrave;re(s)).',
	integer: 'Veuillez saisir un nombre entier dans ce champ. Les nombres d&eacute;cimaux (ex : "1,25") ne sont pas autoris&eacute;s.',
	numeric: 'Veuillez saisir uniquement des chiffres dans ce champ (ex : "1" ou "1,1" ou "-1" ou "-1,1").',
	digits: "Veuillez saisir uniquement des chiffres et des signes de ponctuation dans ce champ (ex : un num&eacute;ro de t&eacute;l&eacute;phone avec des traits d'union est autoris&eacute;).",
	alpha: 'Veuillez saisir uniquement des lettres (a-z) dans ce champ. Les espaces ou autres caract&egrave;res ne sont pas autoris&eacute;s.',
	alphanum: 'Veuillez saisir uniquement des lettres (a-z) ou des chiffres (0-9) dans ce champ. Les espaces ou autres caract&egrave;res ne sont pas autoris&eacute;s.',
	dateSuchAs: 'Veuillez saisir une date correcte comme {date}',
	dateInFormatMDY: 'Veuillez saisir une date correcte, au format JJ/MM/AAAA (ex : "31/11/1999").',
	email: 'Veuillez saisir une adresse de courrier &eacute;lectronique. Par exemple "fred@domaine.com".',
	url: 'Veuillez saisir une URL, comme http://www.exemple.com.',
	currencyDollar: 'Veuillez saisir une quantit&eacute; correcte. Par exemple 100,00&euro;.',
	oneRequired: 'Veuillez s&eacute;lectionner au moins une de ces options.',
	errorPrefix: 'Erreur : ',
	warningPrefix: 'Attention : ',

	// Form.Validator.Extras
	noSpace: "Ce champ n'accepte pas les espaces.",
	reqChkByNode: "Aucun &eacute;l&eacute;ment n'est s&eacute;lectionn&eacute;.",
	requiredChk: 'Ce champ est obligatoire.',
	reqChkByName: 'Veuillez s&eacute;lectionner un(e) {label}.',
	match: 'Ce champ doit correspondre avec le champ {matchName}.',
	startDate: 'date de d&eacute;but',
	endDate: 'date de fin',
	currentDate: 'date actuelle',
	afterDate: 'La date doit &ecirc;tre identique ou post&eacute;rieure &agrave; {label}.',
	beforeDate: 'La date doit &ecirc;tre identique ou ant&eacute;rieure &agrave; {label}.',
	startMonth: 'Veuillez s&eacute;lectionner un mois de d&eacute;but.',
	sameMonth: 'Ces deux dates doivent &ecirc;tre dans le m&ecirc;me mois - vous devez en modifier une.',
	creditcard: 'Le num&eacute;ro de carte de cr&eacute;dit est invalide. Merci de v&eacute;rifier le num&eacute;ro et de r&eacute;essayer. Vous avez entr&eacute; {length} chiffre(s).'

});

/*
---

name: Locale.fr-FR.Number

description: Number messages for French.

license: MIT-style license

authors:
  - Arian Stolwijk
  - sv1l

requires:
  - Locale
  - Locale.EU.Number

provides: [Locale.fr-FR.Number]

...
*/

Locale.define('fr-FR', 'Number', {

	group: ' ' // In fr-FR localization, group character is a blank space

}).inherit('EU', 'Number');

/*
---

name: Locale.he-IL.Date

description: Date messages for Hebrew.

license: MIT-style license

authors:
  - Elad Ossadon

requires:
  - Locale

provides: [Locale.he-IL.Date]

...
*/

Locale.define('he-IL', 'Date', {

	months: ['×™× ×•××¨', '×¤×‘×¨×•××¨', '×ž×¨×¥', '××¤×¨×™×œ', '×ž××™', '×™×•× ×™', '×™×•×œ×™', '××•×’×•×¡×˜', '×¡×¤×˜×ž×‘×¨', '××•×§×˜×•×‘×¨', '× ×•×‘×ž×‘×¨', '×“×¦×ž×‘×¨'],
	months_abbr: ['×™× ×•××¨', '×¤×‘×¨×•××¨', '×ž×¨×¥', '××¤×¨×™×œ', '×ž××™', '×™×•× ×™', '×™×•×œ×™', '××•×’×•×¡×˜', '×¡×¤×˜×ž×‘×¨', '××•×§×˜×•×‘×¨', '× ×•×‘×ž×‘×¨', '×“×¦×ž×‘×¨'],
	days: ['×¨××©×•×Ÿ', '×©× ×™', '×©×œ×™×©×™', '×¨×‘×™×¢×™', '×—×ž×™×©×™', '×©×™×©×™', '×©×‘×ª'],
	days_abbr: ['×¨××©×•×Ÿ', '×©× ×™', '×©×œ×™×©×™', '×¨×‘×™×¢×™', '×—×ž×™×©×™', '×©×™×©×™', '×©×‘×ª'],

	// Culture's date order: MM/DD/YYYY
	dateOrder: ['date', 'month', 'year'],
	shortDate: '%d/%m/%Y',
	shortTime: '%H:%M',
	AM: 'AM',
	PM: 'PM',
	firstDayOfWeek: 0,

	// Date.Extras
	ordinal: '',

	lessThanMinuteAgo: '×œ×¤× ×™ ×¤×—×•×ª ×ž×“×§×”',
	minuteAgo: '×œ×¤× ×™ ×›×“×§×”',
	minutesAgo: '×œ×¤× ×™ {delta} ×“×§×•×ª',
	hourAgo: '×œ×¤× ×™ ×›×©×¢×”',
	hoursAgo: '×œ×¤× ×™ {delta} ×©×¢×•×ª',
	dayAgo: '×œ×¤× ×™ ×™×•×',
	daysAgo: '×œ×¤× ×™ {delta} ×™×ž×™×',
	weekAgo: '×œ×¤× ×™ ×©×‘×•×¢',
	weeksAgo: '×œ×¤× ×™ {delta} ×©×‘×•×¢×•×ª',
	monthAgo: '×œ×¤× ×™ ×—×•×“×©',
	monthsAgo: '×œ×¤× ×™ {delta} ×—×•×“×©×™×',
	yearAgo: '×œ×¤× ×™ ×©× ×”',
	yearsAgo: '×œ×¤× ×™ {delta} ×©× ×™×',

	lessThanMinuteUntil: '×‘×¢×•×“ ×¤×—×•×ª ×ž×“×§×”',
	minuteUntil: '×‘×¢×•×“ ×›×“×§×”',
	minutesUntil: '×‘×¢×•×“ {delta} ×“×§×•×ª',
	hourUntil: '×‘×¢×•×“ ×›×©×¢×”',
	hoursUntil: '×‘×¢×•×“ {delta} ×©×¢×•×ª',
	dayUntil: '×‘×¢×•×“ ×™×•×',
	daysUntil: '×‘×¢×•×“ {delta} ×™×ž×™×',
	weekUntil: '×‘×¢×•×“ ×©×‘×•×¢',
	weeksUntil: '×‘×¢×•×“ {delta} ×©×‘×•×¢×•×ª',
	monthUntil: '×‘×¢×•×“ ×—×•×“×©',
	monthsUntil: '×‘×¢×•×“ {delta} ×—×•×“×©×™×',
	yearUntil: '×‘×¢×•×“ ×©× ×”',
	yearsUntil: '×‘×¢×•×“ {delta} ×©× ×™×'

});

/*
---

name: Locale.he-IL.Form.Validator

description: Form Validator messages for Hebrew.

license: MIT-style license

authors:
  - Elad Ossadon

requires:
  - Locale

provides: [Locale.he-IL.Form.Validator]

...
*/

Locale.define('he-IL', 'FormValidator', {

	required: '× × ×œ×ž×œ× ×©×“×” ×–×”.',
	minLength: '× × ×œ×”×–×™×Ÿ ×œ×¤×—×•×ª {minLength} ×ª×•×•×™× (×”×–× ×ª {length} ×ª×•×•×™×).',
	maxLength: '× × ×œ×”×–×™×Ÿ ×¢×“ {maxLength} ×ª×•×•×™× (×”×–× ×ª {length} ×ª×•×•×™×).',
	integer: '× × ×œ×”×–×™×Ÿ ×ž×¡×¤×¨ ×©×œ× ×œ×©×“×” ×–×”. ×ž×¡×¤×¨×™× ×¢×©×¨×•× ×™×™× (×›×ž×• 1.25) ××™× × ×—×•×§×™×™×.',
	numeric: '× × ×œ×”×–×™×Ÿ ×¢×¨×š ×ž×¡×¤×¨×™ ×‘×œ×‘×“ ×‘×©×“×” ×–×” (×›×ž×• "1", "1.1", "-1" ××• "-1.1").',
	digits: '× × ×œ×”×–×™×Ÿ ×¨×§ ×¡×¤×¨×•×ª ×•×¡×™×ž× ×™ ×”×¤×¨×“×” ×‘×©×“×” ×–×” (×œ×ž×©×œ, ×ž×¡×¤×¨ ×˜×œ×¤×•×Ÿ ×¢× ×ž×§×¤×™× ××• × ×§×•×“×•×ª ×”×•× ×—×•×§×™).',
	alpha: '× × ×œ×”×–×™×Ÿ ×¨×§ ××•×ª×™×•×ª ×‘×× ×’×œ×™×ª (a-z) ×‘×©×“×” ×–×”. ×¨×•×•×—×™× ××• ×ª×•×•×™× ××—×¨×™× ××™× × ×—×•×§×™×™×.',
	alphanum: '× × ×œ×”×–×™×Ÿ ×¨×§ ××•×ª×¨×™×•×ª ×‘×× ×’×œ×™×ª (a-z) ××• ×¡×¤×¨×•×ª (0-9) ×‘×©×“×” ×–×”. ××•×•×—×¨×™× ××• ×ª×•×•×™× ××—×¨×™× ××™× × ×—×•×§×™×™×.',
	dateSuchAs: '× × ×œ×”×–×™×Ÿ ×ª××¨×™×š ×—×•×§×™, ×›×ž×• {date}',
	dateInFormatMDY: '× × ×œ×”×–×™×Ÿ ×ª××¨×™×š ×—×•×§×™ ×‘×¤×•×¨×ž×˜ MM/DD/YYYY (×›×ž×• "12/31/1999")',
	email: '× × ×œ×”×–×™×Ÿ ×›×ª×•×‘×ª ××™×ž×™×™×œ ×—×•×§×™×ª. ×œ×“×•×’×ž×”: "fred@domain.com".',
	url: '× × ×œ×”×–×™×Ÿ ×›×ª×•×‘×ª ××ª×¨ ×—×•×§×™×ª, ×›×ž×• http://www.example.com.',
	currencyDollar: '× × ×œ×”×–×™×Ÿ ×¡×›×•× ×“×•×œ×¨×™ ×—×•×§×™. ×œ×“×•×’×ž×” $100.00.',
	oneRequired: '× × ×œ×‘×—×•×¨ ×œ×¤×—×•×ª ×‘×©×“×” ××—×“.',
	errorPrefix: '×©×’×™××”: ',
	warningPrefix: '××–×”×¨×”: ',

	// Form.Validator.Extras
	noSpace: '××™×Ÿ ×œ×”×–×™×Ÿ ×¨×•×•×—×™× ×‘×©×“×” ×–×”.',
	reqChkByNode: '× × ×œ×‘×—×•×¨ ××—×ª ×ž×”××¤×©×¨×•×™×•×ª.',
	requiredChk: '×©×“×” ×–×” × ×“×¨×©.',
	reqChkByName: '× × ×œ×‘×—×•×¨ {label}.',
	match: '×©×“×” ×–×” ×¦×¨×™×š ×œ×”×ª××™× ×œ×©×“×” {matchName}',
	startDate: '×ª××¨×™×š ×”×”×ª×—×œ×”',
	endDate: '×ª××¨×™×š ×”×¡×™×•×',
	currentDate: '×”×ª××¨×™×š ×”× ×•×›×—×™',
	afterDate: '×”×ª××¨×™×š ×¦×¨×™×š ×œ×”×™×•×ª ×–×”×” ××• ××—×¨×™ {label}.',
	beforeDate: '×”×ª××¨×™×š ×¦×¨×™×š ×œ×”×™×•×ª ×–×”×” ××• ×œ×¤× ×™ {label}.',
	startMonth: '× × ×œ×‘×—×•×¨ ×—×•×“×© ×”×ª×—×œ×”',
	sameMonth: '×©× ×™ ×ª××¨×™×›×™× ××œ×” ×¦×¨×™×›×™× ×œ×”×™×•×ª ×‘××•×ª×• ×—×•×“×© - × × ×œ×©× ×•×ª ××—×“ ×”×ª××¨×™×›×™×.',
	creditcard: '×ž×¡×¤×¨ ×›×¨×˜×™×¡ ×”××©×¨××™ ×©×”×•×–×Ÿ ××™× ×• ×—×•×§×™. × × ×œ×‘×“×•×§ ×©× ×™×ª. ×”×•×–× ×• {length} ×¡×¤×¨×•×ª.'

});

/*
---

name: Locale.he-IL.Number

description: Number messages for Hebrew.

license: MIT-style license

authors:
  - Elad Ossadon

requires:
  - Locale

provides: [Locale.he-IL.Number]

...
*/

Locale.define('he-IL', 'Number', {

	decimal: '.',
	group: ',',

	currency: {
		suffix: ' â‚ª'
	}

});

/*
---

name: Locale.hu-HU.Date

description: Date messages for Hungarian.

license: MIT-style license

authors:
  - Zsolt SzegheÅ‘

requires:
  - Locale

provides: [Locale.hu-HU.Date]

...
*/

Locale.define('hu-HU', 'Date', {

	months: ['JanuÃ¡r', 'FebruÃ¡r', 'MÃ¡rcius', 'Ãprilis', 'MÃ¡jus', 'JÃºnius', 'JÃºlius', 'Augusztus', 'Szeptember', 'OktÃ³ber', 'November', 'December'],
	months_abbr: ['jan.', 'febr.', 'mÃ¡rc.', 'Ã¡pr.', 'mÃ¡j.', 'jÃºn.', 'jÃºl.', 'aug.', 'szept.', 'okt.', 'nov.', 'dec.'],
	days: ['VasÃ¡rnap', 'HÃ©tfÅ‘', 'Kedd', 'Szerda', 'CsÃ¼tÃ¶rtÃ¶k', 'PÃ©ntek', 'Szombat'],
	days_abbr: ['V', 'H', 'K', 'Sze', 'Cs', 'P', 'Szo'],

	// Culture's date order: YYYY.MM.DD.
	dateOrder: ['year', 'month', 'date'],
	shortDate: '%Y.%m.%d.',
	shortTime: '%I:%M',
	AM: 'de.',
	PM: 'du.',
	firstDayOfWeek: 1,

	// Date.Extras
	ordinal: '.',

	lessThanMinuteAgo: 'alig egy perce',
	minuteAgo: 'egy perce',
	minutesAgo: '{delta} perce',
	hourAgo: 'egy Ã³rÃ¡ja',
	hoursAgo: '{delta} Ã³rÃ¡ja',
	dayAgo: '1 napja',
	daysAgo: '{delta} napja',
	weekAgo: '1 hete',
	weeksAgo: '{delta} hete',
	monthAgo: '1 hÃ³napja',
	monthsAgo: '{delta} hÃ³napja',
	yearAgo: '1 Ã©ve',
	yearsAgo: '{delta} Ã©ve',

	lessThanMinuteUntil: 'alig egy perc mÃºlva',
	minuteUntil: 'egy perc mÃºlva',
	minutesUntil: '{delta} perc mÃºlva',
	hourUntil: 'egy Ã³ra mÃºlva',
	hoursUntil: '{delta} Ã³ra mÃºlva',
	dayUntil: '1 nap mÃºlva',
	daysUntil: '{delta} nap mÃºlva',
	weekUntil: '1 hÃ©t mÃºlva',
	weeksUntil: '{delta} hÃ©t mÃºlva',
	monthUntil: '1 hÃ³nap mÃºlva',
	monthsUntil: '{delta} hÃ³nap mÃºlva',
	yearUntil: '1 Ã©v mÃºlva',
	yearsUntil: '{delta} Ã©v mÃºlva'

});

/*
---

name: Locale.hu-HU.Form.Validator

description: Form Validator messages for Hungarian.

license: MIT-style license

authors:
  - Zsolt SzegheÅ‘

requires:
  - Locale

provides: [Locale.hu-HU.Form.Validator]

...
*/

/*eslint mootools-whitespace:0*/

Locale.define('hu-HU', 'FormValidator', {

	required: 'A mezÅ‘ kitÃ¶ltÃ©se kÃ¶telezÅ‘.',
	minLength: 'LegalÃ¡bb {minLength} karakter megadÃ¡sa szÃ¼ksÃ©ges (megadva {length} karakter).',
	maxLength: 'Legfeljebb {maxLength} karakter megadÃ¡sa lehetsÃ©ges (megadva {length} karakter).',
	integer: 'EgÃ©sz szÃ¡m megadÃ¡sa szÃ¼ksÃ©ges. A tizedesjegyek (pl. 1.25) nem engedÃ©lyezettek.',
	numeric: 'SzÃ¡m megadÃ¡sa szÃ¼ksÃ©ges (pl. "1" vagy "1.1" vagy "-1" vagy "-1.1").',
	digits: 'Csak szÃ¡mok Ã©s Ã­rÃ¡sjelek megadÃ¡sa lehetsÃ©ges (pl. telefonszÃ¡m kÃ¶tÅ‘jelek Ã©s/vagy perjelekkel).',
	alpha: 'Csak betÅ±k (a-z) megadÃ¡sa lehetsÃ©ges. SzÃ³kÃ¶z Ã©s egyÃ©b karakterek nem engedÃ©lyezettek.',
	alphanum: 'Csak betÅ±k (a-z) vagy szÃ¡mok (0-9) megadÃ¡sa lehetsÃ©ges. SzÃ³kÃ¶z Ã©s egyÃ©b karakterek nem engedÃ©lyezettek.',
	dateSuchAs: 'ValÃ³s dÃ¡tum megadÃ¡sa szÃ¼ksÃ©ges (pl. {date}).',
	dateInFormatMDY: 'ValÃ³s dÃ¡tum megadÃ¡sa szÃ¼ksÃ©ges Ã‰Ã‰Ã‰Ã‰.HH.NN. formÃ¡ban. (pl. "1999.12.31.")',
	email: 'ValÃ³s e-mail cÃ­m megadÃ¡sa szÃ¼ksÃ©ges (pl. "fred@domain.hu").',
	url: 'ValÃ³s URL megadÃ¡sa szÃ¼ksÃ©ges (pl. http://www.example.com).',
	currencyDollar: 'ValÃ³s pÃ©nzÃ¶sszeg megadÃ¡sa szÃ¼ksÃ©ges (pl. 100.00 Ft.).',
	oneRequired: 'Az alÃ¡bbi mezÅ‘k legalÃ¡bb egyikÃ©nek kitÃ¶ltÃ©se kÃ¶telezÅ‘.',
	errorPrefix: 'Hiba: ',
	warningPrefix: 'Figyelem: ',

	// Form.Validator.Extras
	noSpace: 'A mezÅ‘ nem tartalmazhat szÃ³kÃ¶zÃ¶ket.',
	reqChkByNode: 'Nincs egyetlen kijelÃ¶lt elem sem.',
	requiredChk: 'A mezÅ‘ kitÃ¶ltÃ©se kÃ¶telezÅ‘.',
	reqChkByName: 'Egy {label} kivÃ¡lasztÃ¡sa szÃ¼ksÃ©ges.',
	match: 'A mezÅ‘nek egyeznie kell a(z) {matchName} mezÅ‘vel.',
	startDate: 'a kezdet dÃ¡tuma',
	endDate: 'a vÃ©g dÃ¡tuma',
	currentDate: 'jelenlegi dÃ¡tum',
	afterDate: 'A dÃ¡tum nem lehet kisebb, mint {label}.',
	beforeDate: 'A dÃ¡tum nem lehet nagyobb, mint {label}.',
	startMonth: 'Kezdeti hÃ³nap megadÃ¡sa szÃ¼ksÃ©ges.',
	sameMonth: 'A kÃ©t dÃ¡tumnak ugyanazon hÃ³napban kell lennie.',
	creditcard: 'A megadott bankkÃ¡rtyaszÃ¡m nem valÃ³di (megadva {length} szÃ¡mjegy).'

});

/*
---

name: Locale.it-IT.Date

description: Date messages for Italian.

license: MIT-style license.

authors:
  - Andrea Novero
  - Valerio Proietti

requires:
  - Locale

provides: [Locale.it-IT.Date]

...
*/

Locale.define('it-IT', 'Date', {

	months: ['Gennaio', 'Febbraio', 'Marzo', 'Aprile', 'Maggio', 'Giugno', 'Luglio', 'Agosto', 'Settembre', 'Ottobre', 'Novembre', 'Dicembre'],
	months_abbr: ['gen', 'feb', 'mar', 'apr', 'mag', 'giu', 'lug', 'ago', 'set', 'ott', 'nov', 'dic'],
	days: ['Domenica', 'LunedÃ¬', 'MartedÃ¬', 'MercoledÃ¬', 'GiovedÃ¬', 'VenerdÃ¬', 'Sabato'],
	days_abbr: ['dom', 'lun', 'mar', 'mer', 'gio', 'ven', 'sab'],

	// Culture's date order: DD/MM/YYYY
	dateOrder: ['date', 'month', 'year'],
	shortDate: '%d/%m/%Y',
	shortTime: '%H.%M',
	AM: 'AM',
	PM: 'PM',
	firstDayOfWeek: 1,

	// Date.Extras
	ordinal: 'Âº',

	lessThanMinuteAgo: 'meno di un minuto fa',
	minuteAgo: 'circa un minuto fa',
	minutesAgo: 'circa {delta} minuti fa',
	hourAgo: "circa un'ora fa",
	hoursAgo: 'circa {delta} ore fa',
	dayAgo: 'circa 1 giorno fa',
	daysAgo: 'circa {delta} giorni fa',
	weekAgo: 'una settimana fa',
	weeksAgo: '{delta} settimane fa',
	monthAgo: 'un mese fa',
	monthsAgo: '{delta} mesi fa',
	yearAgo: 'un anno fa',
	yearsAgo: '{delta} anni fa',

	lessThanMinuteUntil: 'tra meno di un minuto',
	minuteUntil: 'tra circa un minuto',
	minutesUntil: 'tra circa {delta} minuti',
	hourUntil: "tra circa un'ora",
	hoursUntil: 'tra circa {delta} ore',
	dayUntil: 'tra circa un giorno',
	daysUntil: 'tra circa {delta} giorni',
	weekUntil: 'tra una settimana',
	weeksUntil: 'tra {delta} settimane',
	monthUntil: 'tra un mese',
	monthsUntil: 'tra {delta} mesi',
	yearUntil: 'tra un anno',
	yearsUntil: 'tra {delta} anni'

});

/*
---

name: Locale.it-IT.Form.Validator

description: Form Validator messages for Italian.

license: MIT-style license

authors:
  - Leonardo Laureti
  - Andrea Novero

requires:
  - Locale

provides: [Locale.it-IT.Form.Validator]

...
*/

/*eslint mootools-whitespace:0*/

Locale.define('it-IT', 'FormValidator', {

	required: 'Il campo &egrave; obbligatorio.',
	minLength: 'Inserire almeno {minLength} caratteri (ne sono stati inseriti {length}).',
	maxLength: 'Inserire al massimo {maxLength} caratteri (ne sono stati inseriti {length}).',
	integer: 'Inserire un numero intero. Non sono consentiti decimali (es.: 1.25).',
	numeric: 'Inserire solo valori numerici (es.: "1" oppure "1.1" oppure "-1" oppure "-1.1").',
	digits: 'Inserire solo numeri e caratteri di punteggiatura. Per esempio &egrave; consentito un numero telefonico con trattini o punti.',
	alpha: 'Inserire solo lettere (a-z). Non sono consentiti spazi o altri caratteri.',
	alphanum: 'Inserire solo lettere (a-z) o numeri (0-9). Non sono consentiti spazi o altri caratteri.',
	dateSuchAs: 'Inserire una data valida del tipo {date}',
	dateInFormatMDY: 'Inserire una data valida nel formato MM/GG/AAAA (es.: "12/31/1999")',
	email: 'Inserire un indirizzo email valido. Per esempio "nome@dominio.com".',
	url: 'Inserire un indirizzo valido. Per esempio "http://www.example.com".',
	currencyDollar: 'Inserire un importo valido. Per esempio "$100.00".',
	oneRequired: 'Completare almeno uno dei campi richiesti.',
	errorPrefix: 'Errore: ',
	warningPrefix: 'Attenzione: ',

	// Form.Validator.Extras
	noSpace: 'Non sono consentiti spazi.',
	reqChkByNode: 'Nessuna voce selezionata.',
	requiredChk: 'Il campo &egrave; obbligatorio.',
	reqChkByName: 'Selezionare un(a) {label}.',
	match: 'Il valore deve corrispondere al campo {matchName}',
	startDate: "data d'inizio",
	endDate: 'data di fine',
	currentDate: 'data attuale',
	afterDate: 'La data deve corrispondere o essere successiva al {label}.',
	beforeDate: 'La data deve corrispondere o essere precedente al {label}.',
	startMonth: "Selezionare un mese d'inizio",
	sameMonth: 'Le due date devono essere dello stesso mese - occorre modificarne una.'

});

/*
---

name: Locale.ja-JP.Date

description: Date messages for Japanese.

license: MIT-style license

authors:
  - Noritaka Horio

requires:
  - Locale

provides: [Locale.ja-JP.Date]

...
*/

Locale.define('ja-JP', 'Date', {

	months: ['1æœˆ', '2æœˆ', '3æœˆ', '4æœˆ', '5æœˆ', '6æœˆ', '7æœˆ', '8æœˆ', '9æœˆ', '10æœˆ', '11æœˆ', '12æœˆ'],
	months_abbr: ['1æœˆ', '2æœˆ', '3æœˆ', '4æœˆ', '5æœˆ', '6æœˆ', '7æœˆ', '8æœˆ', '9æœˆ', '10æœˆ', '11æœˆ', '12æœˆ'],
	days: ['æ—¥æ›œæ—¥', 'æœˆæ›œæ—¥', 'ç«æ›œæ—¥', 'æ°´æ›œæ—¥', 'æœ¨æ›œæ—¥', 'é‡‘æ›œæ—¥', 'åœŸæ›œæ—¥'],
	days_abbr: ['æ—¥', 'æœˆ', 'ç«', 'æ°´', 'æœ¨', 'é‡‘', 'åœŸ'],

	// Culture's date order: YYYY/MM/DD
	dateOrder: ['year', 'month', 'date'],
	shortDate: '%Y/%m/%d',
	shortTime: '%H:%M',
	AM: 'åˆå‰',
	PM: 'åˆå¾Œ',
	firstDayOfWeek: 0,

	// Date.Extras
	ordinal: '',

	lessThanMinuteAgo: '1åˆ†ä»¥å†…å‰',
	minuteAgo: 'ç´„1åˆ†å‰',
	minutesAgo: 'ç´„{delta}åˆ†å‰',
	hourAgo: 'ç´„1æ™‚é–“å‰',
	hoursAgo: 'ç´„{delta}æ™‚é–“å‰',
	dayAgo: '1æ—¥å‰',
	daysAgo: '{delta}æ—¥å‰',
	weekAgo: '1é€±é–“å‰',
	weeksAgo: '{delta}é€±é–“å‰',
	monthAgo: '1ãƒ¶æœˆå‰',
	monthsAgo: '{delta}ãƒ¶æœˆå‰',
	yearAgo: '1å¹´å‰',
	yearsAgo: '{delta}å¹´å‰',

	lessThanMinuteUntil: 'ä»Šã‹ã‚‰ç´„1åˆ†ä»¥å†…',
	minuteUntil: 'ä»Šã‹ã‚‰ç´„1åˆ†',
	minutesUntil: 'ä»Šã‹ã‚‰ç´„{delta}åˆ†',
	hourUntil: 'ä»Šã‹ã‚‰ç´„1æ™‚é–“',
	hoursUntil: 'ä»Šã‹ã‚‰ç´„{delta}æ™‚é–“',
	dayUntil: 'ä»Šã‹ã‚‰1æ—¥é–“',
	daysUntil: 'ä»Šã‹ã‚‰{delta}æ—¥é–“',
	weekUntil: 'ä»Šã‹ã‚‰1é€±é–“',
	weeksUntil: 'ä»Šã‹ã‚‰{delta}é€±é–“',
	monthUntil: 'ä»Šã‹ã‚‰1ãƒ¶æœˆ',
	monthsUntil: 'ä»Šã‹ã‚‰{delta}ãƒ¶æœˆ',
	yearUntil: 'ä»Šã‹ã‚‰1å¹´',
	yearsUntil: 'ä»Šã‹ã‚‰{delta}å¹´'

});

/*
---

name: Locale.ja-JP.Form.Validator

description: Form Validator messages for Japanese.

license: MIT-style license

authors:
  - Noritaka Horio

requires:
  - Locale

provides: [Locale.ja-JP.Form.Validator]

...
*/

Locale.define('ja-JP', 'FormValidator', {

	required: 'å…¥åŠ›ã¯å¿…é ˆã§ã™ã€‚',
	minLength: 'å…¥åŠ›æ–‡å­—æ•°ã¯{minLength}ä»¥ä¸Šã«ã—ã¦ãã ã•ã„ã€‚({length}æ–‡å­—)',
	maxLength: 'å…¥åŠ›æ–‡å­—æ•°ã¯{maxLength}ä»¥ä¸‹ã«ã—ã¦ãã ã•ã„ã€‚({length}æ–‡å­—)',
	integer: 'æ•´æ•°ã‚’å…¥åŠ›ã—ã¦ãã ã•ã„ã€‚',
	numeric: 'å…¥åŠ›ã§ãã‚‹ã®ã¯æ•°å€¤ã ã‘ã§ã™ã€‚(ä¾‹: "1", "1.1", "-1", "-1.1"....)',
	digits: 'å…¥åŠ›ã§ãã‚‹ã®ã¯æ•°å€¤ã¨å¥èª­è¨˜å·ã§ã™ã€‚ (ä¾‹: -ã‚„+ã‚’å«ã‚€é›»è©±ç•ªå·ãªã©).',
	alpha: 'å…¥åŠ›ã§ãã‚‹ã®ã¯åŠè§’è‹±å­—ã ã‘ã§ã™ã€‚ãã‚Œä»¥å¤–ã®æ–‡å­—ã¯å…¥åŠ›ã§ãã¾ã›ã‚“ã€‚',
	alphanum: 'å…¥åŠ›ã§ãã‚‹ã®ã¯åŠè§’è‹±æ•°å­—ã ã‘ã§ã™ã€‚ãã‚Œä»¥å¤–ã®æ–‡å­—ã¯å…¥åŠ›ã§ãã¾ã›ã‚“ã€‚',
	dateSuchAs: 'æœ‰åŠ¹ãªæ—¥ä»˜ã‚’å…¥åŠ›ã—ã¦ãã ã•ã„ã€‚{date}',
	dateInFormatMDY: 'æ—¥ä»˜ã®æ›¸å¼ã«èª¤ã‚ŠãŒã‚ã‚Šã¾ã™ã€‚YYYY/MM/DD (i.e. "1999/12/31")',
	email: 'ãƒ¡ãƒ¼ãƒ«ã‚¢ãƒ‰ãƒ¬ã‚¹ã«èª¤ã‚ŠãŒã‚ã‚Šã¾ã™ã€‚',
	url: 'URLã‚¢ãƒ‰ãƒ¬ã‚¹ã«èª¤ã‚ŠãŒã‚ã‚Šã¾ã™ã€‚',
	currencyDollar: 'é‡‘é¡ã«èª¤ã‚ŠãŒã‚ã‚Šã¾ã™ã€‚',
	oneRequired: 'ã²ã¨ã¤ä»¥ä¸Šå…¥åŠ›ã—ã¦ãã ã•ã„ã€‚',
	errorPrefix: 'ã‚¨ãƒ©ãƒ¼: ',
	warningPrefix: 'è­¦å‘Š: ',

	// FormValidator.Extras
	noSpace: 'ã‚¹ãƒšãƒ¼ã‚¹ã¯å…¥åŠ›ã§ãã¾ã›ã‚“ã€‚',
	reqChkByNode: 'é¸æŠžã•ã‚Œã¦ã„ã¾ã›ã‚“ã€‚',
	requiredChk: 'ã“ã®é …ç›®ã¯å¿…é ˆã§ã™ã€‚',
	reqChkByName: '{label}ã‚’é¸æŠžã—ã¦ãã ã•ã„ã€‚',
	match: '{matchName}ãŒå…¥åŠ›ã•ã‚Œã¦ã„ã‚‹å ´åˆå¿…é ˆã§ã™ã€‚',
	startDate: 'é–‹å§‹æ—¥',
	endDate: 'çµ‚äº†æ—¥',
	currentDate: 'ä»Šæ—¥',
	afterDate: '{label}ä»¥é™ã®æ—¥ä»˜ã«ã—ã¦ãã ã•ã„ã€‚',
	beforeDate: '{label}ä»¥å‰ã®æ—¥ä»˜ã«ã—ã¦ãã ã•ã„ã€‚',
	startMonth: 'é–‹å§‹æœˆã‚’é¸æŠžã—ã¦ãã ã•ã„ã€‚',
	sameMonth: 'æ—¥ä»˜ãŒåŒä¸€ã§ã™ã€‚ã©ã¡ã‚‰ã‹ã‚’å¤‰æ›´ã—ã¦ãã ã•ã„ã€‚'

});

/*
---

name: Locale.ja-JP.Number

description: Number messages for Japanese.

license: MIT-style license

authors:
  - Noritaka Horio

requires:
  - Locale

provides: [Locale.ja-JP.Number]

...
*/

Locale.define('ja-JP', 'Number', {

	decimal: '.',
	group: ',',

	currency: {
		decimals: 0,
		prefix: '\\'
	}

});

/*
---

name: Locale.nl-NL.Date

description: Date messages for Dutch.

license: MIT-style license

authors:
  - Lennart Pilon
  - Tim Wienk

requires:
  - Locale

provides: [Locale.nl-NL.Date]

...
*/

Locale.define('nl-NL', 'Date', {

	months: ['januari', 'februari', 'maart', 'april', 'mei', 'juni', 'juli', 'augustus', 'september', 'oktober', 'november', 'december'],
	months_abbr: ['jan', 'feb', 'mrt', 'apr', 'mei', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'dec'],
	days: ['zondag', 'maandag', 'dinsdag', 'woensdag', 'donderdag', 'vrijdag', 'zaterdag'],
	days_abbr: ['zo', 'ma', 'di', 'wo', 'do', 'vr', 'za'],

	// Culture's date order: DD-MM-YYYY
	dateOrder: ['date', 'month', 'year'],
	shortDate: '%d-%m-%Y',
	shortTime: '%H:%M',
	AM: 'AM',
	PM: 'PM',
	firstDayOfWeek: 1,

	// Date.Extras
	ordinal: 'e',

	lessThanMinuteAgo: 'minder dan een minuut geleden',
	minuteAgo: 'ongeveer een minuut geleden',
	minutesAgo: '{delta} minuten geleden',
	hourAgo: 'ongeveer een uur geleden',
	hoursAgo: 'ongeveer {delta} uur geleden',
	dayAgo: 'een dag geleden',
	daysAgo: '{delta} dagen geleden',
	weekAgo: 'een week geleden',
	weeksAgo: '{delta} weken geleden',
	monthAgo: 'een maand geleden',
	monthsAgo: '{delta} maanden geleden',
	yearAgo: 'een jaar geleden',
	yearsAgo: '{delta} jaar geleden',

	lessThanMinuteUntil: 'over minder dan een minuut',
	minuteUntil: 'over ongeveer een minuut',
	minutesUntil: 'over {delta} minuten',
	hourUntil: 'over ongeveer een uur',
	hoursUntil: 'over {delta} uur',
	dayUntil: 'over ongeveer een dag',
	daysUntil: 'over {delta} dagen',
	weekUntil: 'over een week',
	weeksUntil: 'over {delta} weken',
	monthUntil: 'over een maand',
	monthsUntil: 'over {delta} maanden',
	yearUntil: 'over een jaar',
	yearsUntil: 'over {delta} jaar'

});

/*
---

name: Locale.nl-NL.Form.Validator

description: Form Validator messages for Dutch.

license: MIT-style license

authors:
  - Lennart Pilon
  - Arian Stolwijk
  - Tim Wienk

requires:
  - Locale

provides: [Locale.nl-NL.Form.Validator]

...
*/

Locale.define('nl-NL', 'FormValidator', {

	required: 'Dit veld is verplicht.',
	length: 'Vul precies {length} karakters in (je hebt {elLength} karakters ingevoerd).',
	minLength: 'Vul minimaal {minLength} karakters in (je hebt {length} karakters ingevoerd).',
	maxLength: 'Vul niet meer dan {maxLength} karakters in (je hebt {length} karakters ingevoerd).',
	integer: 'Vul een getal in. Getallen met decimalen (bijvoorbeeld 1.25) zijn niet toegestaan.',
	numeric: 'Vul alleen numerieke waarden in (bijvoorbeeld "1" of "1.1" of "-1" of "-1.1").',
	digits: 'Vul alleen nummers en leestekens in (bijvoorbeeld een telefoonnummer met streepjes is toegestaan).',
	alpha: 'Vul alleen letters in (a-z). Spaties en andere karakters zijn niet toegestaan.',
	alphanum: 'Vul alleen letters (a-z) of nummers (0-9) in. Spaties en andere karakters zijn niet toegestaan.',
	dateSuchAs: 'Vul een geldige datum in, zoals {date}',
	dateInFormatMDY: 'Vul een geldige datum, in het formaat MM/DD/YYYY (bijvoorbeeld "12/31/1999")',
	email: 'Vul een geldig e-mailadres in. Bijvoorbeeld "fred@domein.nl".',
	url: 'Vul een geldige URL in, zoals http://www.example.com.',
	currencyDollar: 'Vul een geldig $ bedrag in. Bijvoorbeeld $100.00 .',
	oneRequired: 'Vul iets in bij in ieder geval een van deze velden.',
	warningPrefix: 'Waarschuwing: ',
	errorPrefix: 'Fout: ',

	// Form.Validator.Extras
	noSpace: 'Spaties zijn niet toegestaan in dit veld.',
	reqChkByNode: 'Er zijn geen items geselecteerd.',
	requiredChk: 'Dit veld is verplicht.',
	reqChkByName: 'Selecteer een {label}.',
	match: 'Dit veld moet overeen komen met het {matchName} veld',
	startDate: 'de begin datum',
	endDate: 'de eind datum',
	currentDate: 'de huidige datum',
	afterDate: 'De datum moet hetzelfde of na {label} zijn.',
	beforeDate: 'De datum moet hetzelfde of voor {label} zijn.',
	startMonth: 'Selecteer een begin maand',
	sameMonth: 'Deze twee data moeten in dezelfde maand zijn - u moet een van beide aanpassen.',
	creditcard: 'Het ingevulde creditcardnummer is niet geldig. Controleer het nummer en probeer opnieuw. {length} getallen ingevuld.'

});

/*
---

name: Locale.nl-NL.Number

description: Number messages for Dutch.

license: MIT-style license

authors:
  - Arian Stolwijk

requires:
  - Locale
  - Locale.EU.Number

provides: [Locale.nl-NL.Number]

...
*/

Locale.define('nl-NL').inherit('EU', 'Number');




/*
---

name: Locale.no-NO.Date

description: Date messages for Norwegian.

license: MIT-style license

authors:
  - Espen 'Rexxars' Hovlandsdal
  - Ole TÃ¸sse Kolvik
requires:
  - Locale

provides: [Locale.no-NO.Date]

...
*/

Locale.define('no-NO', 'Date', {
	months: ['Januar', 'Februar', 'Mars', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Desember'],
	months_abbr: ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Des'],
	days: ['SÃ¸ndag', 'Mandag', 'Tirsdag', 'Onsdag', 'Torsdag', 'Fredag', 'LÃ¸rdag'],
	days_abbr: ['SÃ¸n', 'Man', 'Tir', 'Ons', 'Tor', 'Fre', 'LÃ¸r'],

	// Culture's date order: DD.MM.YYYY
	dateOrder: ['date', 'month', 'year'],
	shortDate: '%d.%m.%Y',
	shortTime: '%H:%M',
	AM: 'AM',
	PM: 'PM',
	firstDayOfWeek: 1,

	lessThanMinuteAgo: 'mindre enn et minutt siden',
	minuteAgo: 'omtrent et minutt siden',
	minutesAgo: '{delta} minutter siden',
	hourAgo: 'omtrent en time siden',
	hoursAgo: 'omtrent {delta} timer siden',
	dayAgo: '{delta} dag siden',
	daysAgo: '{delta} dager siden',
	weekAgo: 'en uke siden',
	weeksAgo: '{delta} uker siden',
	monthAgo: 'en mÃ¥ned siden',
	monthsAgo: '{delta} mÃ¥neder siden',
	yearAgo: 'ett Ã¥r siden',
	yearsAgo: '{delta} Ã¥r siden',

	lessThanMinuteUntil: 'mindre enn et minutt til',
	minuteUntil: 'omtrent et minutt til',
	minutesUntil: '{delta} minutter til',
	hourUntil: 'omtrent en time til',
	hoursUntil: 'omtrent {delta} timer til',
	dayUntil: 'en dag til',
	daysUntil: '{delta} dager til',
	weekUntil: 'en uke til',
	weeksUntil: '{delta} uker til',
	monthUntil: 'en mÃ¥ned til',
	monthsUntil: '{delta} mÃ¥neder til',
	yearUntil: 'et Ã¥r til',
	yearsUntil: '{delta} Ã¥r til'
});

/*
---

name: Locale.no-NO.Form.Validator

description: Form Validator messages for Norwegian.

license: MIT-style license

authors:
  - Aaron Newton
  - Espen 'Rexxars' Hovlandsdal
  - Ole TÃ¸sse Kolvik

requires:
  - Locale

provides: [Locale.no-NO.Form.Validator]

...
*/

Locale.define('no-NO', 'FormValidator', {

	required: 'Dette feltet er pÃ¥krevd.',
	length: 'Skriv inn {length} tegn (du skrev {elLength} tegn)',
	minLength: 'Skriv inn minst {minLength} tegn (du skrev {length} tegn).',
	maxLength: 'Ikke skriv mer enn {maxLength} tegn (du skrev {length} tegn).',
	integer: 'Skriv inn et tall i dette feltet. Tall med desimaler (f.eks. 1,25) er ikke tillat.',
	numeric: 'Skriv kun inn numeriske verdier i dette feltet (f.eks. "1", "1.1", "-1" eller "-1.1").',
	digits: 'Skriv kun nummer og skilletegn i dette feltet.',
	alpha: 'Skriv kun bokstaver (a-Ã¥) i dette feltet. Ingen mellomrom eller andre tegn er tillat.',
	alphanum: 'Skriv kun bokstaver (a-Ã¥) eller nummer (0-9) i dette feltet. Ingen mellomrom eller andre tegn er tillat.',
	dateSuchAs: 'Skriv inn en gyldig dato, som f.eks. {date}',
	dateInFormatMDY: 'Skriv inn en gyldig dato, f.eks. DD/MM/YYYY ("31/12/1999")',
	email: 'Skriv inn en gyldig epost-adresse. F.eks. "ola.nordmann@example.com".',
	url: 'Skriv inn en gyldig URL, f.eks. http://www.example.com.',
	currencyDollar: 'Skriv inn et gyldig belÃ¸p. F.eks. 100,00.',
	oneRequired: 'Minst ett av disse feltene mÃ¥ fylles ut.',
	errorPrefix: 'Feil: ',
	warningPrefix: 'Advarsel: ',

	// Form.Validator.Extras
	noSpace: 'Mellomrom er ikke tillatt i dette feltet.',
	reqChkByNode: 'Ingen objekter er valgt.',
	requiredChk: 'Dette feltet er pÃ¥krevd.',
	reqChkByName: 'Velg en {label}.',
	match: 'Dette feltet mÃ¥ vÃ¦re lik {matchName}',
	startDate: 'startdato',
	endDate: 'sluttdato',
	currentDate: 'dagens dato',
	afterDate: 'Datoen mÃ¥ vÃ¦re den samme som eller etter {label}.',
	beforeDate: 'Datoen mÃ¥ vÃ¦re den samme som eller fÃ¸r {label}.',
	startMonth: 'Velg en startmÃ¥ned',
	sameMonth: 'Datoene mÃ¥ vÃ¦re i den samme mÃ¥neden - velg den ene eller den andre.',
	creditcard: 'Kortnummeret du skrev inn er ikke gyldig. PrÃ¸v igjen. Du skrev {length} siffer.'

});

/*
---

name: Locale.no-NO.Number

description: Number messages for Norwegian.

license: MIT-style license

authors:
  - Arian Stolwijk
  - Martin Lundgren
  - Ole Tï¿½sse Kolvik

requires:
  - Locale
  - Locale.EU.Number

provides: [Locale.no-NO.Number]

...
*/

Locale.define('no-NO', 'Number', {

	currency: {
		prefix: 'NOK '
	}

}).inherit('EU', 'Number');

/*
---

name: Locale.pl-PL.Date

description: Date messages for Polish.

license: MIT-style license

authors:
  - Oskar Krawczyk

requires:
  - Locale

provides: [Locale.pl-PL.Date]

...
*/

Locale.define('pl-PL', 'Date', {

	months: ['StyczeÅ„', 'Luty', 'Marzec', 'KwiecieÅ„', 'Maj', 'Czerwiec', 'Lipiec', 'SierpieÅ„', 'WrzesieÅ„', 'PaÅºdziernik', 'Listopad', 'GrudzieÅ„'],
	months_abbr: ['sty', 'lut', 'mar', 'kwi', 'maj', 'cze', 'lip', 'sie', 'wrz', 'paÅº', 'lis', 'gru'],
	days: ['Niedziela', 'PoniedziaÅ‚ek', 'Wtorek', 'Åšroda', 'Czwartek', 'PiÄ…tek', 'Sobota'],
	days_abbr: ['niedz.', 'pon.', 'wt.', 'Å›r.', 'czw.', 'pt.', 'sob.'],

	// Culture's date order: YYYY-MM-DD
	dateOrder: ['year', 'month', 'date'],
	shortDate: '%Y-%m-%d',
	shortTime: '%H:%M',
	AM: 'nad ranem',
	PM: 'po poÅ‚udniu',
	firstDayOfWeek: 1,

	// Date.Extras
	ordinal: function(dayOfMonth){
		return (dayOfMonth > 3 && dayOfMonth < 21) ? 'ty' : ['ty', 'szy', 'gi', 'ci', 'ty'][Math.min(dayOfMonth % 10, 4)];
	},

	lessThanMinuteAgo: 'mniej niÅ¼ minute temu',
	minuteAgo: 'okoÅ‚o minutÄ™ temu',
	minutesAgo: '{delta} minut temu',
	hourAgo: 'okoÅ‚o godzinÄ™ temu',
	hoursAgo: 'okoÅ‚o {delta} godzin temu',
	dayAgo: 'Wczoraj',
	daysAgo: '{delta} dni temu',

	lessThanMinuteUntil: 'za niecaÅ‚Ä… minutÄ™',
	minuteUntil: 'za okoÅ‚o minutÄ™',
	minutesUntil: 'za {delta} minut',
	hourUntil: 'za okoÅ‚o godzinÄ™',
	hoursUntil: 'za okoÅ‚o {delta} godzin',
	dayUntil: 'za 1 dzieÅ„',
	daysUntil: 'za {delta} dni'

});

/*
---

name: Locale.pl-PL.Form.Validator

description: Form Validator messages for Polish.

license: MIT-style license

authors:
  - Oskar Krawczyk

requires:
  - Locale

provides: [Locale.pl-PL.Form.Validator]

...
*/

Locale.define('pl-PL', 'FormValidator', {

	required: 'To pole jest wymagane.',
	minLength: 'Wymagane jest przynajmniej {minLength} znakÃ³w (wpisanych zostaÅ‚o tylko {length}).',
	maxLength: 'Dozwolone jest nie wiÄ™cej niÅ¼ {maxLength} znakÃ³w (wpisanych zostaÅ‚o {length})',
	integer: 'To pole wymaga liczb caÅ‚ych. Liczby dziesiÄ™tne (np. 1.25) sÄ… niedozwolone.',
	numeric: 'Prosimy uÅ¼ywaÄ‡ tylko numerycznych wartoÅ›ci w tym polu (np. "1", "1.1", "-1" lub "-1.1").',
	digits: 'Prosimy uÅ¼ywaÄ‡ liczb oraz zankow punktuacyjnych w typ polu (dla przykÅ‚adu, przy numerze telefonu myÅ›lniki i kropki sÄ… dozwolone).',
	alpha: 'Prosimy uÅ¼ywaÄ‡ tylko liter (a-z) w tym polu. Spacje oraz inne znaki sÄ… niedozwolone.',
	alphanum: 'Prosimy uÅ¼ywaÄ‡ tylko liter (a-z) lub liczb (0-9) w tym polu. Spacje oraz inne znaki sÄ… niedozwolone.',
	dateSuchAs: 'Prosimy podaÄ‡ prawidÅ‚owÄ… datÄ™ w formacie: {date}',
	dateInFormatMDY: 'Prosimy podaÄ‡ poprawnÄ… date w formacie DD.MM.RRRR (i.e. "12.01.2009")',
	email: 'Prosimy podaÄ‡ prawidÅ‚owy adres e-mail, np. "jan@domena.pl".',
	url: 'Prosimy podaÄ‡ prawidÅ‚owy adres URL, np. http://www.example.com.',
	currencyDollar: 'Prosimy podaÄ‡ prawidÅ‚owÄ… sumÄ™ w PLN. Dla przykÅ‚adu: 100.00 PLN.',
	oneRequired: 'Prosimy wypeÅ‚niÄ‡ chociaÅ¼ jedno z pÃ³l.',
	errorPrefix: 'BÅ‚Ä…d: ',
	warningPrefix: 'Uwaga: ',

	// Form.Validator.Extras
	noSpace: 'W tym polu nie mogÄ… znajdowaÄ‡ siÄ™ spacje.',
	reqChkByNode: 'Brak zaznaczonych elementÃ³w.',
	requiredChk: 'To pole jest wymagane.',
	reqChkByName: 'Prosimy wybraÄ‡ z {label}.',
	match: 'To pole musi byÄ‡ takie samo jak {matchName}',
	startDate: 'data poczÄ…tkowa',
	endDate: 'data koÅ„cowa',
	currentDate: 'aktualna data',
	afterDate: 'Podana data poinna byÄ‡ taka sama lub po {label}.',
	beforeDate: 'Podana data poinna byÄ‡ taka sama lub przed {label}.',
	startMonth: 'Prosimy wybraÄ‡ poczÄ…tkowy miesiÄ…c.',
	sameMonth: 'Te dwie daty muszÄ… byÄ‡ w zakresie tego samego miesiÄ…ca - wymagana jest zmiana ktÃ³regoÅ› z pÃ³l.'

});

/*
---

name: Locale.pt-PT.Date

description: Date messages for Portuguese.

license: MIT-style license

authors:
  - Fabio Miranda Costa

requires:
  - Locale

provides: [Locale.pt-PT.Date]

...
*/

Locale.define('pt-PT', 'Date', {

	months: ['Janeiro', 'Fevereiro', 'MarÃ§o', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
	months_abbr: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
	days: ['Domingo', 'Segunda-feira', 'TerÃ§a-feira', 'Quarta-feira', 'Quinta-feira', 'Sexta-feira', 'SÃ¡bado'],
	days_abbr: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'SÃ¡b'],

	// Culture's date order: DD-MM-YYYY
	dateOrder: ['date', 'month', 'year'],
	shortDate: '%d-%m-%Y',
	shortTime: '%H:%M',
	AM: 'AM',
	PM: 'PM',
	firstDayOfWeek: 1,

	// Date.Extras
	ordinal: 'Âº',

	lessThanMinuteAgo: 'hÃ¡ menos de um minuto',
	minuteAgo: 'hÃ¡ cerca de um minuto',
	minutesAgo: 'hÃ¡ {delta} minutos',
	hourAgo: 'hÃ¡ cerca de uma hora',
	hoursAgo: 'hÃ¡ cerca de {delta} horas',
	dayAgo: 'hÃ¡ um dia',
	daysAgo: 'hÃ¡ {delta} dias',
	weekAgo: 'hÃ¡ uma semana',
	weeksAgo: 'hÃ¡ {delta} semanas',
	monthAgo: 'hÃ¡ um mÃªs',
	monthsAgo: 'hÃ¡ {delta} meses',
	yearAgo: 'hÃ¡ um ano',
	yearsAgo: 'hÃ¡ {delta} anos',

	lessThanMinuteUntil: 'em menos de um minuto',
	minuteUntil: 'em um minuto',
	minutesUntil: 'em {delta} minutos',
	hourUntil: 'em uma hora',
	hoursUntil: 'em {delta} horas',
	dayUntil: 'em um dia',
	daysUntil: 'em {delta} dias',
	weekUntil: 'em uma semana',
	weeksUntil: 'em {delta} semanas',
	monthUntil: 'em um mÃªs',
	monthsUntil: 'em {delta} meses',
	yearUntil: 'em um ano',
	yearsUntil: 'em {delta} anos'

});

/*
---

name: Locale.pt-BR.Date

description: Date messages for Portuguese (Brazil).

license: MIT-style license

authors:
  - Fabio Miranda Costa

requires:
  - Locale
  - Locale.pt-PT.Date

provides: [Locale.pt-BR.Date]

...
*/

Locale.define('pt-BR', 'Date', {

	// Culture's date order: DD/MM/YYYY
	shortDate: '%d/%m/%Y'

}).inherit('pt-PT', 'Date');

/*
---

name: Locale.pt-BR.Form.Validator

description: Form Validator messages for Portuguese (Brazil).

license: MIT-style license

authors:
  - FÃ¡bio Miranda Costa

requires:
  - Locale

provides: [Locale.pt-BR.Form.Validator]

...
*/

Locale.define('pt-BR', 'FormValidator', {

	required: 'Este campo Ã© obrigatÃ³rio.',
	minLength: 'Digite pelo menos {minLength} caracteres (tamanho atual: {length}).',
	maxLength: 'NÃ£o digite mais de {maxLength} caracteres (tamanho atual: {length}).',
	integer: 'Por favor digite apenas um nÃºmero inteiro neste campo. NÃ£o sÃ£o permitidos nÃºmeros decimais (por exemplo, 1,25).',
	numeric: 'Por favor digite apenas valores numÃ©ricos neste campo (por exemplo, "1" ou "1.1" ou "-1" ou "-1,1").',
	digits: 'Por favor use apenas nÃºmeros e pontuaÃ§Ã£o neste campo (por exemplo, um nÃºmero de telefone com traÃ§os ou pontos Ã© permitido).',
	alpha: 'Por favor use somente letras (a-z). EspaÃ§o e outros caracteres nÃ£o sÃ£o permitidos.',
	alphanum: 'Use somente letras (a-z) ou nÃºmeros (0-9) neste campo. EspaÃ§o e outros caracteres nÃ£o sÃ£o permitidos.',
	dateSuchAs: 'Digite uma data vÃ¡lida, como {date}',
	dateInFormatMDY: 'Digite uma data vÃ¡lida, como DD/MM/YYYY (por exemplo, "31/12/1999")',
	email: 'Digite um endereÃ§o de email vÃ¡lido. Por exemplo "nome@dominio.com".',
	url: 'Digite uma URL vÃ¡lida. Exemplo: http://www.example.com.',
	currencyDollar: 'Digite um valor em dinheiro vÃ¡lido. Exemplo: R$100,00 .',
	oneRequired: 'Digite algo para pelo menos um desses campos.',
	errorPrefix: 'Erro: ',
	warningPrefix: 'Aviso: ',

	// Form.Validator.Extras
	noSpace: 'NÃ£o Ã© possÃ­vel digitar espaÃ§os neste campo.',
	reqChkByNode: 'NÃ£o foi selecionado nenhum item.',
	requiredChk: 'Este campo Ã© obrigatÃ³rio.',
	reqChkByName: 'Por favor digite um {label}.',
	match: 'Este campo deve ser igual ao campo {matchName}.',
	startDate: 'a data inicial',
	endDate: 'a data final',
	currentDate: 'a data atual',
	afterDate: 'A data deve ser igual ou posterior a {label}.',
	beforeDate: 'A data deve ser igual ou anterior a {label}.',
	startMonth: 'Por favor selecione uma data inicial.',
	sameMonth: 'Estas duas datas devem ter o mesmo mÃªs - vocÃª deve modificar uma das duas.',
	creditcard: 'O nÃºmero do cartÃ£o de crÃ©dito informado Ã© invÃ¡lido. Por favor verifique o valor e tente novamente. {length} nÃºmeros informados.'

});

/*
---

name: Locale.pt-BR.Number

description: Number messages for PT Brazilian.

license: MIT-style license

authors:
  - Arian Stolwijk
  - Danillo CÃ©sar

requires:
  - Locale

provides: [Locale.pt-BR.Number]

...
*/

Locale.define('pt-BR', 'Number', {

	decimal: ',',
	group: '.',

	currency: {
		prefix: 'R$ '
	}

});



/*
---

name: Locale.pt-PT.Form.Validator

description: Form Validator messages for Portuguese.

license: MIT-style license

authors:
  - Miquel Hudin

requires:
  - Locale

provides: [Locale.pt-PT.Form.Validator]

...
*/

Locale.define('pt-PT', 'FormValidator', {

	required: 'Este campo Ã© necessÃ¡rio.',
	minLength: 'Digite pelo menos{minLength} caracteres (comprimento {length} caracteres).',
	maxLength: 'NÃ£o insira mais de {maxLength} caracteres (comprimento {length} caracteres).',
	integer: 'Digite um nÃºmero inteiro neste domÃ­nio. Com nÃºmeros decimais (por exemplo, 1,25), nÃ£o sÃ£o permitidas.',
	numeric: 'Digite apenas valores numÃ©ricos neste domÃ­nio (p.ex., "1" ou "1.1" ou "-1" ou "-1,1").',
	digits: 'Por favor, use nÃºmeros e pontuaÃ§Ã£o apenas neste campo (p.ex., um nÃºmero de telefone com traÃ§os ou pontos Ã© permitida).',
	alpha: 'Por favor use somente letras (a-z), com nesta Ã¡rea. NÃ£o utilize espaÃ§os nem outros caracteres sÃ£o permitidos.',
	alphanum: 'Use somente letras (a-z) ou nÃºmeros (0-9) neste campo. NÃ£o utilize espaÃ§os nem outros caracteres sÃ£o permitidos.',
	dateSuchAs: 'Digite uma data vÃ¡lida, como {date}',
	dateInFormatMDY: 'Digite uma data vÃ¡lida, como DD/MM/YYYY (p.ex. "31/12/1999")',
	email: 'Digite um endereÃ§o de email vÃ¡lido. Por exemplo "fred@domain.com".',
	url: 'Digite uma URL vÃ¡lida, como http://www.example.com.',
	currencyDollar: 'Digite um valor vÃ¡lido $. Por exemplo $ 100,00. ',
	oneRequired: 'Digite algo para pelo menos um desses insumos.',
	errorPrefix: 'Erro: ',
	warningPrefix: 'Aviso: '

});

/*
---

name: Locale.ru-RU-unicode.Date

description: Date messages for Russian (utf-8).

license: MIT-style license

authors:
  - Evstigneev Pavel
  - Kuryanovich Egor

requires:
  - Locale

provides: [Locale.ru-RU.Date]

...
*/

(function(){

// Russian language pluralization rules, taken from CLDR project, http://unicode.org/cldr/
// one -> n mod 10 is 1 and n mod 100 is not 11;
// few -> n mod 10 in 2..4 and n mod 100 not in 12..14;
// many -> n mod 10 is 0 or n mod 10 in 5..9 or n mod 100 in 11..14;
// other -> everything else (example 3.14)
var pluralize = function(n, one, few, many, other){
	var modulo10 = n % 10,
		modulo100 = n % 100;

	if (modulo10 == 1 && modulo100 != 11){
		return one;
	} else if ((modulo10 == 2 || modulo10 == 3 || modulo10 == 4) && !(modulo100 == 12 || modulo100 == 13 || modulo100 == 14)){
		return few;
	} else if (modulo10 == 0 || (modulo10 == 5 || modulo10 == 6 || modulo10 == 7 || modulo10 == 8 || modulo10 == 9) || (modulo100 == 11 || modulo100 == 12 || modulo100 == 13 || modulo100 == 14)){
		return many;
	} else {
		return other;
	}
};

Locale.define('ru-RU', 'Date', {

	months: ['Ð¯Ð½Ð²Ð°Ñ€ÑŒ', 'Ð¤ÐµÐ²Ñ€Ð°Ð»ÑŒ', 'ÐœÐ°Ñ€Ñ‚', 'ÐÐ¿Ñ€ÐµÐ»ÑŒ', 'ÐœÐ°Ð¹', 'Ð˜ÑŽÐ½ÑŒ', 'Ð˜ÑŽÐ»ÑŒ', 'ÐÐ²Ð³ÑƒÑÑ‚', 'Ð¡ÐµÐ½Ñ‚ÑÐ±Ñ€ÑŒ', 'ÐžÐºÑ‚ÑÐ±Ñ€ÑŒ', 'ÐÐ¾ÑÐ±Ñ€ÑŒ', 'Ð”ÐµÐºÐ°Ð±Ñ€ÑŒ'],
	months_abbr: ['ÑÐ½Ð²', 'Ñ„ÐµÐ²Ñ€', 'Ð¼Ð°Ñ€Ñ‚', 'Ð°Ð¿Ñ€', 'Ð¼Ð°Ð¹','Ð¸ÑŽÐ½ÑŒ','Ð¸ÑŽÐ»ÑŒ','Ð°Ð²Ð³','ÑÐµÐ½Ñ‚','Ð¾ÐºÑ‚','Ð½Ð¾ÑÐ±','Ð´ÐµÐº'],
	days: ['Ð’Ð¾ÑÐºÑ€ÐµÑÐµÐ½ÑŒÐµ', 'ÐŸÐ¾Ð½ÐµÐ´ÐµÐ»ÑŒÐ½Ð¸Ðº', 'Ð’Ñ‚Ð¾Ñ€Ð½Ð¸Ðº', 'Ð¡Ñ€ÐµÐ´Ð°', 'Ð§ÐµÑ‚Ð²ÐµÑ€Ð³', 'ÐŸÑÑ‚Ð½Ð¸Ñ†Ð°', 'Ð¡ÑƒÐ±Ð±Ð¾Ñ‚Ð°'],
	days_abbr: ['Ð’Ñ', 'ÐŸÐ½', 'Ð’Ñ‚', 'Ð¡Ñ€', 'Ð§Ñ‚', 'ÐŸÑ‚', 'Ð¡Ð±'],

	// Culture's date order: DD.MM.YYYY
	dateOrder: ['date', 'month', 'year'],
	shortDate: '%d.%m.%Y',
	shortTime: '%H:%M',
	AM: 'AM',
	PM: 'PM',
	firstDayOfWeek: 1,

	// Date.Extras
	ordinal: '',

	lessThanMinuteAgo: 'Ð¼ÐµÐ½ÑŒÑˆÐµ Ð¼Ð¸Ð½ÑƒÑ‚Ñ‹ Ð½Ð°Ð·Ð°Ð´',
	minuteAgo: 'Ð¼Ð¸Ð½ÑƒÑ‚Ñƒ Ð½Ð°Ð·Ð°Ð´',
	minutesAgo: function(delta){ return '{delta} ' + pluralize(delta, 'Ð¼Ð¸Ð½ÑƒÑ‚Ñƒ', 'Ð¼Ð¸Ð½ÑƒÑ‚Ñ‹', 'Ð¼Ð¸Ð½ÑƒÑ‚') + ' Ð½Ð°Ð·Ð°Ð´'; },
	hourAgo: 'Ñ‡Ð°Ñ Ð½Ð°Ð·Ð°Ð´',
	hoursAgo: function(delta){ return '{delta} ' + pluralize(delta, 'Ñ‡Ð°Ñ', 'Ñ‡Ð°ÑÐ°', 'Ñ‡Ð°ÑÐ¾Ð²') + ' Ð½Ð°Ð·Ð°Ð´'; },
	dayAgo: 'Ð²Ñ‡ÐµÑ€Ð°',
	daysAgo: function(delta){ return '{delta} ' + pluralize(delta, 'Ð´ÐµÐ½ÑŒ', 'Ð´Ð½Ñ', 'Ð´Ð½ÐµÐ¹') + ' Ð½Ð°Ð·Ð°Ð´'; },
	weekAgo: 'Ð½ÐµÐ´ÐµÐ»ÑŽ Ð½Ð°Ð·Ð°Ð´',
	weeksAgo: function(delta){ return '{delta} ' + pluralize(delta, 'Ð½ÐµÐ´ÐµÐ»Ñ', 'Ð½ÐµÐ´ÐµÐ»Ð¸', 'Ð½ÐµÐ´ÐµÐ»ÑŒ') + ' Ð½Ð°Ð·Ð°Ð´'; },
	monthAgo: 'Ð¼ÐµÑÑÑ† Ð½Ð°Ð·Ð°Ð´',
	monthsAgo: function(delta){ return '{delta} ' + pluralize(delta, 'Ð¼ÐµÑÑÑ†', 'Ð¼ÐµÑÑÑ†Ð°', 'Ð¼ÐµÑÑÑ†ÐµÐ²') + ' Ð½Ð°Ð·Ð°Ð´'; },
	yearAgo: 'Ð³Ð¾Ð´ Ð½Ð°Ð·Ð°Ð´',
	yearsAgo: function(delta){ return '{delta} ' + pluralize(delta, 'Ð³Ð¾Ð´', 'Ð³Ð¾Ð´Ð°', 'Ð»ÐµÑ‚') + ' Ð½Ð°Ð·Ð°Ð´'; },

	lessThanMinuteUntil: 'Ð¼ÐµÐ½ÑŒÑˆÐµ Ñ‡ÐµÐ¼ Ñ‡ÐµÑ€ÐµÐ· Ð¼Ð¸Ð½ÑƒÑ‚Ñƒ',
	minuteUntil: 'Ñ‡ÐµÑ€ÐµÐ· Ð¼Ð¸Ð½ÑƒÑ‚Ñƒ',
	minutesUntil: function(delta){ return 'Ñ‡ÐµÑ€ÐµÐ· {delta} ' + pluralize(delta, 'Ð¼Ð¸Ð½ÑƒÑ‚Ñƒ', 'Ð¼Ð¸Ð½ÑƒÑ‚Ñ‹', 'Ð¼Ð¸Ð½ÑƒÑ‚') + ''; },
	hourUntil: 'Ñ‡ÐµÑ€ÐµÐ· Ñ‡Ð°Ñ',
	hoursUntil: function(delta){ return 'Ñ‡ÐµÑ€ÐµÐ· {delta} ' + pluralize(delta, 'Ñ‡Ð°Ñ', 'Ñ‡Ð°ÑÐ°', 'Ñ‡Ð°ÑÐ¾Ð²') + ''; },
	dayUntil: 'Ð·Ð°Ð²Ñ‚Ñ€Ð°',
	daysUntil: function(delta){ return 'Ñ‡ÐµÑ€ÐµÐ· {delta} ' + pluralize(delta, 'Ð´ÐµÐ½ÑŒ', 'Ð´Ð½Ñ', 'Ð´Ð½ÐµÐ¹') + ''; },
	weekUntil: 'Ñ‡ÐµÑ€ÐµÐ· Ð½ÐµÐ´ÐµÐ»ÑŽ',
	weeksUntil: function(delta){ return 'Ñ‡ÐµÑ€ÐµÐ· {delta} ' + pluralize(delta, 'Ð½ÐµÐ´ÐµÐ»ÑŽ', 'Ð½ÐµÐ´ÐµÐ»Ð¸', 'Ð½ÐµÐ´ÐµÐ»ÑŒ') + ''; },
	monthUntil: 'Ñ‡ÐµÑ€ÐµÐ· Ð¼ÐµÑÑÑ†',
	monthsUntil: function(delta){ return 'Ñ‡ÐµÑ€ÐµÐ· {delta} ' + pluralize(delta, 'Ð¼ÐµÑÑÑ†', 'Ð¼ÐµÑÑÑ†Ð°', 'Ð¼ÐµÑÑÑ†ÐµÐ²') + ''; },
	yearUntil: 'Ñ‡ÐµÑ€ÐµÐ·',
	yearsUntil: function(delta){ return 'Ñ‡ÐµÑ€ÐµÐ· {delta} ' + pluralize(delta, 'Ð³Ð¾Ð´', 'Ð³Ð¾Ð´Ð°', 'Ð»ÐµÑ‚') + ''; }

});



})();

/*
---

name: Locale.ru-RU-unicode.Form.Validator

description: Form Validator messages for Russian (utf-8).

license: MIT-style license

authors:
  - Chernodarov Egor

requires:
  - Locale

provides: [Locale.ru-RU.Form.Validator]

...
*/

Locale.define('ru-RU', 'FormValidator', {

	required: 'Ð­Ñ‚Ð¾ Ð¿Ð¾Ð»Ðµ Ð¾Ð±ÑÐ·Ð°Ñ‚ÐµÐ»ÑŒÐ½Ð¾ Ðº Ð·Ð°Ð¿Ð¾Ð»Ð½ÐµÐ½Ð¸ÑŽ.',
	minLength: 'ÐŸÐ¾Ð¶Ð°Ð»ÑƒÐ¹ÑÑ‚Ð°, Ð²Ð²ÐµÐ´Ð¸Ñ‚Ðµ Ñ…Ð¾Ñ‚Ñ Ð±Ñ‹ {minLength} ÑÐ¸Ð¼Ð²Ð¾Ð»Ð¾Ð² (Ð’Ñ‹ Ð²Ð²ÐµÐ»Ð¸ {length}).',
	maxLength: 'ÐŸÐ¾Ð¶Ð°Ð»ÑƒÐ¹ÑÑ‚Ð°, Ð²Ð²ÐµÐ´Ð¸Ñ‚Ðµ Ð½Ðµ Ð±Ð¾Ð»ÑŒÑˆÐµ {maxLength} ÑÐ¸Ð¼Ð²Ð¾Ð»Ð¾Ð² (Ð’Ñ‹ Ð²Ð²ÐµÐ»Ð¸ {length}).',
	integer: 'ÐŸÐ¾Ð¶Ð°Ð»ÑƒÐ¹ÑÑ‚Ð°, Ð²Ð²ÐµÐ´Ð¸Ñ‚Ðµ Ð² ÑÑ‚Ð¾ Ð¿Ð¾Ð»Ðµ Ñ‡Ð¸ÑÐ»Ð¾. Ð”Ñ€Ð¾Ð±Ð½Ñ‹Ðµ Ñ‡Ð¸ÑÐ»Ð° (Ð½Ð°Ð¿Ñ€Ð¸Ð¼ÐµÑ€ 1.25) Ñ‚ÑƒÑ‚ Ð½Ðµ Ñ€Ð°Ð·Ñ€ÐµÑˆÐµÐ½Ñ‹.',
	numeric: 'ÐŸÐ¾Ð¶Ð°Ð»ÑƒÐ¹ÑÑ‚Ð°, Ð²Ð²ÐµÐ´Ð¸Ñ‚Ðµ Ð² ÑÑ‚Ð¾ Ð¿Ð¾Ð»Ðµ Ñ‡Ð¸ÑÐ»Ð¾ (Ð½Ð°Ð¿Ñ€Ð¸Ð¼ÐµÑ€ "1" Ð¸Ð»Ð¸ "1.1", Ð¸Ð»Ð¸ "-1", Ð¸Ð»Ð¸ "-1.1").',
	digits: 'Ð’ ÑÑ‚Ð¾Ð¼ Ð¿Ð¾Ð»Ðµ Ð’Ñ‹ Ð¼Ð¾Ð¶ÐµÑ‚Ðµ Ð¸ÑÐ¿Ð¾Ð»ÑŒÐ·Ð¾Ð²Ð°Ñ‚ÑŒ Ñ‚Ð¾Ð»ÑŒÐºÐ¾ Ñ†Ð¸Ñ„Ñ€Ñ‹ Ð¸ Ð·Ð½Ð°ÐºÐ¸ Ð¿ÑƒÐ½ÐºÑ‚ÑƒÐ°Ñ†Ð¸Ð¸ (Ð½Ð°Ð¿Ñ€Ð¸Ð¼ÐµÑ€, Ñ‚ÐµÐ»ÐµÑ„Ð¾Ð½Ð½Ñ‹Ð¹ Ð½Ð¾Ð¼ÐµÑ€ ÑÐ¾ Ð·Ð½Ð°ÐºÐ°Ð¼Ð¸ Ð´ÐµÑ„Ð¸ÑÐ° Ð¸Ð»Ð¸ Ñ Ñ‚Ð¾Ñ‡ÐºÐ°Ð¼Ð¸).',
	alpha: 'Ð’ ÑÑ‚Ð¾Ð¼ Ð¿Ð¾Ð»Ðµ Ð¼Ð¾Ð¶Ð½Ð¾ Ð¸ÑÐ¿Ð¾Ð»ÑŒÐ·Ð¾Ð²Ð°Ñ‚ÑŒ Ñ‚Ð¾Ð»ÑŒÐºÐ¾ Ð»Ð°Ñ‚Ð¸Ð½ÑÐºÐ¸Ðµ Ð±ÑƒÐºÐ²Ñ‹ (a-z). ÐŸÑ€Ð¾Ð±ÐµÐ»Ñ‹ Ð¸ Ð´Ñ€ÑƒÐ³Ð¸Ðµ ÑÐ¸Ð¼Ð²Ð¾Ð»Ñ‹ Ð·Ð°Ð¿Ñ€ÐµÑ‰ÐµÐ½Ñ‹.',
	alphanum: 'Ð’ ÑÑ‚Ð¾Ð¼ Ð¿Ð¾Ð»Ðµ Ð¼Ð¾Ð¶Ð½Ð¾ Ð¸ÑÐ¿Ð¾Ð»ÑŒÐ·Ð¾Ð²Ð°Ñ‚ÑŒ Ñ‚Ð¾Ð»ÑŒÐºÐ¾ Ð»Ð°Ñ‚Ð¸Ð½ÑÐºÐ¸Ðµ Ð±ÑƒÐºÐ²Ñ‹ (a-z) Ð¸ Ñ†Ð¸Ñ„Ñ€Ñ‹ (0-9). ÐŸÑ€Ð¾Ð±ÐµÐ»Ñ‹ Ð¸ Ð´Ñ€ÑƒÐ³Ð¸Ðµ ÑÐ¸Ð¼Ð²Ð¾Ð»Ñ‹ Ð·Ð°Ð¿Ñ€ÐµÑ‰ÐµÐ½Ñ‹.',
	dateSuchAs: 'ÐŸÐ¾Ð¶Ð°Ð»ÑƒÐ¹ÑÑ‚Ð°, Ð²Ð²ÐµÐ´Ð¸Ñ‚Ðµ ÐºÐ¾Ñ€Ñ€ÐµÐºÑ‚Ð½ÑƒÑŽ Ð´Ð°Ñ‚Ñƒ {date}',
	dateInFormatMDY: 'ÐŸÐ¾Ð¶Ð°Ð»ÑƒÐ¹ÑÑ‚Ð°, Ð²Ð²ÐµÐ´Ð¸Ñ‚Ðµ Ð´Ð°Ñ‚Ñƒ Ð² Ñ„Ð¾Ñ€Ð¼Ð°Ñ‚Ðµ ÐœÐœ/Ð”Ð”/Ð“Ð“Ð“Ð“ (Ð½Ð°Ð¿Ñ€Ð¸Ð¼ÐµÑ€ "12/31/1999")',
	email: 'ÐŸÐ¾Ð¶Ð°Ð»ÑƒÐ¹ÑÑ‚Ð°, Ð²Ð²ÐµÐ´Ð¸Ñ‚Ðµ ÐºÐ¾Ñ€Ñ€ÐµÐºÑ‚Ð½Ñ‹Ð¹ ÐµÐ¼ÐµÐ¹Ð»-Ð°Ð´Ñ€ÐµÑ. Ð”Ð»Ñ Ð¿Ñ€Ð¸Ð¼ÐµÑ€Ð° "fred@domain.com".',
	url: 'ÐŸÐ¾Ð¶Ð°Ð»ÑƒÐ¹ÑÑ‚Ð°, Ð²Ð²ÐµÐ´Ð¸Ñ‚Ðµ Ð¿Ñ€Ð°Ð²Ð¸Ð»ÑŒÐ½ÑƒÑŽ ÑÑÑ‹Ð»ÐºÑƒ Ð²Ð¸Ð´Ð° http://www.example.com.',
	currencyDollar: 'ÐŸÐ¾Ð¶Ð°Ð»ÑƒÐ¹ÑÑ‚Ð°, Ð²Ð²ÐµÐ´Ð¸Ñ‚Ðµ ÑÑƒÐ¼Ð¼Ñƒ Ð² Ð´Ð¾Ð»Ð»Ð°Ñ€Ð°Ñ…. ÐÐ°Ð¿Ñ€Ð¸Ð¼ÐµÑ€: $100.00 .',
	oneRequired: 'ÐŸÐ¾Ð¶Ð°Ð»ÑƒÐ¹ÑÑ‚Ð°, Ð²Ñ‹Ð±ÐµÑ€Ð¸Ñ‚Ðµ Ñ…Ð¾Ñ‚ÑŒ Ñ‡Ñ‚Ð¾-Ð½Ð¸Ð±ÑƒÐ´ÑŒ Ð² Ð¾Ð´Ð½Ð¾Ð¼ Ð¸Ð· ÑÑ‚Ð¸Ñ… Ð¿Ð¾Ð»ÐµÐ¹.',
	errorPrefix: 'ÐžÑˆÐ¸Ð±ÐºÐ°: ',
	warningPrefix: 'Ð’Ð½Ð¸Ð¼Ð°Ð½Ð¸Ðµ: '

});



/*
---

name: Locale.sk-SK.Date

description: Date messages for Slovak.

license: MIT-style license

authors:
  - Ivan MasÃ¡r

requires:
  - Locale

provides: [Locale.sk-SK.Date]

...
*/
(function(){

// Slovak language pluralization rules, see http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html
// one -> n is 1;            1
// few -> n in 2..4;         2-4
// other -> everything else  0, 5-999, 1.31, 2.31, 5.31...
var pluralize = function(n, one, few, other){
	if (n == 1) return one;
	else if (n == 2 || n == 3 || n == 4) return few;
	else return other;
};

Locale.define('sk-SK', 'Date', {

	months: ['JanuÃ¡r', 'FebruÃ¡r', 'Marec', 'AprÃ­l', 'MÃ¡j', 'JÃºn', 'JÃºl', 'August', 'September', 'OktÃ³ber', 'November', 'December'],
	months_abbr: ['januÃ¡ra', 'februÃ¡ra', 'marca', 'aprÃ­la', 'mÃ¡ja', 'jÃºna', 'jÃºla', 'augusta', 'septembra', 'oktÃ³bra', 'novembra', 'decembra'],
	days: ['Nedele', 'PondelÃ­', 'ÃšterÃ½', 'Streda', 'ÄŒtvrtek', 'PÃ¡tek', 'Sobota'],
	days_abbr: ['ne', 'po', 'ut', 'st', 'Å¡t', 'pi', 'so'],

	// Culture's date order: DD.MM.YYYY
	dateOrder: ['date', 'month', 'year'],
	shortDate: '%d.%m.%Y',
	shortTime: '%H:%M',
	AM: 'dop.',
	PM: 'pop.',
	firstDayOfWeek: 1,

	// Date.Extras
	ordinal: '.',

	lessThanMinuteAgo: 'pred chvÃ­Ä¾ou',
	minuteAgo: 'pribliÅ¾ne pred minÃºtou',
	minutesAgo: function(delta){ return 'pred {delta} ' + pluralize(delta, 'minÃºtou', 'minÃºtami', 'minÃºtami'); },
	hourAgo: 'pribliÅ¾ne pred hodinou',
	hoursAgo: function(delta){ return 'pred {delta} ' + pluralize(delta, 'hodinou', 'hodinami', 'hodinami'); },
	dayAgo: 'pred dÅˆom',
	daysAgo: function(delta){ return 'pred {delta} ' + pluralize(delta, 'dÅˆom', 'dÅˆami', 'dÅˆami'); },
	weekAgo: 'pred tÃ½Å¾dÅˆom',
	weeksAgo: function(delta){ return 'pred {delta} ' + pluralize(delta, 'tÃ½Å¾dÅˆom', 'tÃ½Å¾dÅˆami', 'tÃ½Å¾dÅˆami'); },
	monthAgo: 'pred mesiacom',
	monthsAgo: function(delta){ return 'pred {delta} ' + pluralize(delta, 'mesiacom', 'mesiacmi', 'mesiacmi'); },
	yearAgo: 'pred rokom',
	yearsAgo: function(delta){ return 'pred {delta} ' + pluralize(delta, 'rokom', 'rokmi', 'rokmi'); },

	lessThanMinuteUntil: 'o chvÃ­Ä¾u',
	minuteUntil: 'pribliÅ¾ne o minÃºtu',
	minutesUntil: function(delta){ return 'o {delta} ' + pluralize(delta, 'minÃºtu', 'minÃºty', 'minÃºty'); },
	hourUntil: 'pribliÅ¾ne o hodinu',
	hoursUntil: function(delta){ return 'o {delta} ' + pluralize(delta, 'hodinu', 'hodiny', 'hodÃ­n'); },
	dayUntil: 'o deÅˆ',
	daysUntil: function(delta){ return 'o {delta} ' + pluralize(delta, 'deÅˆ', 'dni', 'dnÃ­'); },
	weekUntil: 'o tÃ½Å¾deÅˆ',
	weeksUntil: function(delta){ return 'o {delta} ' + pluralize(delta, 'tÃ½Å¾deÅˆ', 'tÃ½Å¾dne', 'tÃ½Å¾dÅˆov'); },
	monthUntil: 'o mesiac',
	monthsUntil: function(delta){ return 'o {delta} ' + pluralize(delta, 'mesiac', 'mesiace', 'mesiacov'); },
	yearUntil: 'o rok',
	yearsUntil: function(delta){ return 'o {delta} ' + pluralize(delta, 'rok', 'roky', 'rokov'); }
});

})();

/*
---

name: Locale.sk-SK.Form.Validator

description: Form Validator messages for Czech.

license: MIT-style license

authors:
  - Ivan MasÃ¡r

requires:
  - Locale

provides: [Locale.sk-SK.Form.Validator]

...
*/

Locale.define('sk-SK', 'FormValidator', {

	required: 'TÃ¡to poloÅ¾ka je povinnÃ¡.',
	minLength: 'Zadajte prosÃ­m aspoÅˆ {minLength} znakov (momentÃ¡lne {length} znakov).',
	maxLength: 'Zadajte prosÃ­m menej ako {maxLength} znakov (momentÃ¡lne {length} znakov).',
	integer: 'Zadajte prosÃ­m celÃ© ÄÃ­slo. DesetinnÃ© ÄÃ­sla (napr. 1.25) nie sÃº povolenÃ©.',
	numeric: 'Zadajte len ÄÃ­selnÃ© hodnoty (t.j. â€ž1â€œ alebo â€ž1.1â€œ alebo â€ž-1â€œ alebo â€ž-1.1â€œ).',
	digits: 'Zadajte prosÃ­m len ÄÃ­sla a interpunkÄnÃ© znamienka (naprÃ­klad telefÃ³nne ÄÃ­slo s pomlÄkami albo bodkami je povolenÃ©).',
	alpha: 'Zadajte prosÃ­m len pÃ­smenÃ¡ (a-z). Medzery alebo inÃ© znaky nie sÃº povolenÃ©.',
	alphanum: 'Zadajte prosÃ­m len pÃ­smenÃ¡ (a-z) alebo ÄÃ­slice (0-9). Medzery alebo inÃ© znaky nie sÃº povolenÃ©.',
	dateSuchAs: 'Zadajte prosÃ­m platnÃ½ dÃ¡tum v tvare {date}',
	dateInFormatMDY: 'Zadajte prosÃ­m platnÃ½ datum v tvare MM / DD / RRRR (t.j. â€ž12/31/1999â€œ)',
	email: 'Zadajte prosÃ­m platnÃº emailovÃº adresu. NaprÃ­klad â€žfred@domain.comâ€œ.',
	url: 'Zadajte prosÃ­m platnoÃº adresu URL v tvare http://www.example.com.',
	currencyDollar: 'Zadajte prosÃ­m platnÃº Äiastku. NaprÃ­klad $100.00.',
	oneRequired: 'Zadajte prosÃ­m aspoÅˆ jednu hodnotu z tÃ½chto poloÅ¾iek.',
	errorPrefix: 'Chyba: ',
	warningPrefix: 'Upozornenie: ',

	// Form.Validator.Extras
	noSpace: 'V tejto poloÅ¾le nie sÃº povolenÃ© medzery',
	reqChkByNode: 'Nie sÃº vybranÃ© Å¾iadne poloÅ¾ky.',
	requiredChk: 'TÃ¡to poloÅ¾ka je povinnÃ¡.',
	reqChkByName: 'ProsÃ­m vyberte {label}.',
	match: 'TÃ¡to poloÅ¾ka sa musÃ­ zhodovaÅ¥ s poloÅ¾kou {matchName}',
	startDate: 'dÃ¡tum zaÄiatku',
	endDate: 'dÃ¡tum ukonÄenia',
	currendDate: 'aktuÃ¡lny dÃ¡tum',
	afterDate: 'DÃ¡tum by mal bÃ½Å¥ rovnakÃ½ alebo vÃ¤ÄÅ¡Ã­ ako {label}.',
	beforeDate: 'DÃ¡tum by mal byÅ¥ rovnakÃ½ alebo menÅ¡Ã­ ako {label}.',
	startMonth: 'Vyberte poÄiatoÄnÃ½ mesiac.',
	sameMonth: 'Tieto dva dÃ¡tumy musia bÃ½Å¥ v rovnakom mesiaci - zmeÅˆte jeden z nich.',
	creditcard: 'ZadanÃ© ÄÃ­slo kreditnej karty je neplatnÃ©. ProsÃ­m, opravte ho. Bolo zadanÃ½ch {length} ÄÃ­slic.'

});

/*
---

name: Locale.si-SI.Date

description: Date messages for Slovenian.

license: MIT-style license

authors:
  - Radovan Lozej

requires:
  - Locale

provides: [Locale.si-SI.Date]

...
*/

(function(){

var pluralize = function(n, one, two, three, other){
	return (n >= 1 && n <= 3) ? arguments[n] : other;
};

Locale.define('sl-SI', 'Date', {

	months: ['januar', 'februar', 'marec', 'april', 'maj', 'junij', 'julij', 'avgust', 'september', 'oktober', 'november', 'december'],
	months_abbr: ['jan', 'feb', 'mar', 'apr', 'maj', 'jun', 'jul', 'avg', 'sep', 'okt', 'nov', 'dec'],
	days: ['nedelja', 'ponedeljek', 'torek', 'sreda', 'Äetrtek', 'petek', 'sobota'],
	days_abbr: ['ned', 'pon', 'tor', 'sre', 'Äet', 'pet', 'sob'],

	// Culture's date order: DD.MM.YYYY
	dateOrder: ['date', 'month', 'year'],
	shortDate: '%d.%m.%Y',
	shortTime: '%H.%M',
	AM: 'AM',
	PM: 'PM',
	firstDayOfWeek: 1,

	// Date.Extras
	ordinal: '.',

	lessThanMinuteAgo: 'manj kot minuto nazaj',
	minuteAgo: 'minuto nazaj',
	minutesAgo: function(delta){ return '{delta} ' + pluralize(delta, 'minuto', 'minuti', 'minute', 'minut') + ' nazaj'; },
	hourAgo: 'uro nazaj',
	hoursAgo: function(delta){ return '{delta} ' + pluralize(delta, 'uro', 'uri', 'ure', 'ur') + ' nazaj'; },
	dayAgo: 'dan nazaj',
	daysAgo: function(delta){ return '{delta} ' + pluralize(delta, 'dan', 'dneva', 'dni', 'dni') + ' nazaj'; },
	weekAgo: 'teden nazaj',
	weeksAgo: function(delta){ return '{delta} ' + pluralize(delta, 'teden', 'tedna', 'tedne', 'tednov') + ' nazaj'; },
	monthAgo: 'mesec nazaj',
	monthsAgo: function(delta){ return '{delta} ' + pluralize(delta, 'mesec', 'meseca', 'mesece', 'mesecov') + ' nazaj'; },
	yearthAgo: 'leto nazaj',
	yearsAgo: function(delta){ return '{delta} ' + pluralize(delta, 'leto', 'leti', 'leta', 'let') + ' nazaj'; },

	lessThanMinuteUntil: 'Å¡e manj kot minuto',
	minuteUntil: 'Å¡e minuta',
	minutesUntil: function(delta){ return 'Å¡e {delta} ' + pluralize(delta, 'minuta', 'minuti', 'minute', 'minut'); },
	hourUntil: 'Å¡e ura',
	hoursUntil: function(delta){ return 'Å¡e {delta} ' + pluralize(delta, 'ura', 'uri', 'ure', 'ur'); },
	dayUntil: 'Å¡e dan',
	daysUntil: function(delta){ return 'Å¡e {delta} ' + pluralize(delta, 'dan', 'dneva', 'dnevi', 'dni'); },
	weekUntil: 'Å¡e tedn',
	weeksUntil: function(delta){ return 'Å¡e {delta} ' + pluralize(delta, 'teden', 'tedna', 'tedni', 'tednov'); },
	monthUntil: 'Å¡e mesec',
	monthsUntil: function(delta){ return 'Å¡e {delta} ' + pluralize(delta, 'mesec', 'meseca', 'meseci', 'mesecov'); },
	yearUntil: 'Å¡e leto',
	yearsUntil: function(delta){ return 'Å¡e {delta} ' + pluralize(delta, 'leto', 'leti', 'leta', 'let'); }

});

})();

/*
---

name: Locale.si-SI.Form.Validator

description: Form Validator messages for Slovenian.

license: MIT-style license

authors:
  - Radovan Lozej

requires:
  - Locale

provides: [Locale.si-SI.Form.Validator]

...
*/

Locale.define('sl-SI', 'FormValidator', {

	required: 'To polje je obvezno',
	minLength: 'Prosim, vnesite vsaj {minLength} znakov (vnesli ste {length} znakov).',
	maxLength: 'Prosim, ne vnesite veÄ kot {maxLength} znakov (vnesli ste {length} znakov).',
	integer: 'Prosim, vnesite celo Å¡tevilo. Decimalna Å¡tevila (kot 1,25) niso dovoljena.',
	numeric: 'Prosim, vnesite samo numeriÄne vrednosti (kot "1" ali "1.1" ali "-1" ali "-1.1").',
	digits: 'Prosim, uporabite Å¡tevilke in loÄila le na tem polju (na primer, dovoljena je telefonska Å¡tevilka z pomiÅ¡laji ali pikami).',
	alpha: 'Prosim, uporabite le Ärke v tem plju. Presledki in drugi znaki niso dovoljeni.',
	alphanum: 'Prosim, uporabite samo Ärke ali Å¡tevilke v tem polju. Presledki in drugi znaki niso dovoljeni.',
	dateSuchAs: 'Prosim, vnesite pravilen datum kot {date}',
	dateInFormatMDY: 'Prosim, vnesite pravilen datum kot MM.DD.YYYY (primer "12.31.1999")',
	email: 'Prosim, vnesite pravilen email naslov. Na primer "fred@domain.com".',
	url: 'Prosim, vnesite pravilen URL kot http://www.example.com.',
	currencyDollar: 'Prosim, vnesit epravilno vrednost â‚¬. Primer 100,00â‚¬ .',
	oneRequired: 'Prosimo, vnesite nekaj za vsaj eno izmed teh polj.',
	errorPrefix: 'Napaka: ',
	warningPrefix: 'Opozorilo: ',

	// Form.Validator.Extras
	noSpace: 'To vnosno polje ne dopuÅ¡Äa presledkov.',
	reqChkByNode: 'NiÄ niste izbrali.',
	requiredChk: 'To polje je obvezno',
	reqChkByName: 'Prosim, izberite {label}.',
	match: 'To polje se mora ujemati z poljem {matchName}',
	startDate: 'datum zaÄetka',
	endDate: 'datum konca',
	currentDate: 'trenuten datum',
	afterDate: 'Datum bi moral biti isti ali po {label}.',
	beforeDate: 'Datum bi moral biti isti ali pred {label}.',
	startMonth: 'Prosim, vnesite zaÄetni datum',
	sameMonth: 'Ta dva datuma morata biti v istem mesecu - premeniti morate eno ali drugo.',
	creditcard: 'Å tevilka kreditne kartice ni pravilna. Preverite Å¡tevilko ali poskusite Å¡e enkrat. VneÅ¡enih {length} znakov.'

});

/*
---

name: Locale.sv-SE.Date

description: Date messages for Swedish.

license: MIT-style license

authors:
  - Martin Lundgren

requires:
  - Locale

provides: [Locale.sv-SE.Date]

...
*/

Locale.define('sv-SE', 'Date', {

	months: ['januari', 'februari', 'mars', 'april', 'maj', 'juni', 'juli', 'augusti', 'september', 'oktober', 'november', 'december'],
	months_abbr: ['jan', 'feb', 'mar', 'apr', 'maj', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'dec'],
	days: ['sÃ¶ndag', 'mÃ¥ndag', 'tisdag', 'onsdag', 'torsdag', 'fredag', 'lÃ¶rdag'],
	days_abbr: ['sÃ¶n', 'mÃ¥n', 'tis', 'ons', 'tor', 'fre', 'lÃ¶r'],

	// Culture's date order: YYYY-MM-DD
	dateOrder: ['year', 'month', 'date'],
	shortDate: '%Y-%m-%d',
	shortTime: '%H:%M',
	AM: '',
	PM: '',
	firstDayOfWeek: 1,

	// Date.Extras
	ordinal: '',

	lessThanMinuteAgo: 'mindre Ã¤n en minut sedan',
	minuteAgo: 'ungefÃ¤r en minut sedan',
	minutesAgo: '{delta} minuter sedan',
	hourAgo: 'ungefÃ¤r en timme sedan',
	hoursAgo: 'ungefÃ¤r {delta} timmar sedan',
	dayAgo: '1 dag sedan',
	daysAgo: '{delta} dagar sedan',

	lessThanMinuteUntil: 'mindre Ã¤n en minut sedan',
	minuteUntil: 'ungefÃ¤r en minut sedan',
	minutesUntil: '{delta} minuter sedan',
	hourUntil: 'ungefÃ¤r en timme sedan',
	hoursUntil: 'ungefÃ¤r {delta} timmar sedan',
	dayUntil: '1 dag sedan',
	daysUntil: '{delta} dagar sedan'

});

/*
---

name: Locale.sv-SE.Form.Validator

description: Form Validator messages for Swedish.

license: MIT-style license

authors:
  - Martin Lundgren

requires:
  - Locale

provides: [Locale.sv-SE.Form.Validator]

...
*/

Locale.define('sv-SE', 'FormValidator', {

	required: 'FÃ¤ltet Ã¤r obligatoriskt.',
	minLength: 'Ange minst {minLength} tecken (du angav {length} tecken).',
	maxLength: 'Ange hÃ¶gst {maxLength} tecken (du angav {length} tecken). ',
	integer: 'Ange ett heltal i fÃ¤ltet. Tal med decimaler (t.ex. 1,25) Ã¤r inte tillÃ¥tna.',
	numeric: 'Ange endast numeriska vÃ¤rden i detta fÃ¤lt (t.ex. "1" eller "1.1" eller "-1" eller "-1,1").',
	digits: 'AnvÃ¤nd endast siffror och skiljetecken i detta fÃ¤lt (till exempel ett telefonnummer med bindestreck tillÃ¥tet).',
	alpha: 'AnvÃ¤nd endast bokstÃ¤ver (a-Ã¶) i detta fÃ¤lt. Inga mellanslag eller andra tecken Ã¤r tillÃ¥tna.',
	alphanum: 'AnvÃ¤nd endast bokstÃ¤ver (a-Ã¶) och siffror (0-9) i detta fÃ¤lt. Inga mellanslag eller andra tecken Ã¤r tillÃ¥tna.',
	dateSuchAs: 'Ange ett giltigt datum som t.ex. {date}',
	dateInFormatMDY: 'Ange ett giltigt datum som t.ex. YYYY-MM-DD (i.e. "1999-12-31")',
	email: 'Ange en giltig e-postadress. Till exempel "erik@domain.com".',
	url: 'Ange en giltig webbadress som http://www.example.com.',
	currencyDollar: 'Ange en giltig belopp. Exempelvis 100,00.',
	oneRequired: 'VÃ¤nligen ange minst ett av dessa alternativ.',
	errorPrefix: 'Fel: ',
	warningPrefix: 'Varning: ',

	// Form.Validator.Extras
	noSpace: 'Det fÃ¥r inte finnas nÃ¥gra mellanslag i detta fÃ¤lt.',
	reqChkByNode: 'Inga objekt Ã¤r valda.',
	requiredChk: 'Detta Ã¤r ett obligatoriskt fÃ¤lt.',
	reqChkByName: 'VÃ¤lj en {label}.',
	match: 'Detta fÃ¤lt mÃ¥ste matcha {matchName}',
	startDate: 'startdatumet',
	endDate: 'slutdatum',
	currentDate: 'dagens datum',
	afterDate: 'Datumet bÃ¶r vara samma eller senare Ã¤n {label}.',
	beforeDate: 'Datumet bÃ¶r vara samma eller tidigare Ã¤n {label}.',
	startMonth: 'VÃ¤lj en start mÃ¥nad',
	sameMonth: 'Dessa tvÃ¥ datum mÃ¥ste vara i samma mÃ¥nad - du mÃ¥ste Ã¤ndra det ena eller det andra.'

});

/*
---

name: Locale.sv-SE.Number

description: Number messages for Swedish.

license: MIT-style license

authors:
  - Arian Stolwijk
  - Martin Lundgren

requires:
  - Locale
  - Locale.EU.Number

provides: [Locale.sv-SE.Number]

...
*/

Locale.define('sv-SE', 'Number', {

	currency: {
		prefix: 'SEK '
	}

}).inherit('EU', 'Number');

/*
---

name: Locale.tr-TR.Date

description: Date messages for Turkish.

license: MIT-style license

authors:
  - Faruk Can Bilir

requires:
  - Locale

provides: [Locale.tr-TR.Date]

...
*/

Locale.define('tr-TR', 'Date', {

	months: ['Ocak', 'Åžubat', 'Mart', 'Nisan', 'MayÄ±s', 'Haziran', 'Temmuz', 'AÄŸustos', 'EylÃ¼l', 'Ekim', 'KasÄ±m', 'AralÄ±k'],
	months_abbr: ['Oca', 'Åžub', 'Mar', 'Nis', 'May', 'Haz', 'Tem', 'AÄŸu', 'Eyl', 'Eki', 'Kas', 'Ara'],
	days: ['Pazar', 'Pazartesi', 'SalÄ±', 'Ã‡arÅŸamba', 'PerÅŸembe', 'Cuma', 'Cumartesi'],
	days_abbr: ['Pa', 'Pzt', 'Sa', 'Ã‡a', 'Pe', 'Cu', 'Cmt'],

	// Culture's date order: MM/DD/YYYY
	dateOrder: ['date', 'month', 'year'],
	shortDate: '%d/%m/%Y',
	shortTime: '%H.%M',
	AM: 'AM',
	PM: 'PM',
	firstDayOfWeek: 1,

	// Date.Extras
	ordinal: '',

	lessThanMinuteAgo: 'bir dakikadan Ã¶nce',
	minuteAgo: 'yaklaÅŸÄ±k bir dakika Ã¶nce',
	minutesAgo: '{delta} dakika Ã¶nce',
	hourAgo: 'bir saat kadar Ã¶nce',
	hoursAgo: '{delta} saat kadar Ã¶nce',
	dayAgo: 'bir gÃ¼n Ã¶nce',
	daysAgo: '{delta} gÃ¼n Ã¶nce',
	weekAgo: 'bir hafta Ã¶nce',
	weeksAgo: '{delta} hafta Ã¶nce',
	monthAgo: 'bir ay Ã¶nce',
	monthsAgo: '{delta} ay Ã¶nce',
	yearAgo: 'bir yÄ±l Ã¶nce',
	yearsAgo: '{delta} yÄ±l Ã¶nce',

	lessThanMinuteUntil: 'bir dakikadan az sonra',
	minuteUntil: 'bir dakika kadar sonra',
	minutesUntil: '{delta} dakika sonra',
	hourUntil: 'bir saat kadar sonra',
	hoursUntil: '{delta} saat kadar sonra',
	dayUntil: 'bir gÃ¼n sonra',
	daysUntil: '{delta} gÃ¼n sonra',
	weekUntil: 'bir hafta sonra',
	weeksUntil: '{delta} hafta sonra',
	monthUntil: 'bir ay sonra',
	monthsUntil: '{delta} ay sonra',
	yearUntil: 'bir yÄ±l sonra',
	yearsUntil: '{delta} yÄ±l sonra'

});

/*
---

name: Locale.tr-TR.Form.Validator

description: Form Validator messages for Turkish.

license: MIT-style license

authors:
  - Faruk Can Bilir

requires:
  - Locale

provides: [Locale.tr-TR.Form.Validator]

...
*/

Locale.define('tr-TR', 'FormValidator', {

	required: 'Bu alan zorunlu.',
	minLength: 'LÃ¼tfen en az {minLength} karakter girin (siz {length} karakter girdiniz).',
	maxLength: 'LÃ¼tfen en fazla {maxLength} karakter girin (siz {length} karakter girdiniz).',
	integer: 'LÃ¼tfen bu alana sadece tamsayÄ± girin. OndalÄ±klÄ± sayÄ±lar (Ã¶r: 1.25) kullanÄ±lamaz.',
	numeric: 'LÃ¼tfen bu alana sadece sayÄ±sal deÄŸer girin (Ã¶r: "1", "1.1", "-1" ya da "-1.1").',
	digits: 'LÃ¼tfen bu alana sadece sayÄ±sal deÄŸer ve noktalama iÅŸareti girin (Ã¶rneÄŸin, nokta ve tire iÃ§eren bir telefon numarasÄ± kullanÄ±labilir).',
	alpha: 'LÃ¼tfen bu alanda yalnÄ±zca harf kullanÄ±n. BoÅŸluk ve diÄŸer karakterler kullanÄ±lamaz.',
	alphanum: 'LÃ¼tfen bu alanda sadece harf ve rakam kullanÄ±n. BoÅŸluk ve diÄŸer karakterler kullanÄ±lamaz.',
	dateSuchAs: 'LÃ¼tfen geÃ§erli bir tarih girin (Ã–r: {date})',
	dateInFormatMDY: 'LÃ¼tfen geÃ§erli bir tarih girin (GG/AA/YYYY, Ã¶r: "31/12/1999")',
	email: 'LÃ¼tfen geÃ§erli bir email adresi girin. Ã–r: "kemal@etikan.com".',
	url: 'LÃ¼tfen geÃ§erli bir URL girin. Ã–r: http://www.example.com.',
	currencyDollar: 'LÃ¼tfen geÃ§erli bir TL miktarÄ± girin. Ã–r: 100,00 TL .',
	oneRequired: 'LÃ¼tfen en az bir tanesini doldurun.',
	errorPrefix: 'Hata: ',
	warningPrefix: 'UyarÄ±: ',

	// Form.Validator.Extras
	noSpace: 'Bu alanda boÅŸluk kullanÄ±lamaz.',
	reqChkByNode: 'HiÃ§bir Ã¶ÄŸe seÃ§ilmemiÅŸ.',
	requiredChk: 'Bu alan zorunlu.',
	reqChkByName: 'LÃ¼tfen bir {label} girin.',
	match: 'Bu alan, {matchName} alanÄ±yla uyuÅŸmalÄ±',
	startDate: 'baÅŸlangÄ±Ã§ tarihi',
	endDate: 'bitiÅŸ tarihi',
	currentDate: 'bugÃ¼nÃ¼n tarihi',
	afterDate: 'Tarih, {label} tarihiyle aynÄ± gÃ¼n ya da ondan sonra olmalÄ±dÄ±r.',
	beforeDate: 'Tarih, {label} tarihiyle aynÄ± gÃ¼n ya da ondan Ã¶nce olmalÄ±dÄ±r.',
	startMonth: 'LÃ¼tfen bir baÅŸlangÄ±Ã§ ayÄ± seÃ§in',
	sameMonth: 'Bu iki tarih aynÄ± ayda olmalÄ± - bir tanesini deÄŸiÅŸtirmeniz gerekiyor.',
	creditcard: 'GirdiÄŸiniz kredi kartÄ± numarasÄ± geÃ§ersiz. LÃ¼tfen kontrol edip tekrar deneyin. {length} hane girildi.'

});

/*
---

name: Locale.tr-TR.Number

description: Number messages for Turkish.

license: MIT-style license

authors:
  - Faruk Can Bilir

requires:
  - Locale
  - Locale.EU.Number

provides: [Locale.tr-TR.Number]

...
*/

Locale.define('tr-TR', 'Number', {

	currency: {
		decimals: 0,
		suffix: ' TL'
	}

}).inherit('EU', 'Number');

/*
---

name: Locale.uk-UA.Date

description: Date messages for Ukrainian (utf-8).

license: MIT-style license

authors:
  - Slik

requires:
  - Locale

provides: [Locale.uk-UA.Date]

...
*/

(function(){

var pluralize = function(n, one, few, many, other){
	var d = (n / 10).toInt(),
		z = n % 10,
		s = (n / 100).toInt();

	if (d == 1 && n > 10) return many;
	if (z == 1) return one;
	if (z > 0 && z < 5) return few;
	return many;
};

Locale.define('uk-UA', 'Date', {

	months: ['Ð¡Ñ–Ñ‡ÐµÐ½ÑŒ', 'Ð›ÑŽÑ‚Ð¸Ð¹', 'Ð‘ÐµÑ€ÐµÐ·ÐµÐ½ÑŒ', 'ÐšÐ²Ñ–Ñ‚ÐµÐ½ÑŒ', 'Ð¢Ñ€Ð°Ð²ÐµÐ½ÑŒ', 'Ð§ÐµÑ€Ð²ÐµÐ½ÑŒ', 'Ð›Ð¸Ð¿ÐµÐ½ÑŒ', 'Ð¡ÐµÑ€Ð¿ÐµÐ½ÑŒ', 'Ð’ÐµÑ€ÐµÑÐµÐ½ÑŒ', 'Ð–Ð¾Ð²Ñ‚ÐµÐ½ÑŒ', 'Ð›Ð¸ÑÑ‚Ð¾Ð¿Ð°Ð´', 'Ð“Ñ€ÑƒÐ´ÐµÐ½ÑŒ'],
	months_abbr: ['Ð¡Ñ–Ñ‡', 'Ð›ÑŽÑ‚', 'Ð‘ÐµÑ€', 'ÐšÐ²Ñ–Ñ‚', 'Ð¢Ñ€Ð°Ð²', 'Ð§ÐµÑ€Ð²', 'Ð›Ð¸Ð¿', 'Ð¡ÐµÑ€Ð¿', 'Ð’ÐµÑ€', 'Ð–Ð¾Ð²Ñ‚', 'Ð›Ð¸ÑÑ‚', 'Ð“Ñ€ÑƒÐ´' ],
	days: ['ÐÐµÐ´Ñ–Ð»Ñ', 'ÐŸÐ¾Ð½ÐµÐ´Ñ–Ð»Ð¾Ðº', 'Ð’Ñ–Ð²Ñ‚Ð¾Ñ€Ð¾Ðº', 'Ð¡ÐµÑ€ÐµÐ´Ð°', 'Ð§ÐµÑ‚Ð²ÐµÑ€', "ÐŸ'ÑÑ‚Ð½Ð¸Ñ†Ñ", 'Ð¡ÑƒÐ±Ð¾Ñ‚Ð°'],
	days_abbr: ['ÐÐ´', 'ÐŸÐ½', 'Ð’Ñ‚', 'Ð¡Ñ€', 'Ð§Ñ‚', 'ÐŸÑ‚', 'Ð¡Ð±'],

	// Culture's date order: DD/MM/YYYY
	dateOrder: ['date', 'month', 'year'],
	shortDate: '%d/%m/%Y',
	shortTime: '%H:%M',
	AM: 'Ð´Ð¾ Ð¿Ð¾Ð»ÑƒÐ´Ð½Ñ',
	PM: 'Ð¿Ð¾ Ð¿Ð¾Ð»ÑƒÐ´Ð½ÑŽ',
	firstDayOfWeek: 1,

	// Date.Extras
	ordinal: '',

	lessThanMinuteAgo: 'Ð¼ÐµÐ½ÑŒÑˆÐµ Ñ…Ð²Ð¸Ð»Ð¸Ð½Ð¸ Ñ‚Ð¾Ð¼Ñƒ',
	minuteAgo: 'Ñ…Ð²Ð¸Ð»Ð¸Ð½Ñƒ Ñ‚Ð¾Ð¼Ñƒ',
	minutesAgo: function(delta){ return '{delta} ' + pluralize(delta, 'Ñ…Ð²Ð¸Ð»Ð¸Ð½Ñƒ', 'Ñ…Ð²Ð¸Ð»Ð¸Ð½Ð¸', 'Ñ…Ð²Ð¸Ð»Ð¸Ð½') + ' Ñ‚Ð¾Ð¼Ñƒ'; },
	hourAgo: 'Ð³Ð¾Ð´Ð¸Ð½Ñƒ Ñ‚Ð¾Ð¼Ñƒ',
	hoursAgo: function(delta){ return '{delta} ' + pluralize(delta, 'Ð³Ð¾Ð´Ð¸Ð½Ñƒ', 'Ð³Ð¾Ð´Ð¸Ð½Ð¸', 'Ð³Ð¾Ð´Ð¸Ð½') + ' Ñ‚Ð¾Ð¼Ñƒ'; },
	dayAgo: 'Ð²Ñ‡Ð¾Ñ€Ð°',
	daysAgo: function(delta){ return '{delta} ' + pluralize(delta, 'Ð´ÐµÐ½ÑŒ', 'Ð´Ð½Ñ', 'Ð´Ð½Ñ–Ð²') + ' Ñ‚Ð¾Ð¼Ñƒ'; },
	weekAgo: 'Ñ‚Ð¸Ð¶Ð´ÐµÐ½ÑŒ Ñ‚Ð¾Ð¼Ñƒ',
	weeksAgo: function(delta){ return '{delta} ' + pluralize(delta, 'Ñ‚Ð¸Ð¶Ð´ÐµÐ½ÑŒ', 'Ñ‚Ð¸Ð¶Ð½Ñ–', 'Ñ‚Ð¸Ð¶Ð½Ñ–Ð²') + ' Ñ‚Ð¾Ð¼Ñƒ'; },
	monthAgo: 'Ð¼Ñ–ÑÑÑ†ÑŒ Ñ‚Ð¾Ð¼Ñƒ',
	monthsAgo: function(delta){ return '{delta} ' + pluralize(delta, 'Ð¼Ñ–ÑÑÑ†ÑŒ', 'Ð¼Ñ–ÑÑÑ†Ñ–', 'Ð¼Ñ–ÑÑÑ†Ñ–Ð²') + ' Ñ‚Ð¾Ð¼Ñƒ'; },
	yearAgo: 'Ñ€Ñ–Ðº Ñ‚Ð¾Ð¼Ñƒ',
	yearsAgo: function(delta){ return '{delta} ' + pluralize(delta, 'Ñ€Ñ–Ðº', 'Ñ€Ð¾ÐºÐ¸', 'Ñ€Ð¾ÐºÑ–Ð²') + ' Ñ‚Ð¾Ð¼Ñƒ'; },

	lessThanMinuteUntil: 'Ð·Ð° Ð¼Ð¸Ñ‚ÑŒ',
	minuteUntil: 'Ñ‡ÐµÑ€ÐµÐ· Ñ…Ð²Ð¸Ð»Ð¸Ð½Ñƒ',
	minutesUntil: function(delta){ return 'Ñ‡ÐµÑ€ÐµÐ· {delta} ' + pluralize(delta, 'Ñ…Ð²Ð¸Ð»Ð¸Ð½Ñƒ', 'Ñ…Ð²Ð¸Ð»Ð¸Ð½Ð¸', 'Ñ…Ð²Ð¸Ð»Ð¸Ð½'); },
	hourUntil: 'Ñ‡ÐµÑ€ÐµÐ· Ð³Ð¾Ð´Ð¸Ð½Ñƒ',
	hoursUntil: function(delta){ return 'Ñ‡ÐµÑ€ÐµÐ· {delta} ' + pluralize(delta, 'Ð³Ð¾Ð´Ð¸Ð½Ñƒ', 'Ð³Ð¾Ð´Ð¸Ð½Ð¸', 'Ð³Ð¾Ð´Ð¸Ð½'); },
	dayUntil: 'Ð·Ð°Ð²Ñ‚Ñ€Ð°',
	daysUntil: function(delta){ return 'Ñ‡ÐµÑ€ÐµÐ· {delta} ' + pluralize(delta, 'Ð´ÐµÐ½ÑŒ', 'Ð´Ð½Ñ', 'Ð´Ð½Ñ–Ð²'); },
	weekUntil: 'Ñ‡ÐµÑ€ÐµÐ· Ñ‚Ð¸Ð¶Ð´ÐµÐ½ÑŒ',
	weeksUntil: function(delta){ return 'Ñ‡ÐµÑ€ÐµÐ· {delta} ' + pluralize(delta, 'Ñ‚Ð¸Ð¶Ð´ÐµÐ½ÑŒ', 'Ñ‚Ð¸Ð¶Ð½Ñ–', 'Ñ‚Ð¸Ð¶Ð½Ñ–Ð²'); },
	monthUntil: 'Ñ‡ÐµÑ€ÐµÐ· Ð¼Ñ–ÑÑÑ†ÑŒ',
	monthesUntil: function(delta){ return 'Ñ‡ÐµÑ€ÐµÐ· {delta} ' + pluralize(delta, 'Ð¼Ñ–ÑÑÑ†ÑŒ', 'Ð¼Ñ–ÑÑÑ†Ñ–', 'Ð¼Ñ–ÑÑÑ†Ñ–Ð²'); },
	yearUntil: 'Ñ‡ÐµÑ€ÐµÐ· Ñ€Ñ–Ðº',
	yearsUntil: function(delta){ return 'Ñ‡ÐµÑ€ÐµÐ· {delta} ' + pluralize(delta, 'Ñ€Ñ–Ðº', 'Ñ€Ð¾ÐºÐ¸', 'Ñ€Ð¾ÐºÑ–Ð²'); }

});

})();

/*
---

name: Locale.uk-UA.Form.Validator

description: Form Validator messages for Ukrainian (utf-8).

license: MIT-style license

authors:
  - Slik

requires:
  - Locale

provides: [Locale.uk-UA.Form.Validator]

...
*/

Locale.define('uk-UA', 'FormValidator', {

	required: 'Ð¦Ðµ Ð¿Ð¾Ð»Ðµ Ð¿Ð¾Ð²Ð¸Ð½Ð½Ðµ Ð±ÑƒÑ‚Ð¸ Ð·Ð°Ð¿Ð¾Ð²Ð½ÐµÐ½Ð¸Ð¼.',
	minLength: 'Ð’Ð²ÐµÐ´Ñ–Ñ‚ÑŒ Ñ…Ð¾Ñ‡Ð° Ð± {minLength} ÑÐ¸Ð¼Ð²Ð¾Ð»Ñ–Ð² (Ð’Ð¸ Ð²Ð²ÐµÐ»Ð¸ {length}).',
	maxLength: 'ÐšÑ–Ð»ÑŒÐºÑ–ÑÑ‚ÑŒ ÑÐ¸Ð¼Ð²Ð¾Ð»Ñ–Ð² Ð½Ðµ Ð¼Ð¾Ð¶Ðµ Ð±ÑƒÑ‚Ð¸ Ð±Ñ–Ð»ÑŒÑˆÐµ {maxLength} (Ð’Ð¸ Ð²Ð²ÐµÐ»Ð¸ {length}).',
	integer: 'Ð’Ð²ÐµÐ´Ñ–Ñ‚ÑŒ Ð² Ñ†Ðµ Ð¿Ð¾Ð»Ðµ Ñ‡Ð¸ÑÐ»Ð¾. Ð”Ñ€Ð¾Ð±Ð¾Ð²Ñ– Ñ‡Ð¸ÑÐ»Ð° (Ð½Ð°Ð¿Ñ€Ð¸ÐºÐ»Ð°Ð´ 1.25) Ð½Ðµ Ð´Ð¾Ð·Ð²Ð¾Ð»ÐµÐ½Ñ–.',
	numeric: 'Ð’Ð²ÐµÐ´Ñ–Ñ‚ÑŒ Ð² Ñ†Ðµ Ð¿Ð¾Ð»Ðµ Ñ‡Ð¸ÑÐ»Ð¾ (Ð½Ð°Ð¿Ñ€Ð¸ÐºÐ»Ð°Ð´ "1" Ð°Ð±Ð¾ "1.1", Ð°Ð±Ð¾ "-1", Ð°Ð±Ð¾ "-1.1").',
	digits: 'Ð’ Ñ†ÑŒÐ¾Ð¼Ñƒ Ð¿Ð¾Ð»Ñ– Ð²Ð¸ Ð¼Ð¾Ð¶ÐµÑ‚Ðµ Ð²Ð¸ÐºÐ¾Ñ€Ð¸ÑÑ‚Ð¾Ð²ÑƒÐ²Ð°Ñ‚Ð¸ Ð»Ð¸ÑˆÐµ Ñ†Ð¸Ñ„Ñ€Ð¸ Ñ– Ð·Ð½Ð°ÐºÐ¸ Ð¿ÑƒÐ½ÐºÑ‚Ñ–Ð°Ñ†Ñ–Ñ— (Ð½Ð°Ð¿Ñ€Ð¸ÐºÐ»Ð°Ð´, Ñ‚ÐµÐ»ÐµÑ„Ð¾Ð½Ð½Ð¸Ð¹ Ð½Ð¾Ð¼ÐµÑ€ Ð· Ð·Ð½Ð°ÐºÐ°Ð¼Ð¸ Ð´ÐµÑ„Ñ–Ð·Ñƒ Ð°Ð±Ð¾ Ð· ÐºÑ€Ð°Ð¿ÐºÐ°Ð¼Ð¸).',
	alpha: 'Ð’ Ñ†ÑŒÐ¾Ð¼Ñƒ Ð¿Ð¾Ð»Ñ– Ð¼Ð¾Ð¶Ð½Ð° Ð²Ð¸ÐºÐ¾Ñ€Ð¸ÑÑ‚Ð¾Ð²ÑƒÐ²Ð°Ñ‚Ð¸ Ð»Ð¸ÑˆÐµ Ð»Ð°Ñ‚Ð¸Ð½ÑÑŒÐºÑ– Ð»Ñ–Ñ‚ÐµÑ€Ð¸ (a-z). ÐŸÑ€Ð¾Ð±Ñ–Ð»Ð¸ Ñ– Ñ–Ð½ÑˆÑ– ÑÐ¸Ð¼Ð²Ð¾Ð»Ð¸ Ð·Ð°Ð±Ð¾Ñ€Ð¾Ð½ÐµÐ½Ñ–.',
	alphanum: 'Ð’ Ñ†ÑŒÐ¾Ð¼Ñƒ Ð¿Ð¾Ð»Ñ– Ð¼Ð¾Ð¶Ð½Ð° Ð²Ð¸ÐºÐ¾Ñ€Ð¸ÑÑ‚Ð¾Ð²ÑƒÐ²Ð°Ñ‚Ð¸ Ð»Ð¸ÑˆÐµ Ð»Ð°Ñ‚Ð¸Ð½ÑÑŒÐºÑ– Ð»Ñ–Ñ‚ÐµÑ€Ð¸ (a-z) Ñ– Ñ†Ð¸Ñ„Ñ€Ð¸ (0-9). ÐŸÑ€Ð¾Ð±Ñ–Ð»Ð¸ Ñ– Ñ–Ð½ÑˆÑ– ÑÐ¸Ð¼Ð²Ð¾Ð»Ð¸ Ð·Ð°Ð±Ð¾Ñ€Ð¾Ð½ÐµÐ½Ñ–.',
	dateSuchAs: 'Ð’Ð²ÐµÐ´Ñ–Ñ‚ÑŒ ÐºÐ¾Ñ€ÐµÐºÑ‚Ð½Ñƒ Ð´Ð°Ñ‚Ñƒ {date}.',
	dateInFormatMDY: 'Ð’Ð²ÐµÐ´Ñ–Ñ‚ÑŒ Ð´Ð°Ñ‚Ñƒ Ð² Ñ„Ð¾Ñ€Ð¼Ð°Ñ‚Ñ– ÐœÐœ/Ð”Ð”/Ð Ð Ð Ð  (Ð½Ð°Ð¿Ñ€Ð¸ÐºÐ»Ð°Ð´ "12/31/2009").',
	email: 'Ð’Ð²ÐµÐ´Ñ–Ñ‚ÑŒ ÐºÐ¾Ñ€ÐµÐºÑ‚Ð½Ñƒ Ð°Ð´Ñ€ÐµÑÑƒ ÐµÐ»ÐµÐºÑ‚Ñ€Ð¾Ð½Ð½Ð¾Ñ— Ð¿Ð¾ÑˆÑ‚Ð¸ (Ð½Ð°Ð¿Ñ€Ð¸ÐºÐ»Ð°Ð´ "name@domain.com").',
	url: 'Ð’Ð²ÐµÐ´Ñ–Ñ‚ÑŒ ÐºÐ¾Ñ€ÐµÐºÑ‚Ð½Ðµ Ñ–Ð½Ñ‚ÐµÑ€Ð½ÐµÑ‚-Ð¿Ð¾ÑÐ¸Ð»Ð°Ð½Ð½Ñ (Ð½Ð°Ð¿Ñ€Ð¸ÐºÐ»Ð°Ð´ http://www.example.com).',
	currencyDollar: 'Ð’Ð²ÐµÐ´Ñ–Ñ‚ÑŒ ÑÑƒÐ¼Ñƒ Ð² Ð´Ð¾Ð»Ð°Ñ€Ð°Ñ… (Ð½Ð°Ð¿Ñ€Ð¸ÐºÐ»Ð°Ð´ "$100.00").',
	oneRequired: 'Ð—Ð°Ð¿Ð¾Ð²Ð½Ñ–Ñ‚ÑŒ Ð¾Ð´Ð½Ðµ Ð· Ð¿Ð¾Ð»Ñ–Ð².',
	errorPrefix: 'ÐŸÐ¾Ð¼Ð¸Ð»ÐºÐ°: ',
	warningPrefix: 'Ð£Ð²Ð°Ð³Ð°: ',

	noSpace: 'ÐŸÑ€Ð¾Ð±Ñ–Ð»Ð¸ Ð·Ð°Ð±Ð¾Ñ€Ð¾Ð½ÐµÐ½Ñ–.',
	reqChkByNode: 'ÐÐµ Ð²Ñ–Ð´Ð¼Ñ–Ñ‡ÐµÐ½Ð¾ Ð¶Ð¾Ð´Ð½Ð¾Ð³Ð¾ Ð²Ð°Ñ€Ñ–Ð°Ð½Ñ‚Ñƒ.',
	requiredChk: 'Ð¦Ðµ Ð¿Ð¾Ð»Ðµ Ð¿Ð¾Ð²Ð¸Ð½Ð½Ðµ Ð±ÑƒÑ‚Ð¸ Ð²Ñ–Ð¼Ñ–Ñ‡ÐµÐ½Ð¸Ð¼.',
	reqChkByName: 'Ð‘ÑƒÐ´ÑŒ Ð»Ð°ÑÐºÐ°, Ð²Ñ–Ð´Ð¼Ñ–Ñ‚ÑŒÑ‚Ðµ {label}.',
	match: 'Ð¦Ðµ Ð¿Ð¾Ð»Ðµ Ð¿Ð¾Ð²Ð¸Ð½Ð½Ð¾ Ð²Ñ–Ð´Ð¿Ð¾Ð²Ñ–Ð´Ð°Ñ‚Ð¸ {matchName}',
	startDate: 'Ð¿Ð¾Ñ‡Ð°Ñ‚ÐºÐ¾Ð²Ð° Ð´Ð°Ñ‚Ð°',
	endDate: 'ÐºÑ–Ð½Ñ†ÐµÐ²Ð° Ð´Ð°Ñ‚Ð°',
	currentDate: 'ÑÑŒÐ¾Ð³Ð¾Ð´Ð½Ñ–ÑˆÐ½Ñ Ð´Ð°Ñ‚Ð°',
	afterDate: 'Ð¦Ñ Ð´Ð°Ñ‚Ð° Ð¿Ð¾Ð²Ð¸Ð½Ð½Ð° Ð±ÑƒÑ‚Ð¸ Ñ‚Ð°ÐºÐ¾ÑŽ Ð¶, Ð°Ð±Ð¾ Ð¿Ñ–Ð·Ð½Ñ–ÑˆÐ¾ÑŽ Ð·Ð° {label}.',
	beforeDate: 'Ð¦Ñ Ð´Ð°Ñ‚Ð° Ð¿Ð¾Ð²Ð¸Ð½Ð½Ð° Ð±ÑƒÑ‚Ð¸ Ñ‚Ð°ÐºÐ¾ÑŽ Ð¶, Ð°Ð±Ð¾ Ñ€Ð°Ð½Ñ–ÑˆÐ¾ÑŽ Ð·Ð° {label}.',
	startMonth: 'Ð‘ÑƒÐ´ÑŒ Ð»Ð°ÑÐºÐ°, Ð²Ð¸Ð±ÐµÑ€Ñ–Ñ‚ÑŒ Ð¿Ð¾Ñ‡Ð°Ñ‚ÐºÐ¾Ð²Ð¸Ð¹ Ð¼Ñ–ÑÑÑ†ÑŒ',
	sameMonth: 'Ð¦Ñ– Ð´Ð°Ñ‚Ð¸ Ð¿Ð¾Ð²Ð¸Ð½Ð½Ñ– Ð²Ñ–Ð´Ð½Ð¾ÑÐ¸Ñ‚Ð¸ÑÑŒ Ð¾Ð´Ð½Ð¾Ð³Ð¾ Ñ– Ñ‚Ð¾Ð³Ð¾ Ð¶ Ð¼Ñ–ÑÑÑ†Ñ. Ð‘ÑƒÐ´ÑŒ Ð»Ð°ÑÐºÐ°, Ð·Ð¼Ñ–Ð½Ñ–Ñ‚ÑŒ Ð¾Ð´Ð½Ñƒ Ð· Ð½Ð¸Ñ….',
	creditcard: 'ÐÐ¾Ð¼ÐµÑ€ ÐºÑ€ÐµÐ´Ð¸Ñ‚Ð½Ð¾Ñ— ÐºÐ°Ñ€Ñ‚Ð¸ Ð²Ð²ÐµÐ´ÐµÐ½Ð¸Ð¹ Ð½ÐµÐ¿Ñ€Ð°Ð²Ð¸Ð»ÑŒÐ½Ð¾. Ð‘ÑƒÐ´ÑŒ Ð»Ð°ÑÐºÐ°, Ð¿ÐµÑ€ÐµÐ²Ñ–Ñ€Ñ‚Ðµ Ð¹Ð¾Ð³Ð¾. Ð’Ð²ÐµÐ´ÐµÐ½Ð¾ {length} ÑÐ¸Ð¼Ð²Ð¾Ð»Ñ–Ð².'

});

/*
---

name: Locale.zh-CH.Date

description: Date messages for Chinese (simplified and traditional).

license: MIT-style license

authors:
  - YMind Chan

requires:
  - Locale

provides: [Locale.zh-CH.Date]

...
*/

// Simplified Chinese
Locale.define('zh-CHS', 'Date', {

	months: ['ä¸€æœˆ', 'äºŒæœˆ', 'ä¸‰æœˆ', 'å››æœˆ', 'äº”æœˆ', 'å…­æœˆ', 'ä¸ƒæœˆ', 'å…«æœˆ', 'ä¹æœˆ', 'åæœˆ', 'åä¸€æœˆ', 'åäºŒæœˆ'],
	months_abbr: ['ä¸€', 'äºŒ', 'ä¸‰', 'å››', 'äº”', 'å…­', 'ä¸ƒ', 'å…«', 'ä¹', 'å', 'åä¸€', 'åäºŒ'],
	days: ['æ˜ŸæœŸæ—¥', 'æ˜ŸæœŸä¸€', 'æ˜ŸæœŸäºŒ', 'æ˜ŸæœŸä¸‰', 'æ˜ŸæœŸå››', 'æ˜ŸæœŸäº”', 'æ˜ŸæœŸå…­'],
	days_abbr: ['æ—¥', 'ä¸€', 'äºŒ', 'ä¸‰', 'å››', 'äº”', 'å…­'],

	// Culture's date order: YYYY-MM-DD
	dateOrder: ['year', 'month', 'date'],
	shortDate: '%Y-%m-%d',
	shortTime: '%I:%M%p',
	AM: 'AM',
	PM: 'PM',
	firstDayOfWeek: 1,

	// Date.Extras
	ordinal: '',

	lessThanMinuteAgo: 'ä¸åˆ°1åˆ†é’Ÿå‰',
	minuteAgo: 'å¤§çº¦1åˆ†é’Ÿå‰',
	minutesAgo: '{delta}åˆ†é’Ÿä¹‹å‰',
	hourAgo: 'å¤§çº¦1å°æ—¶å‰',
	hoursAgo: 'å¤§çº¦{delta}å°æ—¶å‰',
	dayAgo: '1å¤©å‰',
	daysAgo: '{delta}å¤©å‰',
	weekAgo: '1æ˜ŸæœŸå‰',
	weeksAgo: '{delta}æ˜ŸæœŸå‰',
	monthAgo: '1ä¸ªæœˆå‰',
	monthsAgo: '{delta}ä¸ªæœˆå‰',
	yearAgo: '1å¹´å‰',
	yearsAgo: '{delta}å¹´å‰',

	lessThanMinuteUntil: 'ä»ŽçŽ°åœ¨å¼€å§‹ä¸åˆ°1åˆ†é’Ÿ',
	minuteUntil: 'ä»ŽçŽ°åœ¨å¼€å§‹ç´„1åˆ†é’Ÿ',
	minutesUntil: 'ä»ŽçŽ°åœ¨å¼€å§‹çº¦{delta}åˆ†é’Ÿ',
	hourUntil: 'ä»ŽçŽ°åœ¨å¼€å§‹1å°æ—¶',
	hoursUntil: 'ä»ŽçŽ°åœ¨å¼€å§‹çº¦{delta}å°æ—¶',
	dayUntil: 'ä»ŽçŽ°åœ¨å¼€å§‹1å¤©',
	daysUntil: 'ä»ŽçŽ°åœ¨å¼€å§‹{delta}å¤©',
	weekUntil: 'ä»ŽçŽ°åœ¨å¼€å§‹1æ˜ŸæœŸ',
	weeksUntil: 'ä»ŽçŽ°åœ¨å¼€å§‹{delta}æ˜ŸæœŸ',
	monthUntil: 'ä»ŽçŽ°åœ¨å¼€å§‹ä¸€ä¸ªæœˆ',
	monthsUntil: 'ä»ŽçŽ°åœ¨å¼€å§‹{delta}ä¸ªæœˆ',
	yearUntil: 'ä»ŽçŽ°åœ¨å¼€å§‹1å¹´',
	yearsUntil: 'ä»ŽçŽ°åœ¨å¼€å§‹{delta}å¹´'

});

// Traditional Chinese
Locale.define('zh-CHT', 'Date', {

	months: ['ä¸€æœˆ', 'äºŒæœˆ', 'ä¸‰æœˆ', 'å››æœˆ', 'äº”æœˆ', 'å…­æœˆ', 'ä¸ƒæœˆ', 'å…«æœˆ', 'ä¹æœˆ', 'åæœˆ', 'åä¸€æœˆ', 'åäºŒæœˆ'],
	months_abbr: ['ä¸€', 'äºŒ', 'ä¸‰', 'å››', 'äº”', 'å…­', 'ä¸ƒ', 'å…«', 'ä¹', 'å', 'åä¸€', 'åäºŒ'],
	days: ['æ˜ŸæœŸæ—¥', 'æ˜ŸæœŸä¸€', 'æ˜ŸæœŸäºŒ', 'æ˜ŸæœŸä¸‰', 'æ˜ŸæœŸå››', 'æ˜ŸæœŸäº”', 'æ˜ŸæœŸå…­'],
	days_abbr: ['æ—¥', 'ä¸€', 'äºŒ', 'ä¸‰', 'å››', 'äº”', 'å…­'],

	// Culture's date order: YYYY-MM-DD
	dateOrder: ['year', 'month', 'date'],
	shortDate: '%Y-%m-%d',
	shortTime: '%I:%M%p',
	AM: 'AM',
	PM: 'PM',
	firstDayOfWeek: 1,

	// Date.Extras
	ordinal: '',

	lessThanMinuteAgo: 'ä¸åˆ°1åˆ†é˜å‰',
	minuteAgo: 'å¤§ç´„1åˆ†é˜å‰',
	minutesAgo: '{delta}åˆ†é˜ä¹‹å‰',
	hourAgo: 'å¤§ç´„1å°æ™‚å‰',
	hoursAgo: 'å¤§ç´„{delta}å°æ™‚å‰',
	dayAgo: '1å¤©å‰',
	daysAgo: '{delta}å¤©å‰',
	weekAgo: '1æ˜ŸæœŸå‰',
	weeksAgo: '{delta}æ˜ŸæœŸå‰',
	monthAgo: '1ä¸ªæœˆå‰',
	monthsAgo: '{delta}ä¸ªæœˆå‰',
	yearAgo: '1å¹´å‰',
	yearsAgo: '{delta}å¹´å‰',

	lessThanMinuteUntil: 'å¾žç¾åœ¨é–‹å§‹ä¸åˆ°1åˆ†é˜',
	minuteUntil: 'å¾žç¾åœ¨é–‹å§‹ç´„1åˆ†é˜',
	minutesUntil: 'å¾žç¾åœ¨é–‹å§‹ç´„{delta}åˆ†é˜',
	hourUntil: 'å¾žç¾åœ¨é–‹å§‹1å°æ™‚',
	hoursUntil: 'å¾žç¾åœ¨é–‹å§‹ç´„{delta}å°æ™‚',
	dayUntil: 'å¾žç¾åœ¨é–‹å§‹1å¤©',
	daysUntil: 'å¾žç¾åœ¨é–‹å§‹{delta}å¤©',
	weekUntil: 'å¾žç¾åœ¨é–‹å§‹1æ˜ŸæœŸ',
	weeksUntil: 'å¾žç¾åœ¨é–‹å§‹{delta}æ˜ŸæœŸ',
	monthUntil: 'å¾žç¾åœ¨é–‹å§‹ä¸€å€‹æœˆ',
	monthsUntil: 'å¾žç¾åœ¨é–‹å§‹{delta}å€‹æœˆ',
	yearUntil: 'å¾žç¾åœ¨é–‹å§‹1å¹´',
	yearsUntil: 'å¾žç¾åœ¨é–‹å§‹{delta}å¹´'

});

/*
---

name: Locale.zh-CH.Form.Validator

description: Form Validator messages for Chinese (simplified and traditional).

license: MIT-style license

authors:
  - YMind Chan

requires:
  - Locale
  - Form.Validator

provides: [Form.zh-CH.Form.Validator, Form.Validator.CurrencyYuanValidator]

...
*/

// Simplified Chinese
Locale.define('zh-CHS', 'FormValidator', {

	required: 'æ­¤é¡¹å¿…å¡«ã€‚',
	minLength: 'è¯·è‡³å°‘è¾“å…¥ {minLength} ä¸ªå­—ç¬¦ (å·²è¾“å…¥ {length} ä¸ª)ã€‚',
	maxLength: 'æœ€å¤šåªèƒ½è¾“å…¥ {maxLength} ä¸ªå­—ç¬¦ (å·²è¾“å…¥ {length} ä¸ª)ã€‚',
	integer: 'è¯·è¾“å…¥ä¸€ä¸ªæ•´æ•°ï¼Œä¸èƒ½åŒ…å«å°æ•°ç‚¹ã€‚ä¾‹å¦‚ï¼š"1", "200"ã€‚',
	numeric: 'è¯·è¾“å…¥ä¸€ä¸ªæ•°å­—ï¼Œä¾‹å¦‚ï¼š"1", "1.1", "-1", "-1.1"ã€‚',
	digits: 'è¯·è¾“å…¥ç”±æ•°å­—å’Œæ ‡ç‚¹ç¬¦å·ç»„æˆçš„å†…å®¹ã€‚ä¾‹å¦‚ç”µè¯å·ç ã€‚',
	alpha: 'è¯·è¾“å…¥ A-Z çš„ 26 ä¸ªå­—æ¯ï¼Œä¸èƒ½åŒ…å«ç©ºæ ¼æˆ–ä»»ä½•å…¶ä»–å­—ç¬¦ã€‚',
	alphanum: 'è¯·è¾“å…¥ A-Z çš„ 26 ä¸ªå­—æ¯æˆ– 0-9 çš„ 10 ä¸ªæ•°å­—ï¼Œä¸èƒ½åŒ…å«ç©ºæ ¼æˆ–ä»»ä½•å…¶ä»–å­—ç¬¦ã€‚',
	dateSuchAs: 'è¯·è¾“å…¥åˆæ³•çš„æ—¥æœŸæ ¼å¼ï¼Œå¦‚ï¼š{date}ã€‚',
	dateInFormatMDY: 'è¯·è¾“å…¥åˆæ³•çš„æ—¥æœŸæ ¼å¼ï¼Œä¾‹å¦‚ï¼šYYYY-MM-DD ("2010-12-31")ã€‚',
	email: 'è¯·è¾“å…¥åˆæ³•çš„ç”µå­ä¿¡ç®±åœ°å€ï¼Œä¾‹å¦‚ï¼š"fred@domain.com"ã€‚',
	url: 'è¯·è¾“å…¥åˆæ³•çš„ Url åœ°å€ï¼Œä¾‹å¦‚ï¼šhttp://www.example.comã€‚',
	currencyDollar: 'è¯·è¾“å…¥åˆæ³•çš„è´§å¸ç¬¦å·ï¼Œä¾‹å¦‚ï¼šï¿¥100.0',
	oneRequired: 'è¯·è‡³å°‘é€‰æ‹©ä¸€é¡¹ã€‚',
	errorPrefix: 'é”™è¯¯ï¼š',
	warningPrefix: 'è­¦å‘Šï¼š',

	// Form.Validator.Extras
	noSpace: 'ä¸èƒ½åŒ…å«ç©ºæ ¼ã€‚',
	reqChkByNode: 'æœªé€‰æ‹©ä»»ä½•å†…å®¹ã€‚',
	requiredChk: 'æ­¤é¡¹å¿…å¡«ã€‚',
	reqChkByName: 'è¯·é€‰æ‹© {label}.',
	match: 'å¿…é¡»ä¸Ž{matchName}ç›¸åŒ¹é…',
	startDate: 'èµ·å§‹æ—¥æœŸ',
	endDate: 'ç»“æŸæ—¥æœŸ',
	currentDate: 'å½“å‰æ—¥æœŸ',
	afterDate: 'æ—¥æœŸå¿…é¡»ç­‰äºŽæˆ–æ™šäºŽ {label}.',
	beforeDate: 'æ—¥æœŸå¿…é¡»æ—©äºŽæˆ–ç­‰äºŽ {label}.',
	startMonth: 'è¯·é€‰æ‹©èµ·å§‹æœˆä»½',
	sameMonth: 'æ‚¨å¿…é¡»ä¿®æ”¹ä¸¤ä¸ªæ—¥æœŸä¸­çš„ä¸€ä¸ªï¼Œä»¥ç¡®ä¿å®ƒä»¬åœ¨åŒä¸€æœˆä»½ã€‚',
	creditcard: 'æ‚¨è¾“å…¥çš„ä¿¡ç”¨å¡å·ç ä¸æ­£ç¡®ã€‚å½“å‰å·²è¾“å…¥{length}ä¸ªå­—ç¬¦ã€‚'

});

// Traditional Chinese
Locale.define('zh-CHT', 'FormValidator', {

	required: 'æ­¤é …å¿…å¡«ã€‚ ',
	minLength: 'è«‹è‡³å°‘è¼¸å…¥{minLength} å€‹å­—ç¬¦(å·²è¼¸å…¥{length} å€‹)ã€‚ ',
	maxLength: 'æœ€å¤šåªèƒ½è¼¸å…¥{maxLength} å€‹å­—ç¬¦(å·²è¼¸å…¥{length} å€‹)ã€‚ ',
	integer: 'è«‹è¼¸å…¥ä¸€å€‹æ•´æ•¸ï¼Œä¸èƒ½åŒ…å«å°æ•¸é»žã€‚ä¾‹å¦‚ï¼š"1", "200"ã€‚ ',
	numeric: 'è«‹è¼¸å…¥ä¸€å€‹æ•¸å­—ï¼Œä¾‹å¦‚ï¼š"1", "1.1", "-1", "-1.1"ã€‚ ',
	digits: 'è«‹è¼¸å…¥ç”±æ•¸å­—å’Œæ¨™é»žç¬¦è™Ÿçµ„æˆçš„å…§å®¹ã€‚ä¾‹å¦‚é›»è©±è™Ÿç¢¼ã€‚ ',
	alpha: 'è«‹è¼¸å…¥AZ çš„26 å€‹å­—æ¯ï¼Œä¸èƒ½åŒ…å«ç©ºæ ¼æˆ–ä»»ä½•å…¶ä»–å­—ç¬¦ã€‚ ',
	alphanum: 'è«‹è¼¸å…¥AZ çš„26 å€‹å­—æ¯æˆ–0-9 çš„10 å€‹æ•¸å­—ï¼Œä¸èƒ½åŒ…å«ç©ºæ ¼æˆ–ä»»ä½•å…¶ä»–å­—ç¬¦ã€‚ ',
	dateSuchAs: 'è«‹è¼¸å…¥åˆæ³•çš„æ—¥æœŸæ ¼å¼ï¼Œå¦‚ï¼š{date}ã€‚ ',
	dateInFormatMDY: 'è«‹è¼¸å…¥åˆæ³•çš„æ—¥æœŸæ ¼å¼ï¼Œä¾‹å¦‚ï¼šYYYY-MM-DD ("2010-12-31")ã€‚ ',
	email: 'è«‹è¼¸å…¥åˆæ³•çš„é›»å­ä¿¡ç®±åœ°å€ï¼Œä¾‹å¦‚ï¼š"fred@domain.com"ã€‚ ',
	url: 'è«‹è¼¸å…¥åˆæ³•çš„Url åœ°å€ï¼Œä¾‹å¦‚ï¼šhttp://www.example.comã€‚ ',
	currencyDollar: 'è«‹è¼¸å…¥åˆæ³•çš„è²¨å¹£ç¬¦è™Ÿï¼Œä¾‹å¦‚ï¼šï¿¥100.0',
	oneRequired: 'è«‹è‡³å°‘é¸æ“‡ä¸€é …ã€‚ ',
	errorPrefix: 'éŒ¯èª¤ï¼š',
	warningPrefix: 'è­¦å‘Šï¼š',

	// Form.Validator.Extras
	noSpace: 'ä¸èƒ½åŒ…å«ç©ºæ ¼ã€‚ ',
	reqChkByNode: 'æœªé¸æ“‡ä»»ä½•å…§å®¹ã€‚ ',
	requiredChk: 'æ­¤é …å¿…å¡«ã€‚ ',
	reqChkByName: 'è«‹é¸æ“‡ {label}.',
	match: 'å¿…é ˆèˆ‡{matchName}ç›¸åŒ¹é…',
	startDate: 'èµ·å§‹æ—¥æœŸ',
	endDate: 'çµæŸæ—¥æœŸ',
	currentDate: 'ç•¶å‰æ—¥æœŸ',
	afterDate: 'æ—¥æœŸå¿…é ˆç­‰æ–¼æˆ–æ™šæ–¼{label}.',
	beforeDate: 'æ—¥æœŸå¿…é ˆæ—©æ–¼æˆ–ç­‰æ–¼{label}.',
	startMonth: 'è«‹é¸æ“‡èµ·å§‹æœˆä»½',
	sameMonth: 'æ‚¨å¿…é ˆä¿®æ”¹å…©å€‹æ—¥æœŸä¸­çš„ä¸€å€‹ï¼Œä»¥ç¢ºä¿å®ƒå€‘åœ¨åŒä¸€æœˆä»½ã€‚ ',
	creditcard: 'æ‚¨è¼¸å…¥çš„ä¿¡ç”¨å¡è™Ÿç¢¼ä¸æ­£ç¢ºã€‚ç•¶å‰å·²è¼¸å…¥{length}å€‹å­—ç¬¦ã€‚ '

});

Form.Validator.add('validate-currency-yuan', {

	errorMsg: function(){
		return Form.Validator.getMsg('currencyYuan');
	},

	test: function(element){
		// [ï¿¥]1[##][,###]+[.##]
		// [ï¿¥]1###+[.##]
		// [ï¿¥]0.##
		// [ï¿¥].##
		return Form.Validator.getValidator('IsEmpty').test(element) || (/^ï¿¥?\-?([1-9]{1}[0-9]{0,2}(\,[0-9]{3})*(\.[0-9]{0,2})?|[1-9]{1}\d*(\.[0-9]{0,2})?|0(\.[0-9]{0,2})?|(\.[0-9]{1,2})?)$/).test(element.get('value'));
	}

});

/*
---

name: Locale.zh-CH.Number

description: Number messages for for Chinese (simplified and traditional).

license: MIT-style license

authors:
  - YMind Chan

requires:
  - Locale
  - Locale.en-US.Number

provides: [Locale.zh-CH.Number]

...
*/

// Simplified Chinese
Locale.define('zh-CHS', 'Number', {

	currency: {
		prefix: 'ï¿¥ '
	}

}).inherit('en-US', 'Number');

// Traditional Chinese
Locale.define('zh-CHT').inherit('zh-CHS', 'Number');

/*
---

script: Request.JSONP.js

name: Request.JSONP

description: Defines Request.JSONP, a class for cross domain javascript via script injection.

license: MIT-style license

authors:
  - Aaron Newton
  - Guillermo Rauch
  - Arian Stolwijk

requires:
  - Core/Element
  - Core/Request
  - MooTools.More

provides: [Request.JSONP]

...
*/

Request.JSONP = new Class({

	Implements: [Chain, Events, Options],

	options: {/*
		onRequest: function(src, scriptElement){},
		onComplete: function(data){},
		onSuccess: function(data){},
		onCancel: function(){},
		onTimeout: function(){},
		onError: function(){}, */
		onRequest: function(src){
			if (this.options.log && window.console && console.log){
				console.log('JSONP retrieving script with url:' + src);
			}
		},
		onError: function(src){
			if (this.options.log && window.console && console.warn){
				console.warn('JSONP '+ src +' will fail in Internet Explorer, which enforces a 2083 bytes length limit on URIs');
			}
		},
		url: '',
		callbackKey: 'callback',
		injectScript: document.head,
		data: '',
		link: 'ignore',
		timeout: 0,
		log: false
	},

	initialize: function(options){
		this.setOptions(options);
	},

	send: function(options){
		if (!Request.prototype.check.call(this, options)) return this;
		this.running = true;

		var type = typeOf(options);
		if (type == 'string' || type == 'element') options = {data: options};
		options = Object.merge(this.options, options || {});

		var data = options.data;
		switch (typeOf(data)){
			case 'element': data = document.id(data).toQueryString(); break;
			case 'object': case 'hash': data = Object.toQueryString(data);
		}

		var index = this.index = Request.JSONP.counter++,
			key = 'request_' + index;

		var src = options.url +
			(options.url.test('\\?') ? '&' :'?') +
			(options.callbackKey) +
			'=Request.JSONP.request_map.request_'+ index +
			(data ? '&' + data : '');

		if (src.length > 2083) this.fireEvent('error', src);

		Request.JSONP.request_map[key] = function(){
			delete Request.JSONP.request_map[key];
			this.success(arguments, index);
		}.bind(this);

		var script = this.getScript(src).inject(options.injectScript);
		this.fireEvent('request', [src, script]);

		if (options.timeout) this.timeout.delay(options.timeout, this);

		return this;
	},

	getScript: function(src){
		if (!this.script) this.script = new Element('script', {
			type: 'text/javascript',
			async: true,
			src: src
		});
		return this.script;
	},

	success: function(args){
		if (!this.running) return;
		this.clear()
			.fireEvent('complete', args).fireEvent('success', args)
			.callChain();
	},

	cancel: function(){
		if (this.running) this.clear().fireEvent('cancel');
		return this;
	},

	isRunning: function(){
		return !!this.running;
	},

	clear: function(){
		this.running = false;
		if (this.script){
			this.script.destroy();
			this.script = null;
		}
		return this;
	},

	timeout: function(){
		if (this.running){
			this.running = false;
			this.fireEvent('timeout', [this.script.get('src'), this.script]).fireEvent('failure').cancel();
		}
		return this;
	}

});

Request.JSONP.counter = 0;
Request.JSONP.request_map = {};

/*
---

script: Request.Periodical.js

name: Request.Periodical

description: Requests the same URL to pull data from a server but increases the intervals if no data is returned to reduce the load

license: MIT-style license

authors:
  - Christoph Pojer

requires:
  - Core/Request
  - MooTools.More

provides: [Request.Periodical]

...
*/

Request.implement({

	options: {
		initialDelay: 5000,
		delay: 5000,
		limit: 60000
	},

	startTimer: function(data){
		var fn = function(){
			if (!this.running) this.send({data: data});
		};
		this.lastDelay = this.options.initialDelay;
		this.timer = fn.delay(this.lastDelay, this);
		this.completeCheck = function(response){
			clearTimeout(this.timer);
			this.lastDelay = (response) ? this.options.delay : (this.lastDelay + this.options.delay).min(this.options.limit);
			this.timer = fn.delay(this.lastDelay, this);
		};
		return this.addEvent('complete', this.completeCheck);
	},

	stopTimer: function(){
		clearTimeout(this.timer);
		return this.removeEvent('complete', this.completeCheck);
	}

});

/*
---

script: Request.Queue.js

name: Request.Queue

description: Controls several instances of Request and its variants to run only one request at a time.

license: MIT-style license

authors:
  - Aaron Newton

requires:
  - Core/Element
  - Core/Request
  - Class.Binds

provides: [Request.Queue]

...
*/

Request.Queue = new Class({

	Implements: [Options, Events],

	Binds: ['attach', 'request', 'complete', 'cancel', 'success', 'failure', 'exception'],

	options: {/*
		onRequest: function(argsPassedToOnRequest){},
		onSuccess: function(argsPassedToOnSuccess){},
		onComplete: function(argsPassedToOnComplete){},
		onCancel: function(argsPassedToOnCancel){},
		onException: function(argsPassedToOnException){},
		onFailure: function(argsPassedToOnFailure){},
		onEnd: function(){},
		*/
		stopOnFailure: true,
		autoAdvance: true,
		concurrent: 1,
		requests: {}
	},

	initialize: function(options){
		var requests;
		if (options){
			requests = options.requests;
			delete options.requests;
		}
		this.setOptions(options);
		this.requests = {};
		this.queue = [];
		this.reqBinders = {};

		if (requests) this.addRequests(requests);
	},

	addRequest: function(name, request){
		this.requests[name] = request;
		this.attach(name, request);
		return this;
	},

	addRequests: function(obj){
		Object.each(obj, function(req, name){
			this.addRequest(name, req);
		}, this);
		return this;
	},

	getName: function(req){
		return Object.keyOf(this.requests, req);
	},

	attach: function(name, req){
		if (req._groupSend) return this;
		['request', 'complete', 'cancel', 'success', 'failure', 'exception'].each(function(evt){
			if (!this.reqBinders[name]) this.reqBinders[name] = {};
			this.reqBinders[name][evt] = function(){
				this['on' + evt.capitalize()].apply(this, [name, req].append(arguments));
			}.bind(this);
			req.addEvent(evt, this.reqBinders[name][evt]);
		}, this);
		req._groupSend = req.send;
		req.send = function(options){
			this.send(name, options);
			return req;
		}.bind(this);
		return this;
	},

	removeRequest: function(req){
		var name = typeOf(req) == 'object' ? this.getName(req) : req;
		if (!name && typeOf(name) != 'string') return this;
		req = this.requests[name];
		if (!req) return this;
		['request', 'complete', 'cancel', 'success', 'failure', 'exception'].each(function(evt){
			req.removeEvent(evt, this.reqBinders[name][evt]);
		}, this);
		req.send = req._groupSend;
		delete req._groupSend;
		return this;
	},

	getRunning: function(){
		return Object.filter(this.requests, function(r){
			return r.running;
		});
	},

	isRunning: function(){
		return !!(Object.keys(this.getRunning()).length);
	},

	send: function(name, options){
		var q = function(){
			this.requests[name]._groupSend(options);
			this.queue.erase(q);
		}.bind(this);

		q.name = name;
		if (Object.keys(this.getRunning()).length >= this.options.concurrent || (this.error && this.options.stopOnFailure)) this.queue.push(q);
		else q();
		return this;
	},

	hasNext: function(name){
		return (!name) ? !!this.queue.length : !!this.queue.filter(function(q){ return q.name == name; }).length;
	},

	resume: function(){
		this.error = false;
		(this.options.concurrent - Object.keys(this.getRunning()).length).times(this.runNext, this);
		return this;
	},

	runNext: function(name){
		if (!this.queue.length) return this;
		if (!name){
			this.queue[0]();
		} else {
			var found;
			this.queue.each(function(q){
				if (!found && q.name == name){
					found = true;
					q();
				}
			});
		}
		return this;
	},

	runAll: function(){
		this.queue.each(function(q){
			q();
		});
		return this;
	},

	clear: function(name){
		if (!name){
			this.queue.empty();
		} else {
			this.queue = this.queue.map(function(q){
				if (q.name != name) return q;
				else return false;
			}).filter(function(q){
				return q;
			});
		}
		return this;
	},

	cancel: function(name){
		this.requests[name].cancel();
		return this;
	},

	onRequest: function(){
		this.fireEvent('request', arguments);
	},

	onComplete: function(){
		this.fireEvent('complete', arguments);
		if (!this.queue.length) this.fireEvent('end');
	},

	onCancel: function(){
		if (this.options.autoAdvance && !this.error) this.runNext();
		this.fireEvent('cancel', arguments);
	},

	onSuccess: function(){
		if (this.options.autoAdvance && !this.error) this.runNext();
		this.fireEvent('success', arguments);
	},

	onFailure: function(){
		this.error = true;
		if (!this.options.stopOnFailure && this.options.autoAdvance) this.runNext();
		this.fireEvent('failure', arguments);
	},

	onException: function(){
		this.error = true;
		if (!this.options.stopOnFailure && this.options.autoAdvance) this.runNext();
		this.fireEvent('exception', arguments);
	}

});

/*
---

script: Array.Extras.js

name: Array.Extras

description: Extends the Array native object to include useful methods to work with arrays.

license: MIT-style license

authors:
  - Christoph Pojer
  - Sebastian MarkbÃ¥ge

requires:
  - Core/Array
  - MooTools.More

provides: [Array.Extras]

...
*/

(function(nil){

Array.implement({

	min: function(){
		return Math.min.apply(null, this);
	},

	max: function(){
		return Math.max.apply(null, this);
	},

	average: function(){
		return this.length ? this.sum() / this.length : 0;
	},

	sum: function(){
		var result = 0, l = this.length;
		if (l){
			while (l--){
				if (this[l] != null) result += parseFloat(this[l]);
			}
		}
		return result;
	},

	unique: function(){
		return [].combine(this);
	},

	shuffle: function(){
		for (var i = this.length; i && --i;){
			var temp = this[i], r = Math.floor(Math.random() * ( i + 1 ));
			this[i] = this[r];
			this[r] = temp;
		}
		return this;
	},

	reduce: function(fn, value){
		for (var i = 0, l = this.length; i < l; i++){
			if (i in this) value = value === nil ? this[i] : fn.call(null, value, this[i], i, this);
		}
		return value;
	},

	reduceRight: function(fn, value){
		var i = this.length;
		while (i--){
			if (i in this) value = value === nil ? this[i] : fn.call(null, value, this[i], i, this);
		}
		return value;
	},

	pluck: function(prop){
		return this.map(function(item){
			return item[prop];
		});
	}

});

})();

/*
---

script: Date.Extras.js

name: Date.Extras

description: Extends the Date native object to include extra methods (on top of those in Date.js).

license: MIT-style license

authors:
  - Aaron Newton
  - Scott Kyle

requires:
  - Date

provides: [Date.Extras]

...
*/

Date.implement({

	timeDiffInWords: function(to){
		return Date.distanceOfTimeInWords(this, to || new Date);
	},

	timeDiff: function(to, separator){
		if (to == null) to = new Date;
		var delta = ((to - this) / 1000).floor().abs();

		var vals = [],
			durations = [60, 60, 24, 365, 0],
			names = ['s', 'm', 'h', 'd', 'y'],
			value, duration;

		for (var item = 0; item < durations.length; item++){
			if (item && !delta) break;
			value = delta;
			if ((duration = durations[item])){
				value = (delta % duration);
				delta = (delta / duration).floor();
			}
			vals.unshift(value + (names[item] || ''));
		}

		return vals.join(separator || ':');
	}

}).extend({

	distanceOfTimeInWords: function(from, to){
		return Date.getTimePhrase(((to - from) / 1000).toInt());
	},

	getTimePhrase: function(delta){
		var suffix = (delta < 0) ? 'Until' : 'Ago';
		if (delta < 0) delta *= -1;

		var units = {
			minute: 60,
			hour: 60,
			day: 24,
			week: 7,
			month: 52 / 12,
			year: 12,
			eon: Infinity
		};

		var msg = 'lessThanMinute';

		for (var unit in units){
			var interval = units[unit];
			if (delta < 1.5 * interval){
				if (delta > 0.75 * interval) msg = unit;
				break;
			}
			delta /= interval;
			msg = unit + 's';
		}

		delta = delta.round();
		return Date.getMsg(msg + suffix, delta).substitute({delta: delta});
	}

}).defineParsers(

	{
		// "today", "tomorrow", "yesterday"
		re: /^(?:tod|tom|yes)/i,
		handler: function(bits){
			var d = new Date().clearTime();
			switch (bits[0]){
				case 'tom': return d.increment();
				case 'yes': return d.decrement();
				default: return d;
			}
		}
	},

	{
		// "next Wednesday", "last Thursday"
		re: /^(next|last) ([a-z]+)$/i,
		handler: function(bits){
			var d = new Date().clearTime();
			var day = d.getDay();
			var newDay = Date.parseDay(bits[2], true);
			var addDays = newDay - day;
			if (newDay <= day) addDays += 7;
			if (bits[1] == 'last') addDays -= 7;
			return d.set('date', d.getDate() + addDays);
		}
	}

).alias('timeAgoInWords', 'timeDiffInWords');

/*
---

name: Hash

description: Contains Hash Prototypes. Provides a means for overcoming the JavaScript practical impossibility of extending native Objects.

license: MIT-style license.

requires:
  - Core/Object
  - MooTools.More

provides: [Hash]

...
*/

(function(){

if (this.Hash) return;

var Hash = this.Hash = new Type('Hash', function(object){
	if (typeOf(object) == 'hash') object = Object.clone(object.getClean());
	for (var key in object) this[key] = object[key];
	return this;
});

this.$H = function(object){
	return new Hash(object);
};

Hash.implement({

	forEach: function(fn, bind){
		Object.forEach(this, fn, bind);
	},

	getClean: function(){
		var clean = {};
		for (var key in this){
			if (this.hasOwnProperty(key)) clean[key] = this[key];
		}
		return clean;
	},

	getLength: function(){
		var length = 0;
		for (var key in this){
			if (this.hasOwnProperty(key)) length++;
		}
		return length;
	}

});

Hash.alias('each', 'forEach');

Hash.implement({

	has: Object.prototype.hasOwnProperty,

	keyOf: function(value){
		return Object.keyOf(this, value);
	},

	hasValue: function(value){
		return Object.contains(this, value);
	},

	extend: function(properties){
		Hash.each(properties || {}, function(value, key){
			Hash.set(this, key, value);
		}, this);
		return this;
	},

	combine: function(properties){
		Hash.each(properties || {}, function(value, key){
			Hash.include(this, key, value);
		}, this);
		return this;
	},

	erase: function(key){
		if (this.hasOwnProperty(key)) delete this[key];
		return this;
	},

	get: function(key){
		return (this.hasOwnProperty(key)) ? this[key] : null;
	},

	set: function(key, value){
		if (!this[key] || this.hasOwnProperty(key)) this[key] = value;
		return this;
	},

	empty: function(){
		Hash.each(this, function(value, key){
			delete this[key];
		}, this);
		return this;
	},

	include: function(key, value){
		if (this[key] == undefined) this[key] = value;
		return this;
	},

	map: function(fn, bind){
		return new Hash(Object.map(this, fn, bind));
	},

	filter: function(fn, bind){
		return new Hash(Object.filter(this, fn, bind));
	},

	every: function(fn, bind){
		return Object.every(this, fn, bind);
	},

	some: function(fn, bind){
		return Object.some(this, fn, bind);
	},

	getKeys: function(){
		return Object.keys(this);
	},

	getValues: function(){
		return Object.values(this);
	},

	toQueryString: function(base){
		return Object.toQueryString(this, base);
	}

});

Hash.alias({indexOf: 'keyOf', contains: 'hasValue'});


})();


/*
---

script: Hash.Extras.js

name: Hash.Extras

description: Extends the Hash Type to include getFromPath which allows a path notation to child elements.

license: MIT-style license

authors:
  - Aaron Newton

requires:
  - Hash
  - Object.Extras

provides: [Hash.Extras]

...
*/

Hash.implement({

	getFromPath: function(notation){
		return Object.getFromPath(this, notation);
	},

	cleanValues: function(method){
		return new Hash(Object.cleanValues(this, method));
	},

	run: function(){
		Object.run(arguments);
	}

});

/*
---
name: Number.Format
description: Extends the Number Type object to include a number formatting method.
license: MIT-style license
authors: [Arian Stolwijk]
requires: [Core/Number, Locale.en-US.Number]
# Number.Extras is for compatibility
provides: [Number.Format, Number.Extras]
...
*/


Number.implement({

	format: function(options){
		// Thanks dojo and YUI for some inspiration
		var value = this;
		options = options ? Object.clone(options) : {};
		var getOption = function(key){
			if (options[key] != null) return options[key];
			return Locale.get('Number.' + key);
		};

		var negative = value < 0,
			decimal = getOption('decimal'),
			precision = getOption('precision'),
			group = getOption('group'),
			decimals = getOption('decimals');

		if (negative){
			var negativeLocale = getOption('negative') || {};
			if (negativeLocale.prefix == null && negativeLocale.suffix == null) negativeLocale.prefix = '-';
			['prefix', 'suffix'].each(function(key){
				if (negativeLocale[key]) options[key] = getOption(key) + negativeLocale[key];
			});

			value = -value;
		}

		var prefix = getOption('prefix'),
			suffix = getOption('suffix');

		if (decimals !== '' && decimals >= 0 && decimals <= 20) value = value.toFixed(decimals);
		if (precision >= 1 && precision <= 21) value = (+value).toPrecision(precision);

		value += '';
		var index;
		if (getOption('scientific') === false && value.indexOf('e') > -1){
			var match = value.split('e'),
				zeros = +match[1];
			value = match[0].replace('.', '');

			if (zeros < 0){
				zeros = -zeros - 1;
				index = match[0].indexOf('.');
				if (index > -1) zeros -= index - 1;
				while (zeros--) value = '0' + value;
				value = '0.' + value;
			} else {
				index = match[0].lastIndexOf('.');
				if (index > -1) zeros -= match[0].length - index - 1;
				while (zeros--) value += '0';
			}
		}

		if (decimal != '.') value = value.replace('.', decimal);

		if (group){
			index = value.lastIndexOf(decimal);
			index = (index > -1) ? index : value.length;
			var newOutput = value.substring(index),
				i = index;

			while (i--){
				if ((index - i - 1) % 3 == 0 && i != (index - 1)) newOutput = group + newOutput;
				newOutput = value.charAt(i) + newOutput;
			}

			value = newOutput;
		}

		if (prefix) value = prefix + value;
		if (suffix) value += suffix;

		return value;
	},

	formatCurrency: function(decimals){
		var locale = Locale.get('Number.currency') || {};
		if (locale.scientific == null) locale.scientific = false;
		locale.decimals = decimals != null ? decimals
			: (locale.decimals == null ? 2 : locale.decimals);

		return this.format(locale);
	},

	formatPercentage: function(decimals){
		var locale = Locale.get('Number.percentage') || {};
		if (locale.suffix == null) locale.suffix = '%';
		locale.decimals = decimals != null ? decimals
			: (locale.decimals == null ? 2 : locale.decimals);

		return this.format(locale);
	}

});

/*
---

script: URI.js

name: URI

description: Provides methods useful in managing the window location and uris.

license: MIT-style license

authors:
  - Sebastian MarkbÃ¥ge
  - Aaron Newton

requires:
  - Core/Object
  - Core/Class
  - Core/Class.Extras
  - Core/Element
  - String.QueryString

provides: [URI]

...
*/

(function(){

var toString = function(){
	return this.get('value');
};

var URI = this.URI = new Class({

	Implements: Options,

	options: {
		/*base: false*/
	},

	regex: /^(?:(\w+):)?(?:\/\/(?:(?:([^:@\/]*):?([^:@\/]*))?@)?(\[[A-Fa-f0-9:]+\]|[^:\/?#]*)(?::(\d*))?)?(\.\.?$|(?:[^?#\/]*\/)*)([^?#]*)(?:\?([^#]*))?(?:#(.*))?/,
	parts: ['scheme', 'user', 'password', 'host', 'port', 'directory', 'file', 'query', 'fragment'],
	schemes: {http: 80, https: 443, ftp: 21, rtsp: 554, mms: 1755, file: 0},

	initialize: function(uri, options){
		this.setOptions(options);
		var base = this.options.base || URI.base;
		if (!uri) uri = base;

		if (uri && uri.parsed) this.parsed = Object.clone(uri.parsed);
		else this.set('value', uri.href || uri.toString(), base ? new URI(base) : false);
	},

	parse: function(value, base){
		var bits = value.match(this.regex);
		if (!bits) return false;
		bits.shift();
		return this.merge(bits.associate(this.parts), base);
	},

	merge: function(bits, base){
		if ((!bits || !bits.scheme) && (!base || !base.scheme)) return false;
		if (base){
			this.parts.every(function(part){
				if (bits[part]) return false;
				bits[part] = base[part] || '';
				return true;
			});
		}
		bits.port = bits.port || this.schemes[bits.scheme.toLowerCase()];
		bits.directory = bits.directory ? this.parseDirectory(bits.directory, base ? base.directory : '') : '/';
		return bits;
	},

	parseDirectory: function(directory, baseDirectory){
		directory = (directory.substr(0, 1) == '/' ? '' : (baseDirectory || '/')) + directory;
		if (!directory.test(URI.regs.directoryDot)) return directory;
		var result = [];
		directory.replace(URI.regs.endSlash, '').split('/').each(function(dir){
			if (dir == '..' && result.length > 0) result.pop();
			else if (dir != '.') result.push(dir);
		});
		return result.join('/') + '/';
	},

	combine: function(bits){
		return bits.value || bits.scheme + '://' +
			(bits.user ? bits.user + (bits.password ? ':' + bits.password : '') + '@' : '') +
			(bits.host || '') + (bits.port && bits.port != this.schemes[bits.scheme] ? ':' + bits.port : '') +
			(bits.directory || '/') + (bits.file || '') +
			(bits.query ? '?' + bits.query : '') +
			(bits.fragment ? '#' + bits.fragment : '');
	},

	set: function(part, value, base){
		if (part == 'value'){
			var scheme = value.match(URI.regs.scheme);
			if (scheme) scheme = scheme[1];
			if (scheme && this.schemes[scheme.toLowerCase()] == null) this.parsed = { scheme: scheme, value: value };
			else this.parsed = this.parse(value, (base || this).parsed) || (scheme ? { scheme: scheme, value: value } : { value: value });
		} else if (part == 'data'){
			this.setData(value);
		} else {
			this.parsed[part] = value;
		}
		return this;
	},

	get: function(part, base){
		switch (part){
			case 'value': return this.combine(this.parsed, base ? base.parsed : false);
			case 'data' : return this.getData();
		}
		return this.parsed[part] || '';
	},

	go: function(){
		document.location.href = this.toString();
	},

	toURI: function(){
		return this;
	},

	getData: function(key, part){
		var qs = this.get(part || 'query');
		if (!(qs || qs === 0)) return key ? null : {};
		var obj = qs.parseQueryString();
		return key ? obj[key] : obj;
	},

	setData: function(values, merge, part){
		if (typeof values == 'string'){
			var data = this.getData();
			data[arguments[0]] = arguments[1];
			values = data;
		} else if (merge){
			values = Object.merge(this.getData(null, part), values);
		}
		return this.set(part || 'query', Object.toQueryString(values));
	},

	clearData: function(part){
		return this.set(part || 'query', '');
	},

	toString: toString,
	valueOf: toString

});

URI.regs = {
	endSlash: /\/$/,
	scheme: /^(\w+):/,
	directoryDot: /\.\/|\.$/
};

URI.base = new URI(Array.convert(document.getElements('base[href]', true)).getLast(), {base: document.location});

String.implement({

	toURI: function(options){
		return new URI(this, options);
	}

});

})();

/*
---

script: URI.Relative.js

name: URI.Relative

description: Extends the URI class to add methods for computing relative and absolute urls.

license: MIT-style license

authors:
  - Sebastian MarkbÃ¥ge


requires:
  - Class.refactor
  - URI

provides: [URI.Relative]

...
*/

URI = Class.refactor(URI, {

	combine: function(bits, base){
		if (!base || bits.scheme != base.scheme || bits.host != base.host || bits.port != base.port)
			return this.previous.apply(this, arguments);
		var end = bits.file + (bits.query ? '?' + bits.query : '') + (bits.fragment ? '#' + bits.fragment : '');

		if (!base.directory) return (bits.directory || (bits.file ? '' : './')) + end;

		var baseDir = base.directory.split('/'),
			relDir = bits.directory.split('/'),
			path = '',
			offset;

		var i = 0;
		for (offset = 0; offset < baseDir.length && offset < relDir.length && baseDir[offset] == relDir[offset]; offset++);
		for (i = 0; i < baseDir.length - offset - 1; i++) path += '../';
		for (i = offset; i < relDir.length - 1; i++) path += relDir[i] + '/';

		return (path || (bits.file ? '' : './')) + end;
	},

	toAbsolute: function(base){
		base = new URI(base);
		if (base) base.set('directory', '').set('file', '');
		return this.toRelative(base);
	},

	toRelative: function(base){
		return this.get('value', new URI(base));
	}

});

/*
---

script: Assets.js

name: Assets

description: Provides methods to dynamically load JavaScript, CSS, and Image files into the document.

license: MIT-style license

authors:
  - Valerio Proietti

requires:
  - Core/Element.Event
  - MooTools.More

provides: [Assets, Asset.javascript, Asset.css, Asset.image, Asset.images]

...
*/
;(function(){

var Asset = this.Asset = {

	javascript: function(source, properties){
		if (!properties) properties = {};

		var script = new Element('script', {src: source, type: 'text/javascript'}),
			doc = properties.document || document,
			load = properties.onload || properties.onLoad;

		delete properties.onload;
		delete properties.onLoad;
		delete properties.document;

		if (load){
			if (!script.addEventListener){
				script.addEvent('readystatechange', function(){
					if (['loaded', 'complete'].contains(this.readyState)) load.call(this);
				});
			} else {
				script.addEvent('load', load);
			}
		}

		return script.set(properties).inject(doc.head);
	},

	css: function(source, properties){
		if (!properties) properties = {};

		var load = properties.onload || properties.onLoad,
			doc = properties.document || document,
			timeout = properties.timeout || 3000;

		['onload', 'onLoad', 'document'].each(function(prop){
			delete properties[prop];
		});

		var link = new Element('link', {
			type: 'text/css',
			rel: 'stylesheet',
			media: 'screen',
			href: source
		}).setProperties(properties).inject(doc.head);

		if (load){
			// based on article at http://www.yearofmoo.com/2011/03/cross-browser-stylesheet-preloading.html
			var loaded = false, retries = 0;
			var check = function(){
				var stylesheets = document.styleSheets;
				for (var i = 0; i < stylesheets.length; i++){
					var file = stylesheets[i];
					var owner = file.ownerNode ? file.ownerNode : file.owningElement;
					if (owner && owner == link){
						loaded = true;
						return load.call(link);
					}
				}
				retries++;
				if (!loaded && retries < timeout / 50) return setTimeout(check, 50);
			};
			setTimeout(check, 0);
		}
		return link;
	},

	image: function(source, properties){
		if (!properties) properties = {};

		var image = new Image(),
			element = document.id(image) || new Element('img');

		['load', 'abort', 'error'].each(function(name){
			var type = 'on' + name,
				cap = 'on' + name.capitalize(),
				event = properties[type] || properties[cap] || function(){};

			delete properties[cap];
			delete properties[type];

			image[type] = function(){
				if (!image) return;
				if (!element.parentNode){
					element.width = image.width;
					element.height = image.height;
				}
				image = image.onload = image.onabort = image.onerror = null;
				event.delay(1, element, element);
				element.fireEvent(name, element, 1);
			};
		});

		image.src = element.src = source;
		if (image && image.complete) image.onload.delay(1);
		return element.set(properties);
	},

	images: function(sources, options){
		sources = Array.convert(sources);

		var fn = function(){},
			counter = 0;

		options = Object.merge({
			onComplete: fn,
			onProgress: fn,
			onError: fn,
			properties: {}
		}, options);

		return new Elements(sources.map(function(source, index){
			return Asset.image(source, Object.append(options.properties, {
				onload: function(){
					counter++;
					options.onProgress.call(this, counter, index, source);
					if (counter == sources.length) options.onComplete();
				},
				onerror: function(){
					counter++;
					options.onError.call(this, counter, index, source);
					if (counter == sources.length) options.onComplete();
				}
			}));
		}));
	}

};

})();

/*
---

script: Color.js

name: Color

description: Class for creating and manipulating colors in JavaScript. Supports HSB -> RGB Conversions and vice versa.

license: MIT-style license

authors:
  - Valerio Proietti

requires:
  - Core/Array
  - Core/String
  - Core/Number
  - Core/Hash
  - Core/Function
  - MooTools.More

provides: [Color]

...
*/

(function(){

var Color = this.Color = new Type('Color', function(color, type){
	if (arguments.length >= 3){
		type = 'rgb'; color = Array.slice(arguments, 0, 3);
	} else if (typeof color == 'string'){
		if (color.match(/rgb/)) color = color.rgbToHex().hexToRgb(true);
		else if (color.match(/hsb/)) color = color.hsbToRgb();
		else color = color.hexToRgb(true);
	}
	type = type || 'rgb';
	switch (type){
		case 'hsb':
			var old = color;
			color = color.hsbToRgb();
			color.hsb = old;
			break;
		case 'hex': color = color.hexToRgb(true); break;
	}
	color.rgb = color.slice(0, 3);
	color.hsb = color.hsb || color.rgbToHsb();
	color.hex = color.rgbToHex();
	return Object.append(color, this);
});

Color.implement({

	mix: function(){
		var colors = Array.slice(arguments);
		var alpha = (typeOf(colors.getLast()) == 'number') ? colors.pop() : 50;
		var rgb = this.slice();
		colors.each(function(color){
			color = new Color(color);
			for (var i = 0; i < 3; i++) rgb[i] = Math.round((rgb[i] / 100 * (100 - alpha)) + (color[i] / 100 * alpha));
		});
		return new Color(rgb, 'rgb');
	},

	invert: function(){
		return new Color(this.map(function(value){
			return 255 - value;
		}));
	},

	setHue: function(value){
		return new Color([value, this.hsb[1], this.hsb[2]], 'hsb');
	},

	setSaturation: function(percent){
		return new Color([this.hsb[0], percent, this.hsb[2]], 'hsb');
	},

	setBrightness: function(percent){
		return new Color([this.hsb[0], this.hsb[1], percent], 'hsb');
	}

});

this.$RGB = function(r, g, b){
	return new Color([r, g, b], 'rgb');
};

this.$HSB = function(h, s, b){
	return new Color([h, s, b], 'hsb');
};

this.$HEX = function(hex){
	return new Color(hex, 'hex');
};

Array.implement({

	rgbToHsb: function(){
		var red = this[0],
			green = this[1],
			blue = this[2],
			hue = 0,
			max = Math.max(red, green, blue),
			min = Math.min(red, green, blue),
			delta = max - min,
			brightness = max / 255,
			saturation = (max != 0) ? delta / max : 0;

		if (saturation != 0){
			var rr = (max - red) / delta;
			var gr = (max - green) / delta;
			var br = (max - blue) / delta;
			if (red == max) hue = br - gr;
			else if (green == max) hue = 2 + rr - br;
			else hue = 4 + gr - rr;
			hue /= 6;
			if (hue < 0) hue++;
		}
		return [Math.round(hue * 360), Math.round(saturation * 100), Math.round(brightness * 100)];
	},

	hsbToRgb: function(){
		var br = Math.round(this[2] / 100 * 255);
		if (this[1] == 0){
			return [br, br, br];
		} else {
			var hue = this[0] % 360;
			var f = hue % 60;
			var p = Math.round((this[2] * (100 - this[1])) / 10000 * 255);
			var q = Math.round((this[2] * (6000 - this[1] * f)) / 600000 * 255);
			var t = Math.round((this[2] * (6000 - this[1] * (60 - f))) / 600000 * 255);
			switch (Math.floor(hue / 60)){
				case 0: return [br, t, p];
				case 1: return [q, br, p];
				case 2: return [p, br, t];
				case 3: return [p, q, br];
				case 4: return [t, p, br];
				case 5: return [br, p, q];
			}
		}
		return false;
	}

});

String.implement({

	rgbToHsb: function(){
		var rgb = this.match(/\d{1,3}/g);
		return (rgb) ? rgb.rgbToHsb() : null;
	},

	hsbToRgb: function(){
		var hsb = this.match(/\d{1,3}/g);
		return (hsb) ? hsb.hsbToRgb() : null;
	}

});

})();


/*
---

script: Group.js

name: Group

description: Class for monitoring collections of events

license: MIT-style license

authors:
  - Valerio Proietti

requires:
  - Core/Events
  - MooTools.More

provides: [Group]

...
*/

(function(){

var Group = this.Group = new Class({

	initialize: function(){
		this.instances = Array.flatten(arguments);
	},

	addEvent: function(type, fn){
		var instances = this.instances,
			len = instances.length,
			togo = len,
			args = new Array(len),
			self = this;

		instances.each(function(instance, i){
			instance.addEvent(type, function(){
				if (!args[i]) togo--;
				args[i] = arguments;
				if (!togo){
					fn.call(self, instances, instance, args);
					togo = len;
					args = new Array(len);
				}
			});
		});
	}

});

})();

/*
---

script: Hash.Cookie.js

name: Hash.Cookie

description: Class for creating, reading, and deleting Cookies in JSON format.

license: MIT-style license

authors:
  - Valerio Proietti
  - Aaron Newton

requires:
  - Core/Cookie
  - Core/JSON
  - MooTools.More
  - Hash

provides: [Hash.Cookie]

...
*/

Hash.Cookie = new Class({

	Extends: Cookie,

	options: {
		autoSave: true
	},

	initialize: function(name, options){
		this.parent(name, options);
		this.load();
	},

	save: function(){
		var value = JSON.encode(this.hash);
		if (!value || value.length > 4096) return false; //cookie would be truncated!
		if (value == '{}') this.dispose();
		else this.write(value);
		return true;
	},

	load: function(){
		this.hash = new Hash(JSON.decode(this.read(), true));
		return this;
	}

});

Hash.each(Hash.prototype, function(method, name){
	if (typeof method == 'function') Hash.Cookie.implement(name, function(){
		var value = method.apply(this.hash, arguments);
		if (this.options.autoSave) this.save();
		return value;
	});
});

/*
---

name: Swiff

description: Wrapper for embedding SWF movies. Supports External Interface Communication.

license: MIT-style license.

credits:
  - Flash detection & Internet Explorer + Flash Player 9 fix inspired by SWFObject.

requires: [Core/Options, Core/Object, Core/Element]

provides: Swiff

...
*/

(function(){

var Swiff = this.Swiff = new Class({

	Implements: Options,

	options: {
		id: null,
		height: 1,
		width: 1,
		container: null,
		properties: {},
		params: {
			quality: 'high',
			allowScriptAccess: 'always',
			wMode: 'window',
			swLiveConnect: true
		},
		callBacks: {},
		vars: {}
	},

	toElement: function(){
		return this.object;
	},

	initialize: function(path, options){
		this.instance = 'Swiff_' + String.uniqueID();

		this.setOptions(options);
		options = this.options;
		var id = this.id = options.id || this.instance;
		var container = document.id(options.container);

		Swiff.CallBacks[this.instance] = {};

		var params = options.params, vars = options.vars, callBacks = options.callBacks;
		var properties = Object.append({height: options.height, width: options.width}, options.properties);

		var self = this;

		for (var callBack in callBacks){
			Swiff.CallBacks[this.instance][callBack] = (function(option){
				return function(){
					return option.apply(self.object, arguments);
				};
			})(callBacks[callBack]);
			vars[callBack] = 'Swiff.CallBacks.' + this.instance + '.' + callBack;
		}

		params.flashVars = Object.toQueryString(vars);
		if ('ActiveXObject' in window){
			properties.classid = 'clsid:D27CDB6E-AE6D-11cf-96B8-444553540000';
			params.movie = path;
		} else {
			properties.type = 'application/x-shockwave-flash';
		}
		properties.data = path;

		var build = '<object id="' + id + '"';
		for (var property in properties) build += ' ' + property + '="' + properties[property] + '"';
		build += '>';
		for (var param in params){
			if (params[param]) build += '<param name="' + param + '" value="' + params[param] + '" />';
		}
		build += '</object>';
		this.object = ((container) ? container.empty() : new Element('div')).set('html', build).firstChild;
	},

	replaces: function(element){
		element = document.id(element, true);
		element.parentNode.replaceChild(this.toElement(), element);
		return this;
	},

	inject: function(element){
		document.id(element, true).appendChild(this.toElement());
		return this;
	},

	remote: function(){
		return Swiff.remote.apply(Swiff, [this.toElement()].append(arguments));
	}

});

Swiff.CallBacks = {};

Swiff.remote = function(obj, fn){
	var rs = obj.CallFunction('<invoke name="' + fn + '" returntype="javascript">' + __flash__argumentsToXML(arguments, 2) + '</invoke>');
	return eval(rs);
};

})();

/*
---
name: Table
description: LUA-Style table implementation.
license: MIT-style license
authors:
  - Valerio Proietti
requires: [Core/Array]
provides: [Table]
...
*/

(function(){

var Table = this.Table = function(){

	this.length = 0;
	var keys = [],
		values = [];

	this.set = function(key, value){
		var index = keys.indexOf(key);
		if (index == -1){
			var length = keys.length;
			keys[length] = key;
			values[length] = value;
			this.length++;
		} else {
			values[index] = value;
		}
		return this;
	};

	this.get = function(key){
		var index = keys.indexOf(key);
		return (index == -1) ? null : values[index];
	};

	this.erase = function(key){
		var index = keys.indexOf(key);
		if (index != -1){
			this.length--;
			keys.splice(index, 1);
			return values.splice(index, 1)[0];
		}
		return null;
	};

	this.each = this.forEach = function(fn, bind){
		for (var i = 0, l = this.length; i < l; i++) fn.call(bind, keys[i], values[i], this);
	};

};

if (this.Type) new Type('Table', Table);

})();
/**
 * Observer - Observe formelements for changes

 *
 * - Additional code from clientside.cnet.com
 * - note: comes with AutoCompleter http://digitarald.de/project/autocompleter/
 *
 * @version		1.1
 *
 * @license		MIT-style license
 * @author		Harald Kirschner <mail [at] digitarald.de>
 * @copyright	Author
 */
var Observer = new Class({

	Implements: [Options, Events],

	options: {
		periodical: false,
		delay: 1000
	},

	initialize: function(el, onFired, options){
		this.element = $(el) || $$(el);
		this.addEvent('onFired', onFired);
		this.setOptions(options);
		this.bound = this.changed.bind(this);
		this.resume();
	},

	changed: function() {
		var value = this.element.get('value');
		if ($equals(this.value, value)) return;
		this.clear();
		this.value = value;
		this.timeout = this.onFired.delay(this.options.delay, this);
	},

	setValue: function(value) {
		this.value = value;
		this.element.set('value', value);
		return this.clear();
	},

	onFired: function() {
		this.fireEvent('onFired', [this.value, this.element]);
	},

	clear: function() {
		clearTimeout(this.timeout || null);
		return this;
	},

	pause: function(){
		if (this.timer) clearInterval(this.timer);
		else this.element.removeEvent('keyup', this.bound);
		return this.clear();
	},

	resume: function(){
		this.value = this.element.get('value');
		if (this.options.periodical) this.timer = this.changed.periodical(this.options.periodical, this);
		else this.element.addEvent('keyup', this.bound);
		return this;
	}

});

var $equals = function(obj1, obj2) {
	return (obj1 == obj2 || JSON.encode(obj1) == JSON.encode(obj2));
};/*
---
description: Overlay

authors:
  - David Walsh (http://davidwalsh.name)

license:
  - MIT-style license

requires:
  core/1.2.1: '*'

provides:
  - Overlay
...
*/

var Overlay = new Class({

	Implements: [Options, Events],

	options: {
		color: '#000',
		duration: 500,
		opacity: 0.5,
		zIndex: 5000/*,
		onClick: function() {},
		onClose: function() {},
		onHide: function() {},
		onOpen: function() {},
		onShow: function() {}
		*/
	},

	initialize: function(container, options){
		this.setOptions(options);
		this.container = document.id(container);
		this.overlay = new Element('div', {
			id: this.options.id,
			class: 'overlay',
			styles: {
				position: 'fixed',
				background: this.options.color,
				left: 0,
				top: 0,
				opacity: 0,
				'z-index': this.options.zIndex
			},
			events: {
				click: function(){
					this.fireEvent('click');
				}.bind(this)
			}
		}).inject(this.container);
		this.tween = new Fx.Tween(this.overlay, {
			duration: this.options.duration,
			link: 'cancel',
			property: 'opacity',
			onStart: function(){
				this.overlay.setStyles({
					width: '100%',
					height: this.container.getScrollSize().y
				});
			}.bind(this),
			onComplete: function(){
				this.fireEvent(this.overlay.get('opacity') == this.options.opacity ? 'show' : 'hide');
			}.bind(this)
		});
		window.addEvents({
			'resize': function(){
				this.resize();
			}.bind(this),
			'scroll': function(){
				this.scroll();
			}.bind(this)
		});
	},

	open: function(){
		this.fireEvent('open');
		this.tween.start(this.options.opacity);
		return this;
	},

	close: function(){
		this.fireEvent('close');
		this.tween.start(0);
		return this;
	},

	resize: function(){
		this.fireEvent('resize');
		this.overlay.setStyle('height', this.container.getScrollSize().y);
		return this;
	},

	scroll: function(){
		this.fireEvent('scroll');
		return this;
	},

	dispose: function() {
		this.overlay.hide();
		this.overlay.destroy();
	}

});/**
 * Autocompleter
 *
 * http://digitarald.de/project/autocompleter/
 *
 * @version		1.1.2
 *
 * @license		MIT-style license
 * @author		Harald Kirschner <mail [at] digitarald.de>
 * @copyright	Author
 */

var Autocompleter = new Class({

	Implements: [Options, Events],

	options: {/*
		onOver: function() {},
		onSelect: function() {},
		onSelection: function() {},
		onShow: function() {},
		onHide: function() {},
		onBlur: function() {},
		onFocus: function() {},*/
		minLength: 1,
		markQuery: true,
		width: 'inherit',
		maxChoices: 10,
		injectChoice: null,
		customChoices: null,
		emptyChoices: null,
		visibleChoices: true,
		className: 'autocompleter-choices',
		zIndex: 42,
		delay: 400,
		observerOptions: {},
		fxOptions: {},

		autoSubmit: false,
		overflow: false,
		overflowMargin: 25,
		selectFirst: false,
		filter: null,
		filterCase: false,
		filterSubset: false,
		forceSelect: false,
		selectMode: true,
		choicesMatch: null,

		multiple: false,
		separator: ', ',
		separatorSplit: /\s*[,;]\s*/,
		autoTrim: false,
		allowDupes: false,

		relative: false
	},

	initialize: function(element, options) {
		this.element = $(element);
		this.setOptions(options);
		this.build();
		this.observer = new Observer(this.element, this.prefetch.bind(this), Object.merge({
			'delay': this.options.delay
		}, this.options.observerOptions));
		this.searchFor = null;
		this.queryValue = null;
		if (this.options.filter) this.filter = this.options.filter.bind(this);
		var mode = this.options.selectMode;
		this.typeAhead = (mode == 'type-ahead');
		this.selectMode = (mode === true) ? 'selection' : mode;
	},

	/**
	 * build - Initialize DOM
	 *
	 * Builds the html structure for choices and appends the events to the element.
	 * Override this function to modify the html generation.
	 */
	build: function() {
		if ($(this.options.customChoices)) {
			this.choices = this.options.customChoices;
		} else {
			this.choices = new Element('ul', {
				'class': this.options.className,
				'styles': {
					'zIndex': this.options.zIndex
				}
			}).inject(document.body);
			this.relative = false;
			if (this.options.relative) {
				this.choices.inject(this.element, 'after');
				this.relative = this.element.getOffsetParent();
			}
			this.fix = new OverlayFix(this.choices);
		}
		if (!this.options.separator.test(this.options.separatorSplit)) {
			this.options.separatorSplit = this.options.separator;
		}
		this.fx = (!this.options.fxOptions) ? null : new Fx.Tween(this.choices, Object.merge({
			'property': 'opacity',
			'link': 'cancel',
			'duration': 200
		}, this.options.fxOptions)).addEvent('onStart', Chain.prototype.clearChain).set(0);
		this.element.setProperty('autocomplete', 'off')
			.addEvent((Browser.name == 'ie' || Browser.name == 'chrome' || Browser.name == 'safari') ? 'keydown' : 'keypress', this.onCommand.bind(this))
			.addEvent('click', this.onCommand.bind(this, false))
			.addEvent('focus', (function()
			{
				this.toggleFocus.delay(100, this, true);
			}).bind(this))
			.addEvent('blur', (function()
			{
				this.toggleFocus.delay(100, this, false);
			}).bind(this));
	},

	destroy: function() {
		if (this.fix) this.fix.destroy();
		this.choices = this.selected = this.choices.destroy();
	},

	toggleFocus: function(state) {
		this.focussed = state;
		if (!state) this.hideChoices(true);
		this.fireEvent((state) ? 'onFocus' : 'onBlur', [this.element]);
	},

	onCommand: function(e) {
		if (!e && this.focussed) return this.prefetch();
		if (e && e.key && !e.shift) {
			switch (e.key) {
				case 'enter':
					if (this.element.value != this.opted) return true;
					if (this.selected && this.visible) {
						this.choiceSelect(this.selected);
						return !!(this.options.autoSubmit);
					}
					break;
				case 'up': case 'down':
					if (!this.prefetch() && this.queryValue !== null) {
						var up = (e.key == 'up');
						this.choiceOver((this.selected || this.choices)[
							(this.selected) ? ((up) ? 'getPrevious' : 'getNext') : ((up) ? 'getLast' : 'getFirst')
						](this.options.choicesMatch), true);
					}
					return false;
				case 'esc': case 'tab':
					this.hideChoices(true);
					break;
			}
		}
		return true;
	},

	setSelection: function(finish) {
		var input = this.selected.inputValue, value = input;
		var start = this.searchFor.length, end = input.length;
		if (input.substr(0, start).toLowerCase() != this.searchFor.toLowerCase()) start = 0;
		if (this.options.multiple) {
			var split = this.options.separatorSplit;
			value = this.element.value;
			start += this.queryIndex;
			end += this.queryIndex;
			var old = value.substr(this.queryIndex).split(split, 1)[0];
			value = value.substr(0, this.queryIndex) + input + value.substr(this.queryIndex + old.length);
			if (finish) {
				var tokens = value.split(this.options.separatorSplit).filter(function(entry) {
					return this.test(entry);
				}, /[^\s,]+/);
				if (!this.options.allowDupes) tokens = [].combine(tokens);
				var sep = this.options.separator;
				value = tokens.join(sep) + sep;
				end = value.length;
			}
		}
		this.observer.setValue(value);
		this.opted = value;
		if (finish || this.selectMode == 'pick') start = end;
		this.element.selectRange(start, end);
		this.fireEvent('onSelection', [this.element, this.selected, value, input]);
	},

	showChoices: function() {
		var match = this.options.choicesMatch, first = this.choices.getFirst(match);
		this.selected = this.selectedValue = null;
		if (this.fix) {
			var pos = this.element.getCoordinates(this.relative), width = this.options.width || 'auto';
			this.choices.setStyles({
				'left': pos.left,
				'top': pos.bottom,
				'width': (width === true || width == 'inherit') ? pos.width : width
			});
		}
		if (!first) return;
		if (!this.visible) {
			this.visible = true;
			this.choices.setStyle('display', '');
			if (this.fx) this.fx.start(1);
			this.fireEvent('onShow', [this.element, this.choices]);
		}
		if (this.options.selectFirst || this.typeAhead || first.inputValue == this.searchFor) this.choiceOver(first, this.typeAhead);
		var items = this.choices.getChildren(match), max = this.options.maxChoices;

		var styles = {'overflowY': 'hidden', 'height': ''};
		this.overflown = false;
		if (items.length > max) {
			var item = items[max - 1];
			styles.overflowY = 'scroll';
			styles.height = item.getCoordinates(this.choices).bottom;
			this.overflown = true;
		};
		this.choices.setStyles(styles);
		this.fix.show();
		if (this.options.visibleChoices) {
			var scroll = document.getScroll(),
			size = document.getSize(),
			coords = this.choices.getCoordinates();
			if (coords.right > scroll.x + size.x) scroll.x = coords.right - size.x;
			if (coords.bottom > scroll.y + size.y) scroll.y = coords.bottom - size.y;
			window.scrollTo(Math.min(scroll.x, coords.left), Math.min(scroll.y, coords.top));
		}
	},

	hideChoices: function(clear) {
		if (clear) {
			var value = this.element.value;
			if (this.options.forceSelect) value = this.opted;
			if (this.options.autoTrim) {
				value = value.split(this.options.separatorSplit).filter(function(entry){return entry;}).join(this.options.separator);
			}
			this.observer.setValue(value);
		}
		if (!this.visible) return;
		this.visible = false;
		if (this.selected) this.selected.removeClass('autocompleter-selected');
		this.observer.clear();
		var hide = function(){
			this.choices.setStyle('display', 'none');
			this.fix.hide();
		}.bind(this);
		if (this.fx) this.fx.start(0).chain(hide);
		else hide();
		this.fireEvent('onHide', [this.element, this.choices]);
	},

	prefetch: function() {
		var value = this.element.value, query = value, queryFor = value;
		if (this.options.multiple) {
			var split = this.options.separatorSplit;
			var index = this.element.getSelectedRange().start;
			var toIndex = value.substr(0, index).split(split);
			var last = toIndex.length - 1;
			index -= toIndex[last].length;
			query = toIndex;
			queryFor = toIndex[last].toLowerCase();
		}
		if (queryFor.length < this.options.minLength) {
			this.hideChoices();
		} else {
			if (queryFor === this.searchFor || (this.visible && query == this.selectedValue)) {
				if (this.visible) return false;
				this.showChoices();
			} else {
				this.searchFor = queryFor;
				this.queryValue = query;
				this.queryIndex = index;
				this.query();
			}
		}
		return true;
	},

	update: function(tokens) {
		this.choices.empty();
		var type = tokens && typeOf(tokens);
		if (type == 'null' || (type == 'array' && !tokens.length) || (type == 'hash' && !tokens.getLength())) {
			(this.options.emptyChoices || this.hideChoices).call(this);
		} else {
			if (this.options.maxChoices < tokens.length && !this.options.overflow) tokens.length = this.options.maxChoices;
			tokens.each(this.options.injectChoice || function(token){
				var choice = new Element('li', {'html': this.markQueryValue(token)});
				choice.inputValue = token;
				this.addChoiceEvents(choice).inject(this.choices);
			}, this);
			this.showChoices();
		}
	},

	choiceOver: function(choice, selection) {
		if (!choice || choice == this.selected) return;
		if (this.selected) this.selected.removeClass('autocompleter-selected');
		this.selected = choice.addClass('autocompleter-selected');
		this.fireEvent('onSelect', [this.element, this.selected, selection]);
		if (!this.selectMode) this.opted = this.element.value;
		if (!selection) return;
		this.selectedValue = this.selected.inputValue;
		if (this.overflown) {
			var coords = this.selected.getCoordinates(this.choices), margin = this.options.overflowMargin,
				top = this.choices.scrollTop, height = this.choices.offsetHeight, bottom = top + height;
			if (coords.top - margin < top && top) this.choices.scrollTop = Math.max(coords.top - margin, 0);
			else if (coords.bottom + margin > bottom) this.choices.scrollTop = Math.min(coords.bottom - height + margin, bottom);
		}
		if (this.selectMode) this.setSelection();
	},

	choiceSelect: function(choice) {
		if (choice) this.choiceOver(choice);
		this.setSelection(true);
		this.searchFor = false;
		this.hideChoices();
	},

	filter: function(tokens) {
		return (tokens || this.tokens).filter(function(token) {
			return this.test(token);
		}, new RegExp(((this.options.filterSubset) ? '' : '^') + this.searchFor.escapeRegExp(), (this.options.filterCase) ? '' : 'i'));
	},

	/**
	 * markQueryValue
	 *
	 * Marks the queried word in the given string with <span class="autocompleter-queried">*</span>
	 * Call this i.e. from your custom parseChoices, same for addChoiceEvents
	 *
	 * @param		{String} Text
	 * @return		{String} Text
	 */
	markQueryValue: function(str) {
		return (!this.options.markQuery || !this.searchFor) ? str
			: str.replace(new RegExp('(' + ((this.options.filterSubset) ? '' : '^') + this.searchFor.escapeRegExp() + ')', (this.options.filterCase) ? '' : 'i'), '<span class="autocompleter-queried">$1</span>');
	},

	/**
	 * addChoiceEvents
	 *
	 * Appends the needed event handlers for a choice-entry to the given element.
	 *
	 * @param		{Element} Choice entry
	 * @return		{Element} Choice entry
	 */
	addChoiceEvents: function(el) {
		return el.addEvents({
			'mouseover': this.choiceOver.bind(this, el),
			'click': this.choiceSelect.bind(this, el)
		});
	}
});

var OverlayFix = new Class({

	initialize: function(el) {
		if (Browser.name == 'ie') {
			this.element = $(el);
			this.relative = this.element.getOffsetParent();
			this.fix = new Element('iframe', {
				'frameborder': '0',
				'scrolling': 'no',
				'src': 'javascript:false;',
				'styles': {
					'position': 'absolute',
					'border': 'none',
					'display': 'none',
					'filter': 'progid:DXImageTransform.Microsoft.Alpha(opacity=0)'
				}
			}).inject(this.element, 'after');
		}
	},

	show: function() {
		if (this.fix) {
			var coords = this.element.getCoordinates(this.relative);
			delete coords.right;
			delete coords.bottom;
			this.fix.setStyles(Object.append(coords, {
				'display': '',
				'zIndex': (this.element.getStyle('zIndex') || 1) - 1
			}));
		}
		return this;
	},

	hide: function() {
		if (this.fix) this.fix.setStyle('display', 'none');
		return this;
	},

	destroy: function() {
		if (this.fix) this.fix = this.fix.destroy();
	}

});

Element.implement({

	getSelectedRange: function() {
		if (Browser.name == 'ie' && Browser.version < 11) {
			var pos = {start: 0, end: 0};
			var range = this.getDocument().selection.createRange();
			if (!range || range.parentElement() != this) return pos;
			var dup = range.duplicate();
			if (this.type == 'text') {
				pos.start = 0 - dup.moveStart('character', -100000);
				pos.end = pos.start + range.text.length;
			} else {
				var value = this.value;
				var offset = value.length - value.match(/[\n\r]*$/)[0].length;
				dup.moveToElementText(this);
				dup.setEndPoint('StartToEnd', range);
				pos.end = offset - dup.text.length;
				dup.setEndPoint('StartToStart', range);
				pos.start = offset - dup.text.length;
			}
			return pos;
		} else {
			return {start: this.selectionStart, end: this.selectionEnd};
		}
	},

	selectRange: function(start, end) {
		if (Browser.name == 'ie') {
			var diff = this.value.substr(start, end - start).replace(/\r/g, '').length;
			start = this.value.substr(0, start).replace(/\r/g, '').length;
			var range = this.createTextRange();
			range.collapse(true);
			range.moveEnd('character', start + diff);
			range.moveStart('character', start);
			range.select();
		} else {
			this.focus();
			this.setSelectionRange(start, end);
		}
		return this;
	}

});

/* compatibility */

Autocompleter.Base = Autocompleter;/**
 * Autocompleter.Local
 *
 * http://digitarald.de/project/autocompleter/
 *
 * @version		1.1.2
 *
 * @license		MIT-style license
 * @author		Harald Kirschner <mail [at] digitarald.de>
 * @copyright	Author
 */

Autocompleter.Local = new Class({

	Extends: Autocompleter,

	options: {
		minLength: 0,
		delay: 200
	},

	initialize: function(element, tokens, options) {
		this.parent(element, options);
		this.tokens = tokens;
	},

	query: function() {
		this.update(this.filter());
	}

});/**
 * Autocompleter.Request
 *
 * http://digitarald.de/project/autocompleter/
 *
 * @version		1.1.2
 *
 * @license		MIT-style license
 * @author		Harald Kirschner <mail [at] digitarald.de>
 * @copyright	Author
 */

Autocompleter.Request = new Class({

	Extends: Autocompleter,

	options: {/*
		indicator: null,
		indicatorClass: null,
		onRequest: function() {},
		onComplete: function() {},*/
		postData: {},
		ajaxOptions: {},
		postVar: 'value'

	},

	query: function(){
		var data = Object.clone(this.options.postData) || {};
		data[this.options.postVar] = this.queryValue;
		var indicator = $(this.options.indicator);
		if (indicator) indicator.setStyle('display', '');
		var cls = this.options.indicatorClass;
		if (cls) this.element.addClass(cls);
		this.fireEvent('onRequest', [this.element, this.request, data, this.queryValue]);
		this.request.send({'data': data});
	},

	/**
	 * queryResponse - abstract
	 *
	 * Inherated classes have to extend this function and use this.parent()
	 */
	queryResponse: function() {
		var indicator = $(this.options.indicator);
		if (indicator) indicator.setStyle('display', 'none');
		var cls = this.options.indicatorClass;
		if (cls) this.element.removeClass(cls);
		return this.fireEvent('onComplete', [this.element, this.request]);
	}

});

Autocompleter.Request.JSON = new Class({

	Extends: Autocompleter.Request,

	initialize: function(el, url, options) {
		this.parent(el, options);
        var that = this;
        this.request = new Request(Object.merge({
            'url': url,
            'link': 'cancel',
            'onSuccess': function(data) {
                try {
                    var response = JSON.decode(data);
                }catch (e) {
                    return;
                }
                that.queryResponse(response.response);
            }
        }, this.options.ajaxOptions));
	},

	queryResponse: function(response) {
		this.parent();
		this.update(response);
	}

});

Autocompleter.Request.HTML = new Class({

	Extends: Autocompleter.Request,

	initialize: function(el, url, options) {
		this.parent(el, options);
		this.request = new Request.HTML(Object.merge({
			'url': url,
			'link': 'cancel',
			'update': this.choices
		}, this.options.ajaxOptions)).addEvent('onComplete', this.queryResponse.bind(this));
	},

	queryResponse: function(tree, elements) {
		this.parent();
		if (!elements || !elements.length) {
			this.hideChoices();
		} else {
			this.choices.getChildren(this.options.choicesMatch).each(this.options.injectChoice || function(choice) {
				var value = choice.innerHTML;
				choice.inputValue = value;
				this.addChoiceEvents(choice.set('html', this.markQueryValue(value)));
			}, this);
			this.showChoices();
		}

	}

});

/* compatibility */

Autocompleter.Ajax = {
	Base: Autocompleter.Request,
	Json: Autocompleter.Request.JSON,
	Xhtml: Autocompleter.Request.HTML
};
window.$w = function(string)
{
	return Array.convert(String(string).split(' '));
};

/**
 * Function Extension
 */
Function.implement(
{
	/**
	 * Partially applies the function, returning a function with one or more arguments already â€œfilled in.â€
	 *
	 * @param {*} arguments
	 * @return {function}
	 */
	curry: function()
	{
		if (!arguments.length)
		{
			return this;
		}
		var __method = this;
		var __args = Array.prototype.slice.call(Array.convert(arguments), 0);

	    return function()
	    {
	    	return __method.apply(this, __args.concat(Array.convert(arguments)));
	    };
	},

	/**
	 * Returns a function â€œwrappedâ€ around the original function.
	 *
	 * @param {function} wrapper
	 * @param {*} arguments
	 * @return {function}
	 */
	wrap: function(wrapper)
	{
		var __method = this;
		return function()
		{
			return wrapper.apply(this, [__method.bind(this)].concat(Array.convert(arguments)));
		};
	}
});

/**
 * Object Extension
 */
Object.append(Object,
{
	/**
	 * Etwas nach HTML konvertieren
	 *
	 * @return string
	 */
	toHTML: function(object)
	{
		return object && object.toHTML ? object.toHTML() : (object == null ? '' : String(object));
	}
});

/**
 * Array Extension
 */
Array.implement(
{
	/**
	 * find a element via function
	 *
	 * @param {function} fn
	 * @param {object} scope
	 * @return mixed
	 */
	find: function(fn, scope)
	{
		var result = undefined;
		var fnCall = fn;

		if (scope)
		{
			fnCall = fnCall.bind(scope);
		}

		this.some(function(item, index, array)
		{
			if (fnCall(item, index, array))
			{
				result = item;
				return true;
			}

			return false;
		});

		return result;
	},

	/**
	 * inject
	 *
	 * @param {*} acc
	 * @param {function} fn
	 * @returns {*}
	 */
	inject: function(acc, fn)
	{
		this.each(function(value, index, array)
		{
			acc = fn(acc, value, index, array);
		});

		return acc;
	},

	/**
	 * invokes the fn on all elements
	 *
	 * @param {string} fn
	 * @return {Array}
	 */
	invoke: function(fn)
	{
		this.each(function(element)
		{
			// wir mÃ¼ssen auf Element prÃ¼fen, weil im IE wird ein Array immer von 0 Ã¼ber 1 Ã¼ber 2 usw aufgezÃ¤hlt
			// auch wenn nur die EintrÃ¤ge 0 und 3 vorhanden sind
			if (element && element[fn])
			{
				element[fn]();
			}
		});

		return this;
	}
});

(function()
{
	var prototypingElement = Element.prototype;

	// Apparently, IE treats DOM objects and Javascript objects separately, and you can't extend the DOM objects using Object.prototype.
	if (Browser.name == 'ie' && Browser.version < 9)
	{
		// Element.Prototype is use by mootools
		prototypingElement = Element.Prototype;
	}

	Element.addClass = Element.addClass.wrap(function(proceed, element, classes)
	{
		if (typeOf(classes) != 'array')
		{
			classes = $w(classes);
		}
		if (typeOf(classes) == 'array')
		{
			classes.each(function(className)
			{
				proceed(className);
			});
		}
		else
		{
			proceed(classes);
		}

		return element;
	});

	prototypingElement.addClass = prototypingElement.addClass.wrap(function(proceed, classes)
	{
		if (typeOf(classes) != 'array')
		{
			classes = $w(classes);
		}
		if (typeOf(classes) == 'array')
		{
			classes.each(function(className)
			{
				proceed(className);
			});
		}
		else
		{
			proceed(classes);
		}

		return this;
	});

	Element.removeClass = Element.removeClass.wrap(function(proceed, element, classes)
	{
		if (typeOf(classes) != 'array')
		{
			classes = $w(classes);
		}
		if (typeOf(classes) == 'array')
		{
			classes.each(function(className)
			{
				proceed(className);
			});
		}
		else
		{
			proceed(classes);
		}

		return element;
	});

	prototypingElement.removeClass = prototypingElement.removeClass.wrap(function(proceed, classes)
	{
		if (typeOf(classes) != 'array')
		{
			classes = $w(classes);
		}
		if (typeOf(classes) == 'array')
		{
			classes.each(function(className)
			{
				proceed(className);
			});
		}
		else
		{
			proceed(classes);
		}

		return this;
	});
})();

/**
 * Element Extension
 */
Element.implement(
{
	/**
	 * deaktiviert das markieren im Browser
	 *
	 * @var element
	 */
	disableSelection: function()
	{
		// selectable ist nun aus fÃ¼r gecko, webkit... nix mehr mit markieren
		return this.setStyles(
		{
			MozUserSelect:		'none',
			KhtmlUserSelect:	'none'
		})

		// selectable ist nun aus trident und presto... nix mehr mit markieren
		.setProperty('unselectable', 'on');
	},

	/**
	 * alias fÃ¼r getElement
	 *
	 * @return element
	 */
	down: function(selector)
	{
		return this.getElement(selector);
	},

	/**
	 * returns the end of the selection in a input or textarea
	 * if nothing is selected, return the current cursor position
	 *
	 * @return int
	 */
    getSelectionEnd: function()
    {
        if (this.createTextRange)
        {
            var r;
            // for IE < 11, getSelection is not available, so just use selection
            if(document.selection)
            {
                r = document.selection.createRange().duplicate();
                r.moveEnd('character', -this.value.length);

                return r.text.length;
            }
            // for IE >= 11 selection is not available anymore, use getSelection instead
            else if(document.getSelection)
            {
                r = document.getSelection();

                return r.length;
            }
        }

        return this.selectionEnd;
    },

	/**
	 * returns the starting position of a selection in an input or textarea field
	 * if nothing is selected, return the current cursor position
	 *
	 * @return int
	 */
	getSelectionStart: function()
	{
		if (this.createTextRange)
		{
            var r;
            // for IE < 11, getSelection is not available, so just use selection
            if(document.selection)
            {
                r = document.selection.createRange().duplicate();
                r.moveEnd('character', this.value.length);
            }
            // for IE >= 11 selection is not available anymore, use getSelection instead
            else if(document.getSelection)
            {
                r = document.getSelection();
            }

			if (r.text == '')
			{
				return this.value.length;
			}

			return this.value.lastIndexOf(r.text);
		}

		return this.selectionStart;
	},

	/**
	 * insert({ position: content }) -> HTMLElement
	 * insert(content) -> HTMLElement
	 * Inserts content before, after, at the top of, or at the bottom of element, as specified by
	 * the position property of the second argument. If the second argument is the content itself,
	 * insert will append it to element.
	 * insert accepts the following kind of content: text, HTML, DOM element, and any kind of
	 * object with a toHTML or toElement method.
	 * Note that if the inserted HTML contains any <script> tag, these will be automatically
	 * evaluated after the insertion (insert internally calls String#evalScripts when inserting HTML).
	 *
	 * @return {HTMLElement}
	 */
	insert: function(insertions)
	{
		var element = $(this);
		var _insertionTranslations = {
		  before: function(element, node) {
		    element.parentNode.insertBefore(node, element);
		  },
		  top: function(element, node) {
		    element.insertBefore(node, element.firstChild);
		  },
		  bottom: function(element, node) {
		    element.appendChild(node);
		  },
		  after: function(element, node) {
		    element.parentNode.insertBefore(node, element.nextSibling);
		  },
		  tags: {
		    TABLE:  ['<table>',                '</table>',                   1],
		    TBODY:  ['<table><tbody>',         '</tbody></table>',           2],
		    TR:     ['<table><tbody><tr>',     '</tr></tbody></table>',      3],
		    TD:     ['<table><tbody><tr><td>', '</td></tr></tbody></table>', 4],
		    SELECT: ['<select>',               '</select>',                  1]
		  }
		};

		/**
		 * Liefert die Nodes fÃ¼r HTML Text
		 *
		 * @param {string} tagName
		 * @param {string} html
		 * @return {Array}
		 */
		var _getContentFromAnonymousElement = function(tagName, html)
		{
			var div = new Element('div'), t = _insertionTranslations.tags[tagName];
			if (t)
			{
				div.innerHTML = t[0] + html + t[1];
				t[2].times(function()
				{
					div = div.firstChild;
				});
			}
			else
			{
				div.innerHTML = html;
			}

			return Array.convert(div.childNodes);
		};

		if (typeof insertions == 'string' || typeof insertions == 'number' || (insertions.nodeName && insertions.nodeType == 1 /*element*/) || (insertions && (insertions.toElement || insertions.toHTML)))
		{
			insertions = {bottom:insertions};
		}

		var content, insert, tagName, childNodes;

		for (var position in insertions)
		{
			content  = insertions[position];
			position = position.toLowerCase();
			insert = _insertionTranslations[position];

			if (content && content.toElement)
			{
				content = content.toElement();
			}
			if (content.nodeName && content.nodeType == 1 /*element*/)
			{
				insert(element, content);
				continue;
			}

			content = Object.toHTML(content);

			tagName = ((position == 'before' || position == 'after') ? element.parentNode : element).tagName.toUpperCase();

			childNodes = _getContentFromAnonymousElement(tagName, content);

			if (position == 'top' || position == 'after')
			{
				childNodes.reverse();
			}
			childNodes.each(function(childNode)
			{
				insert(element, childNode);
			});

			/**
			 * Script Tags in dem neuen Element suchen und diese dann ausfÃ¼hren, da diese leider NICHT
			 * automatisch ausgefÃ¼hrt werden.
			 *
			 * Script Tags werden nicht ausgefÃ¼hrt. Folgende Browser wurden getestet:
			 * IE6, IE7, IE8, IE9, FF 15.0.1, Chrome 21, Safari 5.1.7, Opera 12
			 *
			 */
			element.select('script').each(function(scriptTag)
			{
				Browser.exec(scriptTag.text);
			});
		}

		return element;
	},

	/**
	 * next element
	 *
	 * @return {HTMLElement}
	 */
	next: function (selector)
	{
		return this.getNext(selector);
	},

	/**
	 * previous element
	 *
	 * @return {HTMLElement}
	 */
	prev: function(selector)
	{
		return this.getPrevious(selector);
	},

	/**
	 * alle Elements mit dem Selector
	 *
	 * @return {Array}
	 */
	select: function(selector)
	{
		var $this = this;
		var result = [];

		Array.convert(arguments).each(function(selector)
		{
			var subResult = $this.getElements(selector);

			if (typeOf(subResult) == 'elements')
			{
				result = result.concat(Array.convert(subResult));
			}
		});

		return result;
	},

	/**
	 * Setzt die HÃ¶he und Breite eines Elementes
	 *
	 * @param {int|array|object} width
	 * @param {int} height
	 */
	setSize: function(width, height)
	{
		if (width && width.$family && width.$family.name == 'array')
		{
			height = width[1];
			width = width[0];
		}
		else if (typeof width == 'object')
		{
			if (typeof width.x == 'number')
			{
				height = width.y;
				width = width.x;
			}
			else
			{
				height = width.height;
				width = width.width;
			}
		}

		return this.setStyles(
		{
			'width':	width,
			'height':	height
		});
	},

	/**
	 * Serialize form data to a Hash for Ajax requests, where keys are form control names and values are data.
	 */
	serializeForm: function(options)
	{
		return Form.serialize(this, options);
	},

	/**
	 * alias fÃ¼r getParent
	 *
	 * @return {HTMLElement}
	 */
	up: function(selector)
	{
		return this.getParent(selector);
	},

	/**
	 * Filter fÃ¼r ein Input Element um nur bestimmte Zeichen
	 * mithilfe eines Regex zuzulassen
	 *
	 * 	Example:
	 *	element.filterInput(
	 *		{
	 *			regex: /^([0-9]{1,4})$/,
	 *			success: function(value) { .. }
	 *			failure: function(value) { .. }
	 * 		}
	 *	);
	 *
	 */
	filterInput: function (options)
	{

		var regex = options.regex;

		var $this = this;

		function getInputSelection (el)
		{
			var start = 0, end = 0, normalizedValue, range,
				textInputRange, len, endRange;

			if (typeof el.selectionStart == "number" && typeof el.selectionEnd == "number")
			{
				start = el.selectionStart;
				end = el.selectionEnd;
			} else
			{
				el.focus();
				range = document.selection.createRange();

				if (range && range.parentElement() == el)
				{
					len = el.value.length;
					normalizedValue = el.value.replace(/\r\n/g, "\n");

					// Create a working TextRange that lives only in the input
					textInputRange = el.createTextRange();
					textInputRange.moveToBookmark(range.getBookmark());

					// Check if the start and end of the selection are at the very end
					// of the input, since moveStart/moveEnd doesn't return what we want
					// in those cases
					endRange = el.createTextRange();
					endRange.collapse(false);

					if (textInputRange.compareEndPoints("StartToEnd", endRange) > -1)
					{
						start = end = len;
					} else
					{
						start = -textInputRange.moveStart("character", -len);
						start += normalizedValue.slice(0, start).split("\n").length - 1;

						if (textInputRange.compareEndPoints("EndToEnd", endRange) > -1)
						{
							end = len;
						} else
						{
							end = -textInputRange.moveEnd("character", -len);
							end += normalizedValue.slice(0, end).split("\n").length - 1;
						}
					}
				}
			}

			return {
				start: start,
				end: end
			};
		}

		function filterInputFunction (e)
		{

			// In most browsers the key event is sent to the handler.
			// Not so in Internet Explorer. The line means:
			// take the given event e from the arguments of the handler function,
			// and if that's false or null, use the event of the global object (ie window).
			e = e || event;

			// hole value aus dem input feld
			var value = $this.get('value');

			// key code der gedrueckten taste
			var charCode = 0;
			var keyCode = 0;

			if(e.type == "keypress"){
				charCode = e.event.charCode | charCode;
			}
			else{
				keyCode = e.event.keyCode | keyCode;
			}

			// finde heraus, wo der cursor ist und ob etwas selektiert wurde
			var inputSelection = getInputSelection(e.target);

			// Abbrechen bei bestimmten Tasten
			// alle keyCodes zulassen (keine CharCodes) auÃŸer die fÃ¼r Backspace und entfernen
			if (charCode == 0 && keyCode != 8 && keyCode != 46)
			{
				return true;
			}

			// behandle backspace und entfernen
			if (charCode == 0 && (keyCode == 8 || keyCode == 46))
			{
				if (typeof(options.success) === 'function')
				{

					/**
					 * Sind mehrere Zeichen selektiert, haben ENTF und Backspace das gleiche verhalten.
					 * Lediglich wenn kein Zeichen markiert wurde, gelten unterschiedliche Logiken
					 *
					 * Im folgenden Code sind jeweils die FÃ¤lle mit Beispiel aufgelistet.
					 * [12]34 bedeutet, dass 12 selektiert wurden, 34 nicht.
					 *
					 * 1|234 bedeutet, dass sich der Cursor zwischen 1 und 234 befindet.
					 */

					var newVal = '';
					// [12]34 oder [123]4
					if (inputSelection.start == 0 && (inputSelection.end - inputSelection.start) > 0)
					{
						newVal = value.substr(0, inputSelection.start - 1) + value.substr(inputSelection.end);
					}
					// 12[34] oder 1[234]
					else if (inputSelection.end == value.length && (inputSelection.end - inputSelection.start) > 0)
					{
						newVal = value.substr(0, inputSelection.start) + value.substr(inputSelection.end + 1);
					}
					// 1[23]4
					else if ((inputSelection.end - inputSelection.start) > 0)
					{
						newVal = value.substr(0, inputSelection.start) + value.substr(inputSelection.end);
					}
					// 1|234 oder 123|4 etc.
					else if((inputSelection.end - inputSelection.start) == 0)
					{
						if(keyCode == 8) {
							newVal = value.substr(0, inputSelection.start - 1) + value.substr(inputSelection.end);
						}
						if(keyCode == 46) {
							newVal = value.substr(0, inputSelection.start) + value.substr(inputSelection.end + 1);
						}
					}
					return options.success.call(this, newVal);
				}
			}

			var start = value.substr(0, inputSelection.start);
			var end = value.substr(inputSelection.end);
			value = start + String.fromCharCode(charCode) + end;

			if (charCode > 0 && regex.test(value))
			{
				if (typeof(options.success) === 'function')
				{
					return options.success.call(this, value);
				}
				return true;
			} else if (typeof(options.failure) === 'function')
			{
				return options.failure.call(this, value);
			}
			return false;
		}

		return (this.addEvent('keydown', filterInputFunction) && this.addEvent('keypress', filterInputFunction));
	}
});

var Form = (function()
{
	function input(element)
	{
		switch (element.type.toLowerCase())
		{
			case 'checkbox':
			case 'radio':
				return inputSelector(element);
			default:
				return valueSelector(element);
		}
	}

	function inputSelector(element)
	{
		return element.checked ? element.value : null;
	}

	function valueSelector(element)
	{
		return element.value;
	}

	function select(element)
	{
		return (element.type === 'select-one' ? selectOne : selectMany)(element);
	}

	function selectOne(element)
	{
		var index = element.selectedIndex;
		return index >= 0 ? optionValue(element.options[index]) : null;
	}

	function selectMany(element)
	{
		var length = element.length;
		if (!length)
		{
			return null;
		}

		for (var i = 0, values = []; i < length; i++)
		{
			var opt = element.options[i];
			if (opt.selected)
			{
				values.push(optionValue(opt));
			}
		}
		return values;
	}

	function hasAttribute(element, attribute)
	{
		return !!element.getAttribute(attribute);
	}

	function optionValue(opt)
	{

		return hasAttribute(opt, 'value') ? opt.value : opt.text;
	}

	var serializers = {
			input:         input,
			inputSelector: inputSelector,
			textarea:      valueSelector,
			select:        select,
			selectOne:     selectOne,
			selectMany:    selectMany,
			optionValue:   optionValue,
			button:        valueSelector
		};

	function getValue(element)
	{
	    element = $(element);
	    var method = element.tagName.toLowerCase();
	    return serializers[method](element);
	}

	function getElements(form)
	{
		var elements = $(form).getElementsByTagName('*'), element, arr = [ ];
		for (var i = 0; element = elements[i]; i++)
		{
			arr.push(element);
		}
		return arr.inject([], function(elements, child)
		{
			if (serializers[child.tagName.toLowerCase()])
			{
				elements.push($(child));
			}
			return elements;
		});
	}

	return {
		serialize: function(form, options)
		{
			var elements = getElements(form);

			if (typeof options != 'object')
			{
				options = {};
			}

			var key, value, submitted = false, submit = options.submit, accumulator, initial;

			initial = {};
			accumulator = function(result, key, value)
			{
				if (key in result)
				{
					if (typeOf(result[key]) == 'array')
					{
						result[key] = [result[key]];
					}
					result[key].push(value);
				}
				else
				{
					result[key] = value;
				}
				return result;
			};

			return elements.inject(initial, function(result, element)
			{
				if (!element.disabled && element.name)
				{
					key = element.name; value = getValue(element);
					if (value != null && element.type != 'file' && (element.type != 'submit' || (!submitted && submit !== false && (!submit || key == submit) && (submitted = true))))
					{
						result = accumulator(result, key, value);
					}
				}
				return result;
			});
		}
	};
})();

/**
 * Hash Extensions
 */
Hash.implement(
{
	/**
	 * find a element via function
	 *
	 * @param {function} fn
	 * @param {object} scope
	 * @return {*}
	 */
	find: function(fn, scope)
	{
		var result = undefined;
		var fnCall = fn;

		if (scope)
		{
			fnCall = fnCall.bind(scope);
		}

		this.some(function(item, index, array)
		{
			if (fnCall(item, index, array))
			{
				result = item;
				return true;
			}

			return false;
		});

		return result;
	},

	/**
	 * inject
	 *
	 * @param {*} acc
	 * @param {function} fn
	 * @returns {*}
	 */
	inject: function(acc, fn)
	{
		this.each(function(value, index, array)
		{
			acc = fn(acc, value, index, array);
		});

		return acc;
	},

	/**
	 * invokes the fn on all elements
	 *
	 * @param {string} fn
	 * @return {Hash}
	 */
	invoke: function(fn)
	{
		this.each(function(element)
		{
			if (element[fn])
			{
				element[fn]();
			}
		});

		return this;
	},

	/**
	 * sortiert das Hash mittels einer funktion nach den SchlÃ¼sseln
	 *
	 * @return {hash}
	 */
	ksort: function(callback)
	{
		var $this = this;
		var result = $H({});

		this.getKeys().sort(callback).each(function(entry)
		{
			result[entry] = $this[entry];
		});

		return result;
	},

	/**
	 * merge fÃ¼r Hashes
	 *
	 * @param {object} object
	 * @retrun {hash}
	 */
	merge: function(object)
	{
		return $H(Object.merge({}, this.toObject(), object || {}));
	},

	/**
	 * sortiert das Hash anhand einer funktion
	 *
	 * @param {function} callback
	 * @return {Array}
	 */
	sort: function(callback)
	{
		return this.toArray().sort(callback);
	},

	/**
	 * wandelt das Hash in ein Array um
	 *
	 * @return {Array}
	 */
	toArray: function()
	{
		var result = [];

		// clone to array
		this.each(function(entry)
		{
			result.push(entry);
		});

		return result;
	},

	/**
	 * Hash in Object konvertieren
	 *
	 * @return {Object}
	 */
	toObject: function()
	{
		var object = {};
		this.each(function(value, key)
		{
			object[key] = value;
		});

		return object;
	}
});

/**
 * Number Extension
 */
Number.implement(
{
	/**
	 * not a number
	 *
	 * @return {boolean}
	 */
	isNaN: function()
	{
		return isNaN(this);
	},

	/**
	 * Vorzeichenfunktion
	 *
	 * @return {int}
	 */
	sgn: function()
	{
		if (this < 0)
		{
			return -1;
		}
		else if (this > 0)
		{
			return 1;
		}

		return 0;
	}
});

/**
 * String Extensions
 */
String.implement(
{
	/**
	 * convertiert eine URL mit Query Parameter in ein Objekt
	 *
	 * @param {bool} asObject
	 * @return {Object}
	 */
    fromQueryString: function(asObject)
    {
    	var str = this;
    	var result;

    	if (str.indexOf('?') != -1)
		{
    		str = str.substr(str.indexOf('?') + 1);
		}

    	result = $H(Array.convert(str.split('&')).inject({}, function(acc, param)
		{
    		param = param.split('=');

    		if (param.length == 2)
			{
    			acc[param[0]] = param[1];
			}

    		return acc;
		}));

    	if (result && result.toObject && asObject)
		{
    		result = result.toObject();
		}

    	return result;
    },

	/**
     * Pads the left side of a string with a specified character.  This is especially useful
     * for normalizing number and date strings.
     *
     * @param {Number} size The total length of the output string
     * @param {String} ch (optional) The character with which to pad the original string (defaults to empty string " ")
     * @return {String} The padded string
     */
    leftPad: function (size, ch)
    {
        var result = new String(this);
        if (!ch)
    	{
        	ch = " ";
    	}
        while (result.length < size)
    	{
        	result = ch + result;
    	}

        return result.toString();
    },

    stripTags: function()
    {
    	return this.replace(/<\/?[^>]+>/gi, '');
    },

    /**
     * alternative Substitute Methode zu Mootools, welche immer alle Platzhalter entfernt, diese entfernt
     * nur existierende EintrÃ¤ge aus dem Objekt alle anderen bleiben erhalten
     *
     * @param {Object} object
     * @param {regexp} regexp Pattern Matcher
     * @return {string}
     */
    substituteWithoutReplacingUndefinedKeys: function(object, regexp)
    {
    	return this.replace(regexp || (/\\?\{([^{}]+)\}/g), function(match, name)
    	{
    		if (match.charAt(0) == '\\')
    		{
    			return match.slice(1);
    		}
    		return (object[name] != undefined) ? object[name] : '{' + name + '}';
    	});
    },

    /**
     * Unescape HTML
     *
     * @return {String}
     */
    unescapeHtml: function()
    {
    	var div = new Element('div');
    	div.innerHTML = this.stripTags();

    	if (!div.childNodes[0])
    	{
    		return '';
    	}
    	if (div.childNodes.length > 1)
    	{
    		var result = '';

    		Array.convert(div.childNodes).each(function(node)
    		{
    			return result + node.nodeValue;
    		});

    		return result;
    	}
    	else
    	{
    		return div.childNodes[0].nodeValue;
    	}
    }
});

/**
 * Event implement
 */
Element.NativeEvents = Object.append(Element.NativeEvents,
{
	touchstart: 2, touchend: 2, touchmove: 2, touchcancel: 2,
	gesturechange: 2, gestureend: 2
});

/**
 * Script Tags in dem neuen Element suchen und diese dann ausfÃ¼hren, da diese leider NICHT
 * automatisch ausgefÃ¼hrt werden.
 */
Element.inject = Element.inject.wrap(function(proceed, elementInsert, element, where)
{
	var result = proceed(elementInsert, element, where);
	var scriptArr;

	if(typeof result != 'undefined' && (typeOf(scriptArr = result.select('script')) == 'array' ) ) {
		scriptArr.each(function(scriptTag)
		{
			Browser.exec(scriptTag.text);
		});
	}

	return result;
});

Element.prototype.inject = Element.prototype.inject.wrap(function(proceed, elementInsert, element, where)
{
	var result = proceed(elementInsert, element, where);
	var scriptArr;

	if(typeof result != 'undefined' && (typeOf(scriptArr = result.select('script')) == 'array' ) ) {
		scriptArr.each(function(scriptTag)
		{
			Browser.exec(scriptTag.text);
		});
	}

	return result;
});

Element.grab = Element.grab.wrap(function(proceed, element, where, execScripts)
{
	if(typeof execScripts === 'undefined')
	{
		execScripts = true;
	}
	var result = proceed(element, where, execScripts);
	var scriptArr;

	if(execScripts && typeof result != 'undefined' && (typeOf(scriptArr = result.select('script')) == 'array' ) ) {
		scriptArr.each(function(scriptTag)
		{
			Browser.exec(scriptTag.text);
		});
	}

	return result;
});

Element.prototype.grab = Element.prototype.grab.wrap(function(proceed, element, where, execScripts)
{
	if(typeof execScripts === 'undefined')
	{
		execScripts = true;
	}
	var result = proceed(element, where, execScripts);
	var scriptArr;

	if(execScripts && typeof result != 'undefined' && (typeOf(scriptArr = result.select('script')) == 'array' ) ) {
		scriptArr.each(function(scriptTag)
		{
			Browser.exec(scriptTag.text);
		});
	}

	return result;
});/*
---
name: String.UTF-8
description: String UTF8 encoding.
license: MIT-style
authors: [Christopher Pitt, Enrique Erne, Xunnamius]
requires:
- Core/String
provides: [String.toUTF8, String.fromUTF8]
...
 */

(function() {

	function toUTF8(string) {
		var a, b, result = '', code = String.fromCharCode;

		string = string.replace(/\r\n/g, "\n");

		for (a = 0; b = string.charCodeAt(a); a++) {
			if (b < 128) {
				result += code(b);
			} else if ((b > 127) && (b < 2048)) {
				result += code((b >> 6) | 192);
				result += code((b & 63) | 128);
			} else {
				result += code((b >> 12) | 224);
				result += code(((b >> 6) & 63) | 128);
				result += code((b & 63) | 128);
			}
		}

		return result;
	}

	function fromUTF8(string) {
		var a = 0, result = '', c1 = 0, c2 = 0, c3 = 0;

		while (a < string.length) {
			c1 = string.charCodeAt(a);

			if (c1 < 128) {
				result += String.fromCharCode(c1);
				a++;
			} else if ((c1 > 191) && (c1 < 224)) {
				c2 = string.charCodeAt(a + 1);
				result += String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));
				a += 2;
			} else {
				c2 = string.charCodeAt(a + 1);
				c3 = string.charCodeAt(a + 2);
				result += String.fromCharCode(((c1 & 15) << 12)
						| ((c2 & 63) << 6) | (c3 & 63));
				a += 3;
			}
		}

		return result;
	}

	String.implement({
		'toUTF8' : function() {
			return toUTF8(this);
		},
		'fromUTF8' : function() {
			return fromUTF8(this);
		}
	});

})();/*
---
name: String.MD5
description: String MD5 hashing.
license: MIT-style
authors: [Christopher Pitt, Enrique Erne, Xunnamius]
requires:
- Core/String
- String.toUTF8
provides: [String.toMD5]
...
*/

(function(){

var transforms = {
		'f' : function(a, b, c) {
			return (a & b) | ((~a) & c);
		},
		'g' : function(a, b, c) {
			return (a & c) | (b & (~c));
		},
		'h' : function(a, b, c) {
			return (a ^ b ^ c);
		},
		'i' : function(a, b, c) {
			return (b ^ (a | (~c)));
		},
		'rotateLeft' : function(a, b) {
			return (a << b) | (a >>> (32 - b));
		},
		'addUnsigned' : function(a, b) {
			var a8 = (a & 0x80000000), b8 = (b & 0x80000000), a4 = (a & 0x40000000), b4 = (b & 0x40000000), result = (a & 0x3FFFFFFF)
					+ (b & 0x3FFFFFFF);

			if (a4 & b4) {
				return (result ^ 0x80000000 ^ a8 ^ b8);
			}

			if (a4 | b4) {
				if (result & 0x40000000) {
					return (result ^ 0xC0000000 ^ a8 ^ b8);
				} else {
					return (result ^ 0x40000000 ^ a8 ^ b8);
				}
			} else {
				return (result ^ a8 ^ b8);
			}
		},
		'compound' : function(a, b, c, d, e, f, g, h) {
			var trans = transforms, add = trans.addUnsigned, temp = add(b, add(
					add(trans[a](c, d, e), g), f));

			return add(trans.rotateLeft(temp, h), c);
		}
	};

	function convertToArray(string) {
		var messageLength = string.length, numberOfWords = (((messageLength + 8) - ((messageLength + 8) % 64)) / 64 + 1) * 16, wordArray = new Array(), wordCount, bytePosition, byteCount = 0;

		while (byteCount < messageLength) {
			wordCount = (byteCount - (byteCount % 4)) / 4;
			bytePosition = (byteCount % 4) * 8;
			wordArray[wordCount] = (wordArray[wordCount] | (string
					.charCodeAt(byteCount) << bytePosition));
			byteCount++;
		}

		wordCount = (byteCount - (byteCount % 4)) / 4;
		bytePosition = (byteCount % 4) * 8;
		wordArray[wordCount] = wordArray[wordCount] | (0x80 << bytePosition);
		wordArray[numberOfWords - 2] = messageLength << 3;
		wordArray[numberOfWords - 1] = messageLength >>> 29;

		return wordArray;
	}

	function convertToHex(string) {
		var result = '', temp, nibble, i;

		for (i = 0; i <= 3; i++) {
			nibble = (string >>> (i * 8)) & 255;
			temp = "0" + nibble.toString(16);
			result = result + temp.substr(temp.length - 2, 2);
		}

		return result;
	}

	function md5(string) {
		var t1, t2, t3, t4, x = convertToArray(string.toUTF8()),

		a = 0x67452301, b = 0xEFCDAB89, c = 0x98BADCFE, d = 0x10325476,

		s1 = 7, s2 = 12, s3 = 17, s4 = 22, s5 = 5, s6 = 9, s7 = 14, s8 = 20, s9 = 4, s10 = 11, s11 = 16, s12 = 23, s13 = 6, s14 = 10, s15 = 15, s16 = 21;

		for ( var k = 0; k < x.length; k += 16) {
			t1 = a;
			t2 = b;
			t3 = c;
			t4 = d;

			a = transforms.compound('f', a, b, c, d, 0xD76AA478, x[k + 0], s1);
			d = transforms.compound('f', d, a, b, c, 0xE8C7B756, x[k + 1], s2);
			c = transforms.compound('f', c, d, a, b, 0x242070DB, x[k + 2], s3);
			b = transforms.compound('f', b, c, d, a, 0xC1BDCEEE, x[k + 3], s4);
			a = transforms.compound('f', a, b, c, d, 0xF57C0FAF, x[k + 4], s1);
			d = transforms.compound('f', d, a, b, c, 0x4787C62A, x[k + 5], s2);
			c = transforms.compound('f', c, d, a, b, 0xA8304613, x[k + 6], s3);
			b = transforms.compound('f', b, c, d, a, 0xFD469501, x[k + 7], s4);
			a = transforms.compound('f', a, b, c, d, 0x698098D8, x[k + 8], s1);
			d = transforms.compound('f', d, a, b, c, 0x8B44F7AF, x[k + 9], s2);
			c = transforms.compound('f', c, d, a, b, 0xFFFF5BB1, x[k + 10], s3);
			b = transforms.compound('f', b, c, d, a, 0x895CD7BE, x[k + 11], s4);
			a = transforms.compound('f', a, b, c, d, 0x6B901122, x[k + 12], s1);
			d = transforms.compound('f', d, a, b, c, 0xFD987193, x[k + 13], s2);
			c = transforms.compound('f', c, d, a, b, 0xA679438E, x[k + 14], s3);
			b = transforms.compound('f', b, c, d, a, 0x49B40821, x[k + 15], s4);
			a = transforms.compound('g', a, b, c, d, 0xF61E2562, x[k + 1], s5);
			d = transforms.compound('g', d, a, b, c, 0xC040B340, x[k + 6], s6);
			c = transforms.compound('g', c, d, a, b, 0x265E5A51, x[k + 11], s7);
			b = transforms.compound('g', b, c, d, a, 0xE9B6C7AA, x[k + 0], s8);
			a = transforms.compound('g', a, b, c, d, 0xD62F105D, x[k + 5], s5);
			d = transforms.compound('g', d, a, b, c, 0x2441453, x[k + 10], s6);
			c = transforms.compound('g', c, d, a, b, 0xD8A1E681, x[k + 15], s7);
			b = transforms.compound('g', b, c, d, a, 0xE7D3FBC8, x[k + 4], s8);
			a = transforms.compound('g', a, b, c, d, 0x21E1CDE6, x[k + 9], s5);
			d = transforms.compound('g', d, a, b, c, 0xC33707D6, x[k + 14], s6);
			c = transforms.compound('g', c, d, a, b, 0xF4D50D87, x[k + 3], s7);
			b = transforms.compound('g', b, c, d, a, 0x455A14ED, x[k + 8], s8);
			a = transforms.compound('g', a, b, c, d, 0xA9E3E905, x[k + 13], s5);
			d = transforms.compound('g', d, a, b, c, 0xFCEFA3F8, x[k + 2], s6);
			c = transforms.compound('g', c, d, a, b, 0x676F02D9, x[k + 7], s7);
			b = transforms.compound('g', b, c, d, a, 0x8D2A4C8A, x[k + 12], s8);
			a = transforms.compound('h', a, b, c, d, 0xFFFA3942, x[k + 5], s9);
			d = transforms.compound('h', d, a, b, c, 0x8771F681, x[k + 8], s10);
			c = transforms
					.compound('h', c, d, a, b, 0x6D9D6122, x[k + 11], s11);
			b = transforms
					.compound('h', b, c, d, a, 0xFDE5380C, x[k + 14], s12);
			a = transforms.compound('h', a, b, c, d, 0xA4BEEA44, x[k + 1], s9);
			d = transforms.compound('h', d, a, b, c, 0x4BDECFA9, x[k + 4], s10);
			c = transforms.compound('h', c, d, a, b, 0xF6BB4B60, x[k + 7], s11);
			b = transforms
					.compound('h', b, c, d, a, 0xBEBFBC70, x[k + 10], s12);
			a = transforms.compound('h', a, b, c, d, 0x289B7EC6, x[k + 13], s9);
			d = transforms.compound('h', d, a, b, c, 0xEAA127FA, x[k + 0], s10);
			c = transforms.compound('h', c, d, a, b, 0xD4EF3085, x[k + 3], s11);
			b = transforms.compound('h', b, c, d, a, 0x4881D05, x[k + 6], s12);
			a = transforms.compound('h', a, b, c, d, 0xD9D4D039, x[k + 9], s9);
			d = transforms
					.compound('h', d, a, b, c, 0xE6DB99E5, x[k + 12], s10);
			c = transforms
					.compound('h', c, d, a, b, 0x1FA27CF8, x[k + 15], s11);
			b = transforms.compound('h', b, c, d, a, 0xC4AC5665, x[k + 2], s12);
			a = transforms.compound('i', a, b, c, d, 0xF4292244, x[k + 0], s13);
			d = transforms.compound('i', d, a, b, c, 0x432AFF97, x[k + 7], s14);
			c = transforms
					.compound('i', c, d, a, b, 0xAB9423A7, x[k + 14], s15);
			b = transforms.compound('i', b, c, d, a, 0xFC93A039, x[k + 5], s16);
			a = transforms
					.compound('i', a, b, c, d, 0x655B59C3, x[k + 12], s13);
			d = transforms.compound('i', d, a, b, c, 0x8F0CCC92, x[k + 3], s14);
			c = transforms
					.compound('i', c, d, a, b, 0xFFEFF47D, x[k + 10], s15);
			b = transforms.compound('i', b, c, d, a, 0x85845DD1, x[k + 1], s16);
			a = transforms.compound('i', a, b, c, d, 0x6FA87E4F, x[k + 8], s13);
			d = transforms
					.compound('i', d, a, b, c, 0xFE2CE6E0, x[k + 15], s14);
			c = transforms.compound('i', c, d, a, b, 0xA3014314, x[k + 6], s15);
			b = transforms
					.compound('i', b, c, d, a, 0x4E0811A1, x[k + 13], s16);
			a = transforms.compound('i', a, b, c, d, 0xF7537E82, x[k + 4], s13);
			d = transforms
					.compound('i', d, a, b, c, 0xBD3AF235, x[k + 11], s14);
			c = transforms.compound('i', c, d, a, b, 0x2AD7D2BB, x[k + 2], s15);
			b = transforms.compound('i', b, c, d, a, 0xEB86D391, x[k + 9], s16);

			a = transforms.addUnsigned(a, t1);
			b = transforms.addUnsigned(b, t2);
			c = transforms.addUnsigned(c, t3);
			d = transforms.addUnsigned(d, t4);
		}

		return (convertToHex(a) + convertToHex(b) + convertToHex(c) + convertToHex(d))
				.toLowerCase();
	}

	String.implement({
		'toMD5' : function() {
			return md5(this);
		}
	});

})();// IE MooTools Fix
if (Browser.name == 'ie' && Browser.version < 11) // fÃ¼r IE
{
	/**
	 * Element Erweiterungen
	 *
	 */
	Element.implement(
	{
		insertAtCursor: function(value, select)
		{
			var pos = this.getSelectedRange();

			// IE fix BEGIN
			if (pos.start == 0 && pos.end == 0)
			{
				this.focus();
		        sel = document.selection.createRange();
		        sel.text = value;
		        this.focus();
		        return this;
			}
			// IE fix END

			var text = this.get('value');
			this.set('value', text.substring(0, pos.start) + value + text.substring(pos.end, text.length));
			if (Array.pick(select, true))
			{
				this.selectRange(pos.start, pos.start + value.length);
			}
			else
			{
				this.setCaretPosition(pos.start + value.length);
			}

			return this;
		},

		insertAroundCursor: function(options, select)
		{
			options = Object.append(
			{
				before: '',
				defaultMiddle: '',
				after: ''
			}, options);

			var value = this.getSelectedText() || options.defaultMiddle;
			var pos = this.getSelectedRange();

			// IE fix BEGIN
			if (pos.start == 0 && pos.end == 0)
			{
				this.focus();
		        sel = document.selection.createRange();
		        sel.text = options.before + options.after;
		        this.focus();
		        return this;
			}
			// IE fix END

			var text = this.get('value');
			if (pos.start == pos.end)
			{
				this.set('value', text.substring(0, pos.start) + options.before + value + options.after + text.substring(pos.end, text.length));
				this.selectRange(pos.start + options.before.length, pos.end + options.before.length + value.length);
			}
			else
			{
				var current = text.substring(pos.start, pos.end);
				this.set('value', text.substring(0, pos.start) + options.before + current + options.after + text.substring(pos.end, text.length));
				var selStart = pos.start + options.before.length;

				if (Array.pick(select, true))
				{
					this.selectRange(selStart, selStart + current.length);
				}
				else
				{
					this.setCaretPosition(selStart + text.length);
				}
			}
			return this;
		}
	});
}
/****************************************************************************************************
 *																									*
 *											jScroll													*
 *																									*
 ****************************************************************************************************
 *	jScroll
 *	Copyright (C) 2009 Marco Starker <marco.starker@gmx.net>
 *
 *	This program is free software; you can redistribute it and/or modify it under the terms of the
 *	GNU General Public License as published by the Free Software Foundation; either version 3 of the
 *	License, or (at your option) any later version.
 *
 *	This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
 *	even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *	GNU General Public License for more details.
 *
 *	You should have received a copy of the GNU General Public License along with this program;
 *	if not, see <http://www.gnu.org/licenses/>.
 *
 * @version 1.1
 *
 *
 * global jScroll Funktion
 *	name									return		description
 *	==========================================================================================================================
 *	jScroll.$( (element|string)element )	jScroll		liefert ein jScroll in Bezug auf der DOM Node ID
 *
 * jScroll Object options
 *	name					optional	datatype		default							description
 *	==========================================================================================================================
 *	clsBetween				optional	string			jScroll-element-between			CSS Class fÃ¼r die Teile zwichen den Buttons und den Slider
 *	clsBetweenClicked		optional	string			clicked							CSS Class fÃ¼r die Teile zwichen den Buttons und den Slider wenn geklickt (die Class wird geadded und keine entfernt)
 *	clsDown					optional	string			jScroll-element-down			CSS Class fÃ¼r das "Nach unten"-Element (HÃ¶he, Hintergrund, Hover)
 *	clsScroll				optional	string			jScroll-element-scroll			CSS Class fÃ¼r das gesammte "Scroll"-Element (Breite, Hintergrund)
 *	clsSlider				optional	string			jScroll-element-slider			CSS Class fÃ¼r das "Schieber"-Element (Hover, Height und Hintergrund fÃ¼r Subclasses .top, .center, .bottom)
 *	clsUp					optional	string			jScroll-element-up				CSS Class fÃ¼r das "Nach oben"-Element (HÃ¶he, Hintergrund, Hover)
 *	container							string|element									Der DOM Node, in welchem gescrollt werden soll
 *	lines					optional	int				10								Anzahl der sichtbaren Zeilen
 *
 * jScroll Object Listeners in options (alle sind optional)
 *	name													description
 *	==========================================================================================================================
 *	onRenderAfter(jScroll)									nach dem rendering
 *	onRenderBefore(jScroll)									vor dem rendering, wenn die Funktion BOOLEAN FALSE ausgibt wird abgebrochen
 *	onScrollAfter(jScroll)									fÃ¼r nach dem Scrollen
 *	onScrollBefore(jScroll, oldPercent, newPercent)			fÃ¼r vor dem Scrollen, wenn die Funktion BOOLEAN FALSE ausgibt wird abgebrochen
 *	onScrollDownAfter(jScroll)								fÃ¼r nach dem "Nach unten" Scrollen
 *	onScrollDownBefore(jScroll, oldPercent, newPercent)		fÃ¼r vor dem "Nach unten" Scrollen, wenn die Funktion BOOLEAN FALSE ausgibt wird abgebrochen
 *	onScrollSlideAfter(jScroll)								fÃ¼r nach dem "Schiebe" Scrollen
 *	onScrollSlideBefore(jScroll, oldPercent, newPercent)	fÃ¼r vor dem "Schiebe" Scrollen, wenn die Funktion BOOLEAN FALSE ausgibt wird abgebrochen
 *	onScrollUpAfter(jScroll)								fÃ¼r nach dem "Nach oben" Scrollen
 *	onScrollUpBefore(jScroll, oldPercent, newPercent)		fÃ¼r vor dem "Nach oben" Scrollen, wenn die Funktion BOOLEAN FALSE ausgibt wird abgebrochen
 *	onUpdateAfter(jScroll)									fÃ¼r nach dem Aktualisieren eines Scrolls
 *	onUpdateBefore(jScroll)									fÃ¼r vor dem Aktualisieren eines Scrolls
 *
 * jScroll Object Properties
 *	name				datatype		description
 *	==========================================================================================================================
 *	current				float			aktueller % Wert
 *	container			element			DOM Node welcher der Container fÃ¼r das Scrolling ist
 *	element				element			das Hauptelement
 *	elementDownBetween	element			element zwischen dem Button fÃ¼r "nach unten" und dem Slider
 *	elementUpBetween	element			element zwischen dem Button fÃ¼r "nach oben" und dem Slider
 *	elementContent		element			das Element welches den Content anzeigt
 *	elementDown			element			das Element zum Runterscrollen in der Scrollbar
 *	elementScroll		element			die Scrollbar
 *	elementSliderBottom	element			Scrollbar unterer Teil
 *	elementSliderCenter	element			Scrollbar mittlerer Teil
 *	elementSliderTop	element			Scrollbar oberer Teil
 *	elementSlider		element			der Slider in der Scrollbar
 *	elementUp			element			das Element zum Raufscrollen in der Scrollbar
 *	enabled				bool			Scrolling ist aktiviert oder nicht
 *	options				object			alle Ã¼bergebenen Options
 *	rendered			bool			Control wurde schon gerendert
 *	stepLarge			float			Schrittweit beim "groÃŸen" scrollen
 *	stepSmall			float			Schrittweit beim "normalen" scrollen
 *	alignRight			string			definiert den Abstand zum rechten Containerrand (default: auto mit BerÃ¼cksichtigung des Scrollbalkens)
 *
 * jScroll Object Methodes
 *	name									return		description
 *	==========================================================================================================================
 *	applyContent( (string|element)content )	jScroll		den Inhalt des Containers mit diesen Inhalt ersetzen
 *	down( [(float)step] )					jScroll		um x% nach unten Scrollen
 *	insertContent( (object)content )		jScroll		diesen Inhalt einfÃ¼gen in den Content (siehe Prototype Element.insert())
 *	refresh()								jScroll		alles aktualisieren (zB wenn manuell Content eingefÃ¼gt wurde)
 *	scroll( (float)step )					jScroll		um x% nach in die jeweilige Richtung scrollen
 *	scrollTo( (string|element)element )		jScroll		scrollt zu dem angegebenen element, so das dieses sichtbar ist
 *	up( (float)step )						jScroll		um x% nach oben scrollen
 *	update( [(float)percent])				jScroll		zur Position in % springen
 *
 * <code>
 *		new jScroll(
 *	    {
 *	    	container:				"container",
 *			onScrollAfter:			function(jscroll)
 *			{
 *				alert("scroll after");
 *			},
 *			onScrollBefore:			function(jscroll, oldPercent, newPercent)
 *			{
 *				alert("scroll before");
 *			},
 *			onScrollDownAfter:		function(jscroll)
 *			{
 *				alert("scroll down after");
 *			},
 *			onScrollDownBefore:		function(jscroll, oldPercent, newPercent)
 *			{
 *				alert("scroll down before");
 *			},
 *			onScrollSlideAfter:		function(jscroll)
 *			{
 *				alert("scroll slide after");
 *			},
 *			onScrollSlideBefore:	function(jscroll, oldPercent, newPercent)
 *			{
 *				alert("scroll slide before");
 *			},
 *			onScrollUpAfter:		function(jscroll)
 *			{
 *				alert("scroll up after");
 *			},
 *			onScrollUpBefore:		function(jscroll, oldPercent, newPercent)
 *			{
 *				alert("scroll up before");
 *			}
 *	    });
 * </code>
 */
(function()
{
	var REQUIRED_MOOTOOLS			= '1.2.4';	/* erwartete Mootools Version */
	var loaded						= false;	/* gibt an ob das Fenster geladen ist oder nicht */
	var containers					= [];		/* Liste aller jScrolls */

	/**
	 * konvertiert versions-nummern-string
	 *
	 * @param string versionString
	 * @retrun array
	 */
	var convertVersionString = function(versionString)
	{
		var r = versionString.split('.');
		return parseInt(r[0]) * 100000 + parseInt(r[1]) * 1000 + parseInt(r[2]);
	};

	/* PrÃ¼fen nach Prototype und korrekter Version */
	if ( typeof MooTools		== 'undefined' ||
		 convertVersionString(MooTools.version) < convertVersionString(REQUIRED_MOOTOOLS)
		)
	{
		throw('jScroll requires the MooTools JavaScript framework >= ' + REQUIRED_MOOTOOLS);
		return;
	}

	/* unseren Pfad finden */
	var js = /jScroll\.js(\?.*)?$/;
	var firstMatch = null;
	var jsPath = $$('head script[src]').find(function(s)
	{
		if (firstMatch == null)
		{
			firstMatch = s;
		}

		return s.src.match(js);
	});
	if (jsPath)
	{
		jsPath = jsPath.src.replace(js, '');
	}
	else
	{
		jsPath = firstMatch.src.replace(js, '');
	}

	/****************************************************************************************************
	 *																									*
	 *									allgemeine Funktionen											*
	 *																									*
	 ****************************************************************************************************/

	/**
	 * etwas nach dem Dom load laden bzw ausfÃ¼hren
	 *
	 * @param function fn
	 */
	var autoload = function(fn)
	{
		if (!loaded)
		{
			window.addEvent('domready', function()
			{
				loaded = true;
				fn();
			});
		}
		else
		{
			fn.bind(window)();
		}
	};

	/**
	 * prozent korrektur
	 *
	 * @param float percent
	 * @return float
	 */
	var correctPercentage = function(percent)
	{
		if (percent < 0)
		{
			percent = 0;
		}
		else if (percent > 100)
		{
			percent = 100;
		}

		return percent;
	};

	/**
	 * CSS Declaration erzeugen
	 *
	 * @param string declaration
	 */
	var createCSSDeclaration = function(declaration)
	{
		if ($(document.body).getStyle('direction').toLowerCase() == 'rtl')
		{
			declaration = declaration.replace(/left/g, '#left#');
			declaration = declaration.replace(/ltr/g, '#ltr#');
			declaration = declaration.replace(/right/g, 'left');
			declaration = declaration.replace(/rtl/g, 'ltr');
			declaration = declaration.replace(/#left#/g, 'right');
			declaration = declaration.replace(/#ltr#/g, 'rtl');
		}

		/**
		 * Trims a string
		 *
		 * @param string str
		 * @return string
		 */
		var trim = function()
		{
		    var re = /^[\s\n\r]+|[\s\n\r]+$/g;
		    return function(str)
		    {
		    	return str.replace(re, '');
		    };
		}();

		/**
		 * CSS Rule einfÃ¼gen
		 *
		 * @param string selector
		 * @param string|object declaration
		 */
		var createCSSRule = function(selector, declaration)
		{
			if (selector.indexOf(',') != -1)
			{
				selector.split(',').each(function(sel)
				{
					createCSSRule(trim(sel), declaration);
				});
				return;
			}

		    /* create the style node for all browsers */
		    var style_node = $('jScroll.css');
		    if (!style_node)
		    {
			    var style_node = document.createElement('style');
			    style_node.setAttribute('type', 'text/css');
			    style_node.setAttribute('media', 'screen');
			    style_node.setAttribute('id', 'jScroll.css');
			    /* append the style node */
			    Element.insert(document.getElementsByTagName('head')[0], {top: style_node});
		    }

		    if (typeof declaration != 'string')
		    {
		    	var decl = '';
		    	Object.each(declaration, function(entry, key)
		    	{
		    		decl + key.hyphenate() + ':' + entry, key;
		    	});
		    	declaration = decl;
		    }

		    /* append a rule for good browsers
		     * IE 9, kann das nun schon korrekt
		     */
		    if (Browser.name != 'ie' || (Browser.name == 'ie' && Browser.version >= 9))
		    {
		    	style_node.appendChild(document.createTextNode(selector + ' {' + declaration + '}' + "\n"));
		    }

		    /* use alternative methods for IE  kleiner IE9 */
		    if (Browser.name == 'ie' && Browser.version < 9 && document.styleSheets && document.styleSheets.length > 0)
		    {
				var last_style_node = document.styleSheets[0];
				if (typeof(last_style_node.addRule) == 'object')
				{
					last_style_node.addRule(selector, declaration);
				}
		    }
		};

		declaration.replace(/[\n\r]/gi , '').split('}').each(function(decl)
		{
			decl = decl.split('{');
			if (decl.length < 2 || trim(decl[0]) == 0 || trim(decl[1]) == 0)
			{
				return;
			}
			createCSSRule(trim(decl[0]), trim(decl[1]));
		});
	};

	/**
	 * erstellungsfunktion + rendering fÃ¼rs jScroll
	 *
	 * @param jScroll jscroll
	 */
	var createjScroll = function(jscroll)
	{
		jscroll.container = $(jscroll.container);

		/* kein Container? */
		if (!jscroll.container || !jscroll.container.nodeName || jscroll.container.nodeType != 1 /*element*/)
		{
			throw('Missing scroll container for jScroll!');
		}

		// prÃ¼fen, ob dieses element unterstÃ¼tzt wird wenn nicht wird ein fehler ausgegeben
		if (jscroll.container.tagName != 'DIV')
		{
			throw('invalid scroll container for jScroll! Can only be a div');
		}

		/* anmelden*/
		jscroll.container._jScroll = jscroll;
		register(jscroll.container);

		/* rendering*/
		/* Event */
		if (fireEvent(jscroll, 'onRenderBefore') === false)
		{
			return;
		}

		/* schon gerendert oder container kein element*/
		if (jscroll.rendered)
		{
			return;
		}

		/* rendering marking*/
		jscroll.rendered = true;

		jscroll.container.setStyles(
		{
			overflow:	'hidden'
		});

		/* Childs merken*/
		//var childs = jscroll.container.getChildren().inject('dispose');
		var childs = jscroll.container.getChildren();
		childs.each(function(child)
		{
			child.dispose();
		});

		/* neuer kontent*/
		jscroll.container.innerHTML = '';
		Element.insert(jscroll.container,
		{
			bottom:	'<div class="jScroll">' +
						'<div class="jScroll-content">' +
						'</div>' +
						'<div class="jScroll-scroll ' + jscroll.options.clsScroll + '">' +
							'<div class="jScroll-scroll-up">' +
								'<div class="' + jscroll.options.clsUp + '"></div>' +
							'</div>' +
							'<div class="jScroll-scroll-between ' + jscroll.options.clsBetween + '"></div>' +
							'<div class="jScroll-scroll-slider ' + jscroll.options.clsSlider + '">' +
								'<div class="' + jscroll.options.clsSlider + ' top"></div>' +
								'<div class="' + jscroll.options.clsSlider + ' center"></div>' +
								'<div class="' + jscroll.options.clsSlider + ' bottom"></div>' +
							'</div>' +
							'<div class="jScroll-scroll-between ' + jscroll.options.clsBetween + '"></div>' +
							'<div class="jScroll-scroll-down">' +
								'<div class="' + jscroll.options.clsDown + '"></div>' +
							'</div>' +
						'</div>' +
					'</div>'
		});

		/* diverse elemente merken*/
		jscroll.element				= jscroll.container.down('.jScroll');
		jscroll.elementContent		= jscroll.container.down('.jScroll-content');
		jscroll.elementScroll		= jscroll.container.down('.jScroll-scroll');
		jscroll.elementUp			= jscroll.container.down('.jScroll-scroll-up');
		jscroll.elementUpBetween	= jscroll.container.down('.jScroll-scroll-between', 0);
		jscroll.elementSlider		= jscroll.container.down('.jScroll-scroll-slider');
		jscroll.elementSliderTop	= jscroll.elementSlider.down('.top');
		jscroll.elementSliderCenter	= jscroll.elementSlider.down('.center');
		jscroll.elementSliderBottom	= jscroll.elementSlider.down('.bottom');
		jscroll.elementDownBetween	= jscroll.container.down('.jScroll-scroll-between', 1);
		jscroll.elementDown			= jscroll.container.down('.jScroll-scroll-down');

		/* childs neu einfÃ¼gen*/
		childs.each(function(element)
		{
			Element.insert(jscroll.elementContent, {bottom: element});
		});

		var pointerY = 0;
		/* wenn innerhalb des Scroller geklickt nicht auf eine der Subelement */
		jscroll.elementScroll.addEvent('mousedown', function(e)
		{
			jscroll._sliderScroll = true;
			e.stop();

			peStart(function()
			{
				if (jSElement_getY(jscroll.elementSlider) <= pointerY && pointerY <= jSElement_getY(jscroll.elementSlider) + jscroll.elementSlider.getSize().y)
				{
					return;
				}

				var direction = pointerY - jSElement_getY(jscroll.elementSlider);

				if (direction < 0)
				{
					jscroll.elementUpBetween.addClass(jscroll.options.clsBetweenClicked);
					jscroll.elementDownBetween.removeClass(jscroll.options.clsBetweenClicked);
				}
				else
				{
					jscroll.elementUpBetween.removeClass(jscroll.options.clsBetweenClicked);
					jscroll.elementDownBetween.addClass(jscroll.options.clsBetweenClicked);
				}

				jscroll.scroll((direction < 0 ? -1 : 1) * jscroll.stepLarge);
			}, jscroll);
		});

		/* wenn auf nach oben geklickt wird*/
		jscroll.elementUp.addEvent('mousedown', function(e)
		{
			jscroll._sliderScroll = true;
			e.stop();
			peStart(jscroll.up.pass([jscroll.stepSmall, jscroll], jscroll), jscroll);
		});

		/* wenn auf nach unten geklickt wird*/
		jscroll.elementDown.addEvent('mousedown', function(e)
		{
			jscroll._sliderScroll = true;
			e.stop();
			peStart(jscroll.down.pass([jscroll.stepSmall], jscroll), jscroll);
		});

		/* wenn auf den slider geklickt wird*/
		jscroll.elementSlider.addEvent('mousedown', function(e)
		{
			e.stop();
			jscroll._sliderMove	= true;
			jscroll._sliderY	= e.page.y - parseFloat(jscroll.elementSlider.getStyle('top')) + jscroll.elementUp.getSize().y;
		});

		/* fÃ¼rs slider moveing*/
		document.addEvent('mousemove', function(e)
		{
			pointerY = e.page.y;
			if (!jscroll._sliderMove)
			{
				return;
			}

			e.stop();

			var percent = (e.page.y - jscroll._sliderY) * 100 / jscroll.sliderHeight;

			/* Event */
			if (fireEvent(jscroll, 'onScrollSlideBefore', percent) === false)
			{
				return;
			}

			jscroll.update(percent);

			/* Event */
			fireEvent(jscroll, 'onScrollSlideAfter');
		});

		/* beenden der events wenn Mous up geht */
		document.addEvent('mouseup', function(e)
		{
			if (jscroll._sliderMove || jscroll._sliderScroll)
			{
				e.stop();
				jscroll._sliderMove		= false;
				jscroll._sliderScroll	= false;
				peStop(jscroll);
				jscroll.elementUpBetween.removeClass(jscroll.options.clsBetweenClicked);
				jscroll.elementDownBetween.removeClass(jscroll.options.clsBetweenClicked);
				jscroll.elementDownBetween.removeClass(jscroll.options.clsBetweenClicked);
			}
		});

		/* Mouse Wheeling*/
		jscroll.element.addEvent('mousewheel', function(e)
		{
			e.stop();

			jscroll.scroll(-e.wheel * (e.alt ? jscroll.stepSmall : jscroll.stepLarge));
		});

		/* infos aktualisieren */
		jscroll.refresh();

		/* Event */
		fireEvent(jscroll, 'onRenderAfter');
	};

	/**
	 * fires given event
	 *
	 * @param jScroll jscroll
	 * @param string name
	 * @param float newValue
	 * @return mixed
	 */
	var fireEvent = function(jscroll, name, newValue)
	{
		if (typeof jscroll.options[name] != 'function')
		{
			return true;
		}

		if (typeof newValue != 'undefined')
		{
			newValue = correctPercentage(newValue);
			if (jscroll.current == newValue)
			{
				return false;
			}

			var callback = jscroll.options[name].pass([jscroll, jscroll.current, newValue]);
		}
		else
		{
			var callback = jscroll.options[name].pass([jscroll]);
		}

		try
		{
			return callback();
		}
		catch(e)
		{
			if (Browser.name == 'firefox')
			{
				var msg = e.name + ' in ' + e.fileName + ' #' + e.lineNumber + ' : ' + e.message;
			}
			else if (Browser.name == 'ie')
			{
				var msg = e.name + ' ' + e.number + ' : ' + e.message;
			}
			else if (Browser.name == 'chrome' || Browser.name == 'safari')
			{
				var msg = e.name + ' in ' + e.sourceURL + ' #' + e.line + ' : ' + e.message;
			}
			else
			{
				var msg = JSON.encode(e);
			}
			return;
		}
	};

	/**
	 * PeriodicalExecuter starten ohne kollision
	 *
	 * @param function fn
	 * @param object scope
	 */
	var peStart = function(fn, scope)
	{
		peStop(scope);

		fn.bind(scope)();

		scope._pe = fn.periodical(50, scope);
	};

	/**
	 * PeriodicalExecuter stopen ohne kollision
	 *
	 * @param object scope
	 */
	var peStop = function(scope)
	{
		if (scope._pe)
		{
			clearInterval(scope._pe);
		}
	};

	/**
	 * registriert ein Container
	 *
	 * @param jScrolls.* container
	 * @return jScrolls.*
	 */
	var register = function(container)
	{
		containers.push(container);

		return containers;
	};

	/****************************************************************************************************
	 *																									*
	 *											jScroll													*
	 *																									*
	 ****************************************************************************************************/
	window.jScroll = new Class(
	{
		/**
		 * aktueller Anzeige % wert
		 */
		current: 0,

		/**
		 * Scroll Container
		 */
		container: null,

 		/**
 		 * das Hauptelement
 		 */
 		element: null,

 		/**
 		 * das Element welches den Content anzeigt
 		 */
 		elementContent: null,

 		/**
 		 * das Element zum Runterscrollen in der Scrollbar
 		 */
 		elementDown: null,

 		/**
 		 * die Scrollbar
 		 */
 		elementScroll: null,

 		/**
 		 * der Slider in der Scrollbar
 		 */
 		elementSlider: null,

 		/**
 		 * das Element zum Raufscrollen in der Scrollbar
 		 */
 		elementUp: null,

 		/**
 		 * Scrolling ist aktiviert oder nicht
 		 */
 		enabled: false,

		/**
		 * Ã¼bergebene Options
		 */
		options: null,

		/**
		 * Schon gerendert?
		 */
		rendered: false,

		/**
		 * groÃŸe Schritte
		 */
		stepLarge:	10,

		/**
		 * kleine Schritte
		 */
		stepSmall:	1,

		/**
		 * content einfÃ¼gen
		 *
		 * @param string|element content
		 * @return jScroll
		 */
		applyContent: function(content)
		{
			this.elementContent.innerHTML = '';
			Element.insert(this.elementContent, content);

			this.refresh();
			this.update();

			return this;
		},

		/**
		 * scrolls down
		 *
		 * @param int step
		 * @return jScroll
		 */
		down: function(step)
		{
			if (typeof step == 'undefined')
			{
				step = this.options.scrollSmall;
			}

			/* Event */
			if (fireEvent(this, 'onScrollDownBefore', this.current + step) === false)
			{
				return this;
			}

			this.scroll(step);

			/* event */
			fireEvent(this, 'onScrollDownAfter');

			return this;
		},

		/**
		 * init
		 *
		 * @param object options
		 */
		initialize: function(options)
		{
			if (typeof options.container == 'undefined')
			{
				throw('Missing container in options for jScroll!');
			}

			/* container wird sich so gemerkt*/
			this.container = options.container;

			/* options merken*/
			this.options = options;
 			this.options.clsBetween			= this.options.clsBetween			|| 'jScroll-element-between';
 			this.options.clsBetweenClicked	= this.options.clsBetweenClicked	|| 'clicked';
			this.options.clsDown			= this.options.clsDown				|| 'jScroll-element-down';
			this.options.clsScroll			= this.options.clsScroll			|| 'jScroll-element-scroll';
			this.options.clsSlider			= this.options.clsSlider			|| 'jScroll-element-slider';
			this.options.clsUp				= this.options.clsUp				|| 'jScroll-element-up';
			this.options.lines				= this.options.lines				|| 10;
			this.options.alignRight			= typeof this.options.alignRight != 'undefined' ? this.options.alignRight : 'auto';

			/* noch nicht geladen dann aufn Stack packen*/
			if (!loaded)
			{
				autoload(createjScroll.pass([this]));
			}
			/* sofort*/
			else
			{
				createjScroll(this);
			}
		},

		/**
		 * content ala Prototype einfÃ¼gen
		 *
		 * @param object content
		 * @return jScroll
		 */
		insertContent: function(content)
		{
			Element.insert(this.elementContent, content);

			this.refresh();
			this.update();

			return this;
		},

		/**
		 * aktualisiert die Informationen weil sich eventuell der Content geÃ¤ndert hat
		 *
		 * @return jScroll
		 */
		refresh: function()
		{
			var isDisplayed = true;
			var contentHeight = null;
			var maxHeight = null;

			if (!this.rendered)
			{
				return this;
			}

			// wenn container nicht sichtbar muss er sichtbar gemacht werden
			if (this.container.isDisplayed() === false)
			{
				isDisplayed = false;
				this.container.setStyles(
				{
					display: 'block'
				});
			}

			contentHeight = this.elementContent.getSize().y;
			maxHeight = parseInt(this.container.getStyle('max-height'));

			// irgendeine hÃ¶he definieren wenn mindesthÃ¶he angegeben ist
			if (maxHeight > 0)
			{
				// wenn content hÃ¶he kleiner der maximalhÃ¶he ist, dann container auf content hÃ¶he setzen
				// wenn content hÃ¶he grÃ¶ÃŸer der maximalhÃ¶he ist, dann container auf maximalhÃ¶he setzen
				this.container.setStyles(
				{
					height: contentHeight <= maxHeight ? contentHeight : maxHeight
				});
			}

			/* hÃ¶he zurÃ¼cksetzen fÃ¼r berechnungen */
			this.elementContent.setStyles(
			{
				height:	'auto'
			});
			contentHeight = this.elementContent.getSize().y;
			
			/* wenn inner content height kleiner container height, dann brauchen wir nix machen*/
			if (contentHeight <= this.element.getSize().y)
			{
				this.enabled = false;
				this.container.setStyles(
				{
					overflow:	''
				});
				this.elementScroll.hide();
				this.elementContent.setStyles(
				{
					marginTop:	0,
					right:		''
				});

				// wenn container nicht sichtbar muss er unsichtbar gemacht werden
				if (isDisplayed === false)
				{
					this.container.setStyles(
					{
						display: ''
					});
				}
				return this;
			}

			this.enabled = true;

			this.elementScroll.show();
			this.container.setStyles(
			{
				overflow:	'hidden'
			});

			/* conten korrektur in Bezug auf den Scroller*/
			if ($(document.body).getStyle('direction').toLowerCase() == 'ltr')
			{
				this.elementContent.setStyles(
				{
					marginTop:	0,
					right:		this.options.alignRight == 'auto' ? this.elementScroll.getSize().x + 'px' : this.options.alignRight
				});
			}
			else
			{
				this.elementContent.setStyles(
				{
					marginTop:	0,
					left:		this.options.alignRight == 'auto' ? this.elementScroll.getSize().x + 'px' : this.options.alignRight
				});
			}

			/* maximale hÃ¶he des sliders */
			this.sliderTop			= this.elementUp.getSize().y - jSElement_getFrameWidth(this.elementUp, 'tb');
			this.sliderHeight		= this.elementScroll.getSize().y - this.elementUp.getSize().y - jSElement_getFrameWidth(this.elementUp, 'tb') - this.elementDown.getSize().y - jSElement_getFrameWidth(this.elementDown, 'tb');
			/* sichtbare hÃ¶he des Content */
			var contentViewHeight	= this.element.getSize().y;
			var contentRealHeight	= this.elementContent.getSize().y;
			this.contentHeight		= contentRealHeight - contentViewHeight;

			/* Steps berechnen */
			this.stepSmall = contentViewHeight * 100 / (this.options.lines * contentRealHeight);
			this.stepLarge = this.stepSmall * this.options.lines;

			/* slider anpassen Ã¼ber die prozente*/
			var height = (this.sliderHeight * contentViewHeight / contentRealHeight);
			/* beachten der hÃ¶he der inneren Elemente */
			if (height < this.elementSliderTop.getSize().y + this.elementSliderBottom.getSize().y)
			{
				height = this.elementSliderTop.getSize().y + this.elementSliderBottom.getSize().y;
			}
			this.elementSlider.setStyles(
			{
				height:	height,
				top:	this.sliderTop
			});

			/* innerhalb des Sliders die element anpassen */
			this.elementSliderCenter.setStyles(
			{
				height:	(height - this.elementSliderTop.getSize().y - this.elementSliderBottom.getSize().y)
			});

			/* hÃ¶he setzen damit wir marginTop verwenden kÃ¶nnen */
			this.elementContent.setStyles(
			{
				height:	'100%'
			});

			this.elementUpBetween.setStyles(
			{
				top:	this.sliderTop,
				height:	0
			});
			this.elementDownBetween.setStyles(
			{
				top: 	(this.sliderTop + this.sliderHeight * this.current / 100 + this.elementSlider.getSize().y),
				bottom:	this.elementDown.getSize().y
			});

			/* sliderHeight noch mal anpassen*/
			this.sliderHeight -= height;

			// wenn container nicht sichtbar muss er unsichtbar gemacht werden
			if (isDisplayed === false)
			{
				this.container.setStyles(
				{
					display: ''
				});
			}

			return this;
		},

		/**
		 * scrollt
		 *
		 * @param int step
		 * @return jScroll
		 */
		scroll: function(step)
		{
			/* nothing to do*/
			if (typeof step == 'undefined' || step == 0 || (step < 0 && this.current <= 0) || (step > 0 && this.current >= 100))
			{
				return this;
			}

			/* Event */
			if (fireEvent(this, 'onScrollBefore', this.current + step) === false)
			{
				return this;
			}

			/* neuer wert*/
			this.current += step;

			/* aktualisieren*/
			this.update();

			/* Event */
			fireEvent(this, 'onScrollAfter');

			return this;
		},

		/**
		 * zu einem bestimmten element scrollen
		 *
		 * 	options
		 * 	--------------------------
		 * 	element		element wohin gescrollt werden sollen
		 * 	animate		animiert scrollen
		 * 	position	position in der anzige (top, view (default))
		 *
		 * @param element|object options
		 * @return jScroll
		 */
		scrollTo: function(options)
		{
			var $this = this;
			var element = null;
			var animate = false;
			var position = 'view';
			var percent = 0;

			if (typeOf(options) == 'element')
			{
				element = options;
			}
			else
			{
				element = options.element;
				animate = options.animate;
				position = options.position;
			}

			element = $(element);

			/* element nicht gefunden oder element gehÃ¶rt nicht zu diesem jScroll */
			if (!element || !element.getParents().find(function(element)
			{
				return element == $this.elementContent;
			}))
			{
				return this;
			}

			var elementContentY = jSElement_getY(this.elementContent);
			var elementContentHeight = this.elementContent.getSize().y;
			var elementY = jSElement_getY(element);
			var elementHeight = element.getSize().y;

			switch (position)
			{
				case 'top':
					percent = (elementY - elementContentY) * 100 / this.contentHeight;
					break;

				case 'view':
				default:
					percent = (elementY - elementContentY - this.sliderHeight / 2) * 100 / this.contentHeight;
					break;
			}

			/* Event */
			if (fireEvent(this, 'onScrollBefore', percent) === false)
			{
				return this;
			}

			this.update(percent, animate);

			/* Event */
			fireEvent(this, 'onScrollAfter');

			return this;
		},

		/**
		 * scrolls up
		 *
		 * @param int step optional default
		 * @return jScroll
		 */
		up: function(step)
		{
			if (typeof step == 'undefined')
			{
				step = this.options.scrollSmall;
			}

			/* Event */
			if (fireEvent(this, 'onScrollUpBefore', this.current - step) === false)
			{
				return this;
			}

			this.scroll(-1 * step);

			/* Event */
			fireEvent(this, 'onScrollUpAfter');

			return this;
		},

		/**
		 * ansicht aktualisieren
		 *
		 * @param int percent
		 * @param bool animate
		 * @return jScroll
		 */
		update: function(percent, animate)
		{
			animate = typeof animate == 'undefined' ? false : animate;

			/* nicht gerendert*/
			if (!this.rendered || !this.enabled)
			{
				return this;
			}

			if (typeof percent != 'undefined')
			{
				this.current = percent;
			}

			/* korrektur*/
			this.current = correctPercentage(this.current);

			/* Event */
			fireEvent(this, 'onUpdateBefore');

			/* slider anpassen*/
			this.elementSlider.setStyles(
			{
				top: (this.sliderTop + this.sliderHeight * this.current / 100)
			});

			/* content anpassen*/
			if (animate)
			{
				new Fx.Morph(this.elementContent).start(
				{
					marginTop: (-1 * this.contentHeight * this.current / 100)
				});
			}
			else
			{
				this.elementContent.setStyles(
				{
					marginTop: (-1 * this.contentHeight * this.current / 100)
				});
			}

			this.elementUpBetween.setStyles(
			{
				height:	(this.sliderTop + this.sliderHeight * this.current / 100 - this.elementUp.getSize().y)
			});

			this.elementDownBetween.setStyles(
			{
				top: (this.sliderTop + this.sliderHeight * this.current / 100 + this.elementSlider.getSize().y)
			});

			/* Event */
			fireEvent(this, 'onUpdateAfter');

			return this;
		}
	});

	/**
	 * liefert das jScrolls zu einem DOM
	 *
	 * @param string|node element
	 * @return jScrolls.*
	 */
	jScroll.$ = function(element)
	{
		var container = $(element);

		if (!container && typeof element == 'string')
		{
			container = containers.find(function(c)
			{
				return c.id == element;
			});
		}
		else if (container && typeof container._jScroll != 'undefined')
		{
			container = container._jScroll;
		}
		else if (container && typeof container._jScroll == 'undefined')
		{
			container = null;
		}

		return (container ? container : null);
	};

	/****************************************************************************************************
	 *																									*
	 *										extend														*
	 *																									*
	 ****************************************************************************************************/
	var isStrict = document.compatMode == 'CSS1Compat';

	var jSElement_addStyles = function(element, sides, styles)
	{
		var val = 0, v, w;
		element = $(element);
		for (var i = 0, len = sides.length; i < len; i++)
		{
			v = element.getStyle(styles[sides.charAt(i)]);
			if (v)
			{
				 w = parseInt(v, 10);
				 if (w)
				 {
				 	val += (w >= 0 ? w : -1 * w);
				 }
			}
		}
		return val;
	};

	var jSElement_getBorderWidth = function(element, side)
	{
		element = $(element);
		return jSElement_addStyles(element, side,
		{
			l: 'border-left-width',
			r: 'border-right-width',
			t: 'border-top-width',
			b: 'border-bottom-width'
		});
	};

	var jSElement_getContentHeight = function(element)
	{
		var prev = null;
		element = $(element);

		var result = 0;
		element.getChildren().each(function(child, index)
		{
			if (child.nodeType != 1 /*element*/)
			{
				if (index == 0)
				{
					prev = child;
				}
				return; /* nur element nodes*/
			}

			child = $(child);

			if (prev)
			{
				result += child.offsetTop - element.offsetTop;
				prev = null;
			}

			return result + child.getSize().y + jSElement_getMargins(child, 'tb');
		});

		return result;
	};

	var jSElement_getFrameWidth = function(element, sides, onlyContentBox)
	{
		element = $(element);
		return onlyContentBox && Browser.name == 'ie' && !isStrict ? 0 : (jSElement_getPadding(element, sides) + jSElement_getBorderWidth(element, sides));
	};

	var jSElement_getMargins = function(element, side)
	{
		element = $(element);
		if (!side)
		{
			return {
				top:	parseInt(element.getStyle('margin-top'), 10) || 0,
				left:	parseInt(element.getStyle('margin-left'), 10) || 0,
				bottom:	parseInt(element.getStyle('margin-bottom'), 10) || 0,
				right:	parseInt(element.getStyle('margin-right'), 10) || 0
			};
		}
		else
		{
			return jSElement_addStyles(element, side,
			{
				l: 'margin-left',
				r: 'margin-right',
				t: 'margin-top',
				b: 'margin-bottom'
			});
		}
	};

	var jSElement_getPadding = function(element, side)
	{
		element = $(element);
		return jSElement_addStyles(element, side,
		{
			l: 'padding-left',
			r: 'padding-right',
			t: 'padding-top',
			b: 'padding-bottom'
		});
	};

	var jSElement_getScroll = function(element)
	{
		element = $(element);
		var d = element, doc = document;
		if (d == doc || d == doc.body)
		{
			var l, t;
			if (Browser.name == 'ie' && isStrict)
			{
				l = doc.documentElement.scrollLeft || (doc.body.scrollLeft || 0);
				t = doc.documentElement.scrollTop || (doc.body.scrollTop || 0);
			}
			else
			{
				l = window.pageXOffset || (doc.body.scrollLeft || 0);
				t = window.pageYOffset || (doc.body.scrollTop || 0);
			}
			return {left: l, top: t};
		}
		else
		{
			return {left: d.scrollLeft, top: d.scrollTop};
		}
	};

	var jSElement_getY = function(element)
	{
		element = $(element);
		var F,K,M,N,J = (document.body || document.documentElement);

		if (element == J)
		{
			return 0;
		}

		if (element.getBoundingClientRect)
		{
			M = element.getBoundingClientRect();
			N = jSElement_getScroll($(document.body));
			return M.top + N.top;
		}

		var O = 0, L = 0; F = element;
		var E = element.getStyle('position') == 'absolute';

		while (F)
		{
			$(F);
			O += F.offsetLeft;
			L += F.offsetTop;
			if (!E && F.getStyle('position') == 'absolute')
			{
				E = true;
			}
			if (Browser.name == 'firefox')
			{
				K = F;
				var P = parseInt(K.getStyle('borderTopWidth'), 10) || 0;
				var H = parseInt(K.getStyle('borderLeftWidth'), 10) || 0;
				O += H;
				L += P;
				if ( F != element && K.getStyle('overflow') != 'visible')
				{
					O += H;
					L += P;
				}
			}
			F = F.offsetParent;
		}

		if ((Browser.name == 'chrome' || Browser.name == 'safari') && E)
		{
			O -= J.offsetLeft;
			L -= J.offsetTop;
		}
		if (Browser.name == 'firefox' && !E)
		{
			var I = $(J);
			O += parseInt(I.getStyle('borderLeftWidth'), 10) || 0;
			L += parseInt(I.getStyle('borderTopWidth'), 10) || 0;
		}
		F = element.parentNode;

		while (F && F != J)
		{
			if (Prototype.Browser.name != 'opera' || (F.tagName != 'TR' && $(F).getStyle('display') != 'inline'))
			{
				O -= F.scrollLeft;
				L -= F.scrollTop;
			}
			F = F.parentNode;
		}

		return L;
	};

	/* info durchschleifen, wenn DOM geladen ist*/
	autoload(function(){});

	/* CSS Rules einbauen */
	window.addEvent('domready', function()
	{
		createCSSDeclaration(
			'.jScroll {overflow: hidden; width: 100%; height: 100%;position:relative;}' +
			'.jScroll .jScroll-content {position: absolute; top: 0px; left: 0px;}' +
			'.jScroll .jScroll-scroll {cursor:pointer; position: absolute; height: 100%; right: 0px; top: 0px;}' +

			'.jScroll .jScroll-scroll-up, .jScroll .jScroll-scroll-slider, .jScroll .jScroll-scroll-down, .jScroll .jScroll-scroll-between {position: absolute; width: 100%;}' +
			'.jScroll .jScroll-scroll-slider {top: 10px; height: 50px;}' +
			'.jScroll .jScroll-scroll-slider .top, .jScroll .jScroll-scroll-slider .center, .jScroll .jScroll-scroll-slider .bottom {width: 100%;}' +
			'.jScroll .jScroll-scroll-between {}' +
			'.jScroll .jScroll-scroll-down {bottom: 0px;}' +

			/** Scroller ---- Styleable **/
			'.jScroll .jScroll-element-scroll {width: 15px;}' +

			/** Pfeil nach unten ---- Styleable **/
			'.jScroll .jScroll-element-down {background: transparent url(' + jsPath + 'images/down.gif) no-repeat center bottom; height: 6px;}' +
			'.jScroll .jScroll-element-down:hover {background-image: url(' + jsPath + 'images/down-hover.gif);}' +

			/** Pfeil nach oben ---- Styleable **/
			'.jScroll .jScroll-element-up {background: transparent url(' + jsPath + 'images/up.gif) no-repeat center top; height: 6px;}' +
			'.jScroll .jScroll-element-up:hover {background-image: url(' + jsPath + 'images/up-hover.gif);}' +

			/** teile zw den Slider und Buttons **/
			'.jScroll .jScroll-element-between {margin-left: 4px; width: 7px; opacity: 0; background-color: #000000; filter: alpha(opacity=0);}' +
			'.jScroll .jScroll-element-between:hover {opacity: 0.25; filter: alpha(opacity=25);}' +
			'.jScroll .jScroll-element-between.clicked {opacity: 0.5; filter: alpha(opacity=50);}' +

			/** Scrollbalken ---- Styleable **/
			'.jScroll .jScroll-element-slider .top {background: transparent url(' + jsPath + 'images/slider-top.gif) no-repeat center top; height: 1px;}' +
			'.jScroll .jScroll-element-slider:hover .top {background-image: url(' + jsPath + 'images/slider-top-hover.gif);}' +
			'.jScroll .jScroll-element-slider .center {background: transparent url(' + jsPath + 'images/slider-center.gif) repeat-y center top;}' +
			'.jScroll .jScroll-element-slider:hover .center {background-image: url(' + jsPath + 'images/slider-center-hover.gif);}' +
			'.jScroll .jScroll-element-slider .bottom {background: transparent url(' + jsPath + 'images/slider-bottom.gif) no-repeat center bottom; height: 1px;}' +
			'.jScroll .jScroll-element-slider:hover .bottom {background-image: url(' + jsPath + 'images/slider-bottom-hover.gif);}'
		);
	});
})();/*!
 * VERSION: 1.19.1
 * DATE: 2017-01-17
 * UPDATES AND DOCS AT: http://greensock.com
 * 
 * Includes all of the following: TweenLite, TweenMax, TimelineLite, TimelineMax, EasePack, CSSPlugin, RoundPropsPlugin, BezierPlugin, AttrPlugin, DirectionalRotationPlugin
 *
 * @license Copyright (c) 2008-2017, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 **/
var _gsScope="undefined"!=typeof module&&module.exports&&"undefined"!=typeof global?global:this||window;(_gsScope._gsQueue||(_gsScope._gsQueue=[])).push(function(){"use strict";_gsScope._gsDefine("TweenMax",["core.Animation","core.SimpleTimeline","TweenLite"],function(a,b,c){var d=function(a){var b,c=[],d=a.length;for(b=0;b!==d;c.push(a[b++]));return c},e=function(a,b,c){var d,e,f=a.cycle;for(d in f)e=f[d],a[d]="function"==typeof e?e(c,b[c]):e[c%e.length];delete a.cycle},f=function(a,b,d){c.call(this,a,b,d),this._cycle=0,this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._dirty=!0,this.render=f.prototype.render},g=1e-10,h=c._internals,i=h.isSelector,j=h.isArray,k=f.prototype=c.to({},.1,{}),l=[];f.version="1.19.1",k.constructor=f,k.kill()._gc=!1,f.killTweensOf=f.killDelayedCallsTo=c.killTweensOf,f.getTweensOf=c.getTweensOf,f.lagSmoothing=c.lagSmoothing,f.ticker=c.ticker,f.render=c.render,k.invalidate=function(){return this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._uncache(!0),c.prototype.invalidate.call(this)},k.updateTo=function(a,b){var d,e=this.ratio,f=this.vars.immediateRender||a.immediateRender;b&&this._startTime<this._timeline._time&&(this._startTime=this._timeline._time,this._uncache(!1),this._gc?this._enabled(!0,!1):this._timeline.insert(this,this._startTime-this._delay));for(d in a)this.vars[d]=a[d];if(this._initted||f)if(b)this._initted=!1,f&&this.render(0,!0,!0);else if(this._gc&&this._enabled(!0,!1),this._notifyPluginsOfEnabled&&this._firstPT&&c._onPluginEvent("_onDisable",this),this._time/this._duration>.998){var g=this._totalTime;this.render(0,!0,!1),this._initted=!1,this.render(g,!0,!1)}else if(this._initted=!1,this._init(),this._time>0||f)for(var h,i=1/(1-e),j=this._firstPT;j;)h=j.s+j.c,j.c*=i,j.s=h-j.c,j=j._next;return this},k.render=function(a,b,c){this._initted||0===this._duration&&this.vars.repeat&&this.invalidate();var d,e,f,i,j,k,l,m,n=this._dirty?this.totalDuration():this._totalDuration,o=this._time,p=this._totalTime,q=this._cycle,r=this._duration,s=this._rawPrevTime;if(a>=n-1e-7&&a>=0?(this._totalTime=n,this._cycle=this._repeat,this._yoyo&&0!==(1&this._cycle)?(this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0):(this._time=r,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1),this._reversed||(d=!0,e="onComplete",c=c||this._timeline.autoRemoveChildren),0===r&&(this._initted||!this.vars.lazy||c)&&(this._startTime===this._timeline._duration&&(a=0),(0>s||0>=a&&a>=-1e-7||s===g&&"isPause"!==this.data)&&s!==a&&(c=!0,s>g&&(e="onReverseComplete")),this._rawPrevTime=m=!b||a||s===a?a:g)):1e-7>a?(this._totalTime=this._time=this._cycle=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==p||0===r&&s>0)&&(e="onReverseComplete",d=this._reversed),0>a&&(this._active=!1,0===r&&(this._initted||!this.vars.lazy||c)&&(s>=0&&(c=!0),this._rawPrevTime=m=!b||a||s===a?a:g)),this._initted||(c=!0)):(this._totalTime=this._time=a,0!==this._repeat&&(i=r+this._repeatDelay,this._cycle=this._totalTime/i>>0,0!==this._cycle&&this._cycle===this._totalTime/i&&a>=p&&this._cycle--,this._time=this._totalTime-this._cycle*i,this._yoyo&&0!==(1&this._cycle)&&(this._time=r-this._time),this._time>r?this._time=r:this._time<0&&(this._time=0)),this._easeType?(j=this._time/r,k=this._easeType,l=this._easePower,(1===k||3===k&&j>=.5)&&(j=1-j),3===k&&(j*=2),1===l?j*=j:2===l?j*=j*j:3===l?j*=j*j*j:4===l&&(j*=j*j*j*j),1===k?this.ratio=1-j:2===k?this.ratio=j:this._time/r<.5?this.ratio=j/2:this.ratio=1-j/2):this.ratio=this._ease.getRatio(this._time/r)),o===this._time&&!c&&q===this._cycle)return void(p!==this._totalTime&&this._onUpdate&&(b||this._callback("onUpdate")));if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!c&&this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration))return this._time=o,this._totalTime=p,this._rawPrevTime=s,this._cycle=q,h.lazyTweens.push(this),void(this._lazy=[a,b]);this._time&&!d?this.ratio=this._ease.getRatio(this._time/r):d&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(this._lazy!==!1&&(this._lazy=!1),this._active||!this._paused&&this._time!==o&&a>=0&&(this._active=!0),0===p&&(2===this._initted&&a>0&&this._init(),this._startAt&&(a>=0?this._startAt.render(a,b,c):e||(e="_dummyGS")),this.vars.onStart&&(0!==this._totalTime||0===r)&&(b||this._callback("onStart"))),f=this._firstPT;f;)f.f?f.t[f.p](f.c*this.ratio+f.s):f.t[f.p]=f.c*this.ratio+f.s,f=f._next;this._onUpdate&&(0>a&&this._startAt&&this._startTime&&this._startAt.render(a,b,c),b||(this._totalTime!==p||e)&&this._callback("onUpdate")),this._cycle!==q&&(b||this._gc||this.vars.onRepeat&&this._callback("onRepeat")),e&&(!this._gc||c)&&(0>a&&this._startAt&&!this._onUpdate&&this._startTime&&this._startAt.render(a,b,c),d&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!b&&this.vars[e]&&this._callback(e),0===r&&this._rawPrevTime===g&&m!==g&&(this._rawPrevTime=0))},f.to=function(a,b,c){return new f(a,b,c)},f.from=function(a,b,c){return c.runBackwards=!0,c.immediateRender=0!=c.immediateRender,new f(a,b,c)},f.fromTo=function(a,b,c,d){return d.startAt=c,d.immediateRender=0!=d.immediateRender&&0!=c.immediateRender,new f(a,b,d)},f.staggerTo=f.allTo=function(a,b,g,h,k,m,n){h=h||0;var o,p,q,r,s=0,t=[],u=function(){g.onComplete&&g.onComplete.apply(g.onCompleteScope||this,arguments),k.apply(n||g.callbackScope||this,m||l)},v=g.cycle,w=g.startAt&&g.startAt.cycle;for(j(a)||("string"==typeof a&&(a=c.selector(a)||a),i(a)&&(a=d(a))),a=a||[],0>h&&(a=d(a),a.reverse(),h*=-1),o=a.length-1,q=0;o>=q;q++){p={};for(r in g)p[r]=g[r];if(v&&(e(p,a,q),null!=p.duration&&(b=p.duration,delete p.duration)),w){w=p.startAt={};for(r in g.startAt)w[r]=g.startAt[r];e(p.startAt,a,q)}p.delay=s+(p.delay||0),q===o&&k&&(p.onComplete=u),t[q]=new f(a[q],b,p),s+=h}return t},f.staggerFrom=f.allFrom=function(a,b,c,d,e,g,h){return c.runBackwards=!0,c.immediateRender=0!=c.immediateRender,f.staggerTo(a,b,c,d,e,g,h)},f.staggerFromTo=f.allFromTo=function(a,b,c,d,e,g,h,i){return d.startAt=c,d.immediateRender=0!=d.immediateRender&&0!=c.immediateRender,f.staggerTo(a,b,d,e,g,h,i)},f.delayedCall=function(a,b,c,d,e){return new f(b,0,{delay:a,onComplete:b,onCompleteParams:c,callbackScope:d,onReverseComplete:b,onReverseCompleteParams:c,immediateRender:!1,useFrames:e,overwrite:0})},f.set=function(a,b){return new f(a,0,b)},f.isTweening=function(a){return c.getTweensOf(a,!0).length>0};var m=function(a,b){for(var d=[],e=0,f=a._first;f;)f instanceof c?d[e++]=f:(b&&(d[e++]=f),d=d.concat(m(f,b)),e=d.length),f=f._next;return d},n=f.getAllTweens=function(b){return m(a._rootTimeline,b).concat(m(a._rootFramesTimeline,b))};f.killAll=function(a,c,d,e){null==c&&(c=!0),null==d&&(d=!0);var f,g,h,i=n(0!=e),j=i.length,k=c&&d&&e;for(h=0;j>h;h++)g=i[h],(k||g instanceof b||(f=g.target===g.vars.onComplete)&&d||c&&!f)&&(a?g.totalTime(g._reversed?0:g.totalDuration()):g._enabled(!1,!1))},f.killChildTweensOf=function(a,b){if(null!=a){var e,g,k,l,m,n=h.tweenLookup;if("string"==typeof a&&(a=c.selector(a)||a),i(a)&&(a=d(a)),j(a))for(l=a.length;--l>-1;)f.killChildTweensOf(a[l],b);else{e=[];for(k in n)for(g=n[k].target.parentNode;g;)g===a&&(e=e.concat(n[k].tweens)),g=g.parentNode;for(m=e.length,l=0;m>l;l++)b&&e[l].totalTime(e[l].totalDuration()),e[l]._enabled(!1,!1)}}};var o=function(a,c,d,e){c=c!==!1,d=d!==!1,e=e!==!1;for(var f,g,h=n(e),i=c&&d&&e,j=h.length;--j>-1;)g=h[j],(i||g instanceof b||(f=g.target===g.vars.onComplete)&&d||c&&!f)&&g.paused(a)};return f.pauseAll=function(a,b,c){o(!0,a,b,c)},f.resumeAll=function(a,b,c){o(!1,a,b,c)},f.globalTimeScale=function(b){var d=a._rootTimeline,e=c.ticker.time;return arguments.length?(b=b||g,d._startTime=e-(e-d._startTime)*d._timeScale/b,d=a._rootFramesTimeline,e=c.ticker.frame,d._startTime=e-(e-d._startTime)*d._timeScale/b,d._timeScale=a._rootTimeline._timeScale=b,b):d._timeScale},k.progress=function(a,b){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!==(1&this._cycle)?1-a:a)+this._cycle*(this._duration+this._repeatDelay),b):this._time/this.duration()},k.totalProgress=function(a,b){return arguments.length?this.totalTime(this.totalDuration()*a,b):this._totalTime/this.totalDuration()},k.time=function(a,b){return arguments.length?(this._dirty&&this.totalDuration(),a>this._duration&&(a=this._duration),this._yoyo&&0!==(1&this._cycle)?a=this._duration-a+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(a+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(a,b)):this._time},k.duration=function(b){return arguments.length?a.prototype.duration.call(this,b):this._duration},k.totalDuration=function(a){return arguments.length?-1===this._repeat?this:this.duration((a-this._repeat*this._repeatDelay)/(this._repeat+1)):(this._dirty&&(this._totalDuration=-1===this._repeat?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat,this._dirty=!1),this._totalDuration)},k.repeat=function(a){return arguments.length?(this._repeat=a,this._uncache(!0)):this._repeat},k.repeatDelay=function(a){return arguments.length?(this._repeatDelay=a,this._uncache(!0)):this._repeatDelay},k.yoyo=function(a){return arguments.length?(this._yoyo=a,this):this._yoyo},f},!0),_gsScope._gsDefine("TimelineLite",["core.Animation","core.SimpleTimeline","TweenLite"],function(a,b,c){var d=function(a){b.call(this,a),this._labels={},this.autoRemoveChildren=this.vars.autoRemoveChildren===!0,this.smoothChildTiming=this.vars.smoothChildTiming===!0,this._sortChildren=!0,this._onUpdate=this.vars.onUpdate;var c,d,e=this.vars;for(d in e)c=e[d],i(c)&&-1!==c.join("").indexOf("{self}")&&(e[d]=this._swapSelfInParams(c));i(e.tweens)&&this.add(e.tweens,0,e.align,e.stagger)},e=1e-10,f=c._internals,g=d._internals={},h=f.isSelector,i=f.isArray,j=f.lazyTweens,k=f.lazyRender,l=_gsScope._gsDefine.globals,m=function(a){var b,c={};for(b in a)c[b]=a[b];return c},n=function(a,b,c){var d,e,f=a.cycle;for(d in f)e=f[d],a[d]="function"==typeof e?e(c,b[c]):e[c%e.length];delete a.cycle},o=g.pauseCallback=function(){},p=function(a){var b,c=[],d=a.length;for(b=0;b!==d;c.push(a[b++]));return c},q=d.prototype=new b;return d.version="1.19.1",q.constructor=d,q.kill()._gc=q._forcingPlayhead=q._hasPause=!1,q.to=function(a,b,d,e){var f=d.repeat&&l.TweenMax||c;return b?this.add(new f(a,b,d),e):this.set(a,d,e)},q.from=function(a,b,d,e){return this.add((d.repeat&&l.TweenMax||c).from(a,b,d),e)},q.fromTo=function(a,b,d,e,f){var g=e.repeat&&l.TweenMax||c;return b?this.add(g.fromTo(a,b,d,e),f):this.set(a,e,f)},q.staggerTo=function(a,b,e,f,g,i,j,k){var l,o,q=new d({onComplete:i,onCompleteParams:j,callbackScope:k,smoothChildTiming:this.smoothChildTiming}),r=e.cycle;for("string"==typeof a&&(a=c.selector(a)||a),a=a||[],h(a)&&(a=p(a)),f=f||0,0>f&&(a=p(a),a.reverse(),f*=-1),o=0;o<a.length;o++)l=m(e),l.startAt&&(l.startAt=m(l.startAt),l.startAt.cycle&&n(l.startAt,a,o)),r&&(n(l,a,o),null!=l.duration&&(b=l.duration,delete l.duration)),q.to(a[o],b,l,o*f);return this.add(q,g)},q.staggerFrom=function(a,b,c,d,e,f,g,h){return c.immediateRender=0!=c.immediateRender,c.runBackwards=!0,this.staggerTo(a,b,c,d,e,f,g,h)},q.staggerFromTo=function(a,b,c,d,e,f,g,h,i){return d.startAt=c,d.immediateRender=0!=d.immediateRender&&0!=c.immediateRender,this.staggerTo(a,b,d,e,f,g,h,i)},q.call=function(a,b,d,e){return this.add(c.delayedCall(0,a,b,d),e)},q.set=function(a,b,d){return d=this._parseTimeOrLabel(d,0,!0),null==b.immediateRender&&(b.immediateRender=d===this._time&&!this._paused),this.add(new c(a,0,b),d)},d.exportRoot=function(a,b){a=a||{},null==a.smoothChildTiming&&(a.smoothChildTiming=!0);var e,f,g=new d(a),h=g._timeline;for(null==b&&(b=!0),h._remove(g,!0),g._startTime=0,g._rawPrevTime=g._time=g._totalTime=h._time,e=h._first;e;)f=e._next,b&&e instanceof c&&e.target===e.vars.onComplete||g.add(e,e._startTime-e._delay),e=f;return h.add(g,0),g},q.add=function(e,f,g,h){var j,k,l,m,n,o;if("number"!=typeof f&&(f=this._parseTimeOrLabel(f,0,!0,e)),!(e instanceof a)){if(e instanceof Array||e&&e.push&&i(e)){for(g=g||"normal",h=h||0,j=f,k=e.length,l=0;k>l;l++)i(m=e[l])&&(m=new d({tweens:m})),this.add(m,j),"string"!=typeof m&&"function"!=typeof m&&("sequence"===g?j=m._startTime+m.totalDuration()/m._timeScale:"start"===g&&(m._startTime-=m.delay())),j+=h;return this._uncache(!0)}if("string"==typeof e)return this.addLabel(e,f);if("function"!=typeof e)throw"Cannot add "+e+" into the timeline; it is not a tween, timeline, function, or string.";e=c.delayedCall(0,e)}if(b.prototype.add.call(this,e,f),(this._gc||this._time===this._duration)&&!this._paused&&this._duration<this.duration())for(n=this,o=n.rawTime()>e._startTime;n._timeline;)o&&n._timeline.smoothChildTiming?n.totalTime(n._totalTime,!0):n._gc&&n._enabled(!0,!1),n=n._timeline;return this},q.remove=function(b){if(b instanceof a){this._remove(b,!1);var c=b._timeline=b.vars.useFrames?a._rootFramesTimeline:a._rootTimeline;return b._startTime=(b._paused?b._pauseTime:c._time)-(b._reversed?b.totalDuration()-b._totalTime:b._totalTime)/b._timeScale,this}if(b instanceof Array||b&&b.push&&i(b)){for(var d=b.length;--d>-1;)this.remove(b[d]);return this}return"string"==typeof b?this.removeLabel(b):this.kill(null,b)},q._remove=function(a,c){b.prototype._remove.call(this,a,c);var d=this._last;return d?this._time>this.duration()&&(this._time=this._duration,this._totalTime=this._totalDuration):this._time=this._totalTime=this._duration=this._totalDuration=0,this},q.append=function(a,b){return this.add(a,this._parseTimeOrLabel(null,b,!0,a))},q.insert=q.insertMultiple=function(a,b,c,d){return this.add(a,b||0,c,d)},q.appendMultiple=function(a,b,c,d){return this.add(a,this._parseTimeOrLabel(null,b,!0,a),c,d)},q.addLabel=function(a,b){return this._labels[a]=this._parseTimeOrLabel(b),this},q.addPause=function(a,b,d,e){var f=c.delayedCall(0,o,d,e||this);return f.vars.onComplete=f.vars.onReverseComplete=b,f.data="isPause",this._hasPause=!0,this.add(f,a)},q.removeLabel=function(a){return delete this._labels[a],this},q.getLabelTime=function(a){return null!=this._labels[a]?this._labels[a]:-1},q._parseTimeOrLabel=function(b,c,d,e){var f;if(e instanceof a&&e.timeline===this)this.remove(e);else if(e&&(e instanceof Array||e.push&&i(e)))for(f=e.length;--f>-1;)e[f]instanceof a&&e[f].timeline===this&&this.remove(e[f]);if("string"==typeof c)return this._parseTimeOrLabel(c,d&&"number"==typeof b&&null==this._labels[c]?b-this.duration():0,d);if(c=c||0,"string"!=typeof b||!isNaN(b)&&null==this._labels[b])null==b&&(b=this.duration());else{if(f=b.indexOf("="),-1===f)return null==this._labels[b]?d?this._labels[b]=this.duration()+c:c:this._labels[b]+c;c=parseInt(b.charAt(f-1)+"1",10)*Number(b.substr(f+1)),b=f>1?this._parseTimeOrLabel(b.substr(0,f-1),0,d):this.duration()}return Number(b)+c},q.seek=function(a,b){return this.totalTime("number"==typeof a?a:this._parseTimeOrLabel(a),b!==!1)},q.stop=function(){return this.paused(!0)},q.gotoAndPlay=function(a,b){return this.play(a,b)},q.gotoAndStop=function(a,b){return this.pause(a,b)},q.render=function(a,b,c){this._gc&&this._enabled(!0,!1);var d,f,g,h,i,l,m,n=this._dirty?this.totalDuration():this._totalDuration,o=this._time,p=this._startTime,q=this._timeScale,r=this._paused;if(a>=n-1e-7&&a>=0)this._totalTime=this._time=n,this._reversed||this._hasPausedChild()||(f=!0,h="onComplete",i=!!this._timeline.autoRemoveChildren,0===this._duration&&(0>=a&&a>=-1e-7||this._rawPrevTime<0||this._rawPrevTime===e)&&this._rawPrevTime!==a&&this._first&&(i=!0,this._rawPrevTime>e&&(h="onReverseComplete"))),this._rawPrevTime=this._duration||!b||a||this._rawPrevTime===a?a:e,a=n+1e-4;else if(1e-7>a)if(this._totalTime=this._time=0,(0!==o||0===this._duration&&this._rawPrevTime!==e&&(this._rawPrevTime>0||0>a&&this._rawPrevTime>=0))&&(h="onReverseComplete",f=this._reversed),0>a)this._active=!1,this._timeline.autoRemoveChildren&&this._reversed?(i=f=!0,h="onReverseComplete"):this._rawPrevTime>=0&&this._first&&(i=!0),this._rawPrevTime=a;else{if(this._rawPrevTime=this._duration||!b||a||this._rawPrevTime===a?a:e,0===a&&f)for(d=this._first;d&&0===d._startTime;)d._duration||(f=!1),d=d._next;a=0,this._initted||(i=!0)}else{if(this._hasPause&&!this._forcingPlayhead&&!b){if(a>=o)for(d=this._first;d&&d._startTime<=a&&!l;)d._duration||"isPause"!==d.data||d.ratio||0===d._startTime&&0===this._rawPrevTime||(l=d),d=d._next;else for(d=this._last;d&&d._startTime>=a&&!l;)d._duration||"isPause"===d.data&&d._rawPrevTime>0&&(l=d),d=d._prev;l&&(this._time=a=l._startTime,this._totalTime=a+this._cycle*(this._totalDuration+this._repeatDelay))}this._totalTime=this._time=this._rawPrevTime=a}if(this._time!==o&&this._first||c||i||l){if(this._initted||(this._initted=!0),this._active||!this._paused&&this._time!==o&&a>0&&(this._active=!0),0===o&&this.vars.onStart&&(0===this._time&&this._duration||b||this._callback("onStart")),m=this._time,m>=o)for(d=this._first;d&&(g=d._next,m===this._time&&(!this._paused||r));)(d._active||d._startTime<=m&&!d._paused&&!d._gc)&&(l===d&&this.pause(),d._reversed?d.render((d._dirty?d.totalDuration():d._totalDuration)-(a-d._startTime)*d._timeScale,b,c):d.render((a-d._startTime)*d._timeScale,b,c)),d=g;else for(d=this._last;d&&(g=d._prev,m===this._time&&(!this._paused||r));){if(d._active||d._startTime<=o&&!d._paused&&!d._gc){if(l===d){for(l=d._prev;l&&l.endTime()>this._time;)l.render(l._reversed?l.totalDuration()-(a-l._startTime)*l._timeScale:(a-l._startTime)*l._timeScale,b,c),l=l._prev;l=null,this.pause()}d._reversed?d.render((d._dirty?d.totalDuration():d._totalDuration)-(a-d._startTime)*d._timeScale,b,c):d.render((a-d._startTime)*d._timeScale,b,c)}d=g}this._onUpdate&&(b||(j.length&&k(),this._callback("onUpdate"))),h&&(this._gc||(p===this._startTime||q!==this._timeScale)&&(0===this._time||n>=this.totalDuration())&&(f&&(j.length&&k(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!b&&this.vars[h]&&this._callback(h)))}},q._hasPausedChild=function(){for(var a=this._first;a;){if(a._paused||a instanceof d&&a._hasPausedChild())return!0;a=a._next}return!1},q.getChildren=function(a,b,d,e){e=e||-9999999999;for(var f=[],g=this._first,h=0;g;)g._startTime<e||(g instanceof c?b!==!1&&(f[h++]=g):(d!==!1&&(f[h++]=g),a!==!1&&(f=f.concat(g.getChildren(!0,b,d)),h=f.length))),g=g._next;return f},q.getTweensOf=function(a,b){var d,e,f=this._gc,g=[],h=0;for(f&&this._enabled(!0,!0),d=c.getTweensOf(a),e=d.length;--e>-1;)(d[e].timeline===this||b&&this._contains(d[e]))&&(g[h++]=d[e]);return f&&this._enabled(!1,!0),g},q.recent=function(){return this._recent},q._contains=function(a){for(var b=a.timeline;b;){if(b===this)return!0;b=b.timeline}return!1},q.shiftChildren=function(a,b,c){c=c||0;for(var d,e=this._first,f=this._labels;e;)e._startTime>=c&&(e._startTime+=a),e=e._next;if(b)for(d in f)f[d]>=c&&(f[d]+=a);return this._uncache(!0)},q._kill=function(a,b){if(!a&&!b)return this._enabled(!1,!1);for(var c=b?this.getTweensOf(b):this.getChildren(!0,!0,!1),d=c.length,e=!1;--d>-1;)c[d]._kill(a,b)&&(e=!0);return e},q.clear=function(a){var b=this.getChildren(!1,!0,!0),c=b.length;for(this._time=this._totalTime=0;--c>-1;)b[c]._enabled(!1,!1);return a!==!1&&(this._labels={}),this._uncache(!0)},q.invalidate=function(){for(var b=this._first;b;)b.invalidate(),b=b._next;return a.prototype.invalidate.call(this)},q._enabled=function(a,c){if(a===this._gc)for(var d=this._first;d;)d._enabled(a,!0),d=d._next;return b.prototype._enabled.call(this,a,c)},q.totalTime=function(b,c,d){this._forcingPlayhead=!0;var e=a.prototype.totalTime.apply(this,arguments);return this._forcingPlayhead=!1,e},q.duration=function(a){return arguments.length?(0!==this.duration()&&0!==a&&this.timeScale(this._duration/a),this):(this._dirty&&this.totalDuration(),this._duration)},q.totalDuration=function(a){if(!arguments.length){if(this._dirty){for(var b,c,d=0,e=this._last,f=999999999999;e;)b=e._prev,e._dirty&&e.totalDuration(),e._startTime>f&&this._sortChildren&&!e._paused?this.add(e,e._startTime-e._delay):f=e._startTime,e._startTime<0&&!e._paused&&(d-=e._startTime,this._timeline.smoothChildTiming&&(this._startTime+=e._startTime/this._timeScale),this.shiftChildren(-e._startTime,!1,-9999999999),f=0),c=e._startTime+e._totalDuration/e._timeScale,c>d&&(d=c),e=b;this._duration=this._totalDuration=d,this._dirty=!1}return this._totalDuration}return a&&this.totalDuration()?this.timeScale(this._totalDuration/a):this},q.paused=function(b){if(!b)for(var c=this._first,d=this._time;c;)c._startTime===d&&"isPause"===c.data&&(c._rawPrevTime=0),c=c._next;return a.prototype.paused.apply(this,arguments)},q.usesFrames=function(){for(var b=this._timeline;b._timeline;)b=b._timeline;return b===a._rootFramesTimeline},q.rawTime=function(a){return a&&(this._paused||this._repeat&&this.time()>0&&this.totalProgress()<1)?this._totalTime%(this._duration+this._repeatDelay):this._paused?this._totalTime:(this._timeline.rawTime(a)-this._startTime)*this._timeScale},d},!0),_gsScope._gsDefine("TimelineMax",["TimelineLite","TweenLite","easing.Ease"],function(a,b,c){var d=function(b){a.call(this,b),this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._cycle=0,this._yoyo=this.vars.yoyo===!0,this._dirty=!0},e=1e-10,f=b._internals,g=f.lazyTweens,h=f.lazyRender,i=_gsScope._gsDefine.globals,j=new c(null,null,1,0),k=d.prototype=new a;return k.constructor=d,k.kill()._gc=!1,d.version="1.19.1",k.invalidate=function(){return this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._uncache(!0),a.prototype.invalidate.call(this)},k.addCallback=function(a,c,d,e){return this.add(b.delayedCall(0,a,d,e),c)},k.removeCallback=function(a,b){if(a)if(null==b)this._kill(null,a);else for(var c=this.getTweensOf(a,!1),d=c.length,e=this._parseTimeOrLabel(b);--d>-1;)c[d]._startTime===e&&c[d]._enabled(!1,!1);return this},k.removePause=function(b){return this.removeCallback(a._internals.pauseCallback,b)},k.tweenTo=function(a,c){c=c||{};var d,e,f,g={ease:j,useFrames:this.usesFrames(),immediateRender:!1},h=c.repeat&&i.TweenMax||b;for(e in c)g[e]=c[e];return g.time=this._parseTimeOrLabel(a),d=Math.abs(Number(g.time)-this._time)/this._timeScale||.001,f=new h(this,d,g),g.onStart=function(){f.target.paused(!0),f.vars.time!==f.target.time()&&d===f.duration()&&f.duration(Math.abs(f.vars.time-f.target.time())/f.target._timeScale),c.onStart&&c.onStart.apply(c.onStartScope||c.callbackScope||f,c.onStartParams||[])},f},k.tweenFromTo=function(a,b,c){c=c||{},a=this._parseTimeOrLabel(a),c.startAt={onComplete:this.seek,onCompleteParams:[a],callbackScope:this},c.immediateRender=c.immediateRender!==!1;var d=this.tweenTo(b,c);return d.duration(Math.abs(d.vars.time-a)/this._timeScale||.001)},k.render=function(a,b,c){this._gc&&this._enabled(!0,!1);var d,f,i,j,k,l,m,n,o=this._dirty?this.totalDuration():this._totalDuration,p=this._duration,q=this._time,r=this._totalTime,s=this._startTime,t=this._timeScale,u=this._rawPrevTime,v=this._paused,w=this._cycle;if(a>=o-1e-7&&a>=0)this._locked||(this._totalTime=o,this._cycle=this._repeat),this._reversed||this._hasPausedChild()||(f=!0,j="onComplete",k=!!this._timeline.autoRemoveChildren,0===this._duration&&(0>=a&&a>=-1e-7||0>u||u===e)&&u!==a&&this._first&&(k=!0,u>e&&(j="onReverseComplete"))),this._rawPrevTime=this._duration||!b||a||this._rawPrevTime===a?a:e,this._yoyo&&0!==(1&this._cycle)?this._time=a=0:(this._time=p,a=p+1e-4);else if(1e-7>a)if(this._locked||(this._totalTime=this._cycle=0),this._time=0,(0!==q||0===p&&u!==e&&(u>0||0>a&&u>=0)&&!this._locked)&&(j="onReverseComplete",f=this._reversed),0>a)this._active=!1,this._timeline.autoRemoveChildren&&this._reversed?(k=f=!0,j="onReverseComplete"):u>=0&&this._first&&(k=!0),this._rawPrevTime=a;else{if(this._rawPrevTime=p||!b||a||this._rawPrevTime===a?a:e,0===a&&f)for(d=this._first;d&&0===d._startTime;)d._duration||(f=!1),d=d._next;a=0,this._initted||(k=!0)}else if(0===p&&0>u&&(k=!0),this._time=this._rawPrevTime=a,this._locked||(this._totalTime=a,0!==this._repeat&&(l=p+this._repeatDelay,this._cycle=this._totalTime/l>>0,0!==this._cycle&&this._cycle===this._totalTime/l&&a>=r&&this._cycle--,this._time=this._totalTime-this._cycle*l,this._yoyo&&0!==(1&this._cycle)&&(this._time=p-this._time),this._time>p?(this._time=p,a=p+1e-4):this._time<0?this._time=a=0:a=this._time)),this._hasPause&&!this._forcingPlayhead&&!b&&p>a){if(a=this._time,a>=q||this._repeat&&w!==this._cycle)for(d=this._first;d&&d._startTime<=a&&!m;)d._duration||"isPause"!==d.data||d.ratio||0===d._startTime&&0===this._rawPrevTime||(m=d),d=d._next;else for(d=this._last;d&&d._startTime>=a&&!m;)d._duration||"isPause"===d.data&&d._rawPrevTime>0&&(m=d),d=d._prev;m&&(this._time=a=m._startTime,this._totalTime=a+this._cycle*(this._totalDuration+this._repeatDelay))}if(this._cycle!==w&&!this._locked){var x=this._yoyo&&0!==(1&w),y=x===(this._yoyo&&0!==(1&this._cycle)),z=this._totalTime,A=this._cycle,B=this._rawPrevTime,C=this._time;if(this._totalTime=w*p,this._cycle<w?x=!x:this._totalTime+=p,this._time=q,this._rawPrevTime=0===p?u-1e-4:u,this._cycle=w,this._locked=!0,q=x?0:p,this.render(q,b,0===p),b||this._gc||this.vars.onRepeat&&(this._cycle=A,this._locked=!1,this._callback("onRepeat")),q!==this._time)return;if(y&&(this._cycle=w,this._locked=!0,q=x?p+1e-4:-1e-4,this.render(q,!0,!1)),this._locked=!1,this._paused&&!v)return;this._time=C,this._totalTime=z,this._cycle=A,this._rawPrevTime=B}if(!(this._time!==q&&this._first||c||k||m))return void(r!==this._totalTime&&this._onUpdate&&(b||this._callback("onUpdate")));if(this._initted||(this._initted=!0),this._active||!this._paused&&this._totalTime!==r&&a>0&&(this._active=!0),0===r&&this.vars.onStart&&(0===this._totalTime&&this._totalDuration||b||this._callback("onStart")),n=this._time,n>=q)for(d=this._first;d&&(i=d._next,n===this._time&&(!this._paused||v));)(d._active||d._startTime<=this._time&&!d._paused&&!d._gc)&&(m===d&&this.pause(),d._reversed?d.render((d._dirty?d.totalDuration():d._totalDuration)-(a-d._startTime)*d._timeScale,b,c):d.render((a-d._startTime)*d._timeScale,b,c)),d=i;else for(d=this._last;d&&(i=d._prev,n===this._time&&(!this._paused||v));){if(d._active||d._startTime<=q&&!d._paused&&!d._gc){if(m===d){for(m=d._prev;m&&m.endTime()>this._time;)m.render(m._reversed?m.totalDuration()-(a-m._startTime)*m._timeScale:(a-m._startTime)*m._timeScale,b,c),m=m._prev;m=null,this.pause()}d._reversed?d.render((d._dirty?d.totalDuration():d._totalDuration)-(a-d._startTime)*d._timeScale,b,c):d.render((a-d._startTime)*d._timeScale,b,c)}d=i}this._onUpdate&&(b||(g.length&&h(),this._callback("onUpdate"))),j&&(this._locked||this._gc||(s===this._startTime||t!==this._timeScale)&&(0===this._time||o>=this.totalDuration())&&(f&&(g.length&&h(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!b&&this.vars[j]&&this._callback(j)))},k.getActive=function(a,b,c){null==a&&(a=!0),null==b&&(b=!0),null==c&&(c=!1);var d,e,f=[],g=this.getChildren(a,b,c),h=0,i=g.length;for(d=0;i>d;d++)e=g[d],e.isActive()&&(f[h++]=e);return f},k.getLabelAfter=function(a){a||0!==a&&(a=this._time);var b,c=this.getLabelsArray(),d=c.length;for(b=0;d>b;b++)if(c[b].time>a)return c[b].name;return null},k.getLabelBefore=function(a){null==a&&(a=this._time);for(var b=this.getLabelsArray(),c=b.length;--c>-1;)if(b[c].time<a)return b[c].name;return null},k.getLabelsArray=function(){var a,b=[],c=0;for(a in this._labels)b[c++]={time:this._labels[a],name:a};return b.sort(function(a,b){return a.time-b.time}),b},k.invalidate=function(){return this._locked=!1,a.prototype.invalidate.call(this)},k.progress=function(a,b){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!==(1&this._cycle)?1-a:a)+this._cycle*(this._duration+this._repeatDelay),b):this._time/this.duration()},k.totalProgress=function(a,b){return arguments.length?this.totalTime(this.totalDuration()*a,b):this._totalTime/this.totalDuration()},k.totalDuration=function(b){return arguments.length?-1!==this._repeat&&b?this.timeScale(this.totalDuration()/b):this:(this._dirty&&(a.prototype.totalDuration.call(this),this._totalDuration=-1===this._repeat?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat),this._totalDuration)},k.time=function(a,b){return arguments.length?(this._dirty&&this.totalDuration(),a>this._duration&&(a=this._duration),this._yoyo&&0!==(1&this._cycle)?a=this._duration-a+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(a+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(a,b)):this._time},k.repeat=function(a){return arguments.length?(this._repeat=a,this._uncache(!0)):this._repeat},k.repeatDelay=function(a){return arguments.length?(this._repeatDelay=a,this._uncache(!0)):this._repeatDelay},k.yoyo=function(a){return arguments.length?(this._yoyo=a,this):this._yoyo},k.currentLabel=function(a){return arguments.length?this.seek(a,!0):this.getLabelBefore(this._time+1e-8)},d},!0),function(){var a=180/Math.PI,b=[],c=[],d=[],e={},f=_gsScope._gsDefine.globals,g=function(a,b,c,d){c===d&&(c=d-(d-b)/1e6),a===b&&(b=a+(c-a)/1e6),this.a=a,this.b=b,this.c=c,this.d=d,this.da=d-a,this.ca=c-a,this.ba=b-a},h=",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,",i=function(a,b,c,d){var e={a:a},f={},g={},h={c:d},i=(a+b)/2,j=(b+c)/2,k=(c+d)/2,l=(i+j)/2,m=(j+k)/2,n=(m-l)/8;return e.b=i+(a-i)/4,f.b=l+n,e.c=f.a=(e.b+f.b)/2,f.c=g.a=(l+m)/2,g.b=m-n,h.b=k+(d-k)/4,g.c=h.a=(g.b+h.b)/2,[e,f,g,h]},j=function(a,e,f,g,h){var j,k,l,m,n,o,p,q,r,s,t,u,v,w=a.length-1,x=0,y=a[0].a;for(j=0;w>j;j++)n=a[x],k=n.a,l=n.d,m=a[x+1].d,h?(t=b[j],u=c[j],v=(u+t)*e*.25/(g?.5:d[j]||.5),o=l-(l-k)*(g?.5*e:0!==t?v/t:0),p=l+(m-l)*(g?.5*e:0!==u?v/u:0),q=l-(o+((p-o)*(3*t/(t+u)+.5)/4||0))):(o=l-(l-k)*e*.5,p=l+(m-l)*e*.5,q=l-(o+p)/2),o+=q,p+=q,n.c=r=o,0!==j?n.b=y:n.b=y=n.a+.6*(n.c-n.a),n.da=l-k,n.ca=r-k,n.ba=y-k,f?(s=i(k,y,r,l),a.splice(x,1,s[0],s[1],s[2],s[3]),x+=4):x++,y=p;n=a[x],n.b=y,n.c=y+.4*(n.d-y),n.da=n.d-n.a,n.ca=n.c-n.a,n.ba=y-n.a,f&&(s=i(n.a,y,n.c,n.d),a.splice(x,1,s[0],s[1],s[2],s[3]))},k=function(a,d,e,f){var h,i,j,k,l,m,n=[];if(f)for(a=[f].concat(a),i=a.length;--i>-1;)"string"==typeof(m=a[i][d])&&"="===m.charAt(1)&&(a[i][d]=f[d]+Number(m.charAt(0)+m.substr(2)));if(h=a.length-2,0>h)return n[0]=new g(a[0][d],0,0,a[-1>h?0:1][d]),n;for(i=0;h>i;i++)j=a[i][d],k=a[i+1][d],n[i]=new g(j,0,0,k),e&&(l=a[i+2][d],b[i]=(b[i]||0)+(k-j)*(k-j),c[i]=(c[i]||0)+(l-k)*(l-k));return n[i]=new g(a[i][d],0,0,a[i+1][d]),n},l=function(a,f,g,i,l,m){var n,o,p,q,r,s,t,u,v={},w=[],x=m||a[0];l="string"==typeof l?","+l+",":h,null==f&&(f=1);for(o in a[0])w.push(o);if(a.length>1){for(u=a[a.length-1],t=!0,n=w.length;--n>-1;)if(o=w[n],Math.abs(x[o]-u[o])>.05){t=!1;break}t&&(a=a.concat(),m&&a.unshift(m),a.push(a[1]),m=a[a.length-3])}for(b.length=c.length=d.length=0,n=w.length;--n>-1;)o=w[n],e[o]=-1!==l.indexOf(","+o+","),v[o]=k(a,o,e[o],m);for(n=b.length;--n>-1;)b[n]=Math.sqrt(b[n]),c[n]=Math.sqrt(c[n]);if(!i){for(n=w.length;--n>-1;)if(e[o])for(p=v[w[n]],s=p.length-1,q=0;s>q;q++)r=p[q+1].da/c[q]+p[q].da/b[q]||0,d[q]=(d[q]||0)+r*r;for(n=d.length;--n>-1;)d[n]=Math.sqrt(d[n])}for(n=w.length,q=g?4:1;--n>-1;)o=w[n],p=v[o],j(p,f,g,i,e[o]),t&&(p.splice(0,q),p.splice(p.length-q,q));return v},m=function(a,b,c){b=b||"soft";var d,e,f,h,i,j,k,l,m,n,o,p={},q="cubic"===b?3:2,r="soft"===b,s=[];if(r&&c&&(a=[c].concat(a)),null==a||a.length<q+1)throw"invalid Bezier data";for(m in a[0])s.push(m);for(j=s.length;--j>-1;){for(m=s[j],p[m]=i=[],n=0,l=a.length,k=0;l>k;k++)d=null==c?a[k][m]:"string"==typeof(o=a[k][m])&&"="===o.charAt(1)?c[m]+Number(o.charAt(0)+o.substr(2)):Number(o),r&&k>1&&l-1>k&&(i[n++]=(d+i[n-2])/2),i[n++]=d;for(l=n-q+1,n=0,k=0;l>k;k+=q)d=i[k],e=i[k+1],f=i[k+2],h=2===q?0:i[k+3],i[n++]=o=3===q?new g(d,e,f,h):new g(d,(2*e+d)/3,(2*e+f)/3,f);i.length=n}return p},n=function(a,b,c){for(var d,e,f,g,h,i,j,k,l,m,n,o=1/c,p=a.length;--p>-1;)for(m=a[p],f=m.a,g=m.d-f,
h=m.c-f,i=m.b-f,d=e=0,k=1;c>=k;k++)j=o*k,l=1-j,d=e-(e=(j*j*g+3*l*(j*h+l*i))*j),n=p*c+k-1,b[n]=(b[n]||0)+d*d},o=function(a,b){b=b>>0||6;var c,d,e,f,g=[],h=[],i=0,j=0,k=b-1,l=[],m=[];for(c in a)n(a[c],g,b);for(e=g.length,d=0;e>d;d++)i+=Math.sqrt(g[d]),f=d%b,m[f]=i,f===k&&(j+=i,f=d/b>>0,l[f]=m,h[f]=j,i=0,m=[]);return{length:j,lengths:h,segments:l}},p=_gsScope._gsDefine.plugin({propName:"bezier",priority:-1,version:"1.3.7",API:2,global:!0,init:function(a,b,c){this._target=a,b instanceof Array&&(b={values:b}),this._func={},this._mod={},this._props=[],this._timeRes=null==b.timeResolution?6:parseInt(b.timeResolution,10);var d,e,f,g,h,i=b.values||[],j={},k=i[0],n=b.autoRotate||c.vars.orientToBezier;this._autoRotate=n?n instanceof Array?n:[["x","y","rotation",n===!0?0:Number(n)||0]]:null;for(d in k)this._props.push(d);for(f=this._props.length;--f>-1;)d=this._props[f],this._overwriteProps.push(d),e=this._func[d]="function"==typeof a[d],j[d]=e?a[d.indexOf("set")||"function"!=typeof a["get"+d.substr(3)]?d:"get"+d.substr(3)]():parseFloat(a[d]),h||j[d]!==i[0][d]&&(h=j);if(this._beziers="cubic"!==b.type&&"quadratic"!==b.type&&"soft"!==b.type?l(i,isNaN(b.curviness)?1:b.curviness,!1,"thruBasic"===b.type,b.correlate,h):m(i,b.type,j),this._segCount=this._beziers[d].length,this._timeRes){var p=o(this._beziers,this._timeRes);this._length=p.length,this._lengths=p.lengths,this._segments=p.segments,this._l1=this._li=this._s1=this._si=0,this._l2=this._lengths[0],this._curSeg=this._segments[0],this._s2=this._curSeg[0],this._prec=1/this._curSeg.length}if(n=this._autoRotate)for(this._initialRotations=[],n[0]instanceof Array||(this._autoRotate=n=[n]),f=n.length;--f>-1;){for(g=0;3>g;g++)d=n[f][g],this._func[d]="function"==typeof a[d]?a[d.indexOf("set")||"function"!=typeof a["get"+d.substr(3)]?d:"get"+d.substr(3)]:!1;d=n[f][2],this._initialRotations[f]=(this._func[d]?this._func[d].call(this._target):this._target[d])||0,this._overwriteProps.push(d)}return this._startRatio=c.vars.runBackwards?1:0,!0},set:function(b){var c,d,e,f,g,h,i,j,k,l,m=this._segCount,n=this._func,o=this._target,p=b!==this._startRatio;if(this._timeRes){if(k=this._lengths,l=this._curSeg,b*=this._length,e=this._li,b>this._l2&&m-1>e){for(j=m-1;j>e&&(this._l2=k[++e])<=b;);this._l1=k[e-1],this._li=e,this._curSeg=l=this._segments[e],this._s2=l[this._s1=this._si=0]}else if(b<this._l1&&e>0){for(;e>0&&(this._l1=k[--e])>=b;);0===e&&b<this._l1?this._l1=0:e++,this._l2=k[e],this._li=e,this._curSeg=l=this._segments[e],this._s1=l[(this._si=l.length-1)-1]||0,this._s2=l[this._si]}if(c=e,b-=this._l1,e=this._si,b>this._s2&&e<l.length-1){for(j=l.length-1;j>e&&(this._s2=l[++e])<=b;);this._s1=l[e-1],this._si=e}else if(b<this._s1&&e>0){for(;e>0&&(this._s1=l[--e])>=b;);0===e&&b<this._s1?this._s1=0:e++,this._s2=l[e],this._si=e}h=(e+(b-this._s1)/(this._s2-this._s1))*this._prec||0}else c=0>b?0:b>=1?m-1:m*b>>0,h=(b-c*(1/m))*m;for(d=1-h,e=this._props.length;--e>-1;)f=this._props[e],g=this._beziers[f][c],i=(h*h*g.da+3*d*(h*g.ca+d*g.ba))*h+g.a,this._mod[f]&&(i=this._mod[f](i,o)),n[f]?o[f](i):o[f]=i;if(this._autoRotate){var q,r,s,t,u,v,w,x=this._autoRotate;for(e=x.length;--e>-1;)f=x[e][2],v=x[e][3]||0,w=x[e][4]===!0?1:a,g=this._beziers[x[e][0]],q=this._beziers[x[e][1]],g&&q&&(g=g[c],q=q[c],r=g.a+(g.b-g.a)*h,t=g.b+(g.c-g.b)*h,r+=(t-r)*h,t+=(g.c+(g.d-g.c)*h-t)*h,s=q.a+(q.b-q.a)*h,u=q.b+(q.c-q.b)*h,s+=(u-s)*h,u+=(q.c+(q.d-q.c)*h-u)*h,i=p?Math.atan2(u-s,t-r)*w+v:this._initialRotations[e],this._mod[f]&&(i=this._mod[f](i,o)),n[f]?o[f](i):o[f]=i)}}}),q=p.prototype;p.bezierThrough=l,p.cubicToQuadratic=i,p._autoCSS=!0,p.quadraticToCubic=function(a,b,c){return new g(a,(2*b+a)/3,(2*b+c)/3,c)},p._cssRegister=function(){var a=f.CSSPlugin;if(a){var b=a._internals,c=b._parseToProxy,d=b._setPluginRatio,e=b.CSSPropTween;b._registerComplexSpecialProp("bezier",{parser:function(a,b,f,g,h,i){b instanceof Array&&(b={values:b}),i=new p;var j,k,l,m=b.values,n=m.length-1,o=[],q={};if(0>n)return h;for(j=0;n>=j;j++)l=c(a,m[j],g,h,i,n!==j),o[j]=l.end;for(k in b)q[k]=b[k];return q.values=o,h=new e(a,"bezier",0,0,l.pt,2),h.data=l,h.plugin=i,h.setRatio=d,0===q.autoRotate&&(q.autoRotate=!0),!q.autoRotate||q.autoRotate instanceof Array||(j=q.autoRotate===!0?0:Number(q.autoRotate),q.autoRotate=null!=l.end.left?[["left","top","rotation",j,!1]]:null!=l.end.x?[["x","y","rotation",j,!1]]:!1),q.autoRotate&&(g._transform||g._enableTransforms(!1),l.autoRotate=g._target._gsTransform,l.proxy.rotation=l.autoRotate.rotation||0,g._overwriteProps.push("rotation")),i._onInitTween(l.proxy,q,g._tween),h}})}},q._mod=function(a){for(var b,c=this._overwriteProps,d=c.length;--d>-1;)b=a[c[d]],b&&"function"==typeof b&&(this._mod[c[d]]=b)},q._kill=function(a){var b,c,d=this._props;for(b in this._beziers)if(b in a)for(delete this._beziers[b],delete this._func[b],c=d.length;--c>-1;)d[c]===b&&d.splice(c,1);if(d=this._autoRotate)for(c=d.length;--c>-1;)a[d[c][2]]&&d.splice(c,1);return this._super._kill.call(this,a)}}(),_gsScope._gsDefine("plugins.CSSPlugin",["plugins.TweenPlugin","TweenLite"],function(a,b){var c,d,e,f,g=function(){a.call(this,"css"),this._overwriteProps.length=0,this.setRatio=g.prototype.setRatio},h=_gsScope._gsDefine.globals,i={},j=g.prototype=new a("css");j.constructor=g,g.version="1.19.1",g.API=2,g.defaultTransformPerspective=0,g.defaultSkewType="compensated",g.defaultSmoothOrigin=!0,j="px",g.suffixMap={top:j,right:j,bottom:j,left:j,width:j,height:j,fontSize:j,padding:j,margin:j,perspective:j,lineHeight:""};var k,l,m,n,o,p,q,r,s=/(?:\-|\.|\b)(\d|\.|e\-)+/g,t=/(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g,u=/(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi,v=/(?![+-]?\d*\.?\d+|[+-]|e[+-]\d+)[^0-9]/g,w=/(?:\d|\-|\+|=|#|\.)*/g,x=/opacity *= *([^)]*)/i,y=/opacity:([^;]*)/i,z=/alpha\(opacity *=.+?\)/i,A=/^(rgb|hsl)/,B=/([A-Z])/g,C=/-([a-z])/gi,D=/(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi,E=function(a,b){return b.toUpperCase()},F=/(?:Left|Right|Width)/i,G=/(M11|M12|M21|M22)=[\d\-\.e]+/gi,H=/progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i,I=/,(?=[^\)]*(?:\(|$))/gi,J=/[\s,\(]/i,K=Math.PI/180,L=180/Math.PI,M={},N={style:{}},O=_gsScope.document||{createElement:function(){return N}},P=function(a,b){return O.createElementNS?O.createElementNS(b||"http://www.w3.org/1999/xhtml",a):O.createElement(a)},Q=P("div"),R=P("img"),S=g._internals={_specialProps:i},T=(_gsScope.navigator||{}).userAgent||"",U=function(){var a=T.indexOf("Android"),b=P("a");return m=-1!==T.indexOf("Safari")&&-1===T.indexOf("Chrome")&&(-1===a||parseFloat(T.substr(a+8,2))>3),o=m&&parseFloat(T.substr(T.indexOf("Version/")+8,2))<6,n=-1!==T.indexOf("Firefox"),(/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(T)||/Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(T))&&(p=parseFloat(RegExp.$1)),b?(b.style.cssText="top:1px;opacity:.55;",/^0.55/.test(b.style.opacity)):!1}(),V=function(a){return x.test("string"==typeof a?a:(a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?parseFloat(RegExp.$1)/100:1},W=function(a){_gsScope.console&&console.log(a)},X="",Y="",Z=function(a,b){b=b||Q;var c,d,e=b.style;if(void 0!==e[a])return a;for(a=a.charAt(0).toUpperCase()+a.substr(1),c=["O","Moz","ms","Ms","Webkit"],d=5;--d>-1&&void 0===e[c[d]+a];);return d>=0?(Y=3===d?"ms":c[d],X="-"+Y.toLowerCase()+"-",Y+a):null},$=O.defaultView?O.defaultView.getComputedStyle:function(){},_=g.getStyle=function(a,b,c,d,e){var f;return U||"opacity"!==b?(!d&&a.style[b]?f=a.style[b]:(c=c||$(a))?f=c[b]||c.getPropertyValue(b)||c.getPropertyValue(b.replace(B,"-$1").toLowerCase()):a.currentStyle&&(f=a.currentStyle[b]),null==e||f&&"none"!==f&&"auto"!==f&&"auto auto"!==f?f:e):V(a)},aa=S.convertToPixels=function(a,c,d,e,f){if("px"===e||!e)return d;if("auto"===e||!d)return 0;var h,i,j,k=F.test(c),l=a,m=Q.style,n=0>d,o=1===d;if(n&&(d=-d),o&&(d*=100),"%"===e&&-1!==c.indexOf("border"))h=d/100*(k?a.clientWidth:a.clientHeight);else{if(m.cssText="border:0 solid red;position:"+_(a,"position")+";line-height:0;","%"!==e&&l.appendChild&&"v"!==e.charAt(0)&&"rem"!==e)m[k?"borderLeftWidth":"borderTopWidth"]=d+e;else{if(l=a.parentNode||O.body,i=l._gsCache,j=b.ticker.frame,i&&k&&i.time===j)return i.width*d/100;m[k?"width":"height"]=d+e}l.appendChild(Q),h=parseFloat(Q[k?"offsetWidth":"offsetHeight"]),l.removeChild(Q),k&&"%"===e&&g.cacheWidths!==!1&&(i=l._gsCache=l._gsCache||{},i.time=j,i.width=h/d*100),0!==h||f||(h=aa(a,c,d,e,!0))}return o&&(h/=100),n?-h:h},ba=S.calculateOffset=function(a,b,c){if("absolute"!==_(a,"position",c))return 0;var d="left"===b?"Left":"Top",e=_(a,"margin"+d,c);return a["offset"+d]-(aa(a,b,parseFloat(e),e.replace(w,""))||0)},ca=function(a,b){var c,d,e,f={};if(b=b||$(a,null))if(c=b.length)for(;--c>-1;)e=b[c],(-1===e.indexOf("-transform")||Da===e)&&(f[e.replace(C,E)]=b.getPropertyValue(e));else for(c in b)(-1===c.indexOf("Transform")||Ca===c)&&(f[c]=b[c]);else if(b=a.currentStyle||a.style)for(c in b)"string"==typeof c&&void 0===f[c]&&(f[c.replace(C,E)]=b[c]);return U||(f.opacity=V(a)),d=Ra(a,b,!1),f.rotation=d.rotation,f.skewX=d.skewX,f.scaleX=d.scaleX,f.scaleY=d.scaleY,f.x=d.x,f.y=d.y,Fa&&(f.z=d.z,f.rotationX=d.rotationX,f.rotationY=d.rotationY,f.scaleZ=d.scaleZ),f.filters&&delete f.filters,f},da=function(a,b,c,d,e){var f,g,h,i={},j=a.style;for(g in c)"cssText"!==g&&"length"!==g&&isNaN(g)&&(b[g]!==(f=c[g])||e&&e[g])&&-1===g.indexOf("Origin")&&("number"==typeof f||"string"==typeof f)&&(i[g]="auto"!==f||"left"!==g&&"top"!==g?""!==f&&"auto"!==f&&"none"!==f||"string"!=typeof b[g]||""===b[g].replace(v,"")?f:0:ba(a,g),void 0!==j[g]&&(h=new sa(j,g,j[g],h)));if(d)for(g in d)"className"!==g&&(i[g]=d[g]);return{difs:i,firstMPT:h}},ea={width:["Left","Right"],height:["Top","Bottom"]},fa=["marginLeft","marginRight","marginTop","marginBottom"],ga=function(a,b,c){if("svg"===(a.nodeName+"").toLowerCase())return(c||$(a))[b]||0;if(a.getCTM&&Oa(a))return a.getBBox()[b]||0;var d=parseFloat("width"===b?a.offsetWidth:a.offsetHeight),e=ea[b],f=e.length;for(c=c||$(a,null);--f>-1;)d-=parseFloat(_(a,"padding"+e[f],c,!0))||0,d-=parseFloat(_(a,"border"+e[f]+"Width",c,!0))||0;return d},ha=function(a,b){if("contain"===a||"auto"===a||"auto auto"===a)return a+" ";(null==a||""===a)&&(a="0 0");var c,d=a.split(" "),e=-1!==a.indexOf("left")?"0%":-1!==a.indexOf("right")?"100%":d[0],f=-1!==a.indexOf("top")?"0%":-1!==a.indexOf("bottom")?"100%":d[1];if(d.length>3&&!b){for(d=a.split(", ").join(",").split(","),a=[],c=0;c<d.length;c++)a.push(ha(d[c]));return a.join(",")}return null==f?f="center"===e?"50%":"0":"center"===f&&(f="50%"),("center"===e||isNaN(parseFloat(e))&&-1===(e+"").indexOf("="))&&(e="50%"),a=e+" "+f+(d.length>2?" "+d[2]:""),b&&(b.oxp=-1!==e.indexOf("%"),b.oyp=-1!==f.indexOf("%"),b.oxr="="===e.charAt(1),b.oyr="="===f.charAt(1),b.ox=parseFloat(e.replace(v,"")),b.oy=parseFloat(f.replace(v,"")),b.v=a),b||a},ia=function(a,b){return"function"==typeof a&&(a=a(r,q)),"string"==typeof a&&"="===a.charAt(1)?parseInt(a.charAt(0)+"1",10)*parseFloat(a.substr(2)):parseFloat(a)-parseFloat(b)||0},ja=function(a,b){return"function"==typeof a&&(a=a(r,q)),null==a?b:"string"==typeof a&&"="===a.charAt(1)?parseInt(a.charAt(0)+"1",10)*parseFloat(a.substr(2))+b:parseFloat(a)||0},ka=function(a,b,c,d){var e,f,g,h,i,j=1e-6;return"function"==typeof a&&(a=a(r,q)),null==a?h=b:"number"==typeof a?h=a:(e=360,f=a.split("_"),i="="===a.charAt(1),g=(i?parseInt(a.charAt(0)+"1",10)*parseFloat(f[0].substr(2)):parseFloat(f[0]))*(-1===a.indexOf("rad")?1:L)-(i?0:b),f.length&&(d&&(d[c]=b+g),-1!==a.indexOf("short")&&(g%=e,g!==g%(e/2)&&(g=0>g?g+e:g-e)),-1!==a.indexOf("_cw")&&0>g?g=(g+9999999999*e)%e-(g/e|0)*e:-1!==a.indexOf("ccw")&&g>0&&(g=(g-9999999999*e)%e-(g/e|0)*e)),h=b+g),j>h&&h>-j&&(h=0),h},la={aqua:[0,255,255],lime:[0,255,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,255],navy:[0,0,128],white:[255,255,255],fuchsia:[255,0,255],olive:[128,128,0],yellow:[255,255,0],orange:[255,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[255,0,0],pink:[255,192,203],cyan:[0,255,255],transparent:[255,255,255,0]},ma=function(a,b,c){return a=0>a?a+1:a>1?a-1:a,255*(1>6*a?b+(c-b)*a*6:.5>a?c:2>3*a?b+(c-b)*(2/3-a)*6:b)+.5|0},na=g.parseColor=function(a,b){var c,d,e,f,g,h,i,j,k,l,m;if(a)if("number"==typeof a)c=[a>>16,a>>8&255,255&a];else{if(","===a.charAt(a.length-1)&&(a=a.substr(0,a.length-1)),la[a])c=la[a];else if("#"===a.charAt(0))4===a.length&&(d=a.charAt(1),e=a.charAt(2),f=a.charAt(3),a="#"+d+d+e+e+f+f),a=parseInt(a.substr(1),16),c=[a>>16,a>>8&255,255&a];else if("hsl"===a.substr(0,3))if(c=m=a.match(s),b){if(-1!==a.indexOf("="))return a.match(t)}else g=Number(c[0])%360/360,h=Number(c[1])/100,i=Number(c[2])/100,e=.5>=i?i*(h+1):i+h-i*h,d=2*i-e,c.length>3&&(c[3]=Number(a[3])),c[0]=ma(g+1/3,d,e),c[1]=ma(g,d,e),c[2]=ma(g-1/3,d,e);else c=a.match(s)||la.transparent;c[0]=Number(c[0]),c[1]=Number(c[1]),c[2]=Number(c[2]),c.length>3&&(c[3]=Number(c[3]))}else c=la.black;return b&&!m&&(d=c[0]/255,e=c[1]/255,f=c[2]/255,j=Math.max(d,e,f),k=Math.min(d,e,f),i=(j+k)/2,j===k?g=h=0:(l=j-k,h=i>.5?l/(2-j-k):l/(j+k),g=j===d?(e-f)/l+(f>e?6:0):j===e?(f-d)/l+2:(d-e)/l+4,g*=60),c[0]=g+.5|0,c[1]=100*h+.5|0,c[2]=100*i+.5|0),c},oa=function(a,b){var c,d,e,f=a.match(pa)||[],g=0,h=f.length?"":a;for(c=0;c<f.length;c++)d=f[c],e=a.substr(g,a.indexOf(d,g)-g),g+=e.length+d.length,d=na(d,b),3===d.length&&d.push(1),h+=e+(b?"hsla("+d[0]+","+d[1]+"%,"+d[2]+"%,"+d[3]:"rgba("+d.join(","))+")";return h+a.substr(g)},pa="(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b";for(j in la)pa+="|"+j+"\\b";pa=new RegExp(pa+")","gi"),g.colorStringFilter=function(a){var b,c=a[0]+a[1];pa.test(c)&&(b=-1!==c.indexOf("hsl(")||-1!==c.indexOf("hsla("),a[0]=oa(a[0],b),a[1]=oa(a[1],b)),pa.lastIndex=0},b.defaultStringFilter||(b.defaultStringFilter=g.colorStringFilter);var qa=function(a,b,c,d){if(null==a)return function(a){return a};var e,f=b?(a.match(pa)||[""])[0]:"",g=a.split(f).join("").match(u)||[],h=a.substr(0,a.indexOf(g[0])),i=")"===a.charAt(a.length-1)?")":"",j=-1!==a.indexOf(" ")?" ":",",k=g.length,l=k>0?g[0].replace(s,""):"";return k?e=b?function(a){var b,m,n,o;if("number"==typeof a)a+=l;else if(d&&I.test(a)){for(o=a.replace(I,"|").split("|"),n=0;n<o.length;n++)o[n]=e(o[n]);return o.join(",")}if(b=(a.match(pa)||[f])[0],m=a.split(b).join("").match(u)||[],n=m.length,k>n--)for(;++n<k;)m[n]=c?m[(n-1)/2|0]:g[n];return h+m.join(j)+j+b+i+(-1!==a.indexOf("inset")?" inset":"")}:function(a){var b,f,m;if("number"==typeof a)a+=l;else if(d&&I.test(a)){for(f=a.replace(I,"|").split("|"),m=0;m<f.length;m++)f[m]=e(f[m]);return f.join(",")}if(b=a.match(u)||[],m=b.length,k>m--)for(;++m<k;)b[m]=c?b[(m-1)/2|0]:g[m];return h+b.join(j)+i}:function(a){return a}},ra=function(a){return a=a.split(","),function(b,c,d,e,f,g,h){var i,j=(c+"").split(" ");for(h={},i=0;4>i;i++)h[a[i]]=j[i]=j[i]||j[(i-1)/2>>0];return e.parse(b,h,f,g)}},sa=(S._setPluginRatio=function(a){this.plugin.setRatio(a);for(var b,c,d,e,f,g=this.data,h=g.proxy,i=g.firstMPT,j=1e-6;i;)b=h[i.v],i.r?b=Math.round(b):j>b&&b>-j&&(b=0),i.t[i.p]=b,i=i._next;if(g.autoRotate&&(g.autoRotate.rotation=g.mod?g.mod(h.rotation,this.t):h.rotation),1===a||0===a)for(i=g.firstMPT,f=1===a?"e":"b";i;){if(c=i.t,c.type){if(1===c.type){for(e=c.xs0+c.s+c.xs1,d=1;d<c.l;d++)e+=c["xn"+d]+c["xs"+(d+1)];c[f]=e}}else c[f]=c.s+c.xs0;i=i._next}},function(a,b,c,d,e){this.t=a,this.p=b,this.v=c,this.r=e,d&&(d._prev=this,this._next=d)}),ta=(S._parseToProxy=function(a,b,c,d,e,f){var g,h,i,j,k,l=d,m={},n={},o=c._transform,p=M;for(c._transform=null,M=b,d=k=c.parse(a,b,d,e),M=p,f&&(c._transform=o,l&&(l._prev=null,l._prev&&(l._prev._next=null)));d&&d!==l;){if(d.type<=1&&(h=d.p,n[h]=d.s+d.c,m[h]=d.s,f||(j=new sa(d,"s",h,j,d.r),d.c=0),1===d.type))for(g=d.l;--g>0;)i="xn"+g,h=d.p+"_"+i,n[h]=d.data[i],m[h]=d[i],f||(j=new sa(d,i,h,j,d.rxp[i]));d=d._next}return{proxy:m,end:n,firstMPT:j,pt:k}},S.CSSPropTween=function(a,b,d,e,g,h,i,j,k,l,m){this.t=a,this.p=b,this.s=d,this.c=e,this.n=i||b,a instanceof ta||f.push(this.n),this.r=j,this.type=h||0,k&&(this.pr=k,c=!0),this.b=void 0===l?d:l,this.e=void 0===m?d+e:m,g&&(this._next=g,g._prev=this)}),ua=function(a,b,c,d,e,f){var g=new ta(a,b,c,d-c,e,-1,f);return g.b=c,g.e=g.xs0=d,g},va=g.parseComplex=function(a,b,c,d,e,f,h,i,j,l){c=c||f||"","function"==typeof d&&(d=d(r,q)),h=new ta(a,b,0,0,h,l?2:1,null,!1,i,c,d),d+="",e&&pa.test(d+c)&&(d=[c,d],g.colorStringFilter(d),c=d[0],d=d[1]);var m,n,o,p,u,v,w,x,y,z,A,B,C,D=c.split(", ").join(",").split(" "),E=d.split(", ").join(",").split(" "),F=D.length,G=k!==!1;for((-1!==d.indexOf(",")||-1!==c.indexOf(","))&&(D=D.join(" ").replace(I,", ").split(" "),E=E.join(" ").replace(I,", ").split(" "),F=D.length),F!==E.length&&(D=(f||"").split(" "),F=D.length),h.plugin=j,h.setRatio=l,pa.lastIndex=0,m=0;F>m;m++)if(p=D[m],u=E[m],x=parseFloat(p),x||0===x)h.appendXtra("",x,ia(u,x),u.replace(t,""),G&&-1!==u.indexOf("px"),!0);else if(e&&pa.test(p))B=u.indexOf(")")+1,B=")"+(B?u.substr(B):""),C=-1!==u.indexOf("hsl")&&U,p=na(p,C),u=na(u,C),y=p.length+u.length>6,y&&!U&&0===u[3]?(h["xs"+h.l]+=h.l?" transparent":"transparent",h.e=h.e.split(E[m]).join("transparent")):(U||(y=!1),C?h.appendXtra(y?"hsla(":"hsl(",p[0],ia(u[0],p[0]),",",!1,!0).appendXtra("",p[1],ia(u[1],p[1]),"%,",!1).appendXtra("",p[2],ia(u[2],p[2]),y?"%,":"%"+B,!1):h.appendXtra(y?"rgba(":"rgb(",p[0],u[0]-p[0],",",!0,!0).appendXtra("",p[1],u[1]-p[1],",",!0).appendXtra("",p[2],u[2]-p[2],y?",":B,!0),y&&(p=p.length<4?1:p[3],h.appendXtra("",p,(u.length<4?1:u[3])-p,B,!1))),pa.lastIndex=0;else if(v=p.match(s)){if(w=u.match(t),!w||w.length!==v.length)return h;for(o=0,n=0;n<v.length;n++)A=v[n],z=p.indexOf(A,o),h.appendXtra(p.substr(o,z-o),Number(A),ia(w[n],A),"",G&&"px"===p.substr(z+A.length,2),0===n),o=z+A.length;h["xs"+h.l]+=p.substr(o)}else h["xs"+h.l]+=h.l||h["xs"+h.l]?" "+u:u;if(-1!==d.indexOf("=")&&h.data){for(B=h.xs0+h.data.s,m=1;m<h.l;m++)B+=h["xs"+m]+h.data["xn"+m];h.e=B+h["xs"+m]}return h.l||(h.type=-1,h.xs0=h.e),h.xfirst||h},wa=9;for(j=ta.prototype,j.l=j.pr=0;--wa>0;)j["xn"+wa]=0,j["xs"+wa]="";j.xs0="",j._next=j._prev=j.xfirst=j.data=j.plugin=j.setRatio=j.rxp=null,j.appendXtra=function(a,b,c,d,e,f){var g=this,h=g.l;return g["xs"+h]+=f&&(h||g["xs"+h])?" "+a:a||"",c||0===h||g.plugin?(g.l++,g.type=g.setRatio?2:1,g["xs"+g.l]=d||"",h>0?(g.data["xn"+h]=b+c,g.rxp["xn"+h]=e,g["xn"+h]=b,g.plugin||(g.xfirst=new ta(g,"xn"+h,b,c,g.xfirst||g,0,g.n,e,g.pr),g.xfirst.xs0=0),g):(g.data={s:b+c},g.rxp={},g.s=b,g.c=c,g.r=e,g)):(g["xs"+h]+=b+(d||""),g)};var xa=function(a,b){b=b||{},this.p=b.prefix?Z(a)||a:a,i[a]=i[this.p]=this,this.format=b.formatter||qa(b.defaultValue,b.color,b.collapsible,b.multi),b.parser&&(this.parse=b.parser),this.clrs=b.color,this.multi=b.multi,this.keyword=b.keyword,this.dflt=b.defaultValue,this.pr=b.priority||0},ya=S._registerComplexSpecialProp=function(a,b,c){"object"!=typeof b&&(b={parser:c});var d,e,f=a.split(","),g=b.defaultValue;for(c=c||[g],d=0;d<f.length;d++)b.prefix=0===d&&b.prefix,b.defaultValue=c[d]||g,e=new xa(f[d],b)},za=S._registerPluginProp=function(a){if(!i[a]){var b=a.charAt(0).toUpperCase()+a.substr(1)+"Plugin";ya(a,{parser:function(a,c,d,e,f,g,j){var k=h.com.greensock.plugins[b];return k?(k._cssRegister(),i[d].parse(a,c,d,e,f,g,j)):(W("Error: "+b+" js file not loaded."),f)}})}};j=xa.prototype,j.parseComplex=function(a,b,c,d,e,f){var g,h,i,j,k,l,m=this.keyword;if(this.multi&&(I.test(c)||I.test(b)?(h=b.replace(I,"|").split("|"),i=c.replace(I,"|").split("|")):m&&(h=[b],i=[c])),i){for(j=i.length>h.length?i.length:h.length,g=0;j>g;g++)b=h[g]=h[g]||this.dflt,c=i[g]=i[g]||this.dflt,m&&(k=b.indexOf(m),l=c.indexOf(m),k!==l&&(-1===l?h[g]=h[g].split(m).join(""):-1===k&&(h[g]+=" "+m)));b=h.join(", "),c=i.join(", ")}return va(a,this.p,b,c,this.clrs,this.dflt,d,this.pr,e,f)},j.parse=function(a,b,c,d,f,g,h){return this.parseComplex(a.style,this.format(_(a,this.p,e,!1,this.dflt)),this.format(b),f,g)},g.registerSpecialProp=function(a,b,c){ya(a,{parser:function(a,d,e,f,g,h,i){var j=new ta(a,e,0,0,g,2,e,!1,c);return j.plugin=h,j.setRatio=b(a,d,f._tween,e),j},priority:c})},g.useSVGTransformAttr=!0;var Aa,Ba="scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(","),Ca=Z("transform"),Da=X+"transform",Ea=Z("transformOrigin"),Fa=null!==Z("perspective"),Ga=S.Transform=function(){this.perspective=parseFloat(g.defaultTransformPerspective)||0,this.force3D=g.defaultForce3D!==!1&&Fa?g.defaultForce3D||"auto":!1},Ha=_gsScope.SVGElement,Ia=function(a,b,c){var d,e=O.createElementNS("http://www.w3.org/2000/svg",a),f=/([a-z])([A-Z])/g;for(d in c)e.setAttributeNS(null,d.replace(f,"$1-$2").toLowerCase(),c[d]);return b.appendChild(e),e},Ja=O.documentElement||{},Ka=function(){var a,b,c,d=p||/Android/i.test(T)&&!_gsScope.chrome;return O.createElementNS&&!d&&(a=Ia("svg",Ja),b=Ia("rect",a,{width:100,height:50,x:100}),c=b.getBoundingClientRect().width,b.style[Ea]="50% 50%",b.style[Ca]="scaleX(0.5)",d=c===b.getBoundingClientRect().width&&!(n&&Fa),Ja.removeChild(a)),d}(),La=function(a,b,c,d,e,f){var h,i,j,k,l,m,n,o,p,q,r,s,t,u,v=a._gsTransform,w=Qa(a,!0);v&&(t=v.xOrigin,u=v.yOrigin),(!d||(h=d.split(" ")).length<2)&&(n=a.getBBox(),0===n.x&&0===n.y&&n.width+n.height===0&&(n={x:parseFloat(a.hasAttribute("x")?a.getAttribute("x"):a.hasAttribute("cx")?a.getAttribute("cx"):0)||0,y:parseFloat(a.hasAttribute("y")?a.getAttribute("y"):a.hasAttribute("cy")?a.getAttribute("cy"):0)||0,width:0,height:0}),b=ha(b).split(" "),h=[(-1!==b[0].indexOf("%")?parseFloat(b[0])/100*n.width:parseFloat(b[0]))+n.x,(-1!==b[1].indexOf("%")?parseFloat(b[1])/100*n.height:parseFloat(b[1]))+n.y]),c.xOrigin=k=parseFloat(h[0]),c.yOrigin=l=parseFloat(h[1]),d&&w!==Pa&&(m=w[0],n=w[1],o=w[2],p=w[3],q=w[4],r=w[5],s=m*p-n*o,s&&(i=k*(p/s)+l*(-o/s)+(o*r-p*q)/s,j=k*(-n/s)+l*(m/s)-(m*r-n*q)/s,k=c.xOrigin=h[0]=i,l=c.yOrigin=h[1]=j)),v&&(f&&(c.xOffset=v.xOffset,c.yOffset=v.yOffset,v=c),e||e!==!1&&g.defaultSmoothOrigin!==!1?(i=k-t,j=l-u,v.xOffset+=i*w[0]+j*w[2]-i,v.yOffset+=i*w[1]+j*w[3]-j):v.xOffset=v.yOffset=0),f||a.setAttribute("data-svg-origin",h.join(" "))},Ma=function(a){var b,c=P("svg",this.ownerSVGElement.getAttribute("xmlns")||"http://www.w3.org/2000/svg"),d=this.parentNode,e=this.nextSibling,f=this.style.cssText;if(Ja.appendChild(c),c.appendChild(this),this.style.display="block",a)try{b=this.getBBox(),this._originalGetBBox=this.getBBox,this.getBBox=Ma}catch(g){}else this._originalGetBBox&&(b=this._originalGetBBox());return e?d.insertBefore(this,e):d.appendChild(this),Ja.removeChild(c),this.style.cssText=f,b},Na=function(a){try{return a.getBBox()}catch(b){return Ma.call(a,!0)}},Oa=function(a){return!(!(Ha&&a.getCTM&&Na(a))||a.parentNode&&!a.ownerSVGElement)},Pa=[1,0,0,1,0,0],Qa=function(a,b){var c,d,e,f,g,h,i=a._gsTransform||new Ga,j=1e5,k=a.style;if(Ca?d=_(a,Da,null,!0):a.currentStyle&&(d=a.currentStyle.filter.match(G),d=d&&4===d.length?[d[0].substr(4),Number(d[2].substr(4)),Number(d[1].substr(4)),d[3].substr(4),i.x||0,i.y||0].join(","):""),c=!d||"none"===d||"matrix(1, 0, 0, 1, 0, 0)"===d,c&&Ca&&((h="none"===$(a).display)||!a.parentNode)&&(h&&(f=k.display,k.display="block"),a.parentNode||(g=1,Ja.appendChild(a)),d=_(a,Da,null,!0),c=!d||"none"===d||"matrix(1, 0, 0, 1, 0, 0)"===d,f?k.display=f:h&&Va(k,"display"),g&&Ja.removeChild(a)),(i.svg||a.getCTM&&Oa(a))&&(c&&-1!==(k[Ca]+"").indexOf("matrix")&&(d=k[Ca],c=0),e=a.getAttribute("transform"),c&&e&&(-1!==e.indexOf("matrix")?(d=e,c=0):-1!==e.indexOf("translate")&&(d="matrix(1,0,0,1,"+e.match(/(?:\-|\b)[\d\-\.e]+\b/gi).join(",")+")",c=0))),c)return Pa;for(e=(d||"").match(s)||[],wa=e.length;--wa>-1;)f=Number(e[wa]),e[wa]=(g=f-(f|=0))?(g*j+(0>g?-.5:.5)|0)/j+f:f;return b&&e.length>6?[e[0],e[1],e[4],e[5],e[12],e[13]]:e},Ra=S.getTransform=function(a,c,d,e){if(a._gsTransform&&d&&!e)return a._gsTransform;var f,h,i,j,k,l,m=d?a._gsTransform||new Ga:new Ga,n=m.scaleX<0,o=2e-5,p=1e5,q=Fa?parseFloat(_(a,Ea,c,!1,"0 0 0").split(" ")[2])||m.zOrigin||0:0,r=parseFloat(g.defaultTransformPerspective)||0;if(m.svg=!(!a.getCTM||!Oa(a)),m.svg&&(La(a,_(a,Ea,c,!1,"50% 50%")+"",m,a.getAttribute("data-svg-origin")),Aa=g.useSVGTransformAttr||Ka),f=Qa(a),f!==Pa){if(16===f.length){var s,t,u,v,w,x=f[0],y=f[1],z=f[2],A=f[3],B=f[4],C=f[5],D=f[6],E=f[7],F=f[8],G=f[9],H=f[10],I=f[12],J=f[13],K=f[14],M=f[11],N=Math.atan2(D,H);m.zOrigin&&(K=-m.zOrigin,I=F*K-f[12],J=G*K-f[13],K=H*K+m.zOrigin-f[14]),m.rotationX=N*L,N&&(v=Math.cos(-N),w=Math.sin(-N),s=B*v+F*w,t=C*v+G*w,u=D*v+H*w,F=B*-w+F*v,G=C*-w+G*v,H=D*-w+H*v,M=E*-w+M*v,B=s,C=t,D=u),N=Math.atan2(-z,H),m.rotationY=N*L,N&&(v=Math.cos(-N),w=Math.sin(-N),s=x*v-F*w,t=y*v-G*w,u=z*v-H*w,G=y*w+G*v,H=z*w+H*v,M=A*w+M*v,x=s,y=t,z=u),N=Math.atan2(y,x),m.rotation=N*L,N&&(v=Math.cos(-N),w=Math.sin(-N),x=x*v+B*w,t=y*v+C*w,C=y*-w+C*v,D=z*-w+D*v,y=t),m.rotationX&&Math.abs(m.rotationX)+Math.abs(m.rotation)>359.9&&(m.rotationX=m.rotation=0,m.rotationY=180-m.rotationY),m.scaleX=(Math.sqrt(x*x+y*y)*p+.5|0)/p,m.scaleY=(Math.sqrt(C*C+G*G)*p+.5|0)/p,m.scaleZ=(Math.sqrt(D*D+H*H)*p+.5|0)/p,m.rotationX||m.rotationY?m.skewX=0:(m.skewX=B||C?Math.atan2(B,C)*L+m.rotation:m.skewX||0,Math.abs(m.skewX)>90&&Math.abs(m.skewX)<270&&(n?(m.scaleX*=-1,m.skewX+=m.rotation<=0?180:-180,m.rotation+=m.rotation<=0?180:-180):(m.scaleY*=-1,m.skewX+=m.skewX<=0?180:-180))),m.perspective=M?1/(0>M?-M:M):0,m.x=I,m.y=J,m.z=K,m.svg&&(m.x-=m.xOrigin-(m.xOrigin*x-m.yOrigin*B),m.y-=m.yOrigin-(m.yOrigin*y-m.xOrigin*C))}else if(!Fa||e||!f.length||m.x!==f[4]||m.y!==f[5]||!m.rotationX&&!m.rotationY){var O=f.length>=6,P=O?f[0]:1,Q=f[1]||0,R=f[2]||0,S=O?f[3]:1;m.x=f[4]||0,m.y=f[5]||0,i=Math.sqrt(P*P+Q*Q),j=Math.sqrt(S*S+R*R),k=P||Q?Math.atan2(Q,P)*L:m.rotation||0,l=R||S?Math.atan2(R,S)*L+k:m.skewX||0,Math.abs(l)>90&&Math.abs(l)<270&&(n?(i*=-1,l+=0>=k?180:-180,k+=0>=k?180:-180):(j*=-1,l+=0>=l?180:-180)),m.scaleX=i,m.scaleY=j,m.rotation=k,m.skewX=l,Fa&&(m.rotationX=m.rotationY=m.z=0,m.perspective=r,m.scaleZ=1),m.svg&&(m.x-=m.xOrigin-(m.xOrigin*P+m.yOrigin*R),m.y-=m.yOrigin-(m.xOrigin*Q+m.yOrigin*S))}m.zOrigin=q;for(h in m)m[h]<o&&m[h]>-o&&(m[h]=0)}return d&&(a._gsTransform=m,m.svg&&(Aa&&a.style[Ca]?b.delayedCall(.001,function(){Va(a.style,Ca)}):!Aa&&a.getAttribute("transform")&&b.delayedCall(.001,function(){a.removeAttribute("transform")}))),m},Sa=function(a){var b,c,d=this.data,e=-d.rotation*K,f=e+d.skewX*K,g=1e5,h=(Math.cos(e)*d.scaleX*g|0)/g,i=(Math.sin(e)*d.scaleX*g|0)/g,j=(Math.sin(f)*-d.scaleY*g|0)/g,k=(Math.cos(f)*d.scaleY*g|0)/g,l=this.t.style,m=this.t.currentStyle;if(m){c=i,i=-j,j=-c,b=m.filter,l.filter="";var n,o,q=this.t.offsetWidth,r=this.t.offsetHeight,s="absolute"!==m.position,t="progid:DXImageTransform.Microsoft.Matrix(M11="+h+", M12="+i+", M21="+j+", M22="+k,u=d.x+q*d.xPercent/100,v=d.y+r*d.yPercent/100;if(null!=d.ox&&(n=(d.oxp?q*d.ox*.01:d.ox)-q/2,o=(d.oyp?r*d.oy*.01:d.oy)-r/2,u+=n-(n*h+o*i),v+=o-(n*j+o*k)),s?(n=q/2,o=r/2,t+=", Dx="+(n-(n*h+o*i)+u)+", Dy="+(o-(n*j+o*k)+v)+")"):t+=", sizingMethod='auto expand')",-1!==b.indexOf("DXImageTransform.Microsoft.Matrix(")?l.filter=b.replace(H,t):l.filter=t+" "+b,(0===a||1===a)&&1===h&&0===i&&0===j&&1===k&&(s&&-1===t.indexOf("Dx=0, Dy=0")||x.test(b)&&100!==parseFloat(RegExp.$1)||-1===b.indexOf(b.indexOf("Alpha"))&&l.removeAttribute("filter")),!s){var y,z,A,B=8>p?1:-1;for(n=d.ieOffsetX||0,o=d.ieOffsetY||0,d.ieOffsetX=Math.round((q-((0>h?-h:h)*q+(0>i?-i:i)*r))/2+u),d.ieOffsetY=Math.round((r-((0>k?-k:k)*r+(0>j?-j:j)*q))/2+v),wa=0;4>wa;wa++)z=fa[wa],y=m[z],c=-1!==y.indexOf("px")?parseFloat(y):aa(this.t,z,parseFloat(y),y.replace(w,""))||0,A=c!==d[z]?2>wa?-d.ieOffsetX:-d.ieOffsetY:2>wa?n-d.ieOffsetX:o-d.ieOffsetY,l[z]=(d[z]=Math.round(c-A*(0===wa||2===wa?1:B)))+"px"}}},Ta=S.set3DTransformRatio=S.setTransformRatio=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,o,p,q,r,s,t,u,v,w,x,y,z=this.data,A=this.t.style,B=z.rotation,C=z.rotationX,D=z.rotationY,E=z.scaleX,F=z.scaleY,G=z.scaleZ,H=z.x,I=z.y,J=z.z,L=z.svg,M=z.perspective,N=z.force3D,O=z.skewY,P=z.skewX;if(O&&(P+=O,B+=O),((1===a||0===a)&&"auto"===N&&(this.tween._totalTime===this.tween._totalDuration||!this.tween._totalTime)||!N)&&!J&&!M&&!D&&!C&&1===G||Aa&&L||!Fa)return void(B||P||L?(B*=K,x=P*K,y=1e5,c=Math.cos(B)*E,f=Math.sin(B)*E,d=Math.sin(B-x)*-F,g=Math.cos(B-x)*F,x&&"simple"===z.skewType&&(b=Math.tan(x-O*K),b=Math.sqrt(1+b*b),d*=b,g*=b,O&&(b=Math.tan(O*K),b=Math.sqrt(1+b*b),c*=b,f*=b)),L&&(H+=z.xOrigin-(z.xOrigin*c+z.yOrigin*d)+z.xOffset,I+=z.yOrigin-(z.xOrigin*f+z.yOrigin*g)+z.yOffset,Aa&&(z.xPercent||z.yPercent)&&(q=this.t.getBBox(),H+=.01*z.xPercent*q.width,I+=.01*z.yPercent*q.height),q=1e-6,q>H&&H>-q&&(H=0),q>I&&I>-q&&(I=0)),u=(c*y|0)/y+","+(f*y|0)/y+","+(d*y|0)/y+","+(g*y|0)/y+","+H+","+I+")",L&&Aa?this.t.setAttribute("transform","matrix("+u):A[Ca]=(z.xPercent||z.yPercent?"translate("+z.xPercent+"%,"+z.yPercent+"%) matrix(":"matrix(")+u):A[Ca]=(z.xPercent||z.yPercent?"translate("+z.xPercent+"%,"+z.yPercent+"%) matrix(":"matrix(")+E+",0,0,"+F+","+H+","+I+")");if(n&&(q=1e-4,q>E&&E>-q&&(E=G=2e-5),q>F&&F>-q&&(F=G=2e-5),!M||z.z||z.rotationX||z.rotationY||(M=0)),B||P)B*=K,r=c=Math.cos(B),s=f=Math.sin(B),P&&(B-=P*K,r=Math.cos(B),s=Math.sin(B),"simple"===z.skewType&&(b=Math.tan((P-O)*K),b=Math.sqrt(1+b*b),r*=b,s*=b,z.skewY&&(b=Math.tan(O*K),b=Math.sqrt(1+b*b),c*=b,f*=b))),d=-s,g=r;else{if(!(D||C||1!==G||M||L))return void(A[Ca]=(z.xPercent||z.yPercent?"translate("+z.xPercent+"%,"+z.yPercent+"%) translate3d(":"translate3d(")+H+"px,"+I+"px,"+J+"px)"+(1!==E||1!==F?" scale("+E+","+F+")":""));c=g=1,d=f=0}k=1,e=h=i=j=l=m=0,o=M?-1/M:0,p=z.zOrigin,q=1e-6,v=",",w="0",B=D*K,B&&(r=Math.cos(B),s=Math.sin(B),i=-s,l=o*-s,e=c*s,h=f*s,k=r,o*=r,c*=r,f*=r),B=C*K,B&&(r=Math.cos(B),s=Math.sin(B),b=d*r+e*s,t=g*r+h*s,j=k*s,m=o*s,e=d*-s+e*r,h=g*-s+h*r,k*=r,o*=r,d=b,g=t),1!==G&&(e*=G,h*=G,k*=G,o*=G),1!==F&&(d*=F,g*=F,j*=F,m*=F),1!==E&&(c*=E,f*=E,i*=E,l*=E),(p||L)&&(p&&(H+=e*-p,I+=h*-p,J+=k*-p+p),L&&(H+=z.xOrigin-(z.xOrigin*c+z.yOrigin*d)+z.xOffset,I+=z.yOrigin-(z.xOrigin*f+z.yOrigin*g)+z.yOffset),q>H&&H>-q&&(H=w),q>I&&I>-q&&(I=w),q>J&&J>-q&&(J=0)),u=z.xPercent||z.yPercent?"translate("+z.xPercent+"%,"+z.yPercent+"%) matrix3d(":"matrix3d(",u+=(q>c&&c>-q?w:c)+v+(q>f&&f>-q?w:f)+v+(q>i&&i>-q?w:i),u+=v+(q>l&&l>-q?w:l)+v+(q>d&&d>-q?w:d)+v+(q>g&&g>-q?w:g),C||D||1!==G?(u+=v+(q>j&&j>-q?w:j)+v+(q>m&&m>-q?w:m)+v+(q>e&&e>-q?w:e),u+=v+(q>h&&h>-q?w:h)+v+(q>k&&k>-q?w:k)+v+(q>o&&o>-q?w:o)+v):u+=",0,0,0,0,1,0,",u+=H+v+I+v+J+v+(M?1+-J/M:1)+")",A[Ca]=u};j=Ga.prototype,j.x=j.y=j.z=j.skewX=j.skewY=j.rotation=j.rotationX=j.rotationY=j.zOrigin=j.xPercent=j.yPercent=j.xOffset=j.yOffset=0,j.scaleX=j.scaleY=j.scaleZ=1,ya("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin",{parser:function(a,b,c,d,f,h,i){if(d._lastParsedTransform===i)return f;d._lastParsedTransform=i;var j,k=i.scale&&"function"==typeof i.scale?i.scale:0;"function"==typeof i[c]&&(j=i[c],i[c]=b),k&&(i.scale=k(r,a));var l,m,n,o,p,s,t,u,v,w=a._gsTransform,x=a.style,y=1e-6,z=Ba.length,A=i,B={},C="transformOrigin",D=Ra(a,e,!0,A.parseTransform),E=A.transform&&("function"==typeof A.transform?A.transform(r,q):A.transform);if(d._transform=D,E&&"string"==typeof E&&Ca)m=Q.style,m[Ca]=E,m.display="block",m.position="absolute",O.body.appendChild(Q),l=Ra(Q,null,!1),D.svg&&(s=D.xOrigin,t=D.yOrigin,l.x-=D.xOffset,l.y-=D.yOffset,(A.transformOrigin||A.svgOrigin)&&(E={},La(a,ha(A.transformOrigin),E,A.svgOrigin,A.smoothOrigin,!0),s=E.xOrigin,t=E.yOrigin,l.x-=E.xOffset-D.xOffset,l.y-=E.yOffset-D.yOffset),(s||t)&&(u=Qa(Q,!0),l.x-=s-(s*u[0]+t*u[2]),l.y-=t-(s*u[1]+t*u[3]))),O.body.removeChild(Q),l.perspective||(l.perspective=D.perspective),null!=A.xPercent&&(l.xPercent=ja(A.xPercent,D.xPercent)),null!=A.yPercent&&(l.yPercent=ja(A.yPercent,D.yPercent));else if("object"==typeof A){if(l={scaleX:ja(null!=A.scaleX?A.scaleX:A.scale,D.scaleX),scaleY:ja(null!=A.scaleY?A.scaleY:A.scale,D.scaleY),scaleZ:ja(A.scaleZ,D.scaleZ),x:ja(A.x,D.x),y:ja(A.y,D.y),z:ja(A.z,D.z),xPercent:ja(A.xPercent,D.xPercent),
yPercent:ja(A.yPercent,D.yPercent),perspective:ja(A.transformPerspective,D.perspective)},p=A.directionalRotation,null!=p)if("object"==typeof p)for(m in p)A[m]=p[m];else A.rotation=p;"string"==typeof A.x&&-1!==A.x.indexOf("%")&&(l.x=0,l.xPercent=ja(A.x,D.xPercent)),"string"==typeof A.y&&-1!==A.y.indexOf("%")&&(l.y=0,l.yPercent=ja(A.y,D.yPercent)),l.rotation=ka("rotation"in A?A.rotation:"shortRotation"in A?A.shortRotation+"_short":"rotationZ"in A?A.rotationZ:D.rotation,D.rotation,"rotation",B),Fa&&(l.rotationX=ka("rotationX"in A?A.rotationX:"shortRotationX"in A?A.shortRotationX+"_short":D.rotationX||0,D.rotationX,"rotationX",B),l.rotationY=ka("rotationY"in A?A.rotationY:"shortRotationY"in A?A.shortRotationY+"_short":D.rotationY||0,D.rotationY,"rotationY",B)),l.skewX=ka(A.skewX,D.skewX),l.skewY=ka(A.skewY,D.skewY)}for(Fa&&null!=A.force3D&&(D.force3D=A.force3D,o=!0),D.skewType=A.skewType||D.skewType||g.defaultSkewType,n=D.force3D||D.z||D.rotationX||D.rotationY||l.z||l.rotationX||l.rotationY||l.perspective,n||null==A.scale||(l.scaleZ=1);--z>-1;)v=Ba[z],E=l[v]-D[v],(E>y||-y>E||null!=A[v]||null!=M[v])&&(o=!0,f=new ta(D,v,D[v],E,f),v in B&&(f.e=B[v]),f.xs0=0,f.plugin=h,d._overwriteProps.push(f.n));return E=A.transformOrigin,D.svg&&(E||A.svgOrigin)&&(s=D.xOffset,t=D.yOffset,La(a,ha(E),l,A.svgOrigin,A.smoothOrigin),f=ua(D,"xOrigin",(w?D:l).xOrigin,l.xOrigin,f,C),f=ua(D,"yOrigin",(w?D:l).yOrigin,l.yOrigin,f,C),(s!==D.xOffset||t!==D.yOffset)&&(f=ua(D,"xOffset",w?s:D.xOffset,D.xOffset,f,C),f=ua(D,"yOffset",w?t:D.yOffset,D.yOffset,f,C)),E="0px 0px"),(E||Fa&&n&&D.zOrigin)&&(Ca?(o=!0,v=Ea,E=(E||_(a,v,e,!1,"50% 50%"))+"",f=new ta(x,v,0,0,f,-1,C),f.b=x[v],f.plugin=h,Fa?(m=D.zOrigin,E=E.split(" "),D.zOrigin=(E.length>2&&(0===m||"0px"!==E[2])?parseFloat(E[2]):m)||0,f.xs0=f.e=E[0]+" "+(E[1]||"50%")+" 0px",f=new ta(D,"zOrigin",0,0,f,-1,f.n),f.b=m,f.xs0=f.e=D.zOrigin):f.xs0=f.e=E):ha(E+"",D)),o&&(d._transformType=D.svg&&Aa||!n&&3!==this._transformType?2:3),j&&(i[c]=j),k&&(i.scale=k),f},prefix:!0}),ya("boxShadow",{defaultValue:"0px 0px 0px 0px #999",prefix:!0,color:!0,multi:!0,keyword:"inset"}),ya("borderRadius",{defaultValue:"0px",parser:function(a,b,c,f,g,h){b=this.format(b);var i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y=["borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius"],z=a.style;for(q=parseFloat(a.offsetWidth),r=parseFloat(a.offsetHeight),i=b.split(" "),j=0;j<y.length;j++)this.p.indexOf("border")&&(y[j]=Z(y[j])),m=l=_(a,y[j],e,!1,"0px"),-1!==m.indexOf(" ")&&(l=m.split(" "),m=l[0],l=l[1]),n=k=i[j],o=parseFloat(m),t=m.substr((o+"").length),u="="===n.charAt(1),u?(p=parseInt(n.charAt(0)+"1",10),n=n.substr(2),p*=parseFloat(n),s=n.substr((p+"").length-(0>p?1:0))||""):(p=parseFloat(n),s=n.substr((p+"").length)),""===s&&(s=d[c]||t),s!==t&&(v=aa(a,"borderLeft",o,t),w=aa(a,"borderTop",o,t),"%"===s?(m=v/q*100+"%",l=w/r*100+"%"):"em"===s?(x=aa(a,"borderLeft",1,"em"),m=v/x+"em",l=w/x+"em"):(m=v+"px",l=w+"px"),u&&(n=parseFloat(m)+p+s,k=parseFloat(l)+p+s)),g=va(z,y[j],m+" "+l,n+" "+k,!1,"0px",g);return g},prefix:!0,formatter:qa("0px 0px 0px 0px",!1,!0)}),ya("borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius",{defaultValue:"0px",parser:function(a,b,c,d,f,g){return va(a.style,c,this.format(_(a,c,e,!1,"0px 0px")),this.format(b),!1,"0px",f)},prefix:!0,formatter:qa("0px 0px",!1,!0)}),ya("backgroundPosition",{defaultValue:"0 0",parser:function(a,b,c,d,f,g){var h,i,j,k,l,m,n="background-position",o=e||$(a,null),q=this.format((o?p?o.getPropertyValue(n+"-x")+" "+o.getPropertyValue(n+"-y"):o.getPropertyValue(n):a.currentStyle.backgroundPositionX+" "+a.currentStyle.backgroundPositionY)||"0 0"),r=this.format(b);if(-1!==q.indexOf("%")!=(-1!==r.indexOf("%"))&&r.split(",").length<2&&(m=_(a,"backgroundImage").replace(D,""),m&&"none"!==m)){for(h=q.split(" "),i=r.split(" "),R.setAttribute("src",m),j=2;--j>-1;)q=h[j],k=-1!==q.indexOf("%"),k!==(-1!==i[j].indexOf("%"))&&(l=0===j?a.offsetWidth-R.width:a.offsetHeight-R.height,h[j]=k?parseFloat(q)/100*l+"px":parseFloat(q)/l*100+"%");q=h.join(" ")}return this.parseComplex(a.style,q,r,f,g)},formatter:ha}),ya("backgroundSize",{defaultValue:"0 0",formatter:function(a){return a+="",ha(-1===a.indexOf(" ")?a+" "+a:a)}}),ya("perspective",{defaultValue:"0px",prefix:!0}),ya("perspectiveOrigin",{defaultValue:"50% 50%",prefix:!0}),ya("transformStyle",{prefix:!0}),ya("backfaceVisibility",{prefix:!0}),ya("userSelect",{prefix:!0}),ya("margin",{parser:ra("marginTop,marginRight,marginBottom,marginLeft")}),ya("padding",{parser:ra("paddingTop,paddingRight,paddingBottom,paddingLeft")}),ya("clip",{defaultValue:"rect(0px,0px,0px,0px)",parser:function(a,b,c,d,f,g){var h,i,j;return 9>p?(i=a.currentStyle,j=8>p?" ":",",h="rect("+i.clipTop+j+i.clipRight+j+i.clipBottom+j+i.clipLeft+")",b=this.format(b).split(",").join(j)):(h=this.format(_(a,this.p,e,!1,this.dflt)),b=this.format(b)),this.parseComplex(a.style,h,b,f,g)}}),ya("textShadow",{defaultValue:"0px 0px 0px #999",color:!0,multi:!0}),ya("autoRound,strictUnits",{parser:function(a,b,c,d,e){return e}}),ya("border",{defaultValue:"0px solid #000",parser:function(a,b,c,d,f,g){var h=_(a,"borderTopWidth",e,!1,"0px"),i=this.format(b).split(" "),j=i[0].replace(w,"");return"px"!==j&&(h=parseFloat(h)/aa(a,"borderTopWidth",1,j)+j),this.parseComplex(a.style,this.format(h+" "+_(a,"borderTopStyle",e,!1,"solid")+" "+_(a,"borderTopColor",e,!1,"#000")),i.join(" "),f,g)},color:!0,formatter:function(a){var b=a.split(" ");return b[0]+" "+(b[1]||"solid")+" "+(a.match(pa)||["#000"])[0]}}),ya("borderWidth",{parser:ra("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth")}),ya("float,cssFloat,styleFloat",{parser:function(a,b,c,d,e,f){var g=a.style,h="cssFloat"in g?"cssFloat":"styleFloat";return new ta(g,h,0,0,e,-1,c,!1,0,g[h],b)}});var Ua=function(a){var b,c=this.t,d=c.filter||_(this.data,"filter")||"",e=this.s+this.c*a|0;100===e&&(-1===d.indexOf("atrix(")&&-1===d.indexOf("radient(")&&-1===d.indexOf("oader(")?(c.removeAttribute("filter"),b=!_(this.data,"filter")):(c.filter=d.replace(z,""),b=!0)),b||(this.xn1&&(c.filter=d=d||"alpha(opacity="+e+")"),-1===d.indexOf("pacity")?0===e&&this.xn1||(c.filter=d+" alpha(opacity="+e+")"):c.filter=d.replace(x,"opacity="+e))};ya("opacity,alpha,autoAlpha",{defaultValue:"1",parser:function(a,b,c,d,f,g){var h=parseFloat(_(a,"opacity",e,!1,"1")),i=a.style,j="autoAlpha"===c;return"string"==typeof b&&"="===b.charAt(1)&&(b=("-"===b.charAt(0)?-1:1)*parseFloat(b.substr(2))+h),j&&1===h&&"hidden"===_(a,"visibility",e)&&0!==b&&(h=0),U?f=new ta(i,"opacity",h,b-h,f):(f=new ta(i,"opacity",100*h,100*(b-h),f),f.xn1=j?1:0,i.zoom=1,f.type=2,f.b="alpha(opacity="+f.s+")",f.e="alpha(opacity="+(f.s+f.c)+")",f.data=a,f.plugin=g,f.setRatio=Ua),j&&(f=new ta(i,"visibility",0,0,f,-1,null,!1,0,0!==h?"inherit":"hidden",0===b?"hidden":"inherit"),f.xs0="inherit",d._overwriteProps.push(f.n),d._overwriteProps.push(c)),f}});var Va=function(a,b){b&&(a.removeProperty?(("ms"===b.substr(0,2)||"webkit"===b.substr(0,6))&&(b="-"+b),a.removeProperty(b.replace(B,"-$1").toLowerCase())):a.removeAttribute(b))},Wa=function(a){if(this.t._gsClassPT=this,1===a||0===a){this.t.setAttribute("class",0===a?this.b:this.e);for(var b=this.data,c=this.t.style;b;)b.v?c[b.p]=b.v:Va(c,b.p),b=b._next;1===a&&this.t._gsClassPT===this&&(this.t._gsClassPT=null)}else this.t.getAttribute("class")!==this.e&&this.t.setAttribute("class",this.e)};ya("className",{parser:function(a,b,d,f,g,h,i){var j,k,l,m,n,o=a.getAttribute("class")||"",p=a.style.cssText;if(g=f._classNamePT=new ta(a,d,0,0,g,2),g.setRatio=Wa,g.pr=-11,c=!0,g.b=o,k=ca(a,e),l=a._gsClassPT){for(m={},n=l.data;n;)m[n.p]=1,n=n._next;l.setRatio(1)}return a._gsClassPT=g,g.e="="!==b.charAt(1)?b:o.replace(new RegExp("(?:\\s|^)"+b.substr(2)+"(?![\\w-])"),"")+("+"===b.charAt(0)?" "+b.substr(2):""),a.setAttribute("class",g.e),j=da(a,k,ca(a),i,m),a.setAttribute("class",o),g.data=j.firstMPT,a.style.cssText=p,g=g.xfirst=f.parse(a,j.difs,g,h)}});var Xa=function(a){if((1===a||0===a)&&this.data._totalTime===this.data._totalDuration&&"isFromStart"!==this.data.data){var b,c,d,e,f,g=this.t.style,h=i.transform.parse;if("all"===this.e)g.cssText="",e=!0;else for(b=this.e.split(" ").join("").split(","),d=b.length;--d>-1;)c=b[d],i[c]&&(i[c].parse===h?e=!0:c="transformOrigin"===c?Ea:i[c].p),Va(g,c);e&&(Va(g,Ca),f=this.t._gsTransform,f&&(f.svg&&(this.t.removeAttribute("data-svg-origin"),this.t.removeAttribute("transform")),delete this.t._gsTransform))}};for(ya("clearProps",{parser:function(a,b,d,e,f){return f=new ta(a,d,0,0,f,2),f.setRatio=Xa,f.e=b,f.pr=-10,f.data=e._tween,c=!0,f}}),j="bezier,throwProps,physicsProps,physics2D".split(","),wa=j.length;wa--;)za(j[wa]);j=g.prototype,j._firstPT=j._lastParsedTransform=j._transform=null,j._onInitTween=function(a,b,h,j){if(!a.nodeType)return!1;this._target=q=a,this._tween=h,this._vars=b,r=j,k=b.autoRound,c=!1,d=b.suffixMap||g.suffixMap,e=$(a,""),f=this._overwriteProps;var n,p,s,t,u,v,w,x,z,A=a.style;if(l&&""===A.zIndex&&(n=_(a,"zIndex",e),("auto"===n||""===n)&&this._addLazySet(A,"zIndex",0)),"string"==typeof b&&(t=A.cssText,n=ca(a,e),A.cssText=t+";"+b,n=da(a,n,ca(a)).difs,!U&&y.test(b)&&(n.opacity=parseFloat(RegExp.$1)),b=n,A.cssText=t),b.className?this._firstPT=p=i.className.parse(a,b.className,"className",this,null,null,b):this._firstPT=p=this.parse(a,b,null),this._transformType){for(z=3===this._transformType,Ca?m&&(l=!0,""===A.zIndex&&(w=_(a,"zIndex",e),("auto"===w||""===w)&&this._addLazySet(A,"zIndex",0)),o&&this._addLazySet(A,"WebkitBackfaceVisibility",this._vars.WebkitBackfaceVisibility||(z?"visible":"hidden"))):A.zoom=1,s=p;s&&s._next;)s=s._next;x=new ta(a,"transform",0,0,null,2),this._linkCSSP(x,null,s),x.setRatio=Ca?Ta:Sa,x.data=this._transform||Ra(a,e,!0),x.tween=h,x.pr=-1,f.pop()}if(c){for(;p;){for(v=p._next,s=t;s&&s.pr>p.pr;)s=s._next;(p._prev=s?s._prev:u)?p._prev._next=p:t=p,(p._next=s)?s._prev=p:u=p,p=v}this._firstPT=t}return!0},j.parse=function(a,b,c,f){var g,h,j,l,m,n,o,p,s,t,u=a.style;for(g in b)n=b[g],"function"==typeof n&&(n=n(r,q)),h=i[g],h?c=h.parse(a,n,g,this,c,f,b):(m=_(a,g,e)+"",s="string"==typeof n,"color"===g||"fill"===g||"stroke"===g||-1!==g.indexOf("Color")||s&&A.test(n)?(s||(n=na(n),n=(n.length>3?"rgba(":"rgb(")+n.join(",")+")"),c=va(u,g,m,n,!0,"transparent",c,0,f)):s&&J.test(n)?c=va(u,g,m,n,!0,null,c,0,f):(j=parseFloat(m),o=j||0===j?m.substr((j+"").length):"",(""===m||"auto"===m)&&("width"===g||"height"===g?(j=ga(a,g,e),o="px"):"left"===g||"top"===g?(j=ba(a,g,e),o="px"):(j="opacity"!==g?0:1,o="")),t=s&&"="===n.charAt(1),t?(l=parseInt(n.charAt(0)+"1",10),n=n.substr(2),l*=parseFloat(n),p=n.replace(w,"")):(l=parseFloat(n),p=s?n.replace(w,""):""),""===p&&(p=g in d?d[g]:o),n=l||0===l?(t?l+j:l)+p:b[g],o!==p&&""!==p&&(l||0===l)&&j&&(j=aa(a,g,j,o),"%"===p?(j/=aa(a,g,100,"%")/100,b.strictUnits!==!0&&(m=j+"%")):"em"===p||"rem"===p||"vw"===p||"vh"===p?j/=aa(a,g,1,p):"px"!==p&&(l=aa(a,g,l,p),p="px"),t&&(l||0===l)&&(n=l+j+p)),t&&(l+=j),!j&&0!==j||!l&&0!==l?void 0!==u[g]&&(n||n+""!="NaN"&&null!=n)?(c=new ta(u,g,l||j||0,0,c,-1,g,!1,0,m,n),c.xs0="none"!==n||"display"!==g&&-1===g.indexOf("Style")?n:m):W("invalid "+g+" tween value: "+b[g]):(c=new ta(u,g,j,l-j,c,0,g,k!==!1&&("px"===p||"zIndex"===g),0,m,n),c.xs0=p))),f&&c&&!c.plugin&&(c.plugin=f);return c},j.setRatio=function(a){var b,c,d,e=this._firstPT,f=1e-6;if(1!==a||this._tween._time!==this._tween._duration&&0!==this._tween._time)if(a||this._tween._time!==this._tween._duration&&0!==this._tween._time||this._tween._rawPrevTime===-1e-6)for(;e;){if(b=e.c*a+e.s,e.r?b=Math.round(b):f>b&&b>-f&&(b=0),e.type)if(1===e.type)if(d=e.l,2===d)e.t[e.p]=e.xs0+b+e.xs1+e.xn1+e.xs2;else if(3===d)e.t[e.p]=e.xs0+b+e.xs1+e.xn1+e.xs2+e.xn2+e.xs3;else if(4===d)e.t[e.p]=e.xs0+b+e.xs1+e.xn1+e.xs2+e.xn2+e.xs3+e.xn3+e.xs4;else if(5===d)e.t[e.p]=e.xs0+b+e.xs1+e.xn1+e.xs2+e.xn2+e.xs3+e.xn3+e.xs4+e.xn4+e.xs5;else{for(c=e.xs0+b+e.xs1,d=1;d<e.l;d++)c+=e["xn"+d]+e["xs"+(d+1)];e.t[e.p]=c}else-1===e.type?e.t[e.p]=e.xs0:e.setRatio&&e.setRatio(a);else e.t[e.p]=b+e.xs0;e=e._next}else for(;e;)2!==e.type?e.t[e.p]=e.b:e.setRatio(a),e=e._next;else for(;e;){if(2!==e.type)if(e.r&&-1!==e.type)if(b=Math.round(e.s+e.c),e.type){if(1===e.type){for(d=e.l,c=e.xs0+b+e.xs1,d=1;d<e.l;d++)c+=e["xn"+d]+e["xs"+(d+1)];e.t[e.p]=c}}else e.t[e.p]=b+e.xs0;else e.t[e.p]=e.e;else e.setRatio(a);e=e._next}},j._enableTransforms=function(a){this._transform=this._transform||Ra(this._target,e,!0),this._transformType=this._transform.svg&&Aa||!a&&3!==this._transformType?2:3};var Ya=function(a){this.t[this.p]=this.e,this.data._linkCSSP(this,this._next,null,!0)};j._addLazySet=function(a,b,c){var d=this._firstPT=new ta(a,b,0,0,this._firstPT,2);d.e=c,d.setRatio=Ya,d.data=this},j._linkCSSP=function(a,b,c,d){return a&&(b&&(b._prev=a),a._next&&(a._next._prev=a._prev),a._prev?a._prev._next=a._next:this._firstPT===a&&(this._firstPT=a._next,d=!0),c?c._next=a:d||null!==this._firstPT||(this._firstPT=a),a._next=b,a._prev=c),a},j._mod=function(a){for(var b=this._firstPT;b;)"function"==typeof a[b.p]&&a[b.p]===Math.round&&(b.r=1),b=b._next},j._kill=function(b){var c,d,e,f=b;if(b.autoAlpha||b.alpha){f={};for(d in b)f[d]=b[d];f.opacity=1,f.autoAlpha&&(f.visibility=1)}for(b.className&&(c=this._classNamePT)&&(e=c.xfirst,e&&e._prev?this._linkCSSP(e._prev,c._next,e._prev._prev):e===this._firstPT&&(this._firstPT=c._next),c._next&&this._linkCSSP(c._next,c._next._next,e._prev),this._classNamePT=null),c=this._firstPT;c;)c.plugin&&c.plugin!==d&&c.plugin._kill&&(c.plugin._kill(b),d=c.plugin),c=c._next;return a.prototype._kill.call(this,f)};var Za=function(a,b,c){var d,e,f,g;if(a.slice)for(e=a.length;--e>-1;)Za(a[e],b,c);else for(d=a.childNodes,e=d.length;--e>-1;)f=d[e],g=f.type,f.style&&(b.push(ca(f)),c&&c.push(f)),1!==g&&9!==g&&11!==g||!f.childNodes.length||Za(f,b,c)};return g.cascadeTo=function(a,c,d){var e,f,g,h,i=b.to(a,c,d),j=[i],k=[],l=[],m=[],n=b._internals.reservedProps;for(a=i._targets||i.target,Za(a,k,m),i.render(c,!0,!0),Za(a,l),i.render(0,!0,!0),i._enabled(!0),e=m.length;--e>-1;)if(f=da(m[e],k[e],l[e]),f.firstMPT){f=f.difs;for(g in d)n[g]&&(f[g]=d[g]);h={};for(g in f)h[g]=k[e][g];j.push(b.fromTo(m[e],c,h,f))}return j},a.activate([g]),g},!0),function(){var a=_gsScope._gsDefine.plugin({propName:"roundProps",version:"1.6.0",priority:-1,API:2,init:function(a,b,c){return this._tween=c,!0}}),b=function(a){for(;a;)a.f||a.blob||(a.m=Math.round),a=a._next},c=a.prototype;c._onInitAllProps=function(){for(var a,c,d,e=this._tween,f=e.vars.roundProps.join?e.vars.roundProps:e.vars.roundProps.split(","),g=f.length,h={},i=e._propLookup.roundProps;--g>-1;)h[f[g]]=Math.round;for(g=f.length;--g>-1;)for(a=f[g],c=e._firstPT;c;)d=c._next,c.pg?c.t._mod(h):c.n===a&&(2===c.f&&c.t?b(c.t._firstPT):(this._add(c.t,a,c.s,c.c),d&&(d._prev=c._prev),c._prev?c._prev._next=d:e._firstPT===c&&(e._firstPT=d),c._next=c._prev=null,e._propLookup[a]=i)),c=d;return!1},c._add=function(a,b,c,d){this._addTween(a,b,c,c+d,b,Math.round),this._overwriteProps.push(b)}}(),function(){_gsScope._gsDefine.plugin({propName:"attr",API:2,version:"0.6.0",init:function(a,b,c,d){var e,f;if("function"!=typeof a.setAttribute)return!1;for(e in b)f=b[e],"function"==typeof f&&(f=f(d,a)),this._addTween(a,"setAttribute",a.getAttribute(e)+"",f+"",e,!1,e),this._overwriteProps.push(e);return!0}})}(),_gsScope._gsDefine.plugin({propName:"directionalRotation",version:"0.3.0",API:2,init:function(a,b,c,d){"object"!=typeof b&&(b={rotation:b}),this.finals={};var e,f,g,h,i,j,k=b.useRadians===!0?2*Math.PI:360,l=1e-6;for(e in b)"useRadians"!==e&&(h=b[e],"function"==typeof h&&(h=h(d,a)),j=(h+"").split("_"),f=j[0],g=parseFloat("function"!=typeof a[e]?a[e]:a[e.indexOf("set")||"function"!=typeof a["get"+e.substr(3)]?e:"get"+e.substr(3)]()),h=this.finals[e]="string"==typeof f&&"="===f.charAt(1)?g+parseInt(f.charAt(0)+"1",10)*Number(f.substr(2)):Number(f)||0,i=h-g,j.length&&(f=j.join("_"),-1!==f.indexOf("short")&&(i%=k,i!==i%(k/2)&&(i=0>i?i+k:i-k)),-1!==f.indexOf("_cw")&&0>i?i=(i+9999999999*k)%k-(i/k|0)*k:-1!==f.indexOf("ccw")&&i>0&&(i=(i-9999999999*k)%k-(i/k|0)*k)),(i>l||-l>i)&&(this._addTween(a,e,g,g+i,e),this._overwriteProps.push(e)));return!0},set:function(a){var b;if(1!==a)this._super.setRatio.call(this,a);else for(b=this._firstPT;b;)b.f?b.t[b.p](this.finals[b.p]):b.t[b.p]=this.finals[b.p],b=b._next}})._autoCSS=!0,_gsScope._gsDefine("easing.Back",["easing.Ease"],function(a){var b,c,d,e=_gsScope.GreenSockGlobals||_gsScope,f=e.com.greensock,g=2*Math.PI,h=Math.PI/2,i=f._class,j=function(b,c){var d=i("easing."+b,function(){},!0),e=d.prototype=new a;return e.constructor=d,e.getRatio=c,d},k=a.register||function(){},l=function(a,b,c,d,e){var f=i("easing."+a,{easeOut:new b,easeIn:new c,easeInOut:new d},!0);return k(f,a),f},m=function(a,b,c){this.t=a,this.v=b,c&&(this.next=c,c.prev=this,this.c=c.v-b,this.gap=c.t-a)},n=function(b,c){var d=i("easing."+b,function(a){this._p1=a||0===a?a:1.70158,this._p2=1.525*this._p1},!0),e=d.prototype=new a;return e.constructor=d,e.getRatio=c,e.config=function(a){return new d(a)},d},o=l("Back",n("BackOut",function(a){return(a-=1)*a*((this._p1+1)*a+this._p1)+1}),n("BackIn",function(a){return a*a*((this._p1+1)*a-this._p1)}),n("BackInOut",function(a){return(a*=2)<1?.5*a*a*((this._p2+1)*a-this._p2):.5*((a-=2)*a*((this._p2+1)*a+this._p2)+2)})),p=i("easing.SlowMo",function(a,b,c){b=b||0===b?b:.7,null==a?a=.7:a>1&&(a=1),this._p=1!==a?b:0,this._p1=(1-a)/2,this._p2=a,this._p3=this._p1+this._p2,this._calcEnd=c===!0},!0),q=p.prototype=new a;return q.constructor=p,q.getRatio=function(a){var b=a+(.5-a)*this._p;return a<this._p1?this._calcEnd?1-(a=1-a/this._p1)*a:b-(a=1-a/this._p1)*a*a*a*b:a>this._p3?this._calcEnd?1-(a=(a-this._p3)/this._p1)*a:b+(a-b)*(a=(a-this._p3)/this._p1)*a*a*a:this._calcEnd?1:b},p.ease=new p(.7,.7),q.config=p.config=function(a,b,c){return new p(a,b,c)},b=i("easing.SteppedEase",function(a){a=a||1,this._p1=1/a,this._p2=a+1},!0),q=b.prototype=new a,q.constructor=b,q.getRatio=function(a){return 0>a?a=0:a>=1&&(a=.999999999),(this._p2*a>>0)*this._p1},q.config=b.config=function(a){return new b(a)},c=i("easing.RoughEase",function(b){b=b||{};for(var c,d,e,f,g,h,i=b.taper||"none",j=[],k=0,l=0|(b.points||20),n=l,o=b.randomize!==!1,p=b.clamp===!0,q=b.template instanceof a?b.template:null,r="number"==typeof b.strength?.4*b.strength:.4;--n>-1;)c=o?Math.random():1/l*n,d=q?q.getRatio(c):c,"none"===i?e=r:"out"===i?(f=1-c,e=f*f*r):"in"===i?e=c*c*r:.5>c?(f=2*c,e=f*f*.5*r):(f=2*(1-c),e=f*f*.5*r),o?d+=Math.random()*e-.5*e:n%2?d+=.5*e:d-=.5*e,p&&(d>1?d=1:0>d&&(d=0)),j[k++]={x:c,y:d};for(j.sort(function(a,b){return a.x-b.x}),h=new m(1,1,null),n=l;--n>-1;)g=j[n],h=new m(g.x,g.y,h);this._prev=new m(0,0,0!==h.t?h:h.next)},!0),q=c.prototype=new a,q.constructor=c,q.getRatio=function(a){var b=this._prev;if(a>b.t){for(;b.next&&a>=b.t;)b=b.next;b=b.prev}else for(;b.prev&&a<=b.t;)b=b.prev;return this._prev=b,b.v+(a-b.t)/b.gap*b.c},q.config=function(a){return new c(a)},c.ease=new c,l("Bounce",j("BounceOut",function(a){return 1/2.75>a?7.5625*a*a:2/2.75>a?7.5625*(a-=1.5/2.75)*a+.75:2.5/2.75>a?7.5625*(a-=2.25/2.75)*a+.9375:7.5625*(a-=2.625/2.75)*a+.984375}),j("BounceIn",function(a){return(a=1-a)<1/2.75?1-7.5625*a*a:2/2.75>a?1-(7.5625*(a-=1.5/2.75)*a+.75):2.5/2.75>a?1-(7.5625*(a-=2.25/2.75)*a+.9375):1-(7.5625*(a-=2.625/2.75)*a+.984375)}),j("BounceInOut",function(a){var b=.5>a;return a=b?1-2*a:2*a-1,a=1/2.75>a?7.5625*a*a:2/2.75>a?7.5625*(a-=1.5/2.75)*a+.75:2.5/2.75>a?7.5625*(a-=2.25/2.75)*a+.9375:7.5625*(a-=2.625/2.75)*a+.984375,b?.5*(1-a):.5*a+.5})),l("Circ",j("CircOut",function(a){return Math.sqrt(1-(a-=1)*a)}),j("CircIn",function(a){return-(Math.sqrt(1-a*a)-1)}),j("CircInOut",function(a){return(a*=2)<1?-.5*(Math.sqrt(1-a*a)-1):.5*(Math.sqrt(1-(a-=2)*a)+1)})),d=function(b,c,d){var e=i("easing."+b,function(a,b){this._p1=a>=1?a:1,this._p2=(b||d)/(1>a?a:1),this._p3=this._p2/g*(Math.asin(1/this._p1)||0),this._p2=g/this._p2},!0),f=e.prototype=new a;return f.constructor=e,f.getRatio=c,f.config=function(a,b){return new e(a,b)},e},l("Elastic",d("ElasticOut",function(a){return this._p1*Math.pow(2,-10*a)*Math.sin((a-this._p3)*this._p2)+1},.3),d("ElasticIn",function(a){return-(this._p1*Math.pow(2,10*(a-=1))*Math.sin((a-this._p3)*this._p2))},.3),d("ElasticInOut",function(a){return(a*=2)<1?-.5*(this._p1*Math.pow(2,10*(a-=1))*Math.sin((a-this._p3)*this._p2)):this._p1*Math.pow(2,-10*(a-=1))*Math.sin((a-this._p3)*this._p2)*.5+1},.45)),l("Expo",j("ExpoOut",function(a){return 1-Math.pow(2,-10*a)}),j("ExpoIn",function(a){return Math.pow(2,10*(a-1))-.001}),j("ExpoInOut",function(a){return(a*=2)<1?.5*Math.pow(2,10*(a-1)):.5*(2-Math.pow(2,-10*(a-1)))})),l("Sine",j("SineOut",function(a){return Math.sin(a*h)}),j("SineIn",function(a){return-Math.cos(a*h)+1}),j("SineInOut",function(a){return-.5*(Math.cos(Math.PI*a)-1)})),i("easing.EaseLookup",{find:function(b){return a.map[b]}},!0),k(e.SlowMo,"SlowMo","ease,"),k(c,"RoughEase","ease,"),k(b,"SteppedEase","ease,"),o},!0)}),_gsScope._gsDefine&&_gsScope._gsQueue.pop()(),function(a,b){"use strict";var c={},d=a.document,e=a.GreenSockGlobals=a.GreenSockGlobals||a;if(!e.TweenLite){var f,g,h,i,j,k=function(a){var b,c=a.split("."),d=e;for(b=0;b<c.length;b++)d[c[b]]=d=d[c[b]]||{};return d},l=k("com.greensock"),m=1e-10,n=function(a){var b,c=[],d=a.length;for(b=0;b!==d;c.push(a[b++]));return c},o=function(){},p=function(){var a=Object.prototype.toString,b=a.call([]);return function(c){return null!=c&&(c instanceof Array||"object"==typeof c&&!!c.push&&a.call(c)===b)}}(),q={},r=function(d,f,g,h){this.sc=q[d]?q[d].sc:[],q[d]=this,this.gsClass=null,this.func=g;var i=[];this.check=function(j){for(var l,m,n,o,p,s=f.length,t=s;--s>-1;)(l=q[f[s]]||new r(f[s],[])).gsClass?(i[s]=l.gsClass,t--):j&&l.sc.push(this);if(0===t&&g){if(m=("com.greensock."+d).split("."),n=m.pop(),o=k(m.join("."))[n]=this.gsClass=g.apply(g,i),h)if(e[n]=c[n]=o,p="undefined"!=typeof module&&module.exports,!p&&"function"==typeof define&&define.amd)define((a.GreenSockAMDPath?a.GreenSockAMDPath+"/":"")+d.split(".").pop(),[],function(){return o});else if(p)if(d===b){module.exports=c[b]=o;for(s in c)o[s]=c[s]}else c[b]&&(c[b][n]=o);for(s=0;s<this.sc.length;s++)this.sc[s].check()}},this.check(!0)},s=a._gsDefine=function(a,b,c,d){return new r(a,b,c,d)},t=l._class=function(a,b,c){return b=b||function(){},s(a,[],function(){return b},c),b};s.globals=e;var u=[0,0,1,1],v=t("easing.Ease",function(a,b,c,d){this._func=a,this._type=c||0,this._power=d||0,this._params=b?u.concat(b):u},!0),w=v.map={},x=v.register=function(a,b,c,d){for(var e,f,g,h,i=b.split(","),j=i.length,k=(c||"easeIn,easeOut,easeInOut").split(",");--j>-1;)for(f=i[j],e=d?t("easing."+f,null,!0):l.easing[f]||{},g=k.length;--g>-1;)h=k[g],w[f+"."+h]=w[h+f]=e[h]=a.getRatio?a:a[h]||new a};for(h=v.prototype,h._calcEnd=!1,h.getRatio=function(a){if(this._func)return this._params[0]=a,this._func.apply(null,this._params);var b=this._type,c=this._power,d=1===b?1-a:2===b?a:.5>a?2*a:2*(1-a);return 1===c?d*=d:2===c?d*=d*d:3===c?d*=d*d*d:4===c&&(d*=d*d*d*d),1===b?1-d:2===b?d:.5>a?d/2:1-d/2},f=["Linear","Quad","Cubic","Quart","Quint,Strong"],g=f.length;--g>-1;)h=f[g]+",Power"+g,x(new v(null,null,1,g),h,"easeOut",!0),x(new v(null,null,2,g),h,"easeIn"+(0===g?",easeNone":"")),x(new v(null,null,3,g),h,"easeInOut");w.linear=l.easing.Linear.easeIn,w.swing=l.easing.Quad.easeInOut;var y=t("events.EventDispatcher",function(a){this._listeners={},this._eventTarget=a||this});h=y.prototype,h.addEventListener=function(a,b,c,d,e){e=e||0;var f,g,h=this._listeners[a],k=0;for(this!==i||j||i.wake(),null==h&&(this._listeners[a]=h=[]),g=h.length;--g>-1;)f=h[g],f.c===b&&f.s===c?h.splice(g,1):0===k&&f.pr<e&&(k=g+1);h.splice(k,0,{c:b,s:c,up:d,pr:e})},h.removeEventListener=function(a,b){var c,d=this._listeners[a];if(d)for(c=d.length;--c>-1;)if(d[c].c===b)return void d.splice(c,1)},h.dispatchEvent=function(a){var b,c,d,e=this._listeners[a];if(e)for(b=e.length,b>1&&(e=e.slice(0)),c=this._eventTarget;--b>-1;)d=e[b],d&&(d.up?d.c.call(d.s||c,{type:a,target:c}):d.c.call(d.s||c))};var z=a.requestAnimationFrame,A=a.cancelAnimationFrame,B=Date.now||function(){return(new Date).getTime()},C=B();for(f=["ms","moz","webkit","o"],g=f.length;--g>-1&&!z;)z=a[f[g]+"RequestAnimationFrame"],A=a[f[g]+"CancelAnimationFrame"]||a[f[g]+"CancelRequestAnimationFrame"];t("Ticker",function(a,b){var c,e,f,g,h,k=this,l=B(),n=b!==!1&&z?"auto":!1,p=500,q=33,r="tick",s=function(a){var b,d,i=B()-C;i>p&&(l+=i-q),C+=i,k.time=(C-l)/1e3,b=k.time-h,(!c||b>0||a===!0)&&(k.frame++,h+=b+(b>=g?.004:g-b),d=!0),a!==!0&&(f=e(s)),d&&k.dispatchEvent(r)};y.call(k),k.time=k.frame=0,k.tick=function(){s(!0)},k.lagSmoothing=function(a,b){p=a||1/m,q=Math.min(b,p,0)},k.sleep=function(){null!=f&&(n&&A?A(f):clearTimeout(f),e=o,f=null,k===i&&(j=!1))},k.wake=function(a){null!==f?k.sleep():a?l+=-C+(C=B()):k.frame>10&&(C=B()-p+5),e=0===c?o:n&&z?z:function(a){return setTimeout(a,1e3*(h-k.time)+1|0)},k===i&&(j=!0),s(2)},k.fps=function(a){return arguments.length?(c=a,g=1/(c||60),h=this.time+g,void k.wake()):c},k.useRAF=function(a){return arguments.length?(k.sleep(),n=a,void k.fps(c)):n},k.fps(a),setTimeout(function(){"auto"===n&&k.frame<5&&"hidden"!==d.visibilityState&&k.useRAF(!1)},1500)}),h=l.Ticker.prototype=new l.events.EventDispatcher,h.constructor=l.Ticker;var D=t("core.Animation",function(a,b){if(this.vars=b=b||{},this._duration=this._totalDuration=a||0,this._delay=Number(b.delay)||0,this._timeScale=1,this._active=b.immediateRender===!0,this.data=b.data,this._reversed=b.reversed===!0,W){j||i.wake();var c=this.vars.useFrames?V:W;c.add(this,c._time),this.vars.paused&&this.paused(!0)}});i=D.ticker=new l.Ticker,h=D.prototype,h._dirty=h._gc=h._initted=h._paused=!1,h._totalTime=h._time=0,h._rawPrevTime=-1,h._next=h._last=h._onUpdate=h._timeline=h.timeline=null,h._paused=!1;var E=function(){j&&B()-C>2e3&&i.wake(),setTimeout(E,2e3)};E(),h.play=function(a,b){return null!=a&&this.seek(a,b),this.reversed(!1).paused(!1)},h.pause=function(a,b){return null!=a&&this.seek(a,b),this.paused(!0)},h.resume=function(a,b){return null!=a&&this.seek(a,b),this.paused(!1)},h.seek=function(a,b){return this.totalTime(Number(a),b!==!1)},h.restart=function(a,b){return this.reversed(!1).paused(!1).totalTime(a?-this._delay:0,b!==!1,!0)},h.reverse=function(a,b){return null!=a&&this.seek(a||this.totalDuration(),b),this.reversed(!0).paused(!1)},h.render=function(a,b,c){},h.invalidate=function(){return this._time=this._totalTime=0,this._initted=this._gc=!1,this._rawPrevTime=-1,(this._gc||!this.timeline)&&this._enabled(!0),this},h.isActive=function(){var a,b=this._timeline,c=this._startTime;return!b||!this._gc&&!this._paused&&b.isActive()&&(a=b.rawTime(!0))>=c&&a<c+this.totalDuration()/this._timeScale},h._enabled=function(a,b){return j||i.wake(),this._gc=!a,this._active=this.isActive(),b!==!0&&(a&&!this.timeline?this._timeline.add(this,this._startTime-this._delay):!a&&this.timeline&&this._timeline._remove(this,!0)),!1},h._kill=function(a,b){return this._enabled(!1,!1)},h.kill=function(a,b){return this._kill(a,b),this},h._uncache=function(a){for(var b=a?this:this.timeline;b;)b._dirty=!0,b=b.timeline;return this},h._swapSelfInParams=function(a){for(var b=a.length,c=a.concat();--b>-1;)"{self}"===a[b]&&(c[b]=this);return c},h._callback=function(a){var b=this.vars,c=b[a],d=b[a+"Params"],e=b[a+"Scope"]||b.callbackScope||this,f=d?d.length:0;switch(f){case 0:c.call(e);break;case 1:c.call(e,d[0]);break;case 2:c.call(e,d[0],d[1]);break;default:c.apply(e,d)}},h.eventCallback=function(a,b,c,d){if("on"===(a||"").substr(0,2)){var e=this.vars;if(1===arguments.length)return e[a];null==b?delete e[a]:(e[a]=b,e[a+"Params"]=p(c)&&-1!==c.join("").indexOf("{self}")?this._swapSelfInParams(c):c,e[a+"Scope"]=d),"onUpdate"===a&&(this._onUpdate=b)}return this},h.delay=function(a){return arguments.length?(this._timeline.smoothChildTiming&&this.startTime(this._startTime+a-this._delay),this._delay=a,this):this._delay},h.duration=function(a){return arguments.length?(this._duration=this._totalDuration=a,this._uncache(!0),this._timeline.smoothChildTiming&&this._time>0&&this._time<this._duration&&0!==a&&this.totalTime(this._totalTime*(a/this._duration),!0),this):(this._dirty=!1,this._duration)},h.totalDuration=function(a){return this._dirty=!1,arguments.length?this.duration(a):this._totalDuration},h.time=function(a,b){return arguments.length?(this._dirty&&this.totalDuration(),this.totalTime(a>this._duration?this._duration:a,b)):this._time},h.totalTime=function(a,b,c){if(j||i.wake(),!arguments.length)return this._totalTime;if(this._timeline){if(0>a&&!c&&(a+=this.totalDuration()),this._timeline.smoothChildTiming){this._dirty&&this.totalDuration();var d=this._totalDuration,e=this._timeline;if(a>d&&!c&&(a=d),this._startTime=(this._paused?this._pauseTime:e._time)-(this._reversed?d-a:a)/this._timeScale,e._dirty||this._uncache(!1),e._timeline)for(;e._timeline;)e._timeline._time!==(e._startTime+e._totalTime)/e._timeScale&&e.totalTime(e._totalTime,!0),e=e._timeline}this._gc&&this._enabled(!0,!1),(this._totalTime!==a||0===this._duration)&&(J.length&&Y(),this.render(a,b,!1),J.length&&Y())}return this},h.progress=h.totalProgress=function(a,b){var c=this.duration();return arguments.length?this.totalTime(c*a,b):c?this._time/c:this.ratio},h.startTime=function(a){return arguments.length?(a!==this._startTime&&(this._startTime=a,this.timeline&&this.timeline._sortChildren&&this.timeline.add(this,a-this._delay)),this):this._startTime},h.endTime=function(a){return this._startTime+(0!=a?this.totalDuration():this.duration())/this._timeScale},h.timeScale=function(a){if(!arguments.length)return this._timeScale;if(a=a||m,this._timeline&&this._timeline.smoothChildTiming){var b=this._pauseTime,c=b||0===b?b:this._timeline.totalTime();this._startTime=c-(c-this._startTime)*this._timeScale/a}return this._timeScale=a,this._uncache(!1)},h.reversed=function(a){return arguments.length?(a!=this._reversed&&(this._reversed=a,this.totalTime(this._timeline&&!this._timeline.smoothChildTiming?this.totalDuration()-this._totalTime:this._totalTime,!0)),this):this._reversed},h.paused=function(a){if(!arguments.length)return this._paused;var b,c,d=this._timeline;return a!=this._paused&&d&&(j||a||i.wake(),b=d.rawTime(),c=b-this._pauseTime,!a&&d.smoothChildTiming&&(this._startTime+=c,this._uncache(!1)),this._pauseTime=a?b:null,this._paused=a,this._active=this.isActive(),!a&&0!==c&&this._initted&&this.duration()&&(b=d.smoothChildTiming?this._totalTime:(b-this._startTime)/this._timeScale,this.render(b,b===this._totalTime,!0))),this._gc&&!a&&this._enabled(!0,!1),this};var F=t("core.SimpleTimeline",function(a){D.call(this,0,a),this.autoRemoveChildren=this.smoothChildTiming=!0});h=F.prototype=new D,h.constructor=F,h.kill()._gc=!1,h._first=h._last=h._recent=null,h._sortChildren=!1,h.add=h.insert=function(a,b,c,d){var e,f;if(a._startTime=Number(b||0)+a._delay,a._paused&&this!==a._timeline&&(a._pauseTime=a._startTime+(this.rawTime()-a._startTime)/a._timeScale),a.timeline&&a.timeline._remove(a,!0),a.timeline=a._timeline=this,a._gc&&a._enabled(!0,!0),e=this._last,this._sortChildren)for(f=a._startTime;e&&e._startTime>f;)e=e._prev;return e?(a._next=e._next,e._next=a):(a._next=this._first,this._first=a),a._next?a._next._prev=a:this._last=a,a._prev=e,this._recent=a,this._timeline&&this._uncache(!0),this},h._remove=function(a,b){return a.timeline===this&&(b||a._enabled(!1,!0),a._prev?a._prev._next=a._next:this._first===a&&(this._first=a._next),a._next?a._next._prev=a._prev:this._last===a&&(this._last=a._prev),a._next=a._prev=a.timeline=null,a===this._recent&&(this._recent=this._last),this._timeline&&this._uncache(!0)),this},h.render=function(a,b,c){var d,e=this._first;for(this._totalTime=this._time=this._rawPrevTime=a;e;)d=e._next,(e._active||a>=e._startTime&&!e._paused)&&(e._reversed?e.render((e._dirty?e.totalDuration():e._totalDuration)-(a-e._startTime)*e._timeScale,b,c):e.render((a-e._startTime)*e._timeScale,b,c)),e=d},h.rawTime=function(){return j||i.wake(),this._totalTime};var G=t("TweenLite",function(b,c,d){
if(D.call(this,c,d),this.render=G.prototype.render,null==b)throw"Cannot tween a null target.";this.target=b="string"!=typeof b?b:G.selector(b)||b;var e,f,g,h=b.jquery||b.length&&b!==a&&b[0]&&(b[0]===a||b[0].nodeType&&b[0].style&&!b.nodeType),i=this.vars.overwrite;if(this._overwrite=i=null==i?U[G.defaultOverwrite]:"number"==typeof i?i>>0:U[i],(h||b instanceof Array||b.push&&p(b))&&"number"!=typeof b[0])for(this._targets=g=n(b),this._propLookup=[],this._siblings=[],e=0;e<g.length;e++)f=g[e],f?"string"!=typeof f?f.length&&f!==a&&f[0]&&(f[0]===a||f[0].nodeType&&f[0].style&&!f.nodeType)?(g.splice(e--,1),this._targets=g=g.concat(n(f))):(this._siblings[e]=Z(f,this,!1),1===i&&this._siblings[e].length>1&&_(f,this,null,1,this._siblings[e])):(f=g[e--]=G.selector(f),"string"==typeof f&&g.splice(e+1,1)):g.splice(e--,1);else this._propLookup={},this._siblings=Z(b,this,!1),1===i&&this._siblings.length>1&&_(b,this,null,1,this._siblings);(this.vars.immediateRender||0===c&&0===this._delay&&this.vars.immediateRender!==!1)&&(this._time=-m,this.render(Math.min(0,-this._delay)))},!0),H=function(b){return b&&b.length&&b!==a&&b[0]&&(b[0]===a||b[0].nodeType&&b[0].style&&!b.nodeType)},I=function(a,b){var c,d={};for(c in a)T[c]||c in b&&"transform"!==c&&"x"!==c&&"y"!==c&&"width"!==c&&"height"!==c&&"className"!==c&&"border"!==c||!(!Q[c]||Q[c]&&Q[c]._autoCSS)||(d[c]=a[c],delete a[c]);a.css=d};h=G.prototype=new D,h.constructor=G,h.kill()._gc=!1,h.ratio=0,h._firstPT=h._targets=h._overwrittenProps=h._startAt=null,h._notifyPluginsOfEnabled=h._lazy=!1,G.version="1.19.1",G.defaultEase=h._ease=new v(null,null,1,1),G.defaultOverwrite="auto",G.ticker=i,G.autoSleep=120,G.lagSmoothing=function(a,b){i.lagSmoothing(a,b)},G.selector=a.$||a.jQuery||function(b){var c=a.$||a.jQuery;return c?(G.selector=c,c(b)):"undefined"==typeof d?b:d.querySelectorAll?d.querySelectorAll(b):d.getElementById("#"===b.charAt(0)?b.substr(1):b)};var J=[],K={},L=/(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,M=function(a){for(var b,c=this._firstPT,d=1e-6;c;)b=c.blob?1===a?this.end:a?this.join(""):this.start:c.c*a+c.s,c.m?b=c.m(b,this._target||c.t):d>b&&b>-d&&!c.blob&&(b=0),c.f?c.fp?c.t[c.p](c.fp,b):c.t[c.p](b):c.t[c.p]=b,c=c._next},N=function(a,b,c,d){var e,f,g,h,i,j,k,l=[],m=0,n="",o=0;for(l.start=a,l.end=b,a=l[0]=a+"",b=l[1]=b+"",c&&(c(l),a=l[0],b=l[1]),l.length=0,e=a.match(L)||[],f=b.match(L)||[],d&&(d._next=null,d.blob=1,l._firstPT=l._applyPT=d),i=f.length,h=0;i>h;h++)k=f[h],j=b.substr(m,b.indexOf(k,m)-m),n+=j||!h?j:",",m+=j.length,o?o=(o+1)%5:"rgba("===j.substr(-5)&&(o=1),k===e[h]||e.length<=h?n+=k:(n&&(l.push(n),n=""),g=parseFloat(e[h]),l.push(g),l._firstPT={_next:l._firstPT,t:l,p:l.length-1,s:g,c:("="===k.charAt(1)?parseInt(k.charAt(0)+"1",10)*parseFloat(k.substr(2)):parseFloat(k)-g)||0,f:0,m:o&&4>o?Math.round:0}),m+=k.length;return n+=b.substr(m),n&&l.push(n),l.setRatio=M,l},O=function(a,b,c,d,e,f,g,h,i){"function"==typeof d&&(d=d(i||0,a));var j,k=typeof a[b],l="function"!==k?"":b.indexOf("set")||"function"!=typeof a["get"+b.substr(3)]?b:"get"+b.substr(3),m="get"!==c?c:l?g?a[l](g):a[l]():a[b],n="string"==typeof d&&"="===d.charAt(1),o={t:a,p:b,s:m,f:"function"===k,pg:0,n:e||b,m:f?"function"==typeof f?f:Math.round:0,pr:0,c:n?parseInt(d.charAt(0)+"1",10)*parseFloat(d.substr(2)):parseFloat(d)-m||0};return("number"!=typeof m||"number"!=typeof d&&!n)&&(g||isNaN(m)||!n&&isNaN(d)||"boolean"==typeof m||"boolean"==typeof d?(o.fp=g,j=N(m,n?o.s+o.c:d,h||G.defaultStringFilter,o),o={t:j,p:"setRatio",s:0,c:1,f:2,pg:0,n:e||b,pr:0,m:0}):(o.s=parseFloat(m),n||(o.c=parseFloat(d)-o.s||0))),o.c?((o._next=this._firstPT)&&(o._next._prev=o),this._firstPT=o,o):void 0},P=G._internals={isArray:p,isSelector:H,lazyTweens:J,blobDif:N},Q=G._plugins={},R=P.tweenLookup={},S=0,T=P.reservedProps={ease:1,delay:1,overwrite:1,onComplete:1,onCompleteParams:1,onCompleteScope:1,useFrames:1,runBackwards:1,startAt:1,onUpdate:1,onUpdateParams:1,onUpdateScope:1,onStart:1,onStartParams:1,onStartScope:1,onReverseComplete:1,onReverseCompleteParams:1,onReverseCompleteScope:1,onRepeat:1,onRepeatParams:1,onRepeatScope:1,easeParams:1,yoyo:1,immediateRender:1,repeat:1,repeatDelay:1,data:1,paused:1,reversed:1,autoCSS:1,lazy:1,onOverwrite:1,callbackScope:1,stringFilter:1,id:1},U={none:0,all:1,auto:2,concurrent:3,allOnStart:4,preexisting:5,"true":1,"false":0},V=D._rootFramesTimeline=new F,W=D._rootTimeline=new F,X=30,Y=P.lazyRender=function(){var a,b=J.length;for(K={};--b>-1;)a=J[b],a&&a._lazy!==!1&&(a.render(a._lazy[0],a._lazy[1],!0),a._lazy=!1);J.length=0};W._startTime=i.time,V._startTime=i.frame,W._active=V._active=!0,setTimeout(Y,1),D._updateRoot=G.render=function(){var a,b,c;if(J.length&&Y(),W.render((i.time-W._startTime)*W._timeScale,!1,!1),V.render((i.frame-V._startTime)*V._timeScale,!1,!1),J.length&&Y(),i.frame>=X){X=i.frame+(parseInt(G.autoSleep,10)||120);for(c in R){for(b=R[c].tweens,a=b.length;--a>-1;)b[a]._gc&&b.splice(a,1);0===b.length&&delete R[c]}if(c=W._first,(!c||c._paused)&&G.autoSleep&&!V._first&&1===i._listeners.tick.length){for(;c&&c._paused;)c=c._next;c||i.sleep()}}},i.addEventListener("tick",D._updateRoot);var Z=function(a,b,c){var d,e,f=a._gsTweenID;if(R[f||(a._gsTweenID=f="t"+S++)]||(R[f]={target:a,tweens:[]}),b&&(d=R[f].tweens,d[e=d.length]=b,c))for(;--e>-1;)d[e]===b&&d.splice(e,1);return R[f].tweens},$=function(a,b,c,d){var e,f,g=a.vars.onOverwrite;return g&&(e=g(a,b,c,d)),g=G.onOverwrite,g&&(f=g(a,b,c,d)),e!==!1&&f!==!1},_=function(a,b,c,d,e){var f,g,h,i;if(1===d||d>=4){for(i=e.length,f=0;i>f;f++)if((h=e[f])!==b)h._gc||h._kill(null,a,b)&&(g=!0);else if(5===d)break;return g}var j,k=b._startTime+m,l=[],n=0,o=0===b._duration;for(f=e.length;--f>-1;)(h=e[f])===b||h._gc||h._paused||(h._timeline!==b._timeline?(j=j||aa(b,0,o),0===aa(h,j,o)&&(l[n++]=h)):h._startTime<=k&&h._startTime+h.totalDuration()/h._timeScale>k&&((o||!h._initted)&&k-h._startTime<=2e-10||(l[n++]=h)));for(f=n;--f>-1;)if(h=l[f],2===d&&h._kill(c,a,b)&&(g=!0),2!==d||!h._firstPT&&h._initted){if(2!==d&&!$(h,b))continue;h._enabled(!1,!1)&&(g=!0)}return g},aa=function(a,b,c){for(var d=a._timeline,e=d._timeScale,f=a._startTime;d._timeline;){if(f+=d._startTime,e*=d._timeScale,d._paused)return-100;d=d._timeline}return f/=e,f>b?f-b:c&&f===b||!a._initted&&2*m>f-b?m:(f+=a.totalDuration()/a._timeScale/e)>b+m?0:f-b-m};h._init=function(){var a,b,c,d,e,f,g=this.vars,h=this._overwrittenProps,i=this._duration,j=!!g.immediateRender,k=g.ease;if(g.startAt){this._startAt&&(this._startAt.render(-1,!0),this._startAt.kill()),e={};for(d in g.startAt)e[d]=g.startAt[d];if(e.overwrite=!1,e.immediateRender=!0,e.lazy=j&&g.lazy!==!1,e.startAt=e.delay=null,this._startAt=G.to(this.target,0,e),j)if(this._time>0)this._startAt=null;else if(0!==i)return}else if(g.runBackwards&&0!==i)if(this._startAt)this._startAt.render(-1,!0),this._startAt.kill(),this._startAt=null;else{0!==this._time&&(j=!1),c={};for(d in g)T[d]&&"autoCSS"!==d||(c[d]=g[d]);if(c.overwrite=0,c.data="isFromStart",c.lazy=j&&g.lazy!==!1,c.immediateRender=j,this._startAt=G.to(this.target,0,c),j){if(0===this._time)return}else this._startAt._init(),this._startAt._enabled(!1),this.vars.immediateRender&&(this._startAt=null)}if(this._ease=k=k?k instanceof v?k:"function"==typeof k?new v(k,g.easeParams):w[k]||G.defaultEase:G.defaultEase,g.easeParams instanceof Array&&k.config&&(this._ease=k.config.apply(k,g.easeParams)),this._easeType=this._ease._type,this._easePower=this._ease._power,this._firstPT=null,this._targets)for(f=this._targets.length,a=0;f>a;a++)this._initProps(this._targets[a],this._propLookup[a]={},this._siblings[a],h?h[a]:null,a)&&(b=!0);else b=this._initProps(this.target,this._propLookup,this._siblings,h,0);if(b&&G._onPluginEvent("_onInitAllProps",this),h&&(this._firstPT||"function"!=typeof this.target&&this._enabled(!1,!1)),g.runBackwards)for(c=this._firstPT;c;)c.s+=c.c,c.c=-c.c,c=c._next;this._onUpdate=g.onUpdate,this._initted=!0},h._initProps=function(b,c,d,e,f){var g,h,i,j,k,l;if(null==b)return!1;K[b._gsTweenID]&&Y(),this.vars.css||b.style&&b!==a&&b.nodeType&&Q.css&&this.vars.autoCSS!==!1&&I(this.vars,b);for(g in this.vars)if(l=this.vars[g],T[g])l&&(l instanceof Array||l.push&&p(l))&&-1!==l.join("").indexOf("{self}")&&(this.vars[g]=l=this._swapSelfInParams(l,this));else if(Q[g]&&(j=new Q[g])._onInitTween(b,this.vars[g],this,f)){for(this._firstPT=k={_next:this._firstPT,t:j,p:"setRatio",s:0,c:1,f:1,n:g,pg:1,pr:j._priority,m:0},h=j._overwriteProps.length;--h>-1;)c[j._overwriteProps[h]]=this._firstPT;(j._priority||j._onInitAllProps)&&(i=!0),(j._onDisable||j._onEnable)&&(this._notifyPluginsOfEnabled=!0),k._next&&(k._next._prev=k)}else c[g]=O.call(this,b,g,"get",l,g,0,null,this.vars.stringFilter,f);return e&&this._kill(e,b)?this._initProps(b,c,d,e,f):this._overwrite>1&&this._firstPT&&d.length>1&&_(b,this,c,this._overwrite,d)?(this._kill(c,b),this._initProps(b,c,d,e,f)):(this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration)&&(K[b._gsTweenID]=!0),i)},h.render=function(a,b,c){var d,e,f,g,h=this._time,i=this._duration,j=this._rawPrevTime;if(a>=i-1e-7&&a>=0)this._totalTime=this._time=i,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1,this._reversed||(d=!0,e="onComplete",c=c||this._timeline.autoRemoveChildren),0===i&&(this._initted||!this.vars.lazy||c)&&(this._startTime===this._timeline._duration&&(a=0),(0>j||0>=a&&a>=-1e-7||j===m&&"isPause"!==this.data)&&j!==a&&(c=!0,j>m&&(e="onReverseComplete")),this._rawPrevTime=g=!b||a||j===a?a:m);else if(1e-7>a)this._totalTime=this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==h||0===i&&j>0)&&(e="onReverseComplete",d=this._reversed),0>a&&(this._active=!1,0===i&&(this._initted||!this.vars.lazy||c)&&(j>=0&&(j!==m||"isPause"!==this.data)&&(c=!0),this._rawPrevTime=g=!b||a||j===a?a:m)),this._initted||(c=!0);else if(this._totalTime=this._time=a,this._easeType){var k=a/i,l=this._easeType,n=this._easePower;(1===l||3===l&&k>=.5)&&(k=1-k),3===l&&(k*=2),1===n?k*=k:2===n?k*=k*k:3===n?k*=k*k*k:4===n&&(k*=k*k*k*k),1===l?this.ratio=1-k:2===l?this.ratio=k:.5>a/i?this.ratio=k/2:this.ratio=1-k/2}else this.ratio=this._ease.getRatio(a/i);if(this._time!==h||c){if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!c&&this._firstPT&&(this.vars.lazy!==!1&&this._duration||this.vars.lazy&&!this._duration))return this._time=this._totalTime=h,this._rawPrevTime=j,J.push(this),void(this._lazy=[a,b]);this._time&&!d?this.ratio=this._ease.getRatio(this._time/i):d&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(this._lazy!==!1&&(this._lazy=!1),this._active||!this._paused&&this._time!==h&&a>=0&&(this._active=!0),0===h&&(this._startAt&&(a>=0?this._startAt.render(a,b,c):e||(e="_dummyGS")),this.vars.onStart&&(0!==this._time||0===i)&&(b||this._callback("onStart"))),f=this._firstPT;f;)f.f?f.t[f.p](f.c*this.ratio+f.s):f.t[f.p]=f.c*this.ratio+f.s,f=f._next;this._onUpdate&&(0>a&&this._startAt&&a!==-1e-4&&this._startAt.render(a,b,c),b||(this._time!==h||d||c)&&this._callback("onUpdate")),e&&(!this._gc||c)&&(0>a&&this._startAt&&!this._onUpdate&&a!==-1e-4&&this._startAt.render(a,b,c),d&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!b&&this.vars[e]&&this._callback(e),0===i&&this._rawPrevTime===m&&g!==m&&(this._rawPrevTime=0))}},h._kill=function(a,b,c){if("all"===a&&(a=null),null==a&&(null==b||b===this.target))return this._lazy=!1,this._enabled(!1,!1);b="string"!=typeof b?b||this._targets||this.target:G.selector(b)||b;var d,e,f,g,h,i,j,k,l,m=c&&this._time&&c._startTime===this._startTime&&this._timeline===c._timeline;if((p(b)||H(b))&&"number"!=typeof b[0])for(d=b.length;--d>-1;)this._kill(a,b[d],c)&&(i=!0);else{if(this._targets){for(d=this._targets.length;--d>-1;)if(b===this._targets[d]){h=this._propLookup[d]||{},this._overwrittenProps=this._overwrittenProps||[],e=this._overwrittenProps[d]=a?this._overwrittenProps[d]||{}:"all";break}}else{if(b!==this.target)return!1;h=this._propLookup,e=this._overwrittenProps=a?this._overwrittenProps||{}:"all"}if(h){if(j=a||h,k=a!==e&&"all"!==e&&a!==h&&("object"!=typeof a||!a._tempKill),c&&(G.onOverwrite||this.vars.onOverwrite)){for(f in j)h[f]&&(l||(l=[]),l.push(f));if((l||!a)&&!$(this,c,b,l))return!1}for(f in j)(g=h[f])&&(m&&(g.f?g.t[g.p](g.s):g.t[g.p]=g.s,i=!0),g.pg&&g.t._kill(j)&&(i=!0),g.pg&&0!==g.t._overwriteProps.length||(g._prev?g._prev._next=g._next:g===this._firstPT&&(this._firstPT=g._next),g._next&&(g._next._prev=g._prev),g._next=g._prev=null),delete h[f]),k&&(e[f]=1);!this._firstPT&&this._initted&&this._enabled(!1,!1)}}return i},h.invalidate=function(){return this._notifyPluginsOfEnabled&&G._onPluginEvent("_onDisable",this),this._firstPT=this._overwrittenProps=this._startAt=this._onUpdate=null,this._notifyPluginsOfEnabled=this._active=this._lazy=!1,this._propLookup=this._targets?{}:[],D.prototype.invalidate.call(this),this.vars.immediateRender&&(this._time=-m,this.render(Math.min(0,-this._delay))),this},h._enabled=function(a,b){if(j||i.wake(),a&&this._gc){var c,d=this._targets;if(d)for(c=d.length;--c>-1;)this._siblings[c]=Z(d[c],this,!0);else this._siblings=Z(this.target,this,!0)}return D.prototype._enabled.call(this,a,b),this._notifyPluginsOfEnabled&&this._firstPT?G._onPluginEvent(a?"_onEnable":"_onDisable",this):!1},G.to=function(a,b,c){return new G(a,b,c)},G.from=function(a,b,c){return c.runBackwards=!0,c.immediateRender=0!=c.immediateRender,new G(a,b,c)},G.fromTo=function(a,b,c,d){return d.startAt=c,d.immediateRender=0!=d.immediateRender&&0!=c.immediateRender,new G(a,b,d)},G.delayedCall=function(a,b,c,d,e){return new G(b,0,{delay:a,onComplete:b,onCompleteParams:c,callbackScope:d,onReverseComplete:b,onReverseCompleteParams:c,immediateRender:!1,lazy:!1,useFrames:e,overwrite:0})},G.set=function(a,b){return new G(a,0,b)},G.getTweensOf=function(a,b){if(null==a)return[];a="string"!=typeof a?a:G.selector(a)||a;var c,d,e,f;if((p(a)||H(a))&&"number"!=typeof a[0]){for(c=a.length,d=[];--c>-1;)d=d.concat(G.getTweensOf(a[c],b));for(c=d.length;--c>-1;)for(f=d[c],e=c;--e>-1;)f===d[e]&&d.splice(c,1)}else for(d=Z(a).concat(),c=d.length;--c>-1;)(d[c]._gc||b&&!d[c].isActive())&&d.splice(c,1);return d},G.killTweensOf=G.killDelayedCallsTo=function(a,b,c){"object"==typeof b&&(c=b,b=!1);for(var d=G.getTweensOf(a,b),e=d.length;--e>-1;)d[e]._kill(c,a)};var ba=t("plugins.TweenPlugin",function(a,b){this._overwriteProps=(a||"").split(","),this._propName=this._overwriteProps[0],this._priority=b||0,this._super=ba.prototype},!0);if(h=ba.prototype,ba.version="1.19.0",ba.API=2,h._firstPT=null,h._addTween=O,h.setRatio=M,h._kill=function(a){var b,c=this._overwriteProps,d=this._firstPT;if(null!=a[this._propName])this._overwriteProps=[];else for(b=c.length;--b>-1;)null!=a[c[b]]&&c.splice(b,1);for(;d;)null!=a[d.n]&&(d._next&&(d._next._prev=d._prev),d._prev?(d._prev._next=d._next,d._prev=null):this._firstPT===d&&(this._firstPT=d._next)),d=d._next;return!1},h._mod=h._roundProps=function(a){for(var b,c=this._firstPT;c;)b=a[this._propName]||null!=c.n&&a[c.n.split(this._propName+"_").join("")],b&&"function"==typeof b&&(2===c.f?c.t._applyPT.m=b:c.m=b),c=c._next},G._onPluginEvent=function(a,b){var c,d,e,f,g,h=b._firstPT;if("_onInitAllProps"===a){for(;h;){for(g=h._next,d=e;d&&d.pr>h.pr;)d=d._next;(h._prev=d?d._prev:f)?h._prev._next=h:e=h,(h._next=d)?d._prev=h:f=h,h=g}h=b._firstPT=e}for(;h;)h.pg&&"function"==typeof h.t[a]&&h.t[a]()&&(c=!0),h=h._next;return c},ba.activate=function(a){for(var b=a.length;--b>-1;)a[b].API===ba.API&&(Q[(new a[b])._propName]=a[b]);return!0},s.plugin=function(a){if(!(a&&a.propName&&a.init&&a.API))throw"illegal plugin definition.";var b,c=a.propName,d=a.priority||0,e=a.overwriteProps,f={init:"_onInitTween",set:"setRatio",kill:"_kill",round:"_mod",mod:"_mod",initAll:"_onInitAllProps"},g=t("plugins."+c.charAt(0).toUpperCase()+c.substr(1)+"Plugin",function(){ba.call(this,c,d),this._overwriteProps=e||[]},a.global===!0),h=g.prototype=new ba(c);h.constructor=g,g.API=a.API;for(b in f)"function"==typeof a[b]&&(h[f[b]]=a[b]);return g.version=a.version,ba.activate([g]),g},f=a._gsQueue){for(g=0;g<f.length;g++)f[g]();for(h in q)q[h].func||a.console.log("GSAP encountered missing dependency: "+h)}j=!1}}("undefined"!=typeof module&&module.exports&&"undefined"!=typeof global?global:this||window,"TweenMax");/*!
 * VERSION: 0.8.10
 * DATE: 2017-04-29
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2017, GreenSock. All rights reserved.
 * MorphSVGPlugin is a Club GreenSock membership benefit; You must have a valid membership to use
 * this code without violating the terms of use. Visit http://greensock.com/club/ to sign up or get more details.
 * This work is subject to the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 */
var _gsScope="undefined"!=typeof module&&module.exports&&"undefined"!=typeof global?global:this||window;(_gsScope._gsQueue||(_gsScope._gsQueue=[])).push(function(){"use strict";var a=Math.PI/180,b=180/Math.PI,c=/[achlmqstvz]|(-?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,d=/(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,e=/(^[#\.]|[a-y][a-z])/gi,f=/[achlmqstvz]/gi,g=/[\+\-]?\d*\.?\d+e[\+\-]?\d+/gi,h=_gsScope._gsDefine.globals.TweenLite,i=function(a){_gsScope.console&&console.log(a)},j=function(b,c){var d,e,f,g,h,i,j=Math.ceil(Math.abs(c)/90),k=0,l=[];for(b*=a,c*=a,d=c/j,e=4/3*Math.sin(d/2)/(1+Math.cos(d/2)),i=0;j>i;i++)f=b+i*d,g=Math.cos(f),h=Math.sin(f),l[k++]=g-e*h,l[k++]=h+e*g,f+=d,g=Math.cos(f),h=Math.sin(f),l[k++]=g+e*h,l[k++]=h-e*g,l[k++]=g,l[k++]=h;return l},k=function(c,d,e,f,g,h,i,k,l){if(c!==k||d!==l){e=Math.abs(e),f=Math.abs(f);var m=g%360*a,n=Math.cos(m),o=Math.sin(m),p=(c-k)/2,q=(d-l)/2,r=n*p+o*q,s=-o*p+n*q,t=e*e,u=f*f,v=r*r,w=s*s,x=v/t+w/u;x>1&&(e=Math.sqrt(x)*e,f=Math.sqrt(x)*f,t=e*e,u=f*f);var y=h===i?-1:1,z=(t*u-t*w-u*v)/(t*w+u*v);0>z&&(z=0);var A=y*Math.sqrt(z),B=A*(e*s/f),C=A*-(f*r/e),D=(c+k)/2,E=(d+l)/2,F=D+(n*B-o*C),G=E+(o*B+n*C),H=(r-B)/e,I=(s-C)/f,J=(-r-B)/e,K=(-s-C)/f,L=Math.sqrt(H*H+I*I),M=H;y=0>I?-1:1;var N=y*Math.acos(M/L)*b;L=Math.sqrt((H*H+I*I)*(J*J+K*K)),M=H*J+I*K,y=0>H*K-I*J?-1:1;var O=y*Math.acos(M/L)*b;!i&&O>0?O-=360:i&&0>O&&(O+=360),O%=360,N%=360;var P,Q,R,S=j(N,O),T=n*e,U=o*e,V=o*-f,W=n*f,X=S.length-2;for(P=0;X>P;P+=2)Q=S[P],R=S[P+1],S[P]=Q*T+R*V+F,S[P+1]=Q*U+R*W+G;return S[S.length-2]=k,S[S.length-1]=l,S}},l=function(a){var b,d,e,f,h,j,l,m,n,o,p,q,r,s=(a+"").replace(g,function(a){var b=+a;return 1e-4>b&&b>-1e-4?0:b}).match(c)||[],t=[],u=0,v=0,w=s.length,x=2,y=0;if(!a||!isNaN(s[0])||isNaN(s[1]))return i("ERROR: malformed path data: "+a),t;for(b=0;w>b;b++)if(r=h,isNaN(s[b])?(h=s[b].toUpperCase(),j=h!==s[b]):b--,e=+s[b+1],f=+s[b+2],j&&(e+=u,f+=v),0===b&&(m=e,n=f),"M"===h)l&&l.length<8&&(t.length-=1,x=0),u=m=e,v=n=f,l=[e,f],y+=x,x=2,t.push(l),b+=2,h="L";else if("C"===h)l||(l=[0,0]),l[x++]=e,l[x++]=f,j||(u=v=0),l[x++]=u+1*s[b+3],l[x++]=v+1*s[b+4],l[x++]=u+=1*s[b+5],l[x++]=v+=1*s[b+6],b+=6;else if("S"===h)"C"===r||"S"===r?(o=u-l[x-4],p=v-l[x-3],l[x++]=u+o,l[x++]=v+p):(l[x++]=u,l[x++]=v),l[x++]=e,l[x++]=f,j||(u=v=0),l[x++]=u+=1*s[b+3],l[x++]=v+=1*s[b+4],b+=4;else if("Q"===h)o=e-u,p=f-v,l[x++]=u+2*o/3,l[x++]=v+2*p/3,j||(u=v=0),u+=1*s[b+3],v+=1*s[b+4],o=e-u,p=f-v,l[x++]=u+2*o/3,l[x++]=v+2*p/3,l[x++]=u,l[x++]=v,b+=4;else if("T"===h)o=u-l[x-4],p=v-l[x-3],l[x++]=u+o,l[x++]=v+p,o=u+1.5*o-e,p=v+1.5*p-f,l[x++]=e+2*o/3,l[x++]=f+2*p/3,l[x++]=u=e,l[x++]=v=f,b+=2;else if("H"===h)f=v,l[x++]=u+(e-u)/3,l[x++]=v+(f-v)/3,l[x++]=u+2*(e-u)/3,l[x++]=v+2*(f-v)/3,l[x++]=u=e,l[x++]=f,b+=1;else if("V"===h)f=e,e=u,j&&(f+=v-u),l[x++]=e,l[x++]=v+(f-v)/3,l[x++]=e,l[x++]=v+2*(f-v)/3,l[x++]=e,l[x++]=v=f,b+=1;else if("L"===h||"Z"===h)"Z"===h&&(e=m,f=n,l.closed=!0),("L"===h||Math.abs(u-e)>.5||Math.abs(v-f)>.5)&&(l[x++]=u+(e-u)/3,l[x++]=v+(f-v)/3,l[x++]=u+2*(e-u)/3,l[x++]=v+2*(f-v)/3,l[x++]=e,l[x++]=f,"L"===h&&(b+=2)),u=e,v=f;else if("A"===h){if(q=k(u,v,1*s[b+1],1*s[b+2],1*s[b+3],1*s[b+4],1*s[b+5],(j?u:0)+1*s[b+6],(j?v:0)+1*s[b+7]))for(d=0;d<q.length;d++)l[x++]=q[d];u=l[x-2],v=l[x-1],b+=7}else i("Error: malformed path data: "+a);return t.totalPoints=y+x,t},m=function(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q=0,r=.999999,s=a.length,t=b/((s-2)/6);for(o=2;s>o;o+=6)for(q+=t;q>r;)c=a[o-2],d=a[o-1],e=a[o],f=a[o+1],g=a[o+2],h=a[o+3],i=a[o+4],j=a[o+5],p=1/(Math.floor(q)+1),k=c+(e-c)*p,m=e+(g-e)*p,k+=(m-k)*p,m+=(g+(i-g)*p-m)*p,l=d+(f-d)*p,n=f+(h-f)*p,l+=(n-l)*p,n+=(h+(j-h)*p-n)*p,a.splice(o,4,c+(e-c)*p,d+(f-d)*p,k,l,k+(m-k)*p,l+(n-l)*p,m,n,g+(i-g)*p,h+(j-h)*p),o+=6,s+=6,q--;return a},n=function(a){var b,c,d,e,f="",g=a.length,h=100;for(c=0;g>c;c++){for(e=a[c],f+="M"+e[0]+","+e[1]+" C",b=e.length,d=2;b>d;d++)f+=(e[d++]*h|0)/h+","+(e[d++]*h|0)/h+" "+(e[d++]*h|0)/h+","+(e[d++]*h|0)/h+" "+(e[d++]*h|0)/h+","+(e[d]*h|0)/h+" ";e.closed&&(f+="z")}return f},o=function(a){for(var b=[],c=a.length-1,d=0;--c>-1;)b[d++]=a[c],b[d++]=a[c+1],c--;for(c=0;d>c;c++)a[c]=b[c];a.reversed=a.reversed?!1:!0},p=function(a){var b,c=a.length,d=0,e=0;for(b=0;c>b;b++)d+=a[b++],e+=a[b];return[d/(c/2),e/(c/2)]},q=function(a){var b,c,d,e=a.length,f=a[0],g=f,h=a[1],i=h;for(d=6;e>d;d+=6)b=a[d],c=a[d+1],b>f?f=b:g>b&&(g=b),c>h?h=c:i>c&&(i=c);return a.centerX=(f+g)/2,a.centerY=(h+i)/2,a.size=(f-g)*(h-i)},r=function(a){for(var b,c,d,e,f,g=a.length,h=a[0][0],i=h,j=a[0][1],k=j;--g>-1;)for(f=a[g],b=f.length,e=6;b>e;e+=6)c=f[e],d=f[e+1],c>h?h=c:i>c&&(i=c),d>j?j=d:k>d&&(k=d);return a.centerX=(h+i)/2,a.centerY=(j+k)/2,a.size=(h-i)*(j-k)},s=function(a,b){return b.length-a.length},t=function(a,b){var c=a.size||q(a),d=b.size||q(b);return Math.abs(d-c)<(c+d)/20?b.centerX-a.centerX||b.centerY-a.centerY:d-c},u=function(a,b){var c,d,e=a.slice(0),f=a.length,g=f-2;for(b=0|b,c=0;f>c;c++)d=(c+b)%g,a[c++]=e[d],a[c]=e[d+1]},v=function(a,b,c,d,e){var f,g,h,i,j=a.length,k=0,l=j-2;for(c*=6,g=0;j>g;g+=6)f=(g+c)%l,i=a[f]-(b[g]-d),h=a[f+1]-(b[g+1]-e),k+=Math.sqrt(h*h+i*i);return k},w=function(a,b,c){var d,e,f,g=a.length,h=p(a),i=p(b),j=i[0]-h[0],k=i[1]-h[1],l=v(a,b,0,j,k),m=0;for(f=6;g>f;f+=6)e=v(a,b,f/6,j,k),l>e&&(l=e,m=f);if(c)for(d=a.slice(0),o(d),f=6;g>f;f+=6)e=v(d,b,f/6,j,k),l>e&&(l=e,m=-f);return m/6},x=function(a,b,c){for(var d,e,f,g,h,i,j=a.length,k=99999999999,l=0,m=0;--j>-1;)for(d=a[j],i=d.length,h=0;i>h;h+=6)e=d[h]-b,f=d[h+1]-c,g=Math.sqrt(e*e+f*f),k>g&&(k=g,l=d[h],m=d[h+1]);return[l,m]},y=function(a,b,c,d,e,f){var g,h,i,j,k,l=b.length,m=0,n=Math.min(a.size||q(a),b[c].size||q(b[c]))*d,o=999999999999,p=a.centerX+e,r=a.centerY+f;for(h=c;l>h&&(g=b[h].size||q(b[h]),!(n>g));h++)i=b[h].centerX-p,j=b[h].centerY-r,k=Math.sqrt(i*i+j*j),o>k&&(m=h,o=k);return k=b[m],b.splice(m,1),k},z=function(a,b,c,d){var e,f,g,h,j,k,l,n=b.length-a.length,p=n>0?b:a,v=n>0?a:b,z=0,A="complexity"===d?s:t,B="position"===d?0:"number"==typeof d?d:.8,C=v.length,D="object"==typeof c&&c.push?c.slice(0):[c],E="reverse"===D[0]||D[0]<0,F="log"===c;if(v[0]){if(p.length>1&&(a.sort(A),b.sort(A),k=p.size||r(p),k=v.size||r(v),k=p.centerX-v.centerX,l=p.centerY-v.centerY,A===t))for(C=0;C<v.length;C++)p.splice(C,0,y(v[C],p,C,B,k,l));if(n)for(0>n&&(n=-n),p[0].length>v[0].length&&m(v[0],(p[0].length-v[0].length)/6|0),C=v.length;n>z;)h=p[C].size||q(p[C]),g=x(v,p[C].centerX,p[C].centerY),h=g[0],j=g[1],v[C++]=[h,j,h,j,h,j,h,j],v.totalPoints+=8,z++;for(C=0;C<a.length;C++)e=b[C],f=a[C],n=e.length-f.length,0>n?m(e,-n/6|0):n>0&&m(f,n/6|0),E&&!f.reversed&&o(f),c=D[C]||0===D[C]?D[C]:"auto",c&&(f.closed||Math.abs(f[0]-f[f.length-2])<.5&&Math.abs(f[1]-f[f.length-1])<.5?"auto"===c||"log"===c?(D[C]=c=w(f,e,0===C),0>c&&(E=!0,o(f),c=-c),u(f,6*c)):"reverse"!==c&&(C&&0>c&&o(f),u(f,6*(0>c?-c:c))):!E&&("auto"===c&&Math.abs(e[0]-f[0])+Math.abs(e[1]-f[1])+Math.abs(e[e.length-2]-f[f.length-2])+Math.abs(e[e.length-1]-f[f.length-1])>Math.abs(e[0]-f[f.length-2])+Math.abs(e[1]-f[f.length-1])+Math.abs(e[e.length-2]-f[0])+Math.abs(e[e.length-1]-f[1])||c%2)?(o(f),D[C]=-1,E=!0):"auto"===c?D[C]=0:"reverse"===c&&(D[C]=-1),f.closed!==e.closed&&(f.closed=e.closed=!1));return F&&i("shapeIndex:["+D.join(",")+"]"),D}},A=function(a,b,c,d){var e=l(a[0]),f=l(a[1]);z(e,f,b||0===b?b:"auto",c)&&(a[0]=n(e),a[1]=n(f),("log"===d||d===!0)&&i('precompile:["'+a[0]+'","'+a[1]+'"]'))},B=function(a,b,c){return b||c||a||0===a?function(d){A(d,a,b,c)}:A},C=function(a,b){if(!b)return a;var c,e,f,g=a.match(d)||[],h=g.length,i="";for("reverse"===b?(e=h-1,c=-2):(e=(2*(parseInt(b,10)||0)+1+100*h)%h,c=2),f=0;h>f;f+=2)i+=g[e-1]+","+g[e]+" ",e=(e+c)%h;return i},D=function(a,b){var c,d,e,f,g,h,i,j=0,k=parseFloat(a[0]),l=parseFloat(a[1]),m=k+","+l+" ",n=.999999;for(e=a.length,c=.5*b/(.5*e-1),d=0;e-2>d;d+=2){if(j+=c,h=parseFloat(a[d+2]),i=parseFloat(a[d+3]),j>n)for(g=1/(Math.floor(j)+1),f=1;j>n;)m+=(k+(h-k)*g*f).toFixed(2)+","+(l+(i-l)*g*f).toFixed(2)+" ",j--,f++;m+=h+","+i+" ",k=h,l=i}return m},E=function(a){var b=a[0].match(d)||[],c=a[1].match(d)||[],e=c.length-b.length;e>0?a[0]=D(b,e):a[1]=D(c,-e)},F=function(a){return isNaN(a)?E:function(b){E(b),b[1]=C(b[1],parseInt(a,10))}},G=function(a,b){var c,d=_gsScope.document.createElementNS("http://www.w3.org/2000/svg","path"),e=Array.prototype.slice.call(a.attributes),f=e.length;for(b=","+b+",";--f>-1;)c=e[f].nodeName.toLowerCase(),-1===b.indexOf(","+c+",")&&d.setAttributeNS(null,c,e[f].nodeValue);return d},H=function(a,b){var c,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y=a.tagName.toLowerCase(),z=.552284749831;return"path"!==y&&a.getBBox?(i=G(a,"x,y,width,height,cx,cy,rx,ry,r,x1,x2,y1,y2,points"),"rect"===y?(g=+a.getAttribute("rx")||0,h=+a.getAttribute("ry")||0,e=+a.getAttribute("x")||0,f=+a.getAttribute("y")||0,m=(+a.getAttribute("width")||0)-2*g,n=(+a.getAttribute("height")||0)-2*h,g||h?(o=e+g*(1-z),p=e+g,q=p+m,r=q+g*z,s=q+g,t=f+h*(1-z),u=f+h,v=u+n,w=v+h*z,x=v+h,c="M"+s+","+u+" V"+v+" C"+[s,w,r,x,q,x,q-(q-p)/3,x,p+(q-p)/3,x,p,x,o,x,e,w,e,v,e,v-(v-u)/3,e,u+(v-u)/3,e,u,e,t,o,f,p,f,p+(q-p)/3,f,q-(q-p)/3,f,q,f,r,f,s,t,s,u].join(",")+"z"):c="M"+(e+m)+","+f+" v"+n+" h"+-m+" v"+-n+" h"+m+"z"):"circle"===y||"ellipse"===y?("circle"===y?(g=h=+a.getAttribute("r")||0,k=g*z):(g=+a.getAttribute("rx")||0,h=+a.getAttribute("ry")||0,k=h*z),e=+a.getAttribute("cx")||0,f=+a.getAttribute("cy")||0,j=g*z,c="M"+(e+g)+","+f+" C"+[e+g,f+k,e+j,f+h,e,f+h,e-j,f+h,e-g,f+k,e-g,f,e-g,f-k,e-j,f-h,e,f-h,e+j,f-h,e+g,f-k,e+g,f].join(",")+"z"):"line"===y?c="M"+(a.getAttribute("x1")||0)+","+(a.getAttribute("y1")||0)+" L"+(a.getAttribute("x2")||0)+","+(a.getAttribute("y2")||0):("polyline"===y||"polygon"===y)&&(l=(a.getAttribute("points")+"").match(d)||[],e=l.shift(),f=l.shift(),c="M"+e+","+f+" L"+l.join(","),"polygon"===y&&(c+=","+e+","+f+"z")),i.setAttribute("d",c),b&&a.parentNode&&(a.parentNode.insertBefore(i,a),a.parentNode.removeChild(a)),i):a},I=function(a,b,c){var f,g,j="string"==typeof a;return(!j||e.test(a)||(a.match(d)||[]).length<3)&&(f=j?h.selector(a):a&&a[0]?a:[a],f&&f[0]?(f=f[0],g=f.nodeName.toUpperCase(),b&&"PATH"!==g&&(f=H(f,!1),g="PATH"),a=f.getAttribute("PATH"===g?"d":"points")||"",f===c&&(a=f.getAttributeNS(null,"data-original")||a)):(i("WARNING: invalid morph to: "+a),a=!1)),a},J="Use MorphSVGPlugin.convertToPath(elementOrSelectorText) to convert to a path before morphing.",K=_gsScope._gsDefine.plugin({propName:"morphSVG",API:2,global:!0,version:"0.8.10",init:function(a,b,c,d){var e,g,h,j,k;return"function"!=typeof a.setAttribute?!1:("function"==typeof b&&(b=b(d,a)),e=a.nodeName.toUpperCase(),k="POLYLINE"===e||"POLYGON"===e,"PATH"===e||k?(g="PATH"===e?"d":"points",("string"==typeof b||b.getBBox||b[0])&&(b={shape:b}),j=I(b.shape||b.d||b.points||"","d"===g,a),k&&f.test(j)?(i("WARNING: a <"+e+"> cannot accept path data. "+J),!1):(j&&(this._target=a,a.getAttributeNS(null,"data-original")||a.setAttributeNS(null,"data-original",a.getAttribute(g)),h=this._addTween(a,"setAttribute",a.getAttribute(g)+"",j+"","morphSVG",!1,g,"object"==typeof b.precompile?function(a){a[0]=b.precompile[0],a[1]=b.precompile[1]}:"d"===g?B(b.shapeIndex,b.map||K.defaultMap,b.precompile):F(b.shapeIndex)),h&&(this._overwriteProps.push("morphSVG"),h.end=j,h.endProp=g)),!0)):(i("WARNING: cannot morph a <"+e+"> SVG element. "+J),!1))},set:function(a){var b;if(this._super.setRatio.call(this,a),1===a)for(b=this._firstPT;b;)b.end&&this._target.setAttribute(b.endProp,b.end),b=b._next}});K.pathFilter=A,K.pointsFilter=E,K.subdivideRawBezier=m,K.defaultMap="size",K.pathDataToRawBezier=function(a){return l(I(a,!0))},K.equalizeSegmentQuantity=z,K.convertToPath=function(a,b){"string"==typeof a&&(a=h.selector(a));for(var c=a&&0!==a.length?a.length&&a[0]&&a[0].nodeType?Array.prototype.slice.call(a,0):[a]:[],d=c.length;--d>-1;)c[d]=H(c[d],b!==!1);return c},K.pathDataToBezier=function(a,b){var c,d,e,f,g,i,j,k,m=l(I(a,!0))[0]||[],n=0;if(b=b||{},k=b.align||b.relative,f=b.matrix||[1,0,0,1,0,0],g=b.offsetX||0,i=b.offsetY||0,"relative"===k||k===!0?(g-=m[0]*f[0]+m[1]*f[2],i-=m[0]*f[1]+m[1]*f[3],n="+="):(g+=f[4],i+=f[5],k&&(k="string"==typeof k?h.selector(k):k&&k[0]?k:[k],k&&k[0]&&(j=k[0].getBBox()||{x:0,y:0},g-=j.x,i-=j.y))),c=[],e=m.length,f&&"1,0,0,1,0,0"!==f.join(","))for(d=0;e>d;d+=2)c.push({x:n+(m[d]*f[0]+m[d+1]*f[2]+g),y:n+(m[d]*f[1]+m[d+1]*f[3]+i)});else for(d=0;e>d;d+=2)c.push({x:n+(m[d]+g),y:n+(m[d+1]+i)});return c}}),_gsScope._gsDefine&&_gsScope._gsQueue.pop()(),function(a){"use strict";var b=function(){return(_gsScope.GreenSockGlobals||_gsScope)[a]};"function"==typeof define&&define.amd?define(["TweenLite"],b):"undefined"!=typeof module&&module.exports&&(require("../TweenLite.js"),module.exports=b())}("MorphSVGPlugin");window.Travian = {
	/**
	 * Application Id
	 *
	 * @var string
	 */
	applicationId:	'travian',

    /**
	 * Object of default values that are globally available for the application
	 * Constant TravianDefaults is going to contain values coming from PHP and need to be available for Javascript. Like some pre-defined config constants
     */
	Defaults: typeof TravianDefaults !== 'undefined' ? TravianDefaults : {},

	/**
	 * eine leere Funktion
	 *
	 * @var function
	 */
	emptyFunction: function()
	{
	},

	/**
	 * gibt ggf debugmeldungen aus
	 *
	 * @param mixed notice
	 * @access public
	 */
	$d: function(notice)
	{
		if (window.console && window.console.info)
		{
			console.info(JSON.stringify(notice));
		}
		else
		{
			if (!$('travian_console'))
			{
				var elementTop = new Element('div',
				{
					id:	'travian_console',
					styles:
					{
						position:			'absolute',
						left:				0,
						height:				150,
						width:				'100%',
						bottom:				0,
						zIndex:				10000,
						overflow:			'auto',
						overflowX:			'hidden',
						overflowY:			'auto',
						borderTop:			'1px solid #A06060',
						backgroundColor:	'#FFD0D0',
						fontSize:			'10px',
						fontFamily:			'tahoma,arial,helvetica,sans-serif'
					}
				});

				(new Element('div',
				{
					html:		'Console',
					styles:
					{
						fontWeight:			'bold',
						padding:			1,
						marginBottom:		2,
						borderBottom:		'1px solid #858484'
					}
				})).inject(elementTop, 'bottom');

				elementTop.inject(document.body, 'bottom');
			}

			(new Element('span',
			{
				html:	JSON.encode(notice) + '<br />'
			})).inject($('travian_console'), 'bottom');
		}
	},

	/**
	 * Ajax Requesting
	 *
	 * folgende Optionen werden gesetzt wenn nicht vorhanden
	 * - url
	 *
	 * folgende Options werden Ã¼berschrieben
	 * - method
	 * - encoding
	 * - evalResponse
	 * - headers: X-Request
	 * - onRequest: bekommt als Parameter das Request Object
	 * - onComplete: bekommt die gesendeten Daten
	 * - onCancel: bekommt als Parameter das Request Object
	 * - onSuccess:	bekommt die gesendeten Daten, wenn das Script einen Fehler meldet, wird onFailure aufgerufen mit den Daten und der Fehlernummer
	 * - onFailure: bekommt die vielleicht gesendeten Daten und als 2 Parameter im Fehlerfall auf Serverseite mit Nummer die Fehlernummer
	 * - onException: bekommt als Parameter das Request Object
	 * 
	 * Neue Parameter
	 * - errorHandler: Callback, falls definiert wird kein Dialog angezeigt und die Fehlerverarbeitung liegt beim callback Provider
	 *
	 * @return Request
	 */
	ajax: function(options)
	{
		//options objekt mergen
		if (typeof options === 'undefined')
		{
			options = {};
		}

		if (typeof options.data === 'undefined')
		{
			options.data = {};
		}

		if (!options.url)
		{
			options.url = 'ajax.php';
		}

		// cmd mit an ajax.php als GET mitschicken
		if (options.data && options.data.cmd)
		{
			options.url = options.url + (options.url.indexOf('?') == -1 ? '?' : '&') + 'cmd=' + options.data.cmd;
		}

		//request Token setzen
		options.data.ajaxToken = window.ajaxToken;

		//Callbacks deklarieren
		var callbacks = {
			onRequest:		options.onRequest || Travian.emptyFunction,
			onComplete:		options.onComplete || Travian.emptyFunction,
			onCancel:		options.onCancel || Travian.emptyFunction,
			onSuccess:		options.onSuccess || Travian.emptyFunction,
			onFailure:		options.onFailure || Travian.emptyFunction,
			onException:	options.onException || Travian.emptyFunction,
			errorHandler:	options.errorHandler || null
		};

		// options anpassen und request abschicken
		return new Request(Object.merge(options,
		{
			method: 'post',
			encoding: 'utf-8',
			evalResponse: false,
			evalScripts: false,
			headers:
			{
				'X-Request': 'JSON'
			},

			onRequest: function()
			{
				callbacks.onRequest(this);
			},

			onComplete: function()
			{
				if (!this.response.json)
				{
					this.response.json = JSON.decode(this.response.text);
				}

				var response = this.response.json.response;

				callbacks.onComplete(response.data);
			},

			onCancel: function()
			{
				callbacks.onCancel(this);
			},

			onSuccess: function()
			{
				if (!this.response.json)
				{
					this.response.json = JSON.decode(this.response.text);
				}

				var response = this.response.json.response;

				if (typeof response.data !== 'undefined' && response.data.javascript !== 'undefined' && response.data.javascript)
				{
					// Mootools hat hier eine nette Funktion zum ausfÃ¼hren. diese wird auch in Request mit evalResponse verwendet
					Browser.exec(response.data.javascript);
				}

				if (response.javascript)
				{
					Browser.exec(response.javascript);
				}

				if (response.error)
				{
					if (response.errorMsg == null)
					{
						response.errorMsg = 'Ajax Request error and no text. That is not so good.';
					}

					if (typeof callbacks.errorHandler === 'function')
					{
						callbacks.errorHandler(response.errorMsg, response);
					}
					else
					{
						if (callbacks.onFailure(response.data, response.errorMsg) !== false)
						{
							response.errorMsg.dialog();
						}
						return;
					}
				}

				// es soll die seite neu geladen werden
				else if (response.reload)
				{
					window.location.reload();
				}
				else if (response.redirectTo)
				{
					window.location.href = response.redirectTo;
				}

				//neuer parameter: die pure response
				callbacks.onSuccess(response.data, response);
			},
			onFailure: function()
			{
				if (!this.response.json)
				{
					this.response.json = JSON.decode(this.response.text);
				}

				var response = this.response.json.response;

				// gabs einen fehler?
				if (response.error)
				{
					if (response.errorMsg == null)
					{
						response.errorMsg = 'Ajax Request error and no text. That is not so good.';
					}
					if (callbacks.onFailure(response.data, response.errorMsg) !== false)
					{
						response.errorMsg.dialog();
					}
					return;
				}

				callbacks.onFailure(response.data);
			},
			onException: function()
			{
				callbacks.onException(this);
			}
		})).send();
	},

	/**
	 * liefert die aktuelle ausrichtung der Seite
	 *
	 * @return string
	 */
	getDirection: function()
	{
		if (!this.direction)
		{
			this.direction = $(document.body).getStyle('direction').toLowerCase();
		}

		return this.direction;
	},

	/**
	 * insert a new script
	 *
	 * @param array|object|string script
	 *		src:			source
	 *		id:				(optional) script id
	 *		defer:			(optional) false
	 *		defaultUrl: 	(optional) true
	 *		onLoad:			(optional) callback Function
	 * @return node|bool
	 */
	insertScript: (function()
	{
		var scripts = [];

		/**
		 * wurde das script schon mal geladen?
		 *
		 * @return bool
		 */
		var isScriptLoaded = function(script)
		{
			if (scripts.length == 0)
			{
				$$('script[src]').each(function(loadedScript)
				{
					scripts.push(
					{
						src:		loadedScript.src,
						id:			loadedScript.id,
						defer:		loadedScript.defer,
						defaultURL:	false
					});
				});
			}

			return scripts.find(function(loadedScript)
			{
				return loadedScript.src == script.src;
			});
		};

		return function(script)
		{
			var $this = this;
			if (!script)
			{
				return;
			}
			if (script && script.$family && script.$family.name == 'array')
			{
				return script.each(function(addScript)
				{
					$this.insertScript(addScript);
				});
			}

			if (typeof script == 'string')
			{
				script = {
					src: script
				};
			}

			script.onLoad = script.onLoad || this.emptyFunction;

			if (isScriptLoaded(script))
			{
				script.onLoad(false);
				return true;
			}
			scripts.push(script);

			var element = new Element('script',
			{
				id:		(script.id ? script.id : undefined),
				src:	script.src,
				type:	'text/javascript',
				defer:	(script.defer ? true : false)
			});

			if (Browser.name == 'ie')
			{
				element.onreadystatechange = function()
				{
					if (element.readyState == 'loaded' || element.readyState == 'complete' || element.readyState == 4)
					{
						script.onLoad(true, element);
					}
				};
			}
			else
			{
				element.onload = script.onLoad.pass(true, element);
			}

			$(document.html).getElement('head').appendChild(element);

			return element;
		};
	})(),

	/**
	 * Window popup
	 *
	 * @param string url
	 * @param object options
	 * @param window
	 */
	popup: function(url, options)
	{
		options = options || {};

		return window.open(url, options.id || '_blank', $H(options).getKeys().inject([], function(params, key)
		{
			if (key != 'id')
			{
				if (typeOf(options[key]) == 'boolean')
				{
					options[key] = options[key] ? 'yes' : 'no';
				}
				params.push(key + '=' + options[key]);
			}

			return params;
		}).join(','), true);
	},

	/**
	 * fÃ¼hrt ein Toggle an den entsprechenden Elementen aus
	 *
	 * @param element displayElement
	 * @param element switchElement
	 * @return Travian
	 */
	toggleSwitch: function(displayElement, switchElement)
	{
		displayElement.toggleClass('hide');
		var mirrored = (switchElement.className.indexOf('Mirrored') >= 0);

		switchElement.toggleClass('switchClosed');

		if (mirrored) {
			switchElement.toggleClass('switchClosedMirrored');
		}

		switchElement.toggleClass('switchOpened');

		if (mirrored) {
			switchElement.toggleClass('switchOpenedMirrored');
		}

		return this;
	},

	/**
	 * Ã„ndert den Alt Text fÃ¼r Toggle Grafiken
	 *
	 * @param element | array displayElement
	 * @param string altTextClosed
	 * @param string altTextOpened
	 * @return Travian
	 */
	toggleSwitchDescription: function(switchElement, textClosed, textOpened)
	{
		if (typeOf(switchElement) == 'element')
		{
			switchElement = [switchElement];
		}
		switchElement.each (function (element)
		{
			if (element.hasClass('switchClosed'))
			{
				element.setTitle(textClosed);
			}
			else
			{
				element.setTitle(textOpened);
			}
		});
		return this;
	},

	/**
	 * HÃ¤ngt an ein bestimmtes DOM-Element ein Reihe von Mouse-Events
	 *
	 *  @param element contextElement
	 *  @param element eventElement
	 *  @return Travian
	 */
	addMouseEvents: function(contextElement, eventElement)
	{
		contextElement.addEvent('mouseenter', function()
		{
			eventElement.addClass('hover');
			eventElement.removeClass('click');
		});

		contextElement.addEvent('mouseleave', function()
		{
			eventElement.removeClass('hover');
			eventElement.removeClass('click');
		});

		contextElement.addEvent('mousedown', function()
		{
			eventElement.removeClass('hover');
			eventElement.addClass('click');
		});

		contextElement.addEvent('mouseup', function()
		{
			eventElement.addClass('hover');
			eventElement.removeClass('click');
		});

		return this;
	},
	/**
	 * Finde alle Buttons und binde Events
	 */
	findButtonsAndBindEvents: function(element)
	{
		if (typeof element === 'undefined')
		{
			var buttons = $$('button');
		}
		else
		{
			var buttons = element.select('button');
		}

		// Durchsucht jeden Button um hover und click events hinzuzufÃ¼gen
		buttons.each(function(element)
		{
			var button = element;

			/*
			 * Manche Buttons bekommen nicht direkt den background sondern ein Kindelement.
			 * Das wird durch die CSS Klasse 'backgroundElement' gekennzeichnet. Nach dieser Klasse wird jetzt gesucht.
			 */
			var backgroundElement = button.getElement('.addHoverClick');

			// Falls kein Kindelement mit der CSS Klasse 'image' gefunden wurde, wird der Button selbst verwendet.
			if (backgroundElement == null)
			{
				backgroundElement = button;
			}

			// Jetzt die ganzen Events an das Element hÃ¤ngen
			Travian.addMouseEvents(element, backgroundElement);
		});
	},

	/**
	 * Bugfix der fÃ¼r IE6-8 verwendet wird um Elemente anzuzeigen, die erst angezeigt werden,
	 * nachdem in der IE Developer Toolbar manuell irgend ein Style hinzugefÃ¼gt wird
	 */
	forceDisplay: function(elementToForce)
	{
		if (typeof elementToForce === 'undefined')
		{
			var elements = $$('.forceDisplayElement');
		}
		else
		{
			var elements = [
				elementToForce
			];
		}

		elements.each(function(element)
		{
			element.addClass('invisible');
			element.removeClass('invisible');
		});
	},

	/**
	 * TRAVIANIV-5563
	 * Anzeige eines Hinweises, dass diese Seiten noch nicht verfÃ¼gbar sind
	 */
	showComingSoonInfo: function(text)
	{
		text.dialog(
		{
			buttonOk: false
		});

		return false;
	},

    /**
     * Disables all buttons inside of elements with class 'disableButtonHandler'
     * when that element is hidden with display:none or visibility:hidden. Restores
     * original values when visible.
     * Needed for emulating same behavior across the browsers
     */
    adjustButtonDisableState: function() {
        $$('.disableButtonHandler').each(function(element) {
            if (element.getStyle('display') == 'none' || element.getStyle('visibility') == 'hidden') {
                element.getElements('button').each(function(button){
                    //olddisabled has higher priority in case that method is called multiple times
                    var value = button.get('olddisabled') == null ? button.get('disabled') : button.get('olddisabled') != "false";
                    button.set('olddisabled', value)
                        .set('disabled', true);
                });
            } else {
                element.getElements('button').each(function(button){
                    //sanity check
                    var oldDisabled = button.get('olddisabled');
                    if (oldDisabled != null) {
                        button.set('disabled', oldDisabled != "false");
                        //don't remove olddisabled in case that method is called multiple times
                    } else {
                        //should never go here but...
                        button.set('disabled', false); //enabled by default
                    }
                });
            }
        });
    },

    /**
     * Check if the game is loaded on mobile device
     */
    isMobile: function() {
        var check = false;

        var agent = navigator.userAgent||navigator.vendor||window.opera;

        if(/ipad|ipod|(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|windows nt.+touch|xda|xiino/i.test(agent)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(agent.substr(0,4)))
        {
            check = true
        }

        return check;
    },

	/**
	 * Parses the url to an object of parameters
	 * There is no custom magic in there, browser engine to do so is used
	 * @param {string} url
	 * @return {Object}
     */
	parseURL: function (url) {

		var parser = document.createElement('a'),
			searchObject = {};

		// Let the browser do the work
		parser.href = url;
		// Convert query string to object
		parser.search.substr(1).split('&').forEach(function(value) {
			var split = value.split('=');
			var key = decodeURIComponent(split[0]);
			if (key.length > 0) {
				searchObject[key] = split[1];
			}
		});

		return {
			protocol: parser.protocol,
			host: parser.host,
			hostname: parser.hostname,
			port: parser.port,
			pathname: parser.pathname,
			searchObject: searchObject,
			hash: parser.hash
		};
	},

	/**
	 * Composes back absolute URL to a string from the object that is returned by parseURL()
	 * @param {Object} url
	 * @returns {string}
     */
	composeURL: function (url) {

		var composedURL = url.protocol + "//" + url.host;
		if (url.port != "") {
			composedURL += ":" + port;
		}
		composedURL += this.composeURI(url);

		return composedURL;
	},

	/**
	 * Compose relative URI from the url object
	 * @param {Object} url
	 * @returns {string}
	 */
	composeURI: function(url) {
		var composedURI = url.pathname;
		var parameterSplitter = "?";
		for (var parameter in url.searchObject) {
			if (url.searchObject.hasOwnProperty(parameter)) {
				composedURI += parameterSplitter + parameter + "=" + url.searchObject[parameter];
				parameterSplitter = "&";
			}
		}
		composedURI += url.hash;

		return composedURI;
	}

};

window.addEvent('domAltered', function(element)
{
	Travian.findButtonsAndBindEvents(element);
});

window.addEvent('domready', function()
{
	Travian.findButtonsAndBindEvents();
});/**
 * Binding a namespaced event
 * Call as element.addNsEvent('event.namespace', function() {});
 *
 * @param name
 * @param fn
 * @returns {addNsEvent}
 */
function addNsEvent(name, fn) {
    // Get event type and namespace
    var split = name.split('.'),
        eventName = split[0],
        namespace = split[1];

    // Store the event by its full name including namespace
    this.bindCache = this.bindCache || {};

    if (this.bindCache[name]) {
        this.bindCache[name].push(fn);
    } else {
        this.bindCache[name] = [fn];
    }

    // Bind the function to the event
    this.addEvent(eventName, fn);

    return this;
}


/**
 * Unbinding a namespaced event
 * Call as element.removeNsEvent('event.namespace');
 *
 * @param name
 * @returns {removeNsEvent}
 */
function removeNsEvent(name) {
    // Unbind the specified event

    if (typeof this.bindCache === 'undefined' || !this.bindCache.hasOwnProperty(name)) {
        return this;
    }

    var eventName = name.split('.')[0],
        x = 0,
        fns = this.bindCache[name],
        fn;

    for (; fn = fns[x++];) {
        this.removeEvent(eventName, fn);
    }

    return this;
}

/**
 * Unbinding multiple namespaced events
 * Call as element.removeNsEvents('namespace');
 *
 * @param namespace
 * @returns {removeNsEvents}
 */
function removeNsEvents(namespace) {
    var x,
        fn,
        self = this;

    Object.each(this.bindCache, function (fns, name) {
        if (name.contains('.') && name.split('.').getLast() == namespace) {
            x = 0;
            for (; fn = fns[x++];) {
                self.removeEvent(name.split('.')[0], fn);
            }
        }
    });

    return this;
}

Element.implement({
    "addNamespaceEvent": addNsEvent,
    "removeNsEvent": removeNsEvent,
    "removeNsEvents": removeNsEvents
});

Window.implement({
    "addNamespaceEvent": addNsEvent,
    "removeNsEvent": removeNsEvent,
    "removeNsEvents": removeNsEvents
});

Document.implement({
    "addNamespaceEvent": addNsEvent,
    "removeNsEvent": removeNsEvent,
    "removeNsEvents": removeNsEvents
});Travian.Storage = (function()
{
	// IE userData Storage
	// see: http://msdn.microsoft.com/en-us/library/ms531424(VS.85).aspx
	var storageIE = null;

	//var fnOpenStorage = function()

	/**
	 * Persitance Storage eintrag lÃ¶schen
	 *
	 * @param bool persistence optional default false
	 * @param string key
	 */
	var fnClearStorage = function(persistence, key)
	{
		var storage = fnGetStorage(persistence);

		key = fnGetStorageKey(key);

		// kein storage fall back auf cookie
		if (storage === null)
		{
			//
		}
		// aus storage entfernen
		else
		{
			storage.removeItem(key);
		}
	};

	/**
	 * erstellt die Data Contanier mit entsprechenden Rand Informationen
	 *
	 * @param mixed data
	 * @param int cachingTime Zeit wie lange ein eintrag gÃ¼ltig ist
	 * @return object
	 */
	var fnCreateDataContainer = function(data, cachingTime)
	{
		return {
			data:			data,
			time:			(new Date()).getTime(),
			cachingTime:	cachingTime
		};
	};

	/**
	 * lÃ¤dt daten aus dem Storage im Browser
	 *
	 * @param bool persistence optional default false
	 * @param string key
	 * @return mixed data
	 */
	var fnGetFromStorage = function(persistence, key)
	{
		var storage = fnGetStorage(persistence);
		var storageData = null;

		key = fnGetStorageKey(key);

		// kein storage fall back cookie
		if (storage === null)
		{
			/*
			// Lesen aus IE userData
			// see: http://msdn.microsoft.com/en-us/library/ms531424(VS.85).aspx
			if (Browser.ie)
			{
				fnGetStorageForIE().load('oXMLBranch');
				storageData = fnGetStorageForIE().getAttribute(key);
			}
			// keine weitere MÃ¶glichkeit zu speichern
			// Cookies kÃ¶nnen zu groÃŸ werden
			else
			*/
			{
				return null;
			}
		}
		// aus storage
		else
		{
			storageData = storage.getItem(key);
		}

		// keine daten
		if (storageData == null || typeof storageData == 'undefined')
		{
			return null;
		}

		return JSON.decode(storageData);
	};

	/**
	 * liefert den entsprechende Storage
	 *
	 * @param bool persistence optional default false
	 * @return object
	 */
	var fnGetStorage = function(persistence)
	{
		var storageType = persistence ? 'localStorage' : 'sessionStorage';

		if (!window[storageType])
		{
			return null;
		}

		return window[storageType];
	};

	/**
	 * liefert ein Storage fÃ¼r IE
	 *
	 * @return element
	 */
	var fnGetStorageForIE = function()
	{
		if (storageIE === null)
		{
			storageIE = new Element('input',
			{
				type:	'hidden'
			}).setStyles(
			{
				behavior: 'url(#default#userData)'
			}).inject(document.body);
		}
		return storageIE;
	};

	/**
	 * erstellt einen passend Key damit sich die Keys nicht Ã¼berschneiden
	 *
	 * @param string key
	 * @return string
	 */
	var fnGetStorageKey = function(key)
	{
		return 'Travian.' + key;
	};

	/**
	 * speichert Daten im Storage ab
	 *
	 * @param bool persistence optional default false
	 * @param string key
	 * @param mixed data
	 */
	var fnSetToStorage = function(persistence, key, data)
	{
		var storage = fnGetStorage(persistence);
		var storageData = JSON.encode(data);

		key = fnGetStorageKey(key);

		// kein storage cookie fallback
		if (storage === null)
		{
			/*
			// Speichern in IE userData
			// see: http://msdn.microsoft.com/en-us/library/ms531424(VS.85).aspx
			if (Browser.ie)
			{
				fnGetStorageForIE().setAttribute(key, storageData);
				fnGetStorageForIE().save('oXMLBranch');
			}
			// keine weitere MÃ¶glichkeit zu speichern
			// Cookies kÃ¶nnen zu groÃŸ werden
			else
			*/
			{
				return null;
			}
		}
		// in storage
		else
		{
			storage.setItem(key, storageData);
		}
	};

	/**
	 * prÃ¼ft einen Data Container auf gÃ¼ltigkeit in bezug auf das Timeout
	 *
	 * @param Travian.Storage dataStore
	 * @param object dataContainer
	 * @return bool
	 */
	var fnTestDataContainerTimeout = function(storage, dataContainer)
	{
		var cachingTime = storage.cachingTime;

		if (typeof dataContainer.cachingTime != 'undefined' && dataContainer.cachingTime !== null)
		{
			cachingTime = dataContainer.cachingTime;
		}
		return dataContainer.time !== false && (new Date()).getTime() - dataContainer.time > cachingTime;
	};

	return {
		/**
		 * Zeit in Millisekunde, wielange Daten gÃ¼ltig sind, bis diese Invalide werden
		 *
		 * @var int
		 */
		cachingTime: 365 * 24 * 60 * 60 * 1000,

		/**
		 * entsprechenden eintrag aus dem Storage lÃ¶schen
		 *
		 * @param string key
		 * @param bool persistence optional default false
		 * @return Travian.Storage
		 */
		clear: function(key, persistence)
		{
			fnClearStorage(persistence, key);

			return this;
		},

		/**
		 * liest daten aus dem Storage
		 *
		 * @param string key
		 * @param bool persistence optional default false
		 * @return mixed
		 */
		get: function(key, persistence)
		{
			var dataContainer = fnGetFromStorage(persistence, key);

			if (dataContainer === null)
			{
				return null;
			}

			// timeout
			if (fnTestDataContainerTimeout(this, dataContainer) === true)
			{
				return null;
			}

			return dataContainer.data;
		},

		/**
		 * setzt daten in den Storage
		 *
		 * @param string key
		 * @param mixed data
		 * @param bool persistence optional default false
		 * @param int cachingTime Zeit wie lange ein eintrag gÃ¼ltig ist
		 * @return Travian.Storage
		 */
		set: function(key, data, persistence, cachingTime)
		{
			var dataContainer = fnCreateDataContainer(this, data, cachingTime);

			fnSetToStorage(persistence, key, dataContainer);

			return this;
		}
	};
})();/**
 * Tooltips
 */
Travian.Translation =
{
	/**
	 * alle TR Keys welche vorhanden sind
	 *
	 * @var object
	 */
	keys:
	{
	},

	/**
	 * fÃ¼gt einen oder mehrere TR Key mit Wert hinzu
	 *
	 * @param object|string key
	 * @param string value (optional)
	 * @return Travian.Translation
	 */
	add: function(key, value)
	{
		var object = {};
		if (typeof key != 'object')
		{
			object[key] = value;
		}
		else
		{
			object = key;
		}

		this.keys = Object.merge({}, this.keys, object);

		return this;
	},

	/**
	 * liefert den entsprechende TR Key
	 *
	 * @param string key
	 * @return string
	 */
	get: function(key)
	{
		return this.keys[key];
	},

	/**
	 * ersetzt in einem String alle TR Keys. Die TR Keys werden dabei wie mit Mootools substitute angegeben
	 * @param string text
	 * @param object optionalData [optional] key: value Object fÃ¼r weitere ersetzungen
	 * @return string
	 * @see http://mootools.net/docs/core/Native/String#String:substitute
	 */
	translate: function(text, optionalData)
	{
		var keys = null;

		// mit werten Ã¼bersetzen dann fÃ¼r jeden Key entsprechend die Werte parsen
		if (typeof optionalData == 'object')
		{
			keys = Object.append(Object.clone(this.keys), optionalData);
		}
		// einfach nur Ã¼bersetzen
		else
		{
			keys = this.keys;
		}

		return text.substituteWithoutReplacingUndefinedKeys(keys);
	}
};

/**
 * String um Ã¼bersetzen erweitern
 */
String.implement(
{
	/**
	 * Translate a Text
	 *
	 * @param object optionalData [optional] key: value Object fÃ¼r weitere ersetzungen
	 * @return string
	 */
	translate: function(optionalData)
	{
		return Travian.Translation.translate(this, optionalData);
	}
});/**
 * Tooltips
 */
Travian.Tips = (function()
{
	/**
	 * liefert die Title Information wie Titel und Text von einem String
	 *
	 * @param string string
	 * @return object|bool
	 */
	var fnTitleInformationFromString = function(string)
	{
		var content = {
			title:	'',
			text:	''
		};

		if (string == undefined) {
			return false;
		}

		var text = string.split('||');
		if (text.length == 1)
		{
			content.text = text[0];
		}
		else if (text.length == 2)
		{
			content.title = text[0];
			content.text = text[1];
		}
		else
		{
			return false;
		}
		return content;
	};

	/**
	 * Autoload function fÃ¼r entsprechende Element
	 *
	 * @param array elements
	 */
	var fnAutoload = function(elements)
	{
		// alle elemente mit Title attribute finden und mit Tip verpassen
		elements.each(function(element)
		{
			if (element.title != '')
			{
				var content = fnTitleInformationFromString(element.title);

				if (content === false)
				{
					return;
				}

				//if (Browser.firefox || Browser.ie7 || Browser.opera)
				{
					content.unescaped = true;
				}

				element.setTip(content).removeAttribute('title');
			}
		});
	};

	/**
	 * berechnet die korrekte position des Tooltips und setzt diese
	 *
	 * @param Travian.Tips tip
	 */
	var fnUpdateTooltipPosition = function(tip)
	{
		// element am mauszeiger ausrichten
		var size = window.getSize();
		var scroll = window.getScroll();

		var tipSize =
		{
			x: tip.element.offsetWidth,
			y: tip.element.offsetHeight
		};
		var position = Object.clone(tip.mousePosition);

		// versatz einrechnen
		position.x = tip.mousePosition.x + tip.options.offset.x;
		position.y = tip.mousePosition.y + tip.options.offset.y;

		// wenn der tooltip rechts rausstehen wÃ¼rde dann wird der Tip links von der Maus positioniert
		if ((position.x + tipSize.x - scroll.x) > size.x - tip.options.windowPadding.x)
		{
			position.x = tip.mousePosition.x - tip.options.offset.x - tipSize.x;
		}

		// wenn der tooltip unten rausstehen wÃ¼rde dann wird der Tip oberhalb von der Maus positioniert
		if ((position.y + tipSize.y - scroll.y) > size.y - tip.options.windowPadding.y)
		{
			position.y = tip.mousePosition.y - tip.options.offset.y - tipSize.y;
		}

		// wenn der Tooltip links raussteht dann auf 0 korrigieren
		if (position.x < scroll.x + tip.options.windowPadding.x)
		{
			position.x = scroll.x + tip.options.windowPadding.x;
		}
		// wenn der Tooltip oben raussteht dann auf 0 korrigieren
		if (position.y < scroll.y + tip.options.windowPadding.y)
		{
			position.y = scroll.y + tip.options.windowPadding.y;
		}

		tip.element.setPosition(position);
	};

	// auto load
	window.addEvent('domready', function()
	{
		Travian.Tip = new Travian.Tips();
		fnAutoload($$('[title!=""]'));
	});

	/**
	 * Umkapseln aller DOM verÃ¤ndernden Methoden um zu gewÃ¤hrleisten,
	 * dass die Tips initialisiert werden.
	 */
	Element.inject = Element.inject.wrap(function(proceed, elementInsert, element, where)
	{
		var result = proceed(elementInsert, element, where);

		if (typeof Travian.Tip !== 'undefined' && typeof this.select === 'function')
		{
			fnAutoload(this.select('[title!=""]'));
		}

		return result;
	});

	Element.prototype.inject = Element.prototype.inject.wrap(function(proceed, elementInsert, element, where)
	{
		var result = proceed(elementInsert, element, where);

		if (typeof Travian.Tip !== 'undefined' && typeof this.select === 'function')
		{
			fnAutoload(this.select('[title!=""]'));
		}

		return result;
	});

	Element.grab = Element.grab.wrap(function(proceed,  element, where, execScripts)
	{
		var result = proceed(element, where, execScripts);

		if (typeof Travian.Tip !== 'undefined' && typeof this.select === 'function')
		{
			fnAutoload(this.select('[title!=""]'));
		}

		return result;
	});

	Element.prototype.grab = Element.prototype.grab.wrap(function(proceed, element, where, execScripts)
	{
		var result = proceed(element, where, execScripts);

		if (typeof Travian.Tip !== 'undefined' && typeof this.select === 'function')
		{
			fnAutoload(this.select('[title!=""]'));
		}

		return result;
	});

	Element.insert = Element.insert.wrap(function(proceed, elementInsert, element, where)
	{
		var result = proceed(elementInsert, element, where);

		if (typeof Travian.Tip !== 'undefined' && typeof this.select === 'function')
		{
			fnAutoload(this.select('[title!=""]'));
		}

		return result;
	});

	Element.prototype.insert = Element.prototype.insert.wrap(function(proceed, property, value)
	{
		var result = proceed(property, value);

		if (typeof Travian.Tip !== 'undefined' && typeof this.select === 'function')
		{
			fnAutoload(this.select('[title!=""]'));
		}

		return result;
	});

	// umkapseln der set Funktion, damit wir alle Title finden
	Element.set = Element.set.wrap(function(proceed, property, value)
	{
		if (typeof property == 'string' && property == 'title')
		{
			this.setTitle(value);
			return this;
		}

		var result = proceed(property, value);

		if (typeof property == 'string' && property == 'html')
		{
			fnAutoload(this.select('[title!=""]'));
		}

		return result;
	});

	// umkapseln der Inject Funktion, damit wir alle Title finden
	// Element.Prototype -> IE
	[Element.Prototype, Element.prototype].each(function(elementPrototype)
	{
		if (!elementPrototype)
		{
			return;
		}

		elementPrototype.set = elementPrototype.set.wrap(function(proceed, property, value)
		{
			if (typeof property == 'string' && property == 'title')
			{
				this.setTitle(value);
				return this;
			}

			var result = proceed(property, value);

			if (typeof property == 'string' && property == 'html')
			{
				fnAutoload(this.select('[title!=""]'));
			}

			return result;
		});
	});

	Element.implement(
	{
		/**
		 * Tip setzen an einem Element
		 *
		 * @param object|string content {title, text, unescaped}
		 * @return element
		 */
		setTip: function(content)
		{
			if (typeof content == 'string')
			{
				var string = content;
				content = fnTitleInformationFromString(string);
				if (content === false)
				{
					content = string;
				}
			}
			Travian.Tip.set(this, content);

			return this;
		},

		/**
		 * Tip setzen an einem Element
		 *
		 * @param object|string content {title, text, unescaped}
		 * @return element
		 */
		setTipUnescaped: function(content)
		{
			if (typeof content == 'string')
			{
				var string = content;
				content = fnTitleInformationFromString(string);
				if (content === false)
				{
					content = string;
				}
			}

			content.unescaped = true;
			Travian.Tip.set(this, content);

			return this;
		},

		/**
		 * Title am Element setzten
		 *
		 * @param string title
		 */
		setTitle: function(title)
		{
			return this.setTip(title);
		}
	});

	return new Class(
	{
		Implements: [
			Options
		],

		/**
		 * Anzeigestatus
		 *
		 * @var string
		 */
		displayState: 'hide',

		/**
		 * Element, welches den Tooltip anzeigt
		 *
		 * @var element
		 */
		element: null,

		/**
		 * element bie welchem gerade angezeigt wird
		 *
		 * @var element
		 */
		elementCurrent: null,

		/**
		 * element in welchem der Title gepackt wird
		 *
		 * @var element
		 */
		elementTitle: null,

		/**
		 * element in welchem der Text gepackt wird
		 *
		 * @var element
		 */
		elementText: null,

		/**
		 * Letzter Text
		 *
		 * @var sttring
		 */
		lastText: '',

		/**
		 * Letzter Title
		 *
		 * @var sttring
		 */
		lastTitle: '',

		/**
		 * aktuell Position der Maus
		 *
		 * @var object
		 */
		mousePosition:
		{
			/**
			 * aktuell Position der Maus X Koordinate
			 *
			 * @var int
			 */
			x:	0,

			/**
			 * aktuell Position der Maus Y Koordinate
			 *
			 * @var int
			 */
			y:	0
		},

		/**
		 * options
		 *
		 * @var object
		 */
		options:
		{
			/**
			 * HTML Text welcher eingefÃ¼gt wird fÃ¼r den Tip Platzhalter sind
			 * {title} und {text} fÃ¼r die CSS Classes zum identifizieren der
			 * entsprechenden Container
			 *
			 * @var string
			 */
			html: '<div class="tip"><div class="tip-container"><div class="tl"></div><div class="tr"></div><div class="tc"></div><div class="ml"></div><div class="mr"></div><div class="mc"></div><div class="bl"></div><div class="br"></div><div class="bc"></div><div class="tip-contents"><div class="title {title}"></div><div class="text {text}"></div></div></div></div>',

			/**
			 * Delay in Millisekunden beim verstecken
			 *
			 * @var int
			 */
			hideDelay: 250,

			/**
			 * maximale prozentuale Tooltipbreite fÃ¼r den Content in Bezug auf body.width
			 *
			 * @var int
			 */
			maxWidthInPercent: 0.33,

			/**
			 * minimum with tooltip should sqeeze to, not less
			 * @var int
			 */
			minWidthInPixels: 200,

			/**
			 * offset zum Mauszeiger
			 *
			 * @var object {x, y}
			 */
			offset:
			{
				x: 16,
				y: 16
			},

			/**
			 * Delay in Millisekunden bis zur anzeigen
			 *
			 * @var int
			 */
			showDelay: 100,

			/**
			 * Allows you to reduce or expand the virtual size of the window for
			 * tip positioning. The tips will not be allowed to approach the
			 * edge of the window on any side based on this offset.
			 *
			 * @var object {x, y}
			 */
			windowPadding:
			{
				x: 10,
				y: 10
			},

			/**
			 * zIndex im DOM
			 *
			 * @var int
			 */
			zIndex: 10000
		},

		/**
		 * der Timer
		 *
		 * @var int
		 */
		timer: null,

		/**
		 * hides the tooltip
		 *
		 * @return Travian.Map.Tips
		 */
		hide: function()
		{
			if (this.displayState != 'hide')
			{
				this.displayState = 'hide';
				clearTimeout(this.timer);
				this.element.get('tween').cancel();
				this.timer = this.element.fade.delay(this.options.hideDelay, this.element, 'out');
			}

			return this;
		},

		/**
		 * Konstruktor
		 *
		 * @param object options
		 */
		initialize: function(options)
		{
			this.setOptions(options);
			this.render();
		},

		/**
		 * Rendering
		 *
		 * @return Travian.Tip
		 */
		render: function()
		{
			var $this = this;

			this.element = (new Element('div',
			{
				styles:
				{
					position:	'absolute',
					top:		0,
					left:		0,
					opacity:	0,
					zIndex:		this.options.zIndex
				}
			})).inject(document.body, 'bottom').set('html', this.options.html.substitute(
			{
				title:	'elementTitle',
				text:	'elementText'
			}));

			// child elements finden
			this.elementTitle = this.element.down('.elementTitle');
			this.elementText = this.element.down('.elementText');
			this.elementContainer = this.element.down('.tip-container');
			this.elementContents = this.element.down('.tip-contents');

			$(document.body).addEvents(
			{
				// beim bewegen Ã¼ber unseren container kann es sein, dass wir
				// content einblenden, anderen anzeigen oder ausblenden
				'mousemove': function(e)
				{
					$this.mousePosition.x = e.page.x;
					$this.mousePosition.y = e.page.y;

					if ($this.displayState != 'show')
					{
						return;
					}

					fnUpdateTooltipPosition($this);
				}
			});

			return this;
		},

		/**
		 * setzt einen Tip an ein Element
		 *
		 * @param element element
		 * @param object|string content {title, text, unescaped}
		 */
		set: function(element, content)
		{
			var $this = this;
			element = $(element);

			// die Content Tip information MUSS am element gespeichert werden,
			// da event stop im IE8 anscheinend nicht korrekt funktioniert und so
			// nicht der Content Ã¼berladen werden kann
			element._extendedTipContent = content;

			// wurde das element schon mit Tip Events versehen?
			if (!element._extendedTip)
			{
				// markieren dass dieses Element schon mit Tip Events versehen wurde,
				// damit die Events nicht doppelt registriert werden.
				element._extendedTip = true;
				element.addEvents(
				{
					mouseover: function(e)
					{
						$this.elementCurrent = element;
						$this.show(element._extendedTipContent);
						// Event Stop sollte nun nicht mehr nÃ¶tig sein
						// da doppeltes Eventhandling mit element._extendedTip abgefangen wird
						// e.stop();
					},

					mouseout: function(e)
					{
						$this.elementCurrent = null;
						$this.hide();
						// Event Stop sollte nun nicht mehr nÃ¶tig sein
						// da doppeltes Eventhandling mit element._extendedTip abgefangen wird
						// e.stop();
					}
				});
			}

			// hilfsfunktion um den neuen Tip schnell zu setzen
			element.setTitle = function(newContent)
			{
				element._extendedTipContent = newContent;
				if ($this.elementCurrent == element)
				{
					$this.show(element._extendedTipContent);
				}
			};

			return this;
		},

		/**
		 * shows the tooltip
		 *
		 * @param object|string content {title, text, unescaped}
		 * @return Travian.Tips
		 */
		show: function(content)
		{
			if (typeof content == 'string')
			{
				content = {
					title:		'',
					text:		content,
					unescaped:	false
				};
			}

			// leer soll aber null sein
			if (!content.text && !content.title)
			{
				this.hide();
				return this;
			}

			this.updateContent(content);

			// Status
			if (this.displayState != 'show')
			{
				this.displayState = 'show';
				clearTimeout(this.timer);
				this.element.get('tween').cancel();
				this.timer = this.element.fade.delay(this.options.showDelay, this.element, 'in');
			}

			return this;
		},

		/**
		 * aktualisiert den Content
		 *
		 * @param object|string contentToUpdate {title, text, unescaped}
		 * @return Travian.Tips
		 */
		updateContent: function(contentToUpdate)
		{
			var content = Object.clone(contentToUpdate);
			var widthForContents = null;

			if (typeof content.title == 'undefined' || !content.title)
			{
				content.title = '';
			}

			if (typeof content.text == 'undefined' || !content.text)
			{
				content.text = '';
			}

			content.title = content.title.translate();
			content.text = content.text.translate();

			// hat sich der Text && || Title geÃ¤ndert mÃ¼ssen wir was anpassen
			if (this.lastText != content.text || this.lastTitle != content.title)
			{
				if (typeof content.unescaped == 'undefined' || content.unescaped !== true)
				{
					content.title = content.title.unescapeHtml();
					content.text = content.text.unescapeHtml();
				}
				this.elementTitle.set('html', content.title);
				if (content.title)
				{
					this.elementTitle.show();
				}
				else
				{
					this.elementTitle.hide();
				}

				this.elementText.set('html', content.text);
				if (content.text)
				{
					this.elementText.show();
				}
				else
				{
					this.elementText.hide();
				}

				// Resets the element to occupy as much width as it wants
				this.elementContents.setStyles(
				{
					wordBreak: 'normal',
					wordWrap: 'normal',
					whiteSpace: 'nowrap',
					width: 'auto'
				});

				// Calculate the width we want from this element based on settings limits and the current width it has
				var limitWidthOfToolTipContent = Math.max(Math.floor($(document.body).getSize().x * this.options.maxWidthInPercent), this.options.minWidthInPixels);
				// If the element is wider than we want it to be
				if (this.elementContents.getSize().x > limitWidthOfToolTipContent) {
					// set the width to the limit
					widthForContents = limitWidthOfToolTipContent;
				} else {
					// set the width to the real width, and also work-around broken browsers which cannot determine the width
					widthForContents = (this.elementContents.getSize().x > 0) ? this.elementContents.getSize().x : this.options.minWidthInPixels;
				}

				// For some reason some browsers report the width of the fully unrestricted element to be this,
				// but then set back to that exact width, the element becomes too narrow for its content and the content is split
				// Adding just one pixel helps
				widthForContents++;
				// Apply the properties
				this.elementContents.setStyles(
				{
					whiteSpace: 'normal',
					width: widthForContents
				});
				// Check if the contents are still wider than we set, this means there is some huge non-breakable word. Brake it brutally.
				if (this.elementText.getSize().x > widthForContents) {
					this.elementContents.setStyles(
					{
						wordWrap: 'break-word',
						wordBreak: 'break-all'
					});
				}

				// Positionen aktualisieren
				fnUpdateTooltipPosition(this);

				// neue werte Ã¼bernehmen
				this.lastText = content.text;
				this.lastTitle = content.title;
			}
			return this;
		},

        /**
         * Refreshing the tips (useful for loaded html)
         */
        refresh: function()
        {
            fnAutoload($$('[title!=""]'));
        }
	});
})();// Standard Texte definieren
Travian.Translation.add(
{
	'allgemein.ok': 'ok',
	'allgemein.cancel': 'cancel'
});

/**
 * Klasse um (modale) Dialoge zu Ã¶ffnen
 *
 * Es gibt unterschiedliche Wege Dialoge zu Ã¶ffnen:
 *
 * Beispiel 1 - Standard Dialog:
 *
 * var d = new Travian.Dialog();
 * d.setContent('foo');
 * d.show();
 *
 * Beispiel 2 - Dialog aus einem String:
 *
 * 'foo'.dialog();
 *
 * Beispiel 3 - Dialog aus einem Element:
 *
 * $('foo').dialog();
 *
 * Beispiel 4 - Ajax Dialog:
 *
 * var d = new Travian.Dialog.Ajax( { data: { cmd: 'foo' } } )
 *
 *
 * Alle Dialoge werden beim WindowManager registriert und kÃ¶nnen Ã¼ber
 * den optionalen context parameter behandelt werden.
 * Damit lassen sich auch Fenster gruppieren und als gruppe behandeln.
 *
 */
Travian.Dialog = new Class(
{
	Implements: [Options, Events],

	/**
	 * Button Templates fÃ¼r die Ausgabe
	 *
	 * @var object
	 */
	buttonTemplates:
	{
		button: ''
	},

	/**
	 * Dialog Typ Konstante
	 */
	DIALOG_TYPE_MODAL: 'modal',

	/**
	 * Dialog Typ Konstante
	 */
	DIALOG_TYPE_NONMODAL: 'nonmodal',

	/**
	 * Options
	 *
	 * @var object
	 */
	options:
	{
       	/**
		 * zusÃ¤tzliche CSS Class fÃ¼r den Dialog Node
		 *
		 * @var string
		 */
		cssClass: 'white',

		/**
		 * Button Okay anzeigen
		 *
		 * @var bool
		 */
		buttonOk: true,

		/**
		 * Offen halten beim OK
		 * @var bool
		 */
		keepOpen: false,

		/**
		 * Text fÃ¼r den Button Okay
		 *
		 * @var string
		 */
		buttonTextOk: null,

        /**
         * Function for the Button
         *
         * @var function
         */
        buttonCloseOnClickOk: false,

		/**
		 * Cancel Button anzeigen
		 *
		 * @var bool
		 */
		buttonCancel: true,

		/**
		 * Text fÃ¼r den Abbrechen button
		 *
		 * @var string
		 */
		buttonTextCancel: null,

		/**
		 * dieses Element mit dem Input Focus nach dem Rendern versehen
		 *
		 * @var element|string
		 */
		elementFocus: 'dialogButtonOk',

		/**
		 * maximale prozentuale Tooltipbreite fÃ¼r den Content in Bezug auf body.width
		 *
		 * @var int
		 */
		maxWidthInPercent: 0.75,

		/**
		 * Offset for the header added in some custom dialogs. The offset is added to the Dialog's height while calculating
		 * the window's center position
		 *
		 * @var int In pixels
		 */
		topHeaderOffset: 0,

		/**
		 * Falls der Dialog grÃ¶ÃŸer ist als der Body, wird er anhand von maxWIdthInPercent geresized
		 */
		resizeDialogIfOverflow: true,

		/**
		 * relative zu diesem Element zentriert anzeigen
		 *
		 * @var element|string
		 */
		relativeTo: null,

		/**
		 * Dialog soll mitscrollen
		 *
		 * @var bool
		 */
		scroll: true,

		/**
		 * optionaler Dialog Titel
		 *
		 * @var string
		 */
		title: null,

		/**
		 * ESC Taste fÃ¼r Cancel verwenden
		 *
		 * @var string
		 */
		useEscKey: true,

		/**
		 * submitMethode fÃ¼r die Form im Dialog
		 * wenn NULL dann kein Submit
		 * wenn POST || GET dann Submit
		 *
		 * @var string
		 */
		submitMethod: null,

		/**
		 * submit Url fÃ¼r die Form im Dialog
		 * wird nur verwendet wenn submitMethod != NULL
		 *
		 * @var string
		 */
		submitUrl: null,

		/**
		 * Beim Klick neben den Dialog, den Dialog schlieÃŸen
		 *
		 * @var bool
		 */
		overlayCancel: true,

		/**
		 * Ob der Dialog verschiebbar ist.
		 */
		draggable: false,

		/**
		 * Ob ein graues Overlay den Hintergrund ausbleden soll.
		 */
		enableBackground: true,

		/**
		 * Dialog speichern, falls die Seite gewechselt/neu geladen wird
		 * Funktioniert nur bei Ajax Dialogen
		 */
		saveOnUnload: false,

		/**
		 * Position des Dialogs
		 * Wird beim Draggen verÃ¤ndert.
		 * Kann Initial gesetzt werden.
		 */
		dragPosition: null,

		/**
		 * Das Overlay im Hintergrund wird durch diese Eigenschaft
		 * besonders dunkel dargestellt.
		 */
		darkOverlay: false,

		/**
		 * position of dialogs can be saved
		 * dialogs with same id share the same position
		 */
		savePositionForSession:
		{
			preferenceKey: null
		},

		/**
		 * Typ des Dialogs
		 *
		 * Siehe Dialog Typ Konstanten
		 */
		type: null,

		/**
		 * Verhindern, dass der Dialog in den Vordergrund gebracht wird,
		 * wenn er angeklickt wurde
		 */
		enableBringToFront: true,

		/**
		 * Wenn True, wird der Dialog nur dann erneut geÃ¶ffnet, wenn die URL gleich geblieben ist
		 */
		stickToUrlOnRestore: false,

		/**
		 * Herkung des Dialogs
		 */
		dialogOrigin: null,

		/**
		 * Soll das Info / Answers Icon angezeigt werden.
		 * GÃ¼ltige Werte sind entweder Strings als URL oder eine Funktion
		 */
		infoIcon: null,

		/**
		 * Label fÃ¼r das Info / Answers Icon
		 */
		buttonTextInfo: null,

		/**
		 * Prevents the Forms Dialog from being submitted
		 */
		preventFormSubmit: false,

		/**
		 * Wenn false, bleibt das Element im DOM erhalten
		 */
		destroyElement: true,

		/**
		 * Animation
		 *
		 * @var object
		 */
		fx:
		{
			type: 'tween',
			open: 1,
			close: 0,
			options:
			{
				duration: 400
			}
		}
		/*,
		 onOpen: function(Dialog, DOM Node Content)
		 onClose: function(Dialog, DOM Node Content)
		 onShow: function(Dialog, DOM Node Content)
		 onHide: function(Dialog, DOM Node Content)
		 onCancel: function(Dialog, DOM Node Content)
		 onOkay: function(Dialog, DOM Node Content)
		 onRender: function(Dialog, DOM Node Content)
		 */
	},

	/**
	 * Enabled das Formular.
	 * Sinnvoll wenn nach einem aufgetreten Fehler der
	 * Dialog noch offen bleiben und wieder benutzbar sein soll.
	 *
	 * @param bool status true: disablet, false: enablet
	 *
	 * @return Travian.Dialog
	 */
	toggleFormState: function (status)
	{
		this.buttonOk.toggleClass('disabled', status).disabled = status;
		return this;
	},

	/**
	 * Disablet das Formular.
	 *
	 * @return Travian.Dialog
	 */
	disableForm: function ()
	{
		return this.toggleFormState(true);
	},

	/**
	 * Enablet das Formular.
	 *
	 * @return Travian.Dialog
	 */
	enableForm: function ()
	{
		return this.toggleFormState(false);
	},

	initialize: function (options)
	{
		if(typeof this.options.savePositionForSession.position === 'undefined')
		{
			this.options.savePositionForSession.position = null
		}
		this.options.fx.options.property = 'opacity';

		if (typeof Travian.Templates.ButtonTemplate != 'undefined')
		{
			this.buttonTemplates.button = Travian.Templates.ButtonTemplate;
		}

        this.setOptions(options);

        /**
		 * Definiere Standardverhalten fÃ¼r Dialog Typen
		 * Der Typ muss explizit gesetzt werden, dann werden die Optionen Ã¼berschrieben
		 */
		if (this.options.type == this.DIALOG_TYPE_NONMODAL)
		{
			this.options.enableBringToFront = true;
			this.options.enableBackground = false;
			this.options.draggable = true;
		}
		if (this.options.type == this.DIALOG_TYPE_MODAL)
		{
			this.options.enableBringToFront = false;
			this.options.enableBackground = true;
			this.options.draggable = false;
		}

		/**
		 * Speichere die Herkunft des Dialogs.
		 * Dies wird beim Restore ausgewertet wenn die Option stickToUrlOnRestore auf true gesetzt wurde
		 */
		if (!this.options.dialogOrigin)
		{
			this.options.dialogOrigin = location.pathname;
		}

		this.options.relativeTo = this.options.relativeTo || document.body;
		this.options.relativeTo = $(this.options.relativeTo);

		if (this.options.buttonTextOk == null)
		{
			this.options.buttonTextOk = Travian.Translation.get('allgemein.ok');
		}

		if (this.options.buttonTextCancel == null)
		{
			this.options.buttonTextCancel = Travian.Translation.get('allgemein.cancel');
		}

		this.render();

		if (typeof Travian.WindowManager != 'undefined')
		{
			Travian.WindowManager.register(this);
		}
	},


	/**
	 * Returns the corrected position of dialogue, so that the drag bar is always in the clickable area
	 *
	 * @param {object} position
	 */
	correctDialogPosition: function(position)
	{
		var windowDimensions = Travian.WindowManager.getWindowDimensions(),
			dialogWidth = this.wrapper.clientWidth,
			minimumVisible = 200,
			x = position.x,
			y = position.y;

		// correct position
		if (x < 0)
		{
			x = 0;
		}
		else if (x + dialogWidth < minimumVisible)
		{
			x = minimumVisible - dialogWidth;
		}
		else if (x + minimumVisible > windowDimensions.width)
		{
			x =  windowDimensions.width - minimumVisible;
		}

		if (y  < 0)
		{
			y = 0;
		}
		else if (y + minimumVisible >  windowDimensions.height)
		{
			y = windowDimensions.height - minimumVisible;
		}

		return {
			x: x,
			y: y
		};
	},

	render: function ()
	{
		var $this = this;
        var body = document.body;

		// Button bauen
		var buttonElement = new Element('div', {html: this.buttonTemplates.button});
		var button = buttonElement.getFirst();

		if (this.options.savePositionForSession.preferenceKey !== null)
		{
			var savedPosition = Travian.Game.Preferences.get(this.options.savePositionForSession.preferenceKey);
			if (savedPosition !== null) {
				savedPosition = JSON.decode(savedPosition);
				this.options.savePositionForSession.position = savedPosition.position;
			}
		}

		if (typeof button == 'undefined' || !button)
		{
			/**
			 * Das Markup des Buttons wird im Backend generiert und
			 * zu Travian.Templates hinzugefÃ¼gt. Wenn das Markup nicht
			 * generiert wurde kommt es zu dieser Exception, da ansonsten
			 * diverse Browser crashen.
			 */
			throw('Button for Dialog must not be empty.');
		}

		button.addClass('green');
		button.addClass('ok');
		button.addClass('dialogButtonOk');

		button.setAttribute('type', 'submit');

		// content container beziehen
		var buttonContent = buttonElement.getElement('div[class=button-content]');

		// buttontext hinzufÃ¼gen
		buttonContent.insert(new Element('div').addClass('text'));

		var stylesObj = {
			position: 'absolute'
		};

		stylesObj.opacity = 0;

		this.wrapper = new Element('div',
		{
			styles: stylesObj,
			class: 'dialogWrapper'
		});
        this.wrapper.innerHTML = '<div class="dialog ' + this.options.cssClass + '"><div class="dialog-container"><div class="dialog-background-tl"></div><div class="dialog-background-tr"></div><div class="dialog-background-tc"></div><div class="dialog-background-ml"></div><div class="dialog-background-mr"></div><div class="dialog-background-mc"></div><div class="dialog-background-bl"></div><div class="dialog-background-br"></div><div class="dialog-background-bc"></div><div class="dialog-contents"><form action="?" method="get" accept-charset="UTF-8"><div class="dialog-dragbar"><div class="dragbar-inner-left"></div><div class="dragbar-inner-mid"></div><div class="dragbar-inner-right"></div></div><div class="iconButton small info"></div><div id="dialogCancelButton" class="iconButton small cancel"></div><div class="title"></div><div class="content" id="dialogContent"></div><div class="buttons">' + buttonElement.get('html') + '</div></form></div></div></div>';
        body.insertBefore(this.wrapper, body.firstChild);

		window.addNsEvent('resize.Dialog', function() {
			if($this.wrapper.isVisible()) {
				$this.updatePosition(200, true);
			}
		});

		this.content = this.wrapper.down('.content');
		this.title = this.wrapper.down('.title');
		this.setTitle(this.options.title);

		this.elementContainer = this.wrapper.down('.dialog-container');
		this.elementContents = this.wrapper.down('.dialog-contents');
		this.infoButton = this.wrapper.down('.info');
		this.dialogDragbar = this.wrapper.down('.dialog-dragbar');

		/**
		 * Info Icon mit funktionen belegen
		 * Wenn infoIcon ein String ist, wird er wie eine URL behandelt und onClick aufgerufen
		 * Ist infoIcon eine Funktion, wird diese aufgerufen
		 */
		if (this.options.infoIcon)
		{
			this.setInfoIcon(this.options.infoIcon);
		}

		if ($this.options.draggable)
		{
			this.wrapper.addClass('dragWrapper');
			new Drag.Move(this.wrapper,
			{
				droppables: this.title,
				handle: this.dialogDragbar,
				onDrop: function (elem)
				{
					$this.options.dragPosition = $this.correctDialogPosition(elem.getPosition());
					if ($this.options.savePositionForSession.preferenceKey !== null)
					{
						$this.options.savePositionForSession.position = $this.correctDialogPosition(elem.getPosition());
					}
				},
				onDrag: function (elem) {
					elem.setPosition($this.correctDialogPosition(elem.getPosition()));
				}
			});
			this.title.addClass('drag');
		}

		/**
		 * Event setzen um den Dialog onClick in den Vordergrund zu bringen
		 * Modal Windows dÃ¼rfen dieses Verhalten nicht aufweisen.
		 */
		if (this.options.enableBringToFront)
		{
			this.wrapper.addEvent('mousedown', function (elem)
			{
				$this.bringToFront();
			});
		}

		this.form = this.wrapper.down('form').addEvent('submit', function (e)
		{
			if ($this.form.disabled || $this.options.preventFormSubmit)
			{
				e.stop();
				return;
			}

			$this.disableForm();
			$this.fireEvent('okay', [$this, $this.content]);
			if ($this.options.keepOpen === false)
			{
				$this.close();
			}
			if (!$this.options.submitMethod)
			{
				e.stop();
			}
		});
		this.form.disabled = false;
		if (this.options.submitMethod)
		{
			this.form.setAttribute('method', this.options.submitMethod);
			if (this.options.submitUrl)
			{
				this.form.setAttribute('action', this.options.submitUrl);
			}
		}

		// OK Button
		this.buttonOk = this.wrapper.down('button.ok');
		if (this.options.buttonOk === false)
		{
			this.buttonOk.hide().up('.buttons').hide();
		}
		this.buttonOkText = this.wrapper.down('button.ok .text');
		if (this.buttonOkText)
		{
			this.buttonOkText.set('html', this.options.buttonTextOk);
		}
		else
		{
			this.buttonOk.setTitle(this.options.buttonTextOk);
		}

        if (this.options.buttonCloseOnClickOk)
        {
            this.wrapper.down('button.ok').addEvent('click', function (e)
            {
                $this.fireEvent('cancel', [$this, $this.content]);
                $this.close();
            });
        }

		// Cancel Button
		this.buttonCancel = this.wrapper.down('.cancel').addEvent('click', function (e)
		{
			$this.fireEvent('cancel', [$this, $this.content]);
			$this.close();
		});
		if (this.options.buttonCancel == false)
		{
			this.buttonCancel.hide();
		}

		this.buttonCancelText = this.wrapper.down('.cancel .text');
		if (this.buttonCancelText)
		{
			this.buttonCancelText.set('html', this.options.buttonTextCancel);
		}
		else
		{
			this.buttonCancel.setTitle(this.options.buttonTextCancel);
		}

		this.fireEvent('render', [this, this.content]);

		// Add the fade in/out effects if no other effect is defined
		if (!this.fx) {
			this.fx = this.options.fx.type == 'morph'
				? new Fx.Morph(this.wrapper, this.options.fx.options)
				: new Fx.Tween(this.wrapper, this.options.fx.options);
		}

		this.fx.addEvent('complete', function ()
		{
			if ($this.open && $($this.options.elementFocus))
			{
				try
				{
					$($this.options.elementFocus).focus();
				}
				catch (e)
				{
				}
			}
			$this.fireEvent($this.open ? 'show' : 'hide', [$this, $this.content]);
			if (!$this.open)
			{
				$this.dispose();
			}
		});

		if ($this.options.enableBackground)
		{
			this.overlay = new Overlay(document.body,
			{
				onClick: function ()
				{
					if ($this.options.overlayCancel)
					{
						$this.fireEvent('cancel', [$this, $this.content]);
						$this.close();
					}
				},
				opacity: ($this.options.darkOverlay) ? 0.8 : 0.3,
				duration: this.options.fx.options.duration
			});
		}

		this.bringToFront();
	},

	/**
	 * Aktualisiert die Informationen des Info- / Answers-Buttons
	 *
	 * @param object options
	 *
	 * @return this
	 */
	updateInfoButton: function(options)
	{
		this.setOptions(options);

		if (this.options.infoIcon)
		{
			this.setInfoIcon(this.options.infoIcon);
		}

		return this;
	},

    /**
     * Either displays or hides the OK button
     * @param {bool} visible (true/null for showing / false for hiding)
     */
    displayButtonOk: function(visible)
    {
        if (typeof visible === 'undefined' || visible == null || visible == true)
        {
            this.buttonOk.show().up('.buttons').show();
        }
        else {
            this.buttonOk.hide();
        }
    },

	setContent: function (content, elementFocus)
	{
		var widthOfBody = null;
		var widthOfDialogContent = null;

		this.content.empty();

		this.content.insert({bottom: content});

		// Check whether the content has a larger width than x% of the body, then reduce accordingly width
		widthOfBody = $(document.body).getSize().x;
		widthOfDialogContent = this.elementContents.getSize().x;
		if (this.options.resizeDialogIfOverflow && Math.floor(widthOfBody * this.options.maxWidthInPercent) < widthOfDialogContent)
		{
			this.elementContainer.setStyles(
			{
				width: Math.floor(widthOfBody * this.options.maxWidthInPercent)
			});
		}

		// Focus Element
		if (elementFocus) {
			this.options.elementFocus = elementFocus;
		}
		if ($(this.options.elementFocus)) {
			(function () {
				try {
					$(this.options.elementFocus).focus();
				} catch (e) { }
			}).delay(50);
		}

		this.updatePosition();

		window.fireEvent('domAltered', this.wrapper);

		return this;
	},

	setTitle: function (title)
	{
		this.options.title = title;
		this.title.set('html', this.options.title);
		if (!this.options.title)
		{
			this.title.hide();
		}
		return this;
	},

	/**
	 * Calculate the position of the window
	 */
	calculatePosition: function () {
		var scroll = {
			x: 0,
			y: 0
		};
		var bodySize = $(document.body).getSize();

		if (this.wrapper.getStyle('position') != 'fixed' && document.body == this.options.relativeTo) {
			scroll = $(document.body).getScroll();
		}

		var elementSize = this.wrapper.getDimensions({computeSize: true});

		var sizeRelative = $(this.options.relativeTo).getSize();
		var positionRelative = $(this.options.relativeTo).getPosition();
		//Use window.innerWidth and -Height (if supported) instead of sizeRelative as
		//  the last doesn't respond to zooming on mobile devices.
		if (typeof window.innerWidth !== typeof undefined && positionRelative.x == 0) {
			sizeRelative.x = window.innerWidth;
		}
		if (typeof window.innerHeight !== typeof undefined && positionRelative.y == 0) {
			sizeRelative.y = window.innerHeight;
		}

		//for devices that give the scroll same as the relative position (like WP8), drop the
		//  relative position value from the calculation of the dialog position
		if (navigator.userAgent.match(/Windows Phone/i)) {
			positionRelative.x = 0;
			positionRelative.y = 0;
		} else {
			positionRelative.x = this.checkValue(positionRelative.x);
			positionRelative.y = this.checkValue(positionRelative.y);
		}

		var position = {
			left: scroll.x + positionRelative.x + sizeRelative.x / 2 - elementSize.width / 2,
			top: scroll.y + positionRelative.y + sizeRelative.y / 2 - elementSize.height / 2
		};

		/*
		 * if dialog height > viewport height the dialog would then start at the very top of your viewport
		 * @see http://jira.muc.traviangames.lan/browse/TRAIVBXXIV-3019 for details
		 * +40 pixels here to fix the shop dialog that has a negative margin of the tab menu
		 */
		if ((elementSize.height + this.options.topHeaderOffset) > sizeRelative.y) {
			position.top = scroll.y + positionRelative.y + 40;
			//if position was fixed then change it to absolute so the dialog can be scrolled with the contents
			if (this.wrapper.getStyles('position').position == "fixed") {
				this.wrapper.setStyles({position: "absolute"});
			}
		}

		position.left = this.checkValue(position.left, 5);
		position.top = this.checkValue(position.top, 40);

		// if RTL we must check the right edge
		if (Travian.getDirection() == 'rtl' && (position.left + elementSize.width) > bodySize.x) {
			position.left = bodySize.x - elementSize.width - 5;
		}

		return position;
	},

	/**
	 * Check if a value is negative and returns zero or a default value
	 *
	 * @param value
	 * @param defaultValue
	 * @returns {int}
	 */
	checkValue: function (value, defaultValue) {
		return (value < 0) ? (defaultValue || 0) : value;
	},

	/**
	 *
	 * @param {int} smoothMovementDuration
	 * @param {bool} force
	 */
	updatePosition: function (smoothMovementDuration, force)
	{
		/**
		 * sets the width of the dragbar - some kind of IE hack
		 */
		var dragbarWidth = this.elementContents.getWidth();
		this.dialogDragbar.setStyles({width: dragbarWidth + 20});
		var dragBarInnerMid = this.dialogDragbar.down('.dragbar-inner-mid');

		if(dragBarInnerMid) {
			dragBarInnerMid.setStyles({width: dragbarWidth});
		}

		if(this.options.savePositionForSession.preferenceKey !== null && this.options.savePositionForSession.position !== null && (typeof force == 'undefined' || !force))
		{
			this.setPosition(this.options.savePositionForSession.position);
		}
		else
		{
			/**
			 * Falls eine Position in den Options gesetzt wurde,
			 * wird das Fenster verschoben
			 */
			if (this.options.dragPosition && typeof this.options.dragPosition.x != 'undefined' && typeof this.options.dragPosition.y != 'undefined')
			{
				this.setPosition(this.options.dragPosition);
			}
			else
			{
				var position = this.calculatePosition();
				this.setPosition({x: position.left, y: position.top}, smoothMovementDuration);
			}
		}
	},

	show: function() {
		var $this = this;

		this.open = true;
		this.fireEvent('open', [this, this.content]);
		this.updatePosition();
		this.fx.start(this.options.fx.open);
		if (this.overlay) {
			this.overlay.open();
		}

		if($this.buttonOk && ($this.options.buttonTextOk == Travian.Translation.get('allgemein.ok')))
		{
			if(!Travian.isMobile())
			{
				try {
					$($this.buttonOk).focus();
				} catch (exception) {}
			}
		}

		if (this.options.useEscKey) {
			// Add event for the esc key
			document.id(document.body).addEvent('keydown', function (e) {
				if (e.key == 'esc') {
					$this.close();
				}
			});
		}
		return this;
	},

	/**
	 * Verstecke Fenster
	 * Der Status geht beim wiederherstellen verloren!
	 */
	hide: function()
	{
		this.wrapper.hide();
		this.overlay.overlay.hide();
	},

	/**
	 * Zeige das versteckte Fenster
	 * Der Status geht beim wiederherstellen verloren!
	 */
	unhide: function()
	{
		this.wrapper.show();
		this.overlay.overlay.show();
	},

	close: function ()
	{
		this.open = false;

		if (typeof Travian.WindowManager !== 'undefined')
		{
			Travian.WindowManager.unregister(this);
		}

		this.fireEvent('close', [this, this.content]);

		this.fx.start(this.options.fx.close);

		if (this.overlay)
		{
			this.overlay.close();
			this.overlay.overlay.hide();
			this.dispose();
		}

		if (this.options.savePositionForSession.preferenceKey !== null)
		{
			Travian.Game.Preferences.set(this.options.savePositionForSession.preferenceKey, JSON.encode(this.options.savePositionForSession), false);
		}

		Travian.Tip.hide();
		window.removeNsEvent('resize.Dialog');

		return this;
	},

	dispose: function ()
	{
		if (typeof Travian.WindowManager != 'undefined')
		{
			Travian.WindowManager.unregister(this);
		}
		if (this.options.destroyElement == true)
		{
			this.wrapper.destroy();
		}
		if (this.overlay)
		{
			this.overlay.overlay.destroy();
		}
	},

	toElement: function ()
	{
		return this.wrapper;
	},

    /**
     * Sets the position of the window
	 *
	 * @param {Object} position
	 * @param {int} duration
     */
	setPosition: function (position, duration) {
		if (typeof duration !== 'undefined' && duration !== null) {
			this.wrapper.set('morph', {
				duration: duration,
				transition: Fx.Transitions.Sine.easeOut
			});
			this.wrapper.morph({
				left: position.x,
				top: position.y
			});
		} else {
			this.wrapper.setStyles(
				{
					left: position.x,
					top: position.y
				});
		}

		return position;
	},

    /**
     * Sets the position of the window with further styles
     */
    setPositionExtended: function (position)
    {
        this.wrapper.setStyles(
            {
                left: position.x,
                top: position.y,
                marginLeft: position.marginLeft + 'px',
                marginTop: position.marginTop + 'px'
            });
        return position;
    },

    /**
	 * Gibt zurÃ¼ck, ob der Dialog ein Ajax Dialog ist oder nicht
	 * @return {Boolean}
	 */
	isAjax: function ()
	{
		return false;
	},

	/**
	 * Stub - Der Ajax Dialog lÃ¤dt mit dieser Methode seinen Inhalt neu
	 */
	reload: function ()
	{
	},

	/**
	 * Stellt sicher, dass der angeklickte Dialog in den Vordergrund kommt
	 */
	bringToFront: function ()
	{

		if (typeof Travian.WindowManager == 'undefined')
		{
			return false;
		}

		if (Travian.WindowManager.getCurrentZIndex() == this.wrapper.getStyle('zIndex'))
		{
			return false;
		}

		var newZIndex = Travian.WindowManager.getZIndex();

		this.wrapper.setStyles(
		{
			zIndex: newZIndex
		});

		if (this.options.enableBackground)
		{
			this.overlay.overlay.setStyles(
			{
				zIndex: ( newZIndex - 5 )
			});
		}
	},

	getOrigin: function ()
	{
		return this.dialogOrigin;
	},

	setInfoIcon: function(infoIcon)
	{
		if (infoIcon)
		{
			this.options.infoIcon = infoIcon;
			var $this = this;

			this.infoButton.removeEvents('click');

			this.infoButton.show();
			this.infoButton.addEvent('click', function ()
			{
				if (typeof $this.options.infoIcon == 'string')
				{
					return window.open($this.options.infoIcon, '_blank');
				}
				if (typeof $this.options.infoIcon == 'function')
				{
					return $this.options.infoIcon();
				}
			});
			if (this.options.buttonTextInfo)
			{
				this.infoButton.setTitle(this.options.buttonTextInfo);
			}
		}
		else
		{
			this.infoButton.hide();
		}
		return this;
	},

	updateCssClass: function(cssClass)
	{
		if (cssClass)
		{
			//Dialog finden Ã¼ber die aktuellen klassen
			var cssClassForSearchArray = this.options.cssClass.split(' ');
			var myDialog = this.wrapper.down('.dialog');
			if(myDialog) {
				for (var i = 0; i < cssClassForSearchArray.length; i++)
				{
					myDialog.removeClass(cssClassForSearchArray[i]);
				}

				this.options.cssClass = cssClass;
				// und neue hinzufÃ¼gen
				var newCssClassesSplit = (cssClass).split(' ');
				for (var j = 0; j < newCssClassesSplit.length; j++)
				{
					if (newCssClassesSplit[j] != '')
					{
						myDialog.addClass(newCssClassesSplit[j]);
					}
				}
			}
		}

		return this;
	},

	/**
	 * Make the input dialog an "amount" input - meaning only positive numbers can be entered, up to max value
	 * @param {HTMLElement} input
	 * @param {int} max
	 * @param {function} callback
     */
	makeInputAmountable: function(input, max, callback) {
		var maximumVal = max || Number.MAX_VALUE;

		var verifyInput = function(element, max, callback) {
			var maximumVal = max || Number.MAX_VALUE;
			var currentVal = parseInt(element.get('value')) || 0;
			var decidedVal = Math.max(0, Math.min(currentVal, maximumVal));
			element.set('value', decidedVal);
			if (callback) callback(decidedVal);
		};

		var isAllowedKeyCode = function(keyCode, ctrlKey, metaKey) {
			// Allow:
			if (keyCode == 8 || keyCode == 46 ||
				// Allow: Ctrl/Cmd+A
				(keyCode == 65 && (ctrlKey === true || metaKey === true)) ||
				// Allow: Ctrl/Cmd+C
				(keyCode == 67 && (ctrlKey === true || metaKey === true)) ||
				// Allow: Ctrl/Cmd+X
				(keyCode == 88 && (ctrlKey === true || metaKey === true)) ||
				// Allow: Ctrl/Cmd+V
				(keyCode == 86 && (ctrlKey === true || metaKey === true)) ||
				// Allow: home, end, left, right
				(keyCode >= 35 && keyCode <= 39)) {
				// let it happen, don't do anything
				return true;
			}
			// Ensure that it is a number and stop the keypress
			return (((keyCode >= 48 && keyCode <= 57) || (keyCode >= 96 && keyCode <= 105)));
		};

		input.addEvents({
			keydown: function(event) {
				if (!isAllowedKeyCode(event.event.keyCode, event.event.ctrlKey, event.event.metaKey)) {
					event.preventDefault();
				}
			},
			keyup: function(event) {
				verifyInput(this, maximumVal, callback);
			},
			paste: function(event) {
				verifyInput(this, maximumVal, callback);
			},
			change: function(event) {
				verifyInput(this, maximumVal, callback);
			},
			blur: function(event) {
				verifyInput(this, maximumVal, callback);
			},
			input: function(event) {
				verifyInput(this, maximumVal, callback);
			}
		});
	}
});

/**
 * Element um dialog erweitern
 */
Element.implement(
{
	dialog: function (options)
	{
		this.dialog = new Travian.Dialog(options).setContent(this.get('html')).show();

		return this;
	}
});

/**
 * String um Dialog erweitern
 */
String.implement(
{
	dialog: function (options)
	{
		this.dialog = new Travian.Dialog(options).setContent(this).show();
		return this;
	}
});Travian.WindowManager = new (new Class(
{

	Implements: [
		Events
	],

	/**
	 * Window Stack
	 */
	windows: null,

	/**
	 * Standardwert fÃ¼r zIndex
	 */
	currentZIndex: 6000,

	/**
	 * Maximaler zIndex Wert Falls dieser erreicht/Ã¼berschritten wird, wird ein
	 * cleanup ausgefÃ¼hrt
	 */
	zIndexMaxValue: 9900,

	initialize: function()
	{
		this.windows = [];
	},

	/**
	 * Registriere Dialoge beim WindowManager
	 *
	 * @param $dialog
	 * @return Object
	 */
	register: function($dialog)
	{
		/**
		 * Standardwert fÃ¼r context Wenn context Ã¼ber options gesetzt wurde,
		 * verwende diesen
		 */
		if (typeof $dialog.options.context == 'undefined')
		{
			$dialog.options.context = 'noContext';
		}

		$dialog.identifier = this.__createIdentifier();

		/**
		 * FÃ¼ge den erstellten Dialog zum Stack hinzu
		 */
		this.windows.push($dialog);

		this.fireEvent('register', [
			this, $dialog
		]);

		return $dialog;
	},

	/**
	 * Entfernt einen Dialog aus dem WindowManager
	 * @param $dialog
	 */
	unregister: function($dialog)
	{
		delete this.windows[$dialog.identifier];
		this.fireEvent('unregister', [
			this, $dialog
		]);
	},

	/**
	 * SchlieÃŸt das Fenster, behÃ¤lt es aber im DOM
	 *
	 * @param $dialog
	 */
	closeWindow: function($dialog)
	{
		$dialog.close();
	},

	/**
	 * Verstecke ein Fenster
	 *
	 * @param $dialog
	 */
	hideWindow: function($dialog)
	{
		$dialog.hide();
	},

	/**
	 * Verstecke ein Fenster
	 *
	 * @param $dialog
	 */
	showWindow: function($dialog)
	{
		$dialog.unhide();
	},

	/**
	 * Verstecke alle Fenster anhand des Kontexts
	 *
	 * Der context Parameter dient der identifizierung des Fensters
	 * und kann beim aufrufen mitgegeben werden
	 *
	 * @param context
	 * @return Bool
	 */
	hideByContext: function(context)
	{
		var $this = this;
		this.getWindows().each(function($dialog)
		{
			if (!$this.checkContext(context, $dialog))
			{
				return false;
			}
			$this.hideWindow($dialog);
		});
	},

	/**
	 * Zeige alle Fenster anhand des Kontexts
	 *
	 * Der context Parameter dient der identifizierung des Fensters
	 * und kann beim aufrufen mitgegeben werden
	 *
	 * @param context
	 * @return Bool
	 */
	showByContext: function(context)
	{
		var $this = this;
		this.getWindows().each(function($dialog)
		{
			if (!$this.checkContext(context, $dialog))
			{
				return false;
			}
			$this.showWindow($dialog);
		});
	},

	/**
	 * LÃ¶sche alle Fenster anhand des Kontexts
	 *
	 * Der context Parameter dient der identifizierung des Fensters
	 * und kann beim aufrufen mitgegeben werden
	 *
	 * @param context
	 * @return Bool
	 */
	closeByContext: function(context)
	{
		var $this = this;
		this.getWindows().each(function($dialog)
		{
			if (!$this.checkContext(context, $dialog))
			{
				return false;
			}
			$this.closeWindow($dialog);
		});
	},

	/**
	 * Gibt Fenster anhand eines spezifischen Kontexts zurÃ¼ck
	 *
	 * Der context Parameter dient der identifizierung des Fensters
	 * und kann beim aufrufen mitgegeben werden
	 *
	 * @param context
	 * @return Array|Bool
	 */
	getWindowsByContext: function(context)
	{
		var contextWindows = [];
		var $this = this;
		this.getWindows().each(function($dialog)
		{
			if (!$this.checkContext(context, $dialog))
			{
				return false;
			}
			contextWindows.push($dialog);
		});
		return contextWindows;
	},

	/**
	 * PrÃ¼ft ob sich ein Dialog in einem spezifischen Kontext befindet
	 *
	 * Der context Parameter dient der identifizierung des Fensters
	 * und kann beim aufrufen mitgegeben werden
	 *
	 * @param context
	 * @param $dialog
	 * @return Bool
	 */
	checkContext: function(context, $dialog)
	{
		if (typeof $dialog.options.context != 'undefined')
		{
			if ($dialog.options.context == context)
			{
				return true;
			}
		}
		return false;
	},

	/**
	 * Gebe alle Fenster zurÃ¼ck
	 *
	 * @return Array
	 */
	getWindows: function()
	{
		return this.windows;
	},

	/**
	 * Falls wir ein Ajax Fenster haben, wird der Inhalt neugeladen
	 *
	 * @param $dialog
	 */
	reloadWindow: function($dialog)
	{
		$dialog.reload();
	},

	/**
	 * Aktualisiert alle Ajax Fenster basierend auf dem Ã¼bergebenen Kontext
	 *
	 * Der context Parameter dient der identifizierung des Fensters
	 * und kann beim aufrufen mitgegeben werden
	 *
	 * @param context
	 */
	reloadWindowsByContext: function(context)
	{
		var $this = this;
		this.getWindows().each(function($dialog)
		{
			if (!$this.checkContext(context, $dialog))
			{
				return false;
			}
			$this.reloadWindow($dialog);
		});
	},

	/**
	 * Erstellt einen Identifier fuer das windows array
	 *
	 * @return Number
	 * @private
	 */
	__createIdentifier: function()
	{
		return this.windows.length;
	},

	/**
	 * Wenn der ZIndex den definierten Maximalwert Ã¼berschreitet wird der mit
	 * dieser Methode zIndex aufgeraeumt
	 */
	cleanupZIndex: function()
	{
		var highestValue = 0;
		this.getWindows().each(function($dialog)
		{
			var zIndex = $($dialog).getStyle('zIndex');
			var newZIndex = (zIndex - 3000);

			if (newZIndex > highestValue)
			{
				highestValue = newZIndex;
			}

			$($dialog).setStyle('zIndex', newZIndex);
		});
		this.currentZIndex = highestValue;
	},

	/**
	 * Generiert einen zIndex und gibt in zurÃ¼ck
	 *
	 * @return Number
	 */
	getZIndex: function()
	{

		if (this.currentZIndex >= this.zIndexMaxValue)
		{
			this.cleanupZIndex();
		}

		this.currentZIndex += 10;

		return this.currentZIndex;
	},

	/**
	 * Gibt den aktuelle zIndex zurÃ¼ck
	 *
	 * @return Number
	 */
	getCurrentZIndex: function()
	{
		return this.currentZIndex;
	},

	/**
	 * Existiert ein Fenster mit dem Ã¼bergebenen Kontext
	 *
	 * @param context
	 * @return Bool
	 */
	checkOpenWindowByContext: function(context)
	{
		var windowWithContext = false;
		var $this = this;

		this.getWindows().each(function($dialog)
		{
			if ($this.checkContext(context, $dialog))
			{
				windowWithContext = true;
			}
		});
		if (windowWithContext)
		{
			return true;
		}
		return false;
	},

	/**
	 * PrÃ¼ft ob modale Dialoge gerade offen sind
	 *
	 * @return bool
	 */
	checkForModalDialogs: function()
	{
		var check = false;
		var $this = this;
		this.getWindows().each(function($dialog)
		{
			if($dialog.options.type == Travian.Dialog.DIALOG_TYPE_MODAL)
			{
				check = true;
			}
		});
		return check;
	},

	/**
	 * Get the inner dimensions of the browser window
	 */
	getWindowDimensions: function()
	{
		var windowWidth = 630, // Default for old Browsers
			windowHeight = 460; // Default for old Browsers

		if (document.body && document.body.offsetWidth) {
			windowWidth = document.body.offsetWidth;
			windowHeight = document.body.offsetHeight;
		}
		if (document.compatMode=='CSS1Compat' &&
			document.documentElement &&
			document.documentElement.offsetWidth ) {
			windowWidth = document.documentElement.offsetWidth;
			windowHeight = document.documentElement.offsetHeight;
		}
		if (window.innerWidth && window.innerHeight) {
			windowWidth = window.innerWidth;
			windowHeight = window.innerHeight;
		}

		return {
			width: windowWidth,
			height: windowHeight
		}
	},

    /**
     * closes all existing windows
     */
	closeAllWindows: function()
	{
		var $this = this;
		this.getWindows().each(function($dialog)
		{
			$this.closeWindow($dialog);
		});
	}
}));/**
 * restores every saved window after a page refresh or page change.
 * only windows with flag saveOnUnload=true will be saved.
 * this also considers the window position.
 */
Travian.RestoreWindowManager = new (new Class({

	/**
     * preference key that stores the window positions
	 */
	preferenceKey: 'WMBlueprints',

	initialize: function ()
	{
		var self = this;
		window.addEvent('domready', function ()
		{
			var blueprints = Travian.Game.Preferences.get(self.preferenceKey);

			if(blueprints === null) {
				return false;
			}

			blueprints = JSON.decode(blueprints);

			blueprints.each(function (blueprint) {
				/**
				 * if the dialog that should be opened is not at its origin URL, the action is cancelled
				 */
				if (blueprint.options.stickToUrlOnRestore && blueprint.options.dialogOrigin != location.pathname) {
					return false;
				}

				/**
				 * the dialog will not be restored when player is not in game (e.g. on login page, logout, signup etc.)
				 * therefore we check if the sidebar menu box is there (appears only on the "logged out"-pages)
				 */
				if ($('sidebarBoxMenu')) {
					return false;
				}

				$dialog = new Travian.Dialog.Ajax(blueprint.options);
			});
		});

		window.addEvent('beforeunload', function (e)
		{
			var dialogs = Travian.WindowManager.getWindows();
			var blueprints = [];

			dialogs.each(function ($dialog)
			{
				if ($dialog.options.saveOnUnload)
				{

					if (!$dialog.isAjax())
					{
						throw('Only Travian.Dialog.Ajax can be saved.');
					}

					/**
					 * @TODO: Hack
					 */
					delete $dialog.options.relativeTo;

					var blueprint = {
						options: $dialog.options
					};
					blueprints.push(blueprint);

					if($dialog.options.savePositionForSession.preferenceKey !== null)
					{
						Travian.Game.Preferences.set($dialog.options.savePositionForSession.preferenceKey, JSON.encode($dialog.options.savePositionForSession), true);
					}
				}
			});

			Travian.Game.Preferences.set(self.preferenceKey, JSON.encode(blueprints), true);
		});
	}
}));/**
 * Dialog welcher via Ajax entsprechende HTML Daten holt
 */
Travian.Dialog.Ajax = new Class(
{
	Extends: Travian.Dialog,

	/**
	 * Options
	 *
	 * @var object
	 */
	options:
	{
		/**
		 * Ajax Request Data
		 *
		 * @var object
		 */
		data:
		{
			/**
			 * irgendwelche Ajax Options hier
			 *
			 * wie z.B.
			 * {
			 * 		cmd:	'viewTileDetails',
			 * 		x:		1,
			 * 		y:		1
			 * }
			 */
		},

		/**
		 * Dialog speichern, falls die Seite gewechselt/neu geladen wird
		 * Funktioniert nur bei Ajax Dialogen
		 */
		saveOnUnload: false
	},

	/**
	 * constructor
	 *
	 * @param options
	 */
	initialize: function(options)
	{
		this.parent(options);
		var $this = this;

		// if there is supposed to be a non-ajax preview of the dialog, use it
		if(typeof options.preview !== "undefined" && options.preview.enabled) {
			var preview = options.preview;
			this.setContent(document.getElementById(preview.contentElement).get('html')).setTitle(preview.title).setInfoIcon(preview.infoIcon).updateCssClass(preview.dialogCSSClass);

			setTimeout(function() {
				$this.show();
				preview.onShow($this);
			}, 200);
		} else {
			// no preview defined - fall back to default behaviour
			this.request();
		}
	},

	/**
	 * daten holen
	 *
	 * @retrun Travian.Dialog.Ajax
	 */
	request: function()
	{
		var $this = this;

		Travian.ajax(
		{
			data:		this.options.data,
			onSuccess:	function(data)
			{
				if (data.html != '')
				{
					$this.setContent(data.html).setTitle(data.title).setInfoIcon(data.infoIcon).updateCssClass(data.cssClass);
					$this.show();
				}
				else
				{
					$this.close();
				}
			}
		});

		return this;
	},

	isAjax: function()
	{
		return true;
	},

	reload: function()
	{
		this.request();
	}
});

/**
 * Hash um dialog erweitern
 */
Hash.implement(
{
	dialog: function(options)
	{
		new Travian.Dialog.Ajax(Object.merge({}, this.toObject(), options || {}));

		return this;
	}
});/**
 * Travian AutoCompleter im allgemeinen und erweiter den Autocompleter.Request.JSON
 * mit allen vorausgefÃ¼llten werten
 */
Travian.AutoCompleter = new Class(
{
	Extends: Autocompleter.Request.JSON,

	/**
	 * Constructor
	 *
	 * @param element|string element
	 * @param object parameters zusÃ¤tzliche zu schickende Parameter
	 */
	initialize: function(element, url, options)
	{
		var $this = this;
		this.parent(element, url, Object.merge(
		{
			minLength:	2,
			maxChoices:	10,
			width:		'auto',
			postVar:	'search',
			postData:
			{
				cmd:	'autoComplete',
                ajaxToken: window.ajaxToken
			},
			/*
			 * bei keinem Ergebniss Element mit keinen Ergebnissen einfÃ¼gen.
			 */
			emptyChoices: function()
			{
				var choice = new Element('li',
				{
					html: '{cropfinder.keine_ergebnisse}'.translate()
				});
				choice.inject($this.choices);
				$this.showChoices();
			}
		}, options || {}));
	}
});
/**
 * EnthÃ¤lt Methoden zur verhinderung von Doppelklicks
 * @type {Class}
 */
Travian.DoubleClickPreventer = new Class(
{
	prevent: false,

	/**
	 * MiLlisekunden bis das Event erneut ausgefÃ¼hrt werden darf
	 */
	timeout: 400,

	/**
	 * The timer id
	 */
	timerId: 0,

	/**
	 * Verhindert das mehrfache Triggern eines Events
	 * @return {Boolean}
	 */
	check: function()
	{
		if (this.prevent)
		{
			return false;
		}

		this.prevent = true;

		var $this = this;

		this.timerId = setTimeout(function()
		{
			$this.prevent = false;
		}, this.timeout);

		return true;
	},

	/**
	 * Cancels the timeout prematurely in cases when the action ended too fast
	 */
	cancelTimer: function () {
		if (this.timerId) {
			clearTimeout(this.timerId);
			this.prevent = false;
		}
	}
});
/**
 * Formularlogik
 */
Travian.Form = new Class(
{
	/**
	 * Dem Formular zugehÃ¶rige Elemente.
	 * @var Object
	 */
	elements: {},

	/**
	 * Callback fÃ¼r Klicks auf Elemente.
	 *
	 * @return Travian.Form
	 */
	onClick: function(element)
	{
		return this;
	},

	/**
	 * FÃ¼gt ein Element hinzu.
	 *
	 * @param string name
	 * @param object element Travian.Form.Element
	 * @return Travian.Form
	 */
	addElement: function(name, element)
	{
		element.setName(name);
		this.elements[name] = element;

		return this;
	},

	/**
	 * FÃ¼gt ein Html-Input-Element hinzu.
	 *
	 * @param string name
	 * @param mixed context
	 * @return Travian.Form
	 */
	addInputElementByName: function(name, context)
	{
		var element = Travian.Form.Element.Input.createElementByName(this, name, context);
		this.addElement(name, element);

		return this;
	},

	/**
	 * Callback fÃ¼r Ã„nderungen an einem Element.
	 *
	 * @return Travian.Form
	 */
	onElementChanged: function(element)
	{
		var dirty = element.isDirty();
		if (dirty == false)
		{
			if ($H(this.elements).find(function(element)
			{
				return element.isDirty();
			}))
			{
				dirty = true;
			}
		}

		this.onDirty(dirty);

		return this;
	},

	/**
	 * Callback fÃ¼r den Dirty-Zustand.
	 *
	 * @param bool dirty
	 * @return Travian.Form
	 */
	onDirty: function(dirty)
	{
		return this;
	}
});/**
 * Helper fÃ¼r die warnung "wollen sie diese seite wirklich verlassen" sobald ein formular geÃ¤nderte felder beinhaltet.
 * solange mindestens eine form das warnverhalten verlangt, wird es angezeigt sobald die seite verlassen wird
 * 
 * Verhalten von onUnload:
 * http://msdn.microsoft.com/en-us/library/ms536907%28VS.85%29.aspx
 * http://stackoverflow.com/questions/276660/how-can-i-override-the-onbeforeunload-dialog-and-replace-it-with-my-own
 */
Travian.Form.UnloadHelper = new (new Class(
{
	/**
	 * CSS Query fÃ¼r alle form-elemente die auf verÃ¤nderungen Ã¼berwacht werden
	 */
	formQueryString: 'input, textarea, select',

	/**
	 * Message, die am anfang Ã¼ber die php translation gesetzt wird und anschlieÃŸend ausgegeben wird sollte
	 * ein Formular Ã¤nderungen enthalten wenn die seite geschlossen wird.
	 */
	message: null,

	/**
	 * Incrementelle ID
	 */
	identifierCount: 0,

	/**
	 * Array, formID => checksumme der values
	 */
	htmlForms: {},

	/**
	 * Array, identifier => state
	 */
	formStates: {},

	/**
	 * Constructor
	 */
	initialize: function()
	{
		var $this = this;

		window.onbeforeunload = function()
		{
			var enabled = $this.isEnabled();

			//browser specific code bitte hier anfÃ¼gen
			if (enabled)
			{
				return $this.message;
			}
			else
			{
				return;
			}
		};
	},

	/**
	 * PrÃ¼fung ob gerade mindestens ein Formular Ã¤nderungen enthÃ¤lt
	 */
	isEnabled: function()
	{
		for (var i in this.formStates)
		{
			if (this.formStates[i])
			{
				return true;
			}
		}

		for (var i in this.htmlForms)
		{
			var formElement = $(i);

			if (formElement == null)
			{
				delete this.htmlForms[i];
				continue;
			}

			var hashOld = this.htmlForms[i];
			var hashNew = this.generateFormHash(formElement);

			if (hashOld !== hashNew)
			{
				return true;
			}
		}

		return false;
	},

	/**
	 * Schaltet das warnverhalten beim seiten verlassen und reload an
	 * @param form Travian.Form
	 */
	enableSecurity: function(identifier)
	{
		if (identifier === null)
		{
			identifier = this.getIdentifier();
		}

		this.formStates[identifier] = true;

		return identifier;
	},

	/**
	 * Schaltet das warnverhalten beim seiten verlassen und reload aus
	 * @param form Travian.Form
	 */
	disableSecurity: function(identifier)
	{
		this.formStates[identifier] = false;
	},

	/**
	 * returns an unique identifier
	 */
	getIdentifier: function()
	{
		this.identifierCount++;
		return this.identifierCount;
	},

	/**
	 * hashes all input field values found by formQueryString
	 * each type of input field can have their own representation
	 * of what value is to hash
	 */
	generateFormHash: function(formElement)
	{
		var values = '';
		var elements = formElement.getElements(this.formQueryString);
		elements.each(function(element)
		{
			var tag = element.get('tag');
			var type = element.get('type');

			switch(true)
			{
				case tag === 'input' && type === 'radio':
					values += element.get('checked');
					break;
				case tag === 'input' && type === 'checkbox':
					values += element.get('checked');
					break;
				case tag === 'input' || tag === 'textarea':
					values += element.get('value');
					break;
				case tag === 'select':
					var selected = element.getSelected();
					if (selected)
					{
						values += selected.get('value');
					}
					break;
			}
		});

		var hash = values.toMD5();
		return hash;
	},

	/**
	 * Watches over a HTML Form element
	 * @param HTMLFormElement
	 */
	watchHtmlForm: function(formElement)
	{
		var $this = this;

		formElement.addEvent('change:relay(' + this.formQueryString + ')', function(event, element)
		{
			$this.updateSubmitButtons(formElement);
		});

		this.htmlForms[formElement.get('id')] = this.generateFormHash(formElement);

		formElement.addEvent('submit', function()
		{
			$this.htmlForms[formElement.get('id')] = $this.generateFormHash(formElement);
		});

		this.updateSubmitButtons(formElement);
	},

	/**
	 * Removes the watcher from an HTML Form element
	 * @param HTMLFormElement
	 */
	unwatchHtmlForm: function(formElement)
	{
		delete this.htmlForms[formElement.get('id')];
	},

	/**
	 * Loops through all submit buttons and inputs of a watched Form
	 * and disables them when the form has no changes
	 */
	updateSubmitButtons: function(formElement)
	{
		var $this = this;

		var isDisabled = ($this.htmlForms[formElement.get('id')] === $this.generateFormHash(formElement));

		formElement.getElements('input[type=submit], button[type=submit]').each(function(element)
		{
			if (isDisabled)
			{
				element.addClass('disabled');
			}
			else
			{
				element.removeClass('disabled');
			}

			element.disabled = isDisabled;
		});
	}
}))();/**
 * Basisklasse fÃ¼r Formularelemente.
 */
Travian.Form.Element = new Class(
{

	/**
	 * @var Travian.Form
	 */
	form: null,

	/**
	 * @var string
	 */
	name: null,

	/**
	 * Konstruktor
	 *
	 * @param Travian.Form form
	 */
	initialize: function(form)
	{
		this.form = form;
	},

	/**
	 * PrÃ¼ft den Dirty-Zustand des Elements.
	 *
	 * @return bool
	 */
	isDirty: function()
	{
		return false;
	},

	/**
	 * Callback fÃ¼r Change
	 *
	 * @return Travian.Form.Element
	 */
	onChange: function()
	{
		this.form.onElementChanged(this);

		return this;
	},

	/**
	 * Callback fÃ¼r Klicks
	 *
	 * @return Travian.Form.Element
	 */
	onClick: function()
	{
		this.form.onClick(this);

		return this;
	},

	/**
	 * Setter fÃ¼r Form
	 *
	 * @param Travian.Form
	 * @return Travian.Form.Element
	 */
	setForm: function(form)
	{
		this.form = form;
		return this;
	},

	/**
	 * Setter fÃ¼r den Feldbezeichner
	 *
	 * @return Travian.Form.Element
	 */
	setName: function(name)
	{
		this.name = name;
		return this;
	},

	/**
	 * Getter fÃ¼r den Feldbezeichner
	 *
	 * @return string
	 */
	getName: function()
	{
		return this.name;
	}
});/**
 * Wrapperklasse mit Factory fÃ¼r Html-Inputfelder.
 */
Travian.Form.Element.Input = new Class(
{
	Extends: Travian.Form.Element,

	/**
	 * @var mixed
	 */
	originalValue: null,

	/**
	 * @var mixed
	 */
	currentValue: null,

	/**
	 * @var string
	 */
	type: null,

	/**
	 * @var DOMNode
	 */
	element: null,

	/**
	 * Konstruktor
	 *
	 * @param Travian.Form form
	 * @param DOMNode element
	 */
	initialize: function(form, element)
	{
		this.parent(form);
		this.element = element;

		// originalen Wert auslesen
		this.originalValue = this.currentValue = this.getValue();

		// Change-Listener setzen
		this.initEvents();
	},

	/**
	 * Liefert das zugrunde liegende Html-Element.
	 *
	 * @return Element
	 */
	getInput: function()
	{
		return this.element;
	},

	/**
	 * Initialisiert die Events.
	 *
	 * @return Travian.Form.Element.Input
	 */
	initEvents: function()
	{
		// Eventlistener setzen
		var $this = this;
		this.element.addEvent('change', function()
		{
			$this.onChange();
		});

		return this;
	},

	/**
	 * Callback fÃ¼r das Change-Event.
	 *
	 * @return Travian.Form.Element.Input
	 */
	onChange: function()
	{
		this.currentValue = this.getValue();
		this.parent();

		return this;
	},

	/**
	 * Liefert den aktuellen Wert des Elements.
	 *
	 * @return mixed
	 */
	getValue: function()
	{
		return this.element.value;
	},

	/**
	 * Liefert den Dirty-Zustand des Elements.
	 *
	 * @return bool
	 */
	isDirty: function()
	{
		return this.originalValue != this.currentValue;
	}
});

/**
 * Factory fÃ¼r die Erstellung von Wrappern fÃ¼r Inputfelder.
 *
 * @param Travian.Form form
 * @param string name
 * @param mixed context
 * @return Travian.Form.Element.Input
 */
Travian.Form.Element.Input.createElementByName = function(form, name, context)
{
	var elements = null;
	var element = null;
	var classType = null;

	// Kontext vorbereiten
	if (context === undefined)
	{
		context = $(document);
	}
	elements = $(context).getElements('[name="' + name + '"]');
	if (elements.length == 0)
	{
		throw new Error('Element with name "' + name + '" not found.');
	}
	element = $(elements[0]);

	switch (element.nodeName.toLowerCase())
	{
		case 'input':
			classType = element.get('type');
			if (classType == 'radio' || classType == 'checkbox')
			{
				element = elements;
			}
			break;

		default:
			classType = element.nodeName.toLowerCase();
			break;
	}

	classType = classType.capitalize();

	if (!Travian.Form.Element.Input[classType])
	{
		throw new Error('Element type "' + classType + '" not yet implemented!');
	}

	return new Travian.Form.Element.Input[classType](form, element);
};/**
 * Wrapperklasse fÃ¼r einen Html-Button
 */
Travian.Form.Element.Input.Button = new Class(
{
	Extends: Travian.Form.Element.Input,

	/**
	 * Initialisiert die Events.
	 *
	 * @return Travian.Form.Element.Input.Button
	 */
	initEvents: function()
	{
		// Eventlistener setzen
		var $this = this;
		this.element.addEvent('click', function()
		{
			$this.onClick();
		});

		return this;
	},

	/**
	 * Liefert den aktuellen Wert des Feldes.
	 *
	 * @return mixed
	 */
	getValue: function()
	{
		return null;
	}
});
/**
 * Wrapperklasse fÃ¼r eine checkbox Input
 */
Travian.Form.Element.Input.Checkbox = new Class(
{
	Extends: Travian.Form.Element.Input,

	/**
	 * @var mixed
	 */
	valueBefore: null,

	/**
	 * Initialisiert die Events.
	 *
	 * @return Travian.Form.Element.Input.Radio
	 */
	initEvents: function()
	{
		var $this = this;

		this.valueBefore = this.getValue();
		// Eventlistener setzen

		this.element.addEvent('click', function()
		{
			if ($this.getValue() != $this.valueBefore)
			{
				$this.valueBefore = $this.getValue();
				$this.onChange();
			}
		});

		return this;
	},

	/**
	 * Liefert den Wert der aktiven Box.
	 *
	 * @return mixed
	 */
	getValue: function()
	{
		var element = this.element.find(function(element)
		{
			return element.checked;
		});

		if (element)
		{
			return element.value;
		}

		return null;
	}
});/**
 * Wrapperklasse fÃ¼r eine Radiobox-Gruppe
 */
Travian.Form.Element.Input.Radio = new Class(
{
	Extends: Travian.Form.Element.Input,

	/**
	 * @var mixed
	 */
	valueBefore: null,

	/**
	 * Initialisiert die Events.
	 *
	 * @return Travian.Form.Element.Input.Radio
	 */
	initEvents: function()
	{
		var $this = this;

		this.valueBefore = this.getValue();
		// Eventlistener setzen

		this.element.addEvent('click', function()
		{
			if ($this.getValue() != $this.valueBefore)
			{
				$this.valueBefore = $this.getValue();
				$this.onChange();
			}
		});

		return this;
	},

	/**
	 * Liefert den Wert der aktiven Box.
	 *
	 * @return mixed
	 */
	getValue: function()
	{
		var element = this.element.find(function(element)
		{
			return element.checked;
		});

		if (element)
		{
			return element.value;
		}

		return null;
	}
});
/**
 * Wrapperklasse fÃ¼r eine text Input
 */
Travian.Form.Element.Input.Text = new Class(
{
	Extends: Travian.Form.Element.Input
});
/**
 * Wrapperklasse fÃ¼r eine textarea Input
 */
Travian.Form.Element.Input.Textarea = new Class(
{
	Extends: Travian.Form.Element.Input
});
/**
 * Formatter Formatiert Zahlen der Sprache entsprechend oder nach User-konfiguration
 *
 * **Usage**
 * Sprache wird automatisch aus dem DOM bezogen falls nicht in den options
 * Ã¼bergeben wird
 *
 * var nf = new Travian.Formatter();
 * nf.getFormattedNumber('123 456,458');
 *
 * verfÃ¼gbare Formatierungen als Array bekommen
 * nf.getAvailableTypes();
 *
 * sprache setzen entweder Ã¼ber die Options (languageKey) oder via setMethode
 * diese setzt auch dann den entsprechenden Typen + Dezimaltrenner falls Sprache
 * bekannt
 *
 * nf.setOptionLanguageKey('fr');
 */
Travian.Formatter = new Class(
{
	Implements: [
		Options
	],

	/**
	 * Options
	 *
	 * @var object
	 */
	options:
	{
		/**
		 * Die aktuelle Sprache fÃ¼r die Formatierung
		 *
		 * @var string
		 */
		languageKey: 'de',

		/**
		 * Momentaner formattyp (siehe typeFunctions)
		 *
		 * @var String
		 */
		formatType: 'type3',

		/**
		 * Dezimaltrenner
		 *
		 * @var String
		 */
		decimalSeperator: ',',

		/**
		 * Dezimalstellen auch dann anzeigen, wenn diese 0 sind
		 *
		 * @var bool
		 */
		forceDecimal: true

	},

	/**
	 * Konstruktor
	 *
	 * @var function
	 * @return this
	 */
	initialize: function(options)
	{
		this.setOptions(options);

		// Game language beziehen wenn keins Ã¼ber die optionen gegeben wurde
		if (options === undefined || options.languageKey === undefined)
		{
			this.options.languageKey = Travian.Game.country;
		}

		// Standardparameter anhand der Sprache setzen sofern Sprache gesetzt
		if (this.options.languageKey !== undefined)
		{
			// Definition anhand der Sprache wenn Sprache bekannt
			var formatType = this.getDefinitionByLanguage(this.options.languageKey);

			if (formatType !== false)
			{
				this.options.formatType = formatType.type;
				this.options.decimalSeperator = formatType.decimalSeperator;
			}
		}

		return this;
	},

	/**
	 * Formatiert eine Zahl anhand der gesetzten Parameter
	 *
	 * @param number - Zahl die formatiert werden soll
	 * @return String - Formatierte Zahl
	 */
	getFormattedNumber: function(number)
	{
		if (isNaN(number) || number === undefined || number === null || number === '')
		{
			return 0;
		}

		if (parseInt(number) != number)
		{
			number = String(parseFloat(number));
		}
		else
		{
			number = String(parseFloat(number)) + '.0';
		}

		// auftrennen
		var matches = number.match(/([\d.,\s-]*?)[.,]?(\d*)?$/);

		var splitNumber =
		{
			left: matches[1],
			right: matches[2]
		};

		// entfernen von spaces und anderen bekannten trennern
		splitNumber.left = splitNumber.left.replace(/[\s,.'"]*/g, '');

		// prÃ¼fen ob die Zahl negativ ist
		var isNegative = false;
		if (splitNumber.left < 0)
		{
			isNegative = true;
		}

		// operand entfernen
		splitNumber.left = splitNumber.left.replace(/[-]*/g, '');

		var newNumber = 0;

		if (this.typeFunctions[this.options.formatType] == undefined)
		{
			throw 'Der Zahlenformattyp' + this.options.formatType + 'ist unbekannt!';
		}

		// entsprechende Formatier-Funktion anhand des types aufrufen (siehe
		// typeFunctions)
		newNumber = this.typeFunctions[this.options.formatType].createNumberFunction(splitNumber, this.options);

		if (isNegative == true)
		{
			newNumber = '-' + newNumber;
		}

		return newNumber;
	},

	/**
	 * Setzt die Sprache und automatisch die entsprechenden Optionsn
	 *
	 * @return bool
	 */
	setOptionLanguageKey: function(languageKey)
	{
		// Definition anhand der Sprache wenn Sprache bekannt
		var formatType = this.getDefinitionByLanguage(languageKey);

		if (formatType != false)
		{
			this.options.formatType = formatType.type;
			this.options.decimalSeperator = formatType.decimalSeperator;
			return true;
		}

		return false;
	},

	/**
	 * Liefert alle mÃ¶glichen Format-Typen zurÃ¼ck
	 *
	 * @return Array
	 */
	getAvailableTypes: function()
	{
		var types = [];

		Object.each(this.typeFunctions, function(type, key)
		{
			types.push(key);
		});

		return types;
	},

	/**
	 * Entfernt alle Zeichen auÃŸer Zahlen aus einem String und wandelt diesen in einen Integer um
	 * Dient z.B. dazu, RTL und LTR Steuerzeichen zu entfernen
	 *
	 * @return int
	 */
	removeNonDigits: function(oldString)
	{
		var newNumber = oldString.match(/\d/g);
		newNumber = parseInt(newNumber.join(""));
		
		return newNumber;
	},

	// HELPER

	/**
	 * Gibt die Definition anhand der Ã¼bergebenen Sprache wieder
	 *
	 * @param String lang - Sprachvariable
	 * @return Object - Typenobjekt
	 */
	getDefinitionByLanguage: function(lang)
	{
		var $this = this;
		var formatType = false;

		// matching auf die eingestellte Sprache
		Object.each(this.languageDefinitions, function(type, key)
		{
			if (type.languages.contains(lang) === true)
			{
				formatType = $this.languageDefinitions[key];
			}
		});

		return formatType;
	},

	// PROPERTIES

	/**
	 * Sprachdefinitionen
	 *
	 * @var object
	 */
	languageDefinitions:
	{
		1:
		{
			decimalSeperator: ',',
			type: 'type1',
			languages: [
				'ae', 'eg', 'fi', 'fr', 'lv', 'ma', 'no', 'pl', 'sa', 'se', 'sk', 'sy', 'ua'
			]
		},
		2:
		{
			decimalSeperator: '.',
			type: 'type2',
			languages: [
				'au', 'cn', 'en', 'hk', 'il', 'ir', 'jp', 'kr', 'lt', 'my', 'ph', 'pk', 'th', 'tw', 'uk', 'us', 'za'
			]
		},
		3:
		{
			decimalSeperator: ',',
			type: 'type3',
			languages: [
				'ba', 'bg', 'br', 'cl', 'cz', 'de', 'dk', 'ee', 'es', 'gr', 'hr', 'hu', 'id', 'it', 'nl', 'pt', 'ro', 'rs', 'ru', 'si', 'tr', 'vn'
			]
		},
		4:
		{
			decimalSeperator: '.',
			type: 'type4',
			languages: [
				'in'
			]
		}
	},

	/**
	 * Formatierungs-Funktionen des entsprechend Typs
	 *
	 * @var object
	 */
	typeFunctions:
	{
		type1:
		{
			/**
			 * Erzeugt die Formatierte Zahl enstprechend der Sprache 123456,12 =>
			 * 123 456,12
			 *
			 * @param Array splitNumber - die Aufgetrennte Zahl (left & right) vom Dezimaltrenner
			 * @param Object options - Die Objektoptionen
			 * @return String - Formatierte Zahl
			 */
			createNumberFunction: function(splitNumber, options)
			{
				var concatString = '';

				// reverse
				var leftSide = splitNumber.left.split('').reverse().join('');

				// linke seite bearbeiten
				for (var i = 0; i <= (leftSide.length - 1); i++)
				{
					if (i % 3 == 0 && i != 0)
					{
						concatString += ' ';
					}

					concatString += leftSide.charAt(i);
				}

				// reverse
				concatString = concatString.split('').reverse().join('');

				// wenn die Zahl Nachkommastellen hat, jetzt hinzufÃ¼gen
				if (splitNumber.right !== undefined && options.forceDecimal == true)
				{
					concatString += ',' + splitNumber.right;
				}

				return concatString;
			}
		},
		type2:
		{
			/**
			 * Erzeugt die Formatierte Zahl enstprechend der Sprache 123456,12 =>
			 * 123,456.12
			 *
			 * @param Array splitNumber - die Aufgetrennte Zahl (left & right) vom Dezimaltrenner
			 * @param Object options - Die Objektoptionen
			 * @return String - Formatierte Zahl
			 */
			createNumberFunction: function(splitNumber, options)
			{
				var concatString = '';

				// reverse
				var leftSide = splitNumber.left.split('').reverse().join('');

				// linke seite bearbeiten
				for (var i = 0; i <= (leftSide.length - 1); i++)
				{
					if (i % 3 == 0 && i != 0)
					{
						concatString += ',';
					}

					concatString += leftSide.charAt(i);
				}

				// reverse
				concatString = concatString.split('').reverse().join('');

				// wenn die Zahl Nachkommastellen hat, jetzt hinzufÃ¼gen
				if (splitNumber.right !== undefined && options.forceDecimal == true)
				{
					concatString += '.' + splitNumber.right;
				}

				return concatString;
			}
		},
		type3:
		{
			/**
			 * Erzeugt die Formatierte Zahl enstprechend der Sprache 123456,12 =>
			 * 123.456,12
			 *
			 * @param Array splitNumber - die Aufgetrennte Zahl (left & right) vom Dezimaltrenner
			 * @param Object options - Die Objektoptionen
			 * @return String - Formatierte Zahl
			 */
			createNumberFunction: function(splitNumber, options)
			{
				var concatString = '';

				// reverse
				var leftSide = splitNumber.left.split('').reverse().join('');

				// linke seite bearbeiten
				for (var i = 0; i <= (leftSide.length - 1); i++)
				{
					if (i % 3 == 0 && i != 0)
					{
						concatString += '.';
					}

					concatString += leftSide.charAt(i);
				}

				// wieder in die richtige reihenfolge setzen
				concatString = concatString.split('').reverse().join('');

				// wenn die Zahl Nachkommastellen hat, jetzt hinzufÃ¼gen
				if (splitNumber.right !== undefined && options.forceDecimal == true)
				{
					concatString += ',' + splitNumber.right;
				}

				return concatString;
			}
		},
		type4:
		{
			/**
			 * Erzeugt die Formatierte Zahl enstprechend der Sprache 123456,12 =>
			 * 12,34,567.12
			 *
			 * @param Array splitNumber - die Aufgetrennte Zahl (left & right) vom Dezimaltrenner
			 * @param Object options - Die Objektoptionen
			 * @return String - Formatierte Zahl
			 */
			createNumberFunction: function(splitNumber, options)
			{
				var concatString = '';
				var modulo = 3;

				// reverse
				var leftSide = splitNumber.left.split('').reverse().join('');

				var j = 0;

				// linke seite bearbeiten
				for (var i = 0; i <= (leftSide.length - 1); i++)
				{
					if (j % modulo == 0 && j != 0)
					{
						concatString += ',';
						// sonderfall
						modulo = 2;
						j = 0;
					}

					concatString += leftSide.charAt(i);
					j++;
				}

				// wieder in die richtige reihenfolge setzen
				concatString = concatString.split('').reverse().join('');

				// wenn die Zahl Nachkommastellen hat, jetzt hinzufÃ¼gen
				if (splitNumber.right !== undefined && options.forceDecimal == true)
				{
					concatString += '.' + splitNumber.right;
				}

				return concatString;
			}
		},
		seperatorless:
		{
			/**
			 * Erzeugt die Formatierte Zahl 123 456.12 => 123456.12
			 *
			 * @param Array splitNumber - die Aufgetrennte Zahl (left & right) vom Dezimaltrenner
			 * @param Object options - Die Objektoptionen
			 * @return String - Formatierte Zahl
			 */
			createNumberFunction: function(splitNumber, options)
			{
				var concatString = splitNumber.left;

				// wenn die Zahl Nachkommastellen hat, jetzt hinzufÃ¼gen
				if (splitNumber.right !== undefined && options.forceDecimal == false)
				{
					concatString += options.decimalSeperator + splitNumber.right;
				}

				return concatString;
			}
		},
		toInt:
		{
			/**
			 * Erzeugt die Formatierte Zahl 123 456.12 => 123456
			 *
			 * @param Array splitNumber - die Aufgetrennte Zahl (left & right) vom Dezimaltrenner
			 * @param Object options - Die Objektoptionen
			 * @return String - Formatierte Zahl
			 */
			createNumberFunction: function(splitNumber, options)
			{
				return splitNumber.left;
			}
		},
		toIntRounded:
		{
			/**
			 * Erzeugt die Formatierte Zahl 123 456.52 => 123457
			 *
			 * @param Array splitNumber - die Aufgetrennte Zahl (left & right) vom Dezimaltrenner
			 * @param Object options - Die Objektoptionen
			 * @return String - Formatierte Zahl
			 */
			createNumberFunction: function(splitNumber, options)
			{
				if (splitNumber.right == undefined)
				{
					return splitNumber.left;
				}

				var concatString = splitNumber.left + '.' + splitNumber.right;

				return (Number.convert(concatString)).round();
			}
		}
	}
});!function(){function n(n){return n&&(n.ownerDocument||n.document||n).documentElement}function t(n){return n&&(n.ownerDocument&&n.ownerDocument.defaultView||n.document&&n||n.defaultView)}function e(n,t){return t>n?-1:n>t?1:n>=t?0:0/0}function r(n){return null===n?0/0:+n}function u(n){return!isNaN(n)}function i(n){return{left:function(t,e,r,u){for(arguments.length<3&&(r=0),arguments.length<4&&(u=t.length);u>r;){var i=r+u>>>1;n(t[i],e)<0?r=i+1:u=i}return r},right:function(t,e,r,u){for(arguments.length<3&&(r=0),arguments.length<4&&(u=t.length);u>r;){var i=r+u>>>1;n(t[i],e)>0?u=i:r=i+1}return r}}}function o(n){return n.length}function a(n){for(var t=1;n*t%1;)t*=10;return t}function c(n,t){for(var e in t)Object.defineProperty(n.prototype,e,{value:t[e],enumerable:!1})}function l(){this._=Object.create(null)}function s(n){return(n+="")===pa||n[0]===va?va+n:n}function f(n){return(n+="")[0]===va?n.slice(1):n}function h(n){return s(n)in this._}function g(n){return(n=s(n))in this._&&delete this._[n]}function p(){var n=[];for(var t in this._)n.push(f(t));return n}function v(){var n=0;for(var t in this._)++n;return n}function d(){for(var n in this._)return!1;return!0}function m(){this._=Object.create(null)}function y(n){return n}function M(n,t,e){return function(){var r=e.apply(t,arguments);return r===t?n:r}}function x(n,t){if(t in n)return t;t=t.charAt(0).toUpperCase()+t.slice(1);for(var e=0,r=da.length;r>e;++e){var u=da[e]+t;if(u in n)return u}}function b(){}function _(){}function w(n){function t(){for(var t,r=e,u=-1,i=r.length;++u<i;)(t=r[u].on)&&t.apply(this,arguments);return n}var e=[],r=new l;return t.on=function(t,u){var i,o=r.get(t);return arguments.length<2?o&&o.on:(o&&(o.on=null,e=e.slice(0,i=e.indexOf(o)).concat(e.slice(i+1)),r.remove(t)),u&&e.push(r.set(t,{on:u})),n)},t}function S(){ta.event.preventDefault()}function k(){for(var n,t=ta.event;n=t.sourceEvent;)t=n;return t}function E(n){for(var t=new _,e=0,r=arguments.length;++e<r;)t[arguments[e]]=w(t);return t.of=function(e,r){return function(u){try{var i=u.sourceEvent=ta.event;u.target=n,ta.event=u,t[u.type].apply(e,r)}finally{ta.event=i}}},t}function A(n){return ya(n,_a),n}function N(n){return"function"==typeof n?n:function(){return Ma(n,this)}}function C(n){return"function"==typeof n?n:function(){return xa(n,this)}}function z(n,t){function e(){this.removeAttribute(n)}function r(){this.removeAttributeNS(n.space,n.local)}function u(){this.setAttribute(n,t)}function i(){this.setAttributeNS(n.space,n.local,t)}function o(){var e=t.apply(this,arguments);null==e?this.removeAttribute(n):this.setAttribute(n,e)}function a(){var e=t.apply(this,arguments);null==e?this.removeAttributeNS(n.space,n.local):this.setAttributeNS(n.space,n.local,e)}return n=ta.ns.qualify(n),null==t?n.local?r:e:"function"==typeof t?n.local?a:o:n.local?i:u}function q(n){return n.trim().replace(/\s+/g," ")}function L(n){return new RegExp("(?:^|\\s+)"+ta.requote(n)+"(?:\\s+|$)","g")}function T(n){return(n+"").trim().split(/^|\s+/)}function R(n,t){function e(){for(var e=-1;++e<u;)n[e](this,t)}function r(){for(var e=-1,r=t.apply(this,arguments);++e<u;)n[e](this,r)}n=T(n).map(D);var u=n.length;return"function"==typeof t?r:e}function D(n){var t=L(n);return function(e,r){if(u=e.classList)return r?u.add(n):u.remove(n);var u=e.getAttribute("class")||"";r?(t.lastIndex=0,t.test(u)||e.setAttribute("class",q(u+" "+n))):e.setAttribute("class",q(u.replace(t," ")))}}function P(n,t,e){function r(){this.style.removeProperty(n)}function u(){this.style.setProperty(n,t,e)}function i(){var r=t.apply(this,arguments);null==r?this.style.removeProperty(n):this.style.setProperty(n,r,e)}return null==t?r:"function"==typeof t?i:u}function U(n,t){function e(){delete this[n]}function r(){this[n]=t}function u(){var e=t.apply(this,arguments);null==e?delete this[n]:this[n]=e}return null==t?e:"function"==typeof t?u:r}function j(n){function t(){var t=this.ownerDocument,e=this.namespaceURI;return e?t.createElementNS(e,n):t.createElement(n)}function e(){return this.ownerDocument.createElementNS(n.space,n.local)}return"function"==typeof n?n:(n=ta.ns.qualify(n)).local?e:t}function F(){var n=this.parentNode;n&&n.removeChild(this)}function H(n){return{__data__:n}}function O(n){return function(){return ba(this,n)}}function I(n){return arguments.length||(n=e),function(t,e){return t&&e?n(t.__data__,e.__data__):!t-!e}}function Y(n,t){for(var e=0,r=n.length;r>e;e++)for(var u,i=n[e],o=0,a=i.length;a>o;o++)(u=i[o])&&t(u,o,e);return n}function Z(n){return ya(n,Sa),n}function V(n){var t,e;return function(r,u,i){var o,a=n[i].update,c=a.length;for(i!=e&&(e=i,t=0),u>=t&&(t=u+1);!(o=a[t])&&++t<c;);return o}}function X(n,t,e){function r(){var t=this[o];t&&(this.removeEventListener(n,t,t.$),delete this[o])}function u(){var u=c(t,ra(arguments));r.call(this),this.addEventListener(n,this[o]=u,u.$=e),u._=t}function i(){var t,e=new RegExp("^__on([^.]+)"+ta.requote(n)+"$");for(var r in this)if(t=r.match(e)){var u=this[r];this.removeEventListener(t[1],u,u.$),delete this[r]}}var o="__on"+n,a=n.indexOf("."),c=$;a>0&&(n=n.slice(0,a));var l=ka.get(n);return l&&(n=l,c=B),a?t?u:r:t?b:i}function $(n,t){return function(e){var r=ta.event;ta.event=e,t[0]=this.__data__;try{n.apply(this,t)}finally{ta.event=r}}}function B(n,t){var e=$(n,t);return function(n){var t=this,r=n.relatedTarget;r&&(r===t||8&r.compareDocumentPosition(t))||e.call(t,n)}}function W(e){var r=".dragsuppress-"+ ++Aa,u="click"+r,i=ta.select(t(e)).on("touchmove"+r,S).on("dragstart"+r,S).on("selectstart"+r,S);if(null==Ea&&(Ea="onselectstart"in e?!1:x(e.style,"userSelect")),Ea){var o=n(e).style,a=o[Ea];o[Ea]="none"}return function(n){if(i.on(r,null),Ea&&(o[Ea]=a),n){var t=function(){i.on(u,null)};i.on(u,function(){S(),t()},!0),setTimeout(t,0)}}}function J(n,e){e.changedTouches&&(e=e.changedTouches[0]);var r=n.ownerSVGElement||n;if(r.createSVGPoint){var u=r.createSVGPoint();if(0>Na){var i=t(n);if(i.scrollX||i.scrollY){r=ta.select("body").append("svg").style({position:"absolute",top:0,left:0,margin:0,padding:0,border:"none"},"important");var o=r[0][0].getScreenCTM();Na=!(o.f||o.e),r.remove()}}return Na?(u.x=e.pageX,u.y=e.pageY):(u.x=e.clientX,u.y=e.clientY),u=u.matrixTransform(n.getScreenCTM().inverse()),[u.x,u.y]}var a=n.getBoundingClientRect();return[e.clientX-a.left-n.clientLeft,e.clientY-a.top-n.clientTop]}function G(){return ta.event.changedTouches[0].identifier}function K(n){return n>0?1:0>n?-1:0}function Q(n,t,e){return(t[0]-n[0])*(e[1]-n[1])-(t[1]-n[1])*(e[0]-n[0])}function nt(n){return n>1?0:-1>n?qa:Math.acos(n)}function tt(n){return n>1?Ra:-1>n?-Ra:Math.asin(n)}function et(n){return((n=Math.exp(n))-1/n)/2}function rt(n){return((n=Math.exp(n))+1/n)/2}function ut(n){return((n=Math.exp(2*n))-1)/(n+1)}function it(n){return(n=Math.sin(n/2))*n}function ot(){}function at(n,t,e){return this instanceof at?(this.h=+n,this.s=+t,void(this.l=+e)):arguments.length<2?n instanceof at?new at(n.h,n.s,n.l):bt(""+n,_t,at):new at(n,t,e)}function ct(n,t,e){function r(n){return n>360?n-=360:0>n&&(n+=360),60>n?i+(o-i)*n/60:180>n?o:240>n?i+(o-i)*(240-n)/60:i}function u(n){return Math.round(255*r(n))}var i,o;return n=isNaN(n)?0:(n%=360)<0?n+360:n,t=isNaN(t)?0:0>t?0:t>1?1:t,e=0>e?0:e>1?1:e,o=.5>=e?e*(1+t):e+t-e*t,i=2*e-o,new mt(u(n+120),u(n),u(n-120))}function lt(n,t,e){return this instanceof lt?(this.h=+n,this.c=+t,void(this.l=+e)):arguments.length<2?n instanceof lt?new lt(n.h,n.c,n.l):n instanceof ft?gt(n.l,n.a,n.b):gt((n=wt((n=ta.rgb(n)).r,n.g,n.b)).l,n.a,n.b):new lt(n,t,e)}function st(n,t,e){return isNaN(n)&&(n=0),isNaN(t)&&(t=0),new ft(e,Math.cos(n*=Da)*t,Math.sin(n)*t)}function ft(n,t,e){return this instanceof ft?(this.l=+n,this.a=+t,void(this.b=+e)):arguments.length<2?n instanceof ft?new ft(n.l,n.a,n.b):n instanceof lt?st(n.h,n.c,n.l):wt((n=mt(n)).r,n.g,n.b):new ft(n,t,e)}function ht(n,t,e){var r=(n+16)/116,u=r+t/500,i=r-e/200;return u=pt(u)*Xa,r=pt(r)*$a,i=pt(i)*Ba,new mt(dt(3.2404542*u-1.5371385*r-.4985314*i),dt(-.969266*u+1.8760108*r+.041556*i),dt(.0556434*u-.2040259*r+1.0572252*i))}function gt(n,t,e){return n>0?new lt(Math.atan2(e,t)*Pa,Math.sqrt(t*t+e*e),n):new lt(0/0,0/0,n)}function pt(n){return n>.206893034?n*n*n:(n-4/29)/7.787037}function vt(n){return n>.008856?Math.pow(n,1/3):7.787037*n+4/29}function dt(n){return Math.round(255*(.00304>=n?12.92*n:1.055*Math.pow(n,1/2.4)-.055))}function mt(n,t,e){return this instanceof mt?(this.r=~~n,this.g=~~t,void(this.b=~~e)):arguments.length<2?n instanceof mt?new mt(n.r,n.g,n.b):bt(""+n,mt,ct):new mt(n,t,e)}function yt(n){return new mt(n>>16,n>>8&255,255&n)}function Mt(n){return yt(n)+""}function xt(n){return 16>n?"0"+Math.max(0,n).toString(16):Math.min(255,n).toString(16)}function bt(n,t,e){var r,u,i,o=0,a=0,c=0;if(r=/([a-z]+)\((.*)\)/i.exec(n))switch(u=r[2].split(","),r[1]){case"hsl":return e(parseFloat(u[0]),parseFloat(u[1])/100,parseFloat(u[2])/100);case"rgb":return t(kt(u[0]),kt(u[1]),kt(u[2]))}return(i=Ga.get(n.toLowerCase()))?t(i.r,i.g,i.b):(null==n||"#"!==n.charAt(0)||isNaN(i=parseInt(n.slice(1),16))||(4===n.length?(o=(3840&i)>>4,o=o>>4|o,a=240&i,a=a>>4|a,c=15&i,c=c<<4|c):7===n.length&&(o=(16711680&i)>>16,a=(65280&i)>>8,c=255&i)),t(o,a,c))}function _t(n,t,e){var r,u,i=Math.min(n/=255,t/=255,e/=255),o=Math.max(n,t,e),a=o-i,c=(o+i)/2;return a?(u=.5>c?a/(o+i):a/(2-o-i),r=n==o?(t-e)/a+(e>t?6:0):t==o?(e-n)/a+2:(n-t)/a+4,r*=60):(r=0/0,u=c>0&&1>c?0:r),new at(r,u,c)}function wt(n,t,e){n=St(n),t=St(t),e=St(e);var r=vt((.4124564*n+.3575761*t+.1804375*e)/Xa),u=vt((.2126729*n+.7151522*t+.072175*e)/$a),i=vt((.0193339*n+.119192*t+.9503041*e)/Ba);return ft(116*u-16,500*(r-u),200*(u-i))}function St(n){return(n/=255)<=.04045?n/12.92:Math.pow((n+.055)/1.055,2.4)}function kt(n){var t=parseFloat(n);return"%"===n.charAt(n.length-1)?Math.round(2.55*t):t}function Et(n){return"function"==typeof n?n:function(){return n}}function At(n){return function(t,e,r){return 2===arguments.length&&"function"==typeof e&&(r=e,e=null),Nt(t,e,n,r)}}function Nt(n,t,e,r){function u(){var n,t=c.status;if(!t&&zt(c)||t>=200&&300>t||304===t){try{n=e.call(i,c)}catch(r){return void o.error.call(i,r)}o.load.call(i,n)}else o.error.call(i,c)}var i={},o=ta.dispatch("beforesend","progress","load","error"),a={},c=new XMLHttpRequest,l=null;return!this.XDomainRequest||"withCredentials"in c||!/^(http(s)?:)?\/\//.test(n)||(c=new XDomainRequest),"onload"in c?c.onload=c.onerror=u:c.onreadystatechange=function(){c.readyState>3&&u()},c.onprogress=function(n){var t=ta.event;ta.event=n;try{o.progress.call(i,c)}finally{ta.event=t}},i.header=function(n,t){return n=(n+"").toLowerCase(),arguments.length<2?a[n]:(null==t?delete a[n]:a[n]=t+"",i)},i.mimeType=function(n){return arguments.length?(t=null==n?null:n+"",i):t},i.responseType=function(n){return arguments.length?(l=n,i):l},i.response=function(n){return e=n,i},["get","post"].forEach(function(n){i[n]=function(){return i.send.apply(i,[n].concat(ra(arguments)))}}),i.send=function(e,r,u){if(2===arguments.length&&"function"==typeof r&&(u=r,r=null),c.open(e,n,!0),null==t||"accept"in a||(a.accept=t+",*/*"),c.setRequestHeader)for(var s in a)c.setRequestHeader(s,a[s]);return null!=t&&c.overrideMimeType&&c.overrideMimeType(t),null!=l&&(c.responseType=l),null!=u&&i.on("error",u).on("load",function(n){u(null,n)}),o.beforesend.call(i,c),c.send(null==r?null:r),i},i.abort=function(){return c.abort(),i},ta.rebind(i,o,"on"),null==r?i:i.get(Ct(r))}function Ct(n){return 1===n.length?function(t,e){n(null==t?e:null)}:n}function zt(n){var t=n.responseType;return t&&"text"!==t?n.response:n.responseText}function qt(){var n=Lt(),t=Tt()-n;t>24?(isFinite(t)&&(clearTimeout(tc),tc=setTimeout(qt,t)),nc=0):(nc=1,rc(qt))}function Lt(){var n=Date.now();for(ec=Ka;ec;)n>=ec.t&&(ec.f=ec.c(n-ec.t)),ec=ec.n;return n}function Tt(){for(var n,t=Ka,e=1/0;t;)t.f?t=n?n.n=t.n:Ka=t.n:(t.t<e&&(e=t.t),t=(n=t).n);return Qa=n,e}function Rt(n,t){return t-(n?Math.ceil(Math.log(n)/Math.LN10):1)}function Dt(n,t){var e=Math.pow(10,3*ga(8-t));return{scale:t>8?function(n){return n/e}:function(n){return n*e},symbol:n}}function Pt(n){var t=n.decimal,e=n.thousands,r=n.grouping,u=n.currency,i=r&&e?function(n,t){for(var u=n.length,i=[],o=0,a=r[0],c=0;u>0&&a>0&&(c+a+1>t&&(a=Math.max(1,t-c)),i.push(n.substring(u-=a,u+a)),!((c+=a+1)>t));)a=r[o=(o+1)%r.length];return i.reverse().join(e)}:y;return function(n){var e=ic.exec(n),r=e[1]||" ",o=e[2]||">",a=e[3]||"-",c=e[4]||"",l=e[5],s=+e[6],f=e[7],h=e[8],g=e[9],p=1,v="",d="",m=!1,y=!0;switch(h&&(h=+h.substring(1)),(l||"0"===r&&"="===o)&&(l=r="0",o="="),g){case"n":f=!0,g="g";break;case"%":p=100,d="%",g="f";break;case"p":p=100,d="%",g="r";break;case"b":case"o":case"x":case"X":"#"===c&&(v="0"+g.toLowerCase());case"c":y=!1;case"d":m=!0,h=0;break;case"s":p=-1,g="r"}"$"===c&&(v=u[0],d=u[1]),"r"!=g||h||(g="g"),null!=h&&("g"==g?h=Math.max(1,Math.min(21,h)):("e"==g||"f"==g)&&(h=Math.max(0,Math.min(20,h)))),g=oc.get(g)||Ut;var M=l&&f;return function(n){var e=d;if(m&&n%1)return"";var u=0>n||0===n&&0>1/n?(n=-n,"-"):"-"===a?"":a;if(0>p){var c=ta.formatPrefix(n,h);n=c.scale(n),e=c.symbol+d}else n*=p;n=g(n,h);var x,b,_=n.lastIndexOf(".");if(0>_){var w=y?n.lastIndexOf("e"):-1;0>w?(x=n,b=""):(x=n.substring(0,w),b=n.substring(w))}else x=n.substring(0,_),b=t+n.substring(_+1);!l&&f&&(x=i(x,1/0));var S=v.length+x.length+b.length+(M?0:u.length),k=s>S?new Array(S=s-S+1).join(r):"";return M&&(x=i(k+x,k.length?s-b.length:1/0)),u+=v,n=x+b,("<"===o?u+n+k:">"===o?k+u+n:"^"===o?k.substring(0,S>>=1)+u+n+k.substring(S):u+(M?n:k+n))+e}}}function Ut(n){return n+""}function jt(){this._=new Date(arguments.length>1?Date.UTC.apply(this,arguments):arguments[0])}function Ft(n,t,e){function r(t){var e=n(t),r=i(e,1);return r-t>t-e?e:r}function u(e){return t(e=n(new cc(e-1)),1),e}function i(n,e){return t(n=new cc(+n),e),n}function o(n,r,i){var o=u(n),a=[];if(i>1)for(;r>o;)e(o)%i||a.push(new Date(+o)),t(o,1);else for(;r>o;)a.push(new Date(+o)),t(o,1);return a}function a(n,t,e){try{cc=jt;var r=new jt;return r._=n,o(r,t,e)}finally{cc=Date}}n.floor=n,n.round=r,n.ceil=u,n.offset=i,n.range=o;var c=n.utc=Ht(n);return c.floor=c,c.round=Ht(r),c.ceil=Ht(u),c.offset=Ht(i),c.range=a,n}function Ht(n){return function(t,e){try{cc=jt;var r=new jt;return r._=t,n(r,e)._}finally{cc=Date}}}function Ot(n){function t(n){function t(t){for(var e,u,i,o=[],a=-1,c=0;++a<r;)37===n.charCodeAt(a)&&(o.push(n.slice(c,a)),null!=(u=sc[e=n.charAt(++a)])&&(e=n.charAt(++a)),(i=N[e])&&(e=i(t,null==u?"e"===e?" ":"0":u)),o.push(e),c=a+1);return o.push(n.slice(c,a)),o.join("")}var r=n.length;return t.parse=function(t){var r={y:1900,m:0,d:1,H:0,M:0,S:0,L:0,Z:null},u=e(r,n,t,0);if(u!=t.length)return null;"p"in r&&(r.H=r.H%12+12*r.p);var i=null!=r.Z&&cc!==jt,o=new(i?jt:cc);return"j"in r?o.setFullYear(r.y,0,r.j):"w"in r&&("W"in r||"U"in r)?(o.setFullYear(r.y,0,1),o.setFullYear(r.y,0,"W"in r?(r.w+6)%7+7*r.W-(o.getDay()+5)%7:r.w+7*r.U-(o.getDay()+6)%7)):o.setFullYear(r.y,r.m,r.d),o.setHours(r.H+(r.Z/100|0),r.M+r.Z%100,r.S,r.L),i?o._:o},t.toString=function(){return n},t}function e(n,t,e,r){for(var u,i,o,a=0,c=t.length,l=e.length;c>a;){if(r>=l)return-1;if(u=t.charCodeAt(a++),37===u){if(o=t.charAt(a++),i=C[o in sc?t.charAt(a++):o],!i||(r=i(n,e,r))<0)return-1}else if(u!=e.charCodeAt(r++))return-1}return r}function r(n,t,e){_.lastIndex=0;var r=_.exec(t.slice(e));return r?(n.w=w.get(r[0].toLowerCase()),e+r[0].length):-1}function u(n,t,e){x.lastIndex=0;var r=x.exec(t.slice(e));return r?(n.w=b.get(r[0].toLowerCase()),e+r[0].length):-1}function i(n,t,e){E.lastIndex=0;var r=E.exec(t.slice(e));return r?(n.m=A.get(r[0].toLowerCase()),e+r[0].length):-1}function o(n,t,e){S.lastIndex=0;var r=S.exec(t.slice(e));return r?(n.m=k.get(r[0].toLowerCase()),e+r[0].length):-1}function a(n,t,r){return e(n,N.c.toString(),t,r)}function c(n,t,r){return e(n,N.x.toString(),t,r)}function l(n,t,r){return e(n,N.X.toString(),t,r)}function s(n,t,e){var r=M.get(t.slice(e,e+=2).toLowerCase());return null==r?-1:(n.p=r,e)}var f=n.dateTime,h=n.date,g=n.time,p=n.periods,v=n.days,d=n.shortDays,m=n.months,y=n.shortMonths;t.utc=function(n){function e(n){try{cc=jt;var t=new cc;return t._=n,r(t)}finally{cc=Date}}var r=t(n);return e.parse=function(n){try{cc=jt;var t=r.parse(n);return t&&t._}finally{cc=Date}},e.toString=r.toString,e},t.multi=t.utc.multi=ae;var M=ta.map(),x=Yt(v),b=Zt(v),_=Yt(d),w=Zt(d),S=Yt(m),k=Zt(m),E=Yt(y),A=Zt(y);p.forEach(function(n,t){M.set(n.toLowerCase(),t)});var N={a:function(n){return d[n.getDay()]},A:function(n){return v[n.getDay()]},b:function(n){return y[n.getMonth()]},B:function(n){return m[n.getMonth()]},c:t(f),d:function(n,t){return It(n.getDate(),t,2)},e:function(n,t){return It(n.getDate(),t,2)},H:function(n,t){return It(n.getHours(),t,2)},I:function(n,t){return It(n.getHours()%12||12,t,2)},j:function(n,t){return It(1+ac.dayOfYear(n),t,3)},L:function(n,t){return It(n.getMilliseconds(),t,3)},m:function(n,t){return It(n.getMonth()+1,t,2)},M:function(n,t){return It(n.getMinutes(),t,2)},p:function(n){return p[+(n.getHours()>=12)]},S:function(n,t){return It(n.getSeconds(),t,2)},U:function(n,t){return It(ac.sundayOfYear(n),t,2)},w:function(n){return n.getDay()},W:function(n,t){return It(ac.mondayOfYear(n),t,2)},x:t(h),X:t(g),y:function(n,t){return It(n.getFullYear()%100,t,2)},Y:function(n,t){return It(n.getFullYear()%1e4,t,4)},Z:ie,"%":function(){return"%"}},C={a:r,A:u,b:i,B:o,c:a,d:Qt,e:Qt,H:te,I:te,j:ne,L:ue,m:Kt,M:ee,p:s,S:re,U:Xt,w:Vt,W:$t,x:c,X:l,y:Wt,Y:Bt,Z:Jt,"%":oe};return t}function It(n,t,e){var r=0>n?"-":"",u=(r?-n:n)+"",i=u.length;return r+(e>i?new Array(e-i+1).join(t)+u:u)}function Yt(n){return new RegExp("^(?:"+n.map(ta.requote).join("|")+")","i")}function Zt(n){for(var t=new l,e=-1,r=n.length;++e<r;)t.set(n[e].toLowerCase(),e);return t}function Vt(n,t,e){fc.lastIndex=0;var r=fc.exec(t.slice(e,e+1));return r?(n.w=+r[0],e+r[0].length):-1}function Xt(n,t,e){fc.lastIndex=0;var r=fc.exec(t.slice(e));return r?(n.U=+r[0],e+r[0].length):-1}function $t(n,t,e){fc.lastIndex=0;var r=fc.exec(t.slice(e));return r?(n.W=+r[0],e+r[0].length):-1}function Bt(n,t,e){fc.lastIndex=0;var r=fc.exec(t.slice(e,e+4));return r?(n.y=+r[0],e+r[0].length):-1}function Wt(n,t,e){fc.lastIndex=0;var r=fc.exec(t.slice(e,e+2));return r?(n.y=Gt(+r[0]),e+r[0].length):-1}function Jt(n,t,e){return/^[+-]\d{4}$/.test(t=t.slice(e,e+5))?(n.Z=-t,e+5):-1}function Gt(n){return n+(n>68?1900:2e3)}function Kt(n,t,e){fc.lastIndex=0;var r=fc.exec(t.slice(e,e+2));return r?(n.m=r[0]-1,e+r[0].length):-1}function Qt(n,t,e){fc.lastIndex=0;var r=fc.exec(t.slice(e,e+2));return r?(n.d=+r[0],e+r[0].length):-1}function ne(n,t,e){fc.lastIndex=0;var r=fc.exec(t.slice(e,e+3));return r?(n.j=+r[0],e+r[0].length):-1}function te(n,t,e){fc.lastIndex=0;var r=fc.exec(t.slice(e,e+2));return r?(n.H=+r[0],e+r[0].length):-1}function ee(n,t,e){fc.lastIndex=0;var r=fc.exec(t.slice(e,e+2));return r?(n.M=+r[0],e+r[0].length):-1}function re(n,t,e){fc.lastIndex=0;var r=fc.exec(t.slice(e,e+2));return r?(n.S=+r[0],e+r[0].length):-1}function ue(n,t,e){fc.lastIndex=0;var r=fc.exec(t.slice(e,e+3));return r?(n.L=+r[0],e+r[0].length):-1}function ie(n){var t=n.getTimezoneOffset(),e=t>0?"-":"+",r=ga(t)/60|0,u=ga(t)%60;return e+It(r,"0",2)+It(u,"0",2)}function oe(n,t,e){hc.lastIndex=0;var r=hc.exec(t.slice(e,e+1));return r?e+r[0].length:-1}function ae(n){for(var t=n.length,e=-1;++e<t;)n[e][0]=this(n[e][0]);return function(t){for(var e=0,r=n[e];!r[1](t);)r=n[++e];return r[0](t)}}function ce(){}function le(n,t,e){var r=e.s=n+t,u=r-n,i=r-u;e.t=n-i+(t-u)}function se(n,t){n&&dc.hasOwnProperty(n.type)&&dc[n.type](n,t)}function fe(n,t,e){var r,u=-1,i=n.length-e;for(t.lineStart();++u<i;)r=n[u],t.point(r[0],r[1],r[2]);t.lineEnd()}function he(n,t){var e=-1,r=n.length;for(t.polygonStart();++e<r;)fe(n[e],t,1);t.polygonEnd()}function ge(){function n(n,t){n*=Da,t=t*Da/2+qa/4;var e=n-r,o=e>=0?1:-1,a=o*e,c=Math.cos(t),l=Math.sin(t),s=i*l,f=u*c+s*Math.cos(a),h=s*o*Math.sin(a);yc.add(Math.atan2(h,f)),r=n,u=c,i=l}var t,e,r,u,i;Mc.point=function(o,a){Mc.point=n,r=(t=o)*Da,u=Math.cos(a=(e=a)*Da/2+qa/4),i=Math.sin(a)},Mc.lineEnd=function(){n(t,e)}}function pe(n){var t=n[0],e=n[1],r=Math.cos(e);return[r*Math.cos(t),r*Math.sin(t),Math.sin(e)]}function ve(n,t){return n[0]*t[0]+n[1]*t[1]+n[2]*t[2]}function de(n,t){return[n[1]*t[2]-n[2]*t[1],n[2]*t[0]-n[0]*t[2],n[0]*t[1]-n[1]*t[0]]}function me(n,t){n[0]+=t[0],n[1]+=t[1],n[2]+=t[2]}function ye(n,t){return[n[0]*t,n[1]*t,n[2]*t]}function Me(n){var t=Math.sqrt(n[0]*n[0]+n[1]*n[1]+n[2]*n[2]);n[0]/=t,n[1]/=t,n[2]/=t}function xe(n){return[Math.atan2(n[1],n[0]),tt(n[2])]}function be(n,t){return ga(n[0]-t[0])<Ca&&ga(n[1]-t[1])<Ca}function _e(n,t){n*=Da;var e=Math.cos(t*=Da);we(e*Math.cos(n),e*Math.sin(n),Math.sin(t))}function we(n,t,e){++xc,_c+=(n-_c)/xc,wc+=(t-wc)/xc,Sc+=(e-Sc)/xc}function Se(){function n(n,u){n*=Da;var i=Math.cos(u*=Da),o=i*Math.cos(n),a=i*Math.sin(n),c=Math.sin(u),l=Math.atan2(Math.sqrt((l=e*c-r*a)*l+(l=r*o-t*c)*l+(l=t*a-e*o)*l),t*o+e*a+r*c);bc+=l,kc+=l*(t+(t=o)),Ec+=l*(e+(e=a)),Ac+=l*(r+(r=c)),we(t,e,r)}var t,e,r;qc.point=function(u,i){u*=Da;var o=Math.cos(i*=Da);t=o*Math.cos(u),e=o*Math.sin(u),r=Math.sin(i),qc.point=n,we(t,e,r)}}function ke(){qc.point=_e}function Ee(){function n(n,t){n*=Da;var e=Math.cos(t*=Da),o=e*Math.cos(n),a=e*Math.sin(n),c=Math.sin(t),l=u*c-i*a,s=i*o-r*c,f=r*a-u*o,h=Math.sqrt(l*l+s*s+f*f),g=r*o+u*a+i*c,p=h&&-nt(g)/h,v=Math.atan2(h,g);Nc+=p*l,Cc+=p*s,zc+=p*f,bc+=v,kc+=v*(r+(r=o)),Ec+=v*(u+(u=a)),Ac+=v*(i+(i=c)),we(r,u,i)}var t,e,r,u,i;qc.point=function(o,a){t=o,e=a,qc.point=n,o*=Da;var c=Math.cos(a*=Da);r=c*Math.cos(o),u=c*Math.sin(o),i=Math.sin(a),we(r,u,i)},qc.lineEnd=function(){n(t,e),qc.lineEnd=ke,qc.point=_e}}function Ae(n,t){function e(e,r){return e=n(e,r),t(e[0],e[1])}return n.invert&&t.invert&&(e.invert=function(e,r){return e=t.invert(e,r),e&&n.invert(e[0],e[1])}),e}function Ne(){return!0}function Ce(n,t,e,r,u){var i=[],o=[];if(n.forEach(function(n){if(!((t=n.length-1)<=0)){var t,e=n[0],r=n[t];if(be(e,r)){u.lineStart();for(var a=0;t>a;++a)u.point((e=n[a])[0],e[1]);return void u.lineEnd()}var c=new qe(e,n,null,!0),l=new qe(e,null,c,!1);c.o=l,i.push(c),o.push(l),c=new qe(r,n,null,!1),l=new qe(r,null,c,!0),c.o=l,i.push(c),o.push(l)}}),o.sort(t),ze(i),ze(o),i.length){for(var a=0,c=e,l=o.length;l>a;++a)o[a].e=c=!c;for(var s,f,h=i[0];;){for(var g=h,p=!0;g.v;)if((g=g.n)===h)return;s=g.z,u.lineStart();do{if(g.v=g.o.v=!0,g.e){if(p)for(var a=0,l=s.length;l>a;++a)u.point((f=s[a])[0],f[1]);else r(g.x,g.n.x,1,u);g=g.n}else{if(p){s=g.p.z;for(var a=s.length-1;a>=0;--a)u.point((f=s[a])[0],f[1])}else r(g.x,g.p.x,-1,u);g=g.p}g=g.o,s=g.z,p=!p}while(!g.v);u.lineEnd()}}}function ze(n){if(t=n.length){for(var t,e,r=0,u=n[0];++r<t;)u.n=e=n[r],e.p=u,u=e;u.n=e=n[0],e.p=u}}function qe(n,t,e,r){this.x=n,this.z=t,this.o=e,this.e=r,this.v=!1,this.n=this.p=null}function Le(n,t,e,r){return function(u,i){function o(t,e){var r=u(t,e);n(t=r[0],e=r[1])&&i.point(t,e)}function a(n,t){var e=u(n,t);d.point(e[0],e[1])}function c(){y.point=a,d.lineStart()}function l(){y.point=o,d.lineEnd()}function s(n,t){v.push([n,t]);var e=u(n,t);x.point(e[0],e[1])}function f(){x.lineStart(),v=[]}function h(){s(v[0][0],v[0][1]),x.lineEnd();var n,t=x.clean(),e=M.buffer(),r=e.length;if(v.pop(),p.push(v),v=null,r)if(1&t){n=e[0];var u,r=n.length-1,o=-1;if(r>0){for(b||(i.polygonStart(),b=!0),i.lineStart();++o<r;)i.point((u=n[o])[0],u[1]);i.lineEnd()}}else r>1&&2&t&&e.push(e.pop().concat(e.shift())),g.push(e.filter(Te))}var g,p,v,d=t(i),m=u.invert(r[0],r[1]),y={point:o,lineStart:c,lineEnd:l,polygonStart:function(){y.point=s,y.lineStart=f,y.lineEnd=h,g=[],p=[]},polygonEnd:function(){y.point=o,y.lineStart=c,y.lineEnd=l,g=ta.merge(g);var n=Fe(m,p);g.length?(b||(i.polygonStart(),b=!0),Ce(g,De,n,e,i)):n&&(b||(i.polygonStart(),b=!0),i.lineStart(),e(null,null,1,i),i.lineEnd()),b&&(i.polygonEnd(),b=!1),g=p=null},sphere:function(){i.polygonStart(),i.lineStart(),e(null,null,1,i),i.lineEnd(),i.polygonEnd()}},M=Re(),x=t(M),b=!1;return y}}function Te(n){return n.length>1}function Re(){var n,t=[];return{lineStart:function(){t.push(n=[])},point:function(t,e){n.push([t,e])},lineEnd:b,buffer:function(){var e=t;return t=[],n=null,e},rejoin:function(){t.length>1&&t.push(t.pop().concat(t.shift()))}}}function De(n,t){return((n=n.x)[0]<0?n[1]-Ra-Ca:Ra-n[1])-((t=t.x)[0]<0?t[1]-Ra-Ca:Ra-t[1])}function Pe(n){var t,e=0/0,r=0/0,u=0/0;return{lineStart:function(){n.lineStart(),t=1},point:function(i,o){var a=i>0?qa:-qa,c=ga(i-e);ga(c-qa)<Ca?(n.point(e,r=(r+o)/2>0?Ra:-Ra),n.point(u,r),n.lineEnd(),n.lineStart(),n.point(a,r),n.point(i,r),t=0):u!==a&&c>=qa&&(ga(e-u)<Ca&&(e-=u*Ca),ga(i-a)<Ca&&(i-=a*Ca),r=Ue(e,r,i,o),n.point(u,r),n.lineEnd(),n.lineStart(),n.point(a,r),t=0),n.point(e=i,r=o),u=a},lineEnd:function(){n.lineEnd(),e=r=0/0},clean:function(){return 2-t}}}function Ue(n,t,e,r){var u,i,o=Math.sin(n-e);return ga(o)>Ca?Math.atan((Math.sin(t)*(i=Math.cos(r))*Math.sin(e)-Math.sin(r)*(u=Math.cos(t))*Math.sin(n))/(u*i*o)):(t+r)/2}function je(n,t,e,r){var u;if(null==n)u=e*Ra,r.point(-qa,u),r.point(0,u),r.point(qa,u),r.point(qa,0),r.point(qa,-u),r.point(0,-u),r.point(-qa,-u),r.point(-qa,0),r.point(-qa,u);else if(ga(n[0]-t[0])>Ca){var i=n[0]<t[0]?qa:-qa;u=e*i/2,r.point(-i,u),r.point(0,u),r.point(i,u)}else r.point(t[0],t[1])}function Fe(n,t){var e=n[0],r=n[1],u=[Math.sin(e),-Math.cos(e),0],i=0,o=0;yc.reset();for(var a=0,c=t.length;c>a;++a){var l=t[a],s=l.length;if(s)for(var f=l[0],h=f[0],g=f[1]/2+qa/4,p=Math.sin(g),v=Math.cos(g),d=1;;){d===s&&(d=0),n=l[d];var m=n[0],y=n[1]/2+qa/4,M=Math.sin(y),x=Math.cos(y),b=m-h,_=b>=0?1:-1,w=_*b,S=w>qa,k=p*M;if(yc.add(Math.atan2(k*_*Math.sin(w),v*x+k*Math.cos(w))),i+=S?b+_*La:b,S^h>=e^m>=e){var E=de(pe(f),pe(n));Me(E);var A=de(u,E);Me(A);var N=(S^b>=0?-1:1)*tt(A[2]);(r>N||r===N&&(E[0]||E[1]))&&(o+=S^b>=0?1:-1)}if(!d++)break;h=m,p=M,v=x,f=n}}return(-Ca>i||Ca>i&&0>yc)^1&o}function He(n){function t(n,t){return Math.cos(n)*Math.cos(t)>i}function e(n){var e,i,c,l,s;return{lineStart:function(){l=c=!1,s=1},point:function(f,h){var g,p=[f,h],v=t(f,h),d=o?v?0:u(f,h):v?u(f+(0>f?qa:-qa),h):0;if(!e&&(l=c=v)&&n.lineStart(),v!==c&&(g=r(e,p),(be(e,g)||be(p,g))&&(p[0]+=Ca,p[1]+=Ca,v=t(p[0],p[1]))),v!==c)s=0,v?(n.lineStart(),g=r(p,e),n.point(g[0],g[1])):(g=r(e,p),n.point(g[0],g[1]),n.lineEnd()),e=g;else if(a&&e&&o^v){var m;d&i||!(m=r(p,e,!0))||(s=0,o?(n.lineStart(),n.point(m[0][0],m[0][1]),n.point(m[1][0],m[1][1]),n.lineEnd()):(n.point(m[1][0],m[1][1]),n.lineEnd(),n.lineStart(),n.point(m[0][0],m[0][1])))}!v||e&&be(e,p)||n.point(p[0],p[1]),e=p,c=v,i=d},lineEnd:function(){c&&n.lineEnd(),e=null},clean:function(){return s|(l&&c)<<1}}}function r(n,t,e){var r=pe(n),u=pe(t),o=[1,0,0],a=de(r,u),c=ve(a,a),l=a[0],s=c-l*l;if(!s)return!e&&n;var f=i*c/s,h=-i*l/s,g=de(o,a),p=ye(o,f),v=ye(a,h);me(p,v);var d=g,m=ve(p,d),y=ve(d,d),M=m*m-y*(ve(p,p)-1);if(!(0>M)){var x=Math.sqrt(M),b=ye(d,(-m-x)/y);if(me(b,p),b=xe(b),!e)return b;var _,w=n[0],S=t[0],k=n[1],E=t[1];w>S&&(_=w,w=S,S=_);var A=S-w,N=ga(A-qa)<Ca,C=N||Ca>A;if(!N&&k>E&&(_=k,k=E,E=_),C?N?k+E>0^b[1]<(ga(b[0]-w)<Ca?k:E):k<=b[1]&&b[1]<=E:A>qa^(w<=b[0]&&b[0]<=S)){var z=ye(d,(-m+x)/y);return me(z,p),[b,xe(z)]}}}function u(t,e){var r=o?n:qa-n,u=0;return-r>t?u|=1:t>r&&(u|=2),-r>e?u|=4:e>r&&(u|=8),u}var i=Math.cos(n),o=i>0,a=ga(i)>Ca,c=gr(n,6*Da);return Le(t,e,c,o?[0,-n]:[-qa,n-qa])}function Oe(n,t,e,r){return function(u){var i,o=u.a,a=u.b,c=o.x,l=o.y,s=a.x,f=a.y,h=0,g=1,p=s-c,v=f-l;if(i=n-c,p||!(i>0)){if(i/=p,0>p){if(h>i)return;g>i&&(g=i)}else if(p>0){if(i>g)return;i>h&&(h=i)}if(i=e-c,p||!(0>i)){if(i/=p,0>p){if(i>g)return;i>h&&(h=i)}else if(p>0){if(h>i)return;g>i&&(g=i)}if(i=t-l,v||!(i>0)){if(i/=v,0>v){if(h>i)return;g>i&&(g=i)}else if(v>0){if(i>g)return;i>h&&(h=i)}if(i=r-l,v||!(0>i)){if(i/=v,0>v){if(i>g)return;i>h&&(h=i)}else if(v>0){if(h>i)return;g>i&&(g=i)}return h>0&&(u.a={x:c+h*p,y:l+h*v}),1>g&&(u.b={x:c+g*p,y:l+g*v}),u}}}}}}function Ie(n,t,e,r){function u(r,u){return ga(r[0]-n)<Ca?u>0?0:3:ga(r[0]-e)<Ca?u>0?2:1:ga(r[1]-t)<Ca?u>0?1:0:u>0?3:2}function i(n,t){return o(n.x,t.x)}function o(n,t){var e=u(n,1),r=u(t,1);return e!==r?e-r:0===e?t[1]-n[1]:1===e?n[0]-t[0]:2===e?n[1]-t[1]:t[0]-n[0]}return function(a){function c(n){for(var t=0,e=d.length,r=n[1],u=0;e>u;++u)for(var i,o=1,a=d[u],c=a.length,l=a[0];c>o;++o)i=a[o],l[1]<=r?i[1]>r&&Q(l,i,n)>0&&++t:i[1]<=r&&Q(l,i,n)<0&&--t,l=i;return 0!==t}function l(i,a,c,l){var s=0,f=0;if(null==i||(s=u(i,c))!==(f=u(a,c))||o(i,a)<0^c>0){do l.point(0===s||3===s?n:e,s>1?r:t);while((s=(s+c+4)%4)!==f)}else l.point(a[0],a[1])}function s(u,i){return u>=n&&e>=u&&i>=t&&r>=i}function f(n,t){s(n,t)&&a.point(n,t)}function h(){C.point=p,d&&d.push(m=[]),S=!0,w=!1,b=_=0/0}function g(){v&&(p(y,M),x&&w&&A.rejoin(),v.push(A.buffer())),C.point=f,w&&a.lineEnd()}function p(n,t){n=Math.max(-Tc,Math.min(Tc,n)),t=Math.max(-Tc,Math.min(Tc,t));var e=s(n,t);if(d&&m.push([n,t]),S)y=n,M=t,x=e,S=!1,e&&(a.lineStart(),a.point(n,t));else if(e&&w)a.point(n,t);else{var r={a:{x:b,y:_},b:{x:n,y:t}};N(r)?(w||(a.lineStart(),a.point(r.a.x,r.a.y)),a.point(r.b.x,r.b.y),e||a.lineEnd(),k=!1):e&&(a.lineStart(),a.point(n,t),k=!1)}b=n,_=t,w=e}var v,d,m,y,M,x,b,_,w,S,k,E=a,A=Re(),N=Oe(n,t,e,r),C={point:f,lineStart:h,lineEnd:g,polygonStart:function(){a=A,v=[],d=[],k=!0},polygonEnd:function(){a=E,v=ta.merge(v);var t=c([n,r]),e=k&&t,u=v.length;(e||u)&&(a.polygonStart(),e&&(a.lineStart(),l(null,null,1,a),a.lineEnd()),u&&Ce(v,i,t,l,a),a.polygonEnd()),v=d=m=null}};return C}}function Ye(n){var t=0,e=qa/3,r=ir(n),u=r(t,e);return u.parallels=function(n){return arguments.length?r(t=n[0]*qa/180,e=n[1]*qa/180):[t/qa*180,e/qa*180]},u}function Ze(n,t){function e(n,t){var e=Math.sqrt(i-2*u*Math.sin(t))/u;return[e*Math.sin(n*=u),o-e*Math.cos(n)]}var r=Math.sin(n),u=(r+Math.sin(t))/2,i=1+r*(2*u-r),o=Math.sqrt(i)/u;return e.invert=function(n,t){var e=o-t;return[Math.atan2(n,e)/u,tt((i-(n*n+e*e)*u*u)/(2*u))]},e}function Ve(){function n(n,t){Dc+=u*n-r*t,r=n,u=t}var t,e,r,u;Hc.point=function(i,o){Hc.point=n,t=r=i,e=u=o},Hc.lineEnd=function(){n(t,e)}}function Xe(n,t){Pc>n&&(Pc=n),n>jc&&(jc=n),Uc>t&&(Uc=t),t>Fc&&(Fc=t)}function $e(){function n(n,t){o.push("M",n,",",t,i)}function t(n,t){o.push("M",n,",",t),a.point=e}function e(n,t){o.push("L",n,",",t)}function r(){a.point=n}function u(){o.push("Z")}var i=Be(4.5),o=[],a={point:n,lineStart:function(){a.point=t},lineEnd:r,polygonStart:function(){a.lineEnd=u},polygonEnd:function(){a.lineEnd=r,a.point=n},pointRadius:function(n){return i=Be(n),a},result:function(){if(o.length){var n=o.join("");return o=[],n}}};return a}function Be(n){return"m0,"+n+"a"+n+","+n+" 0 1,1 0,"+-2*n+"a"+n+","+n+" 0 1,1 0,"+2*n+"z"}function We(n,t){_c+=n,wc+=t,++Sc}function Je(){function n(n,r){var u=n-t,i=r-e,o=Math.sqrt(u*u+i*i);kc+=o*(t+n)/2,Ec+=o*(e+r)/2,Ac+=o,We(t=n,e=r)}var t,e;Ic.point=function(r,u){Ic.point=n,We(t=r,e=u)}}function Ge(){Ic.point=We}function Ke(){function n(n,t){var e=n-r,i=t-u,o=Math.sqrt(e*e+i*i);kc+=o*(r+n)/2,Ec+=o*(u+t)/2,Ac+=o,o=u*n-r*t,Nc+=o*(r+n),Cc+=o*(u+t),zc+=3*o,We(r=n,u=t)}var t,e,r,u;Ic.point=function(i,o){Ic.point=n,We(t=r=i,e=u=o)},Ic.lineEnd=function(){n(t,e)}}function Qe(n){function t(t,e){n.moveTo(t+o,e),n.arc(t,e,o,0,La)}function e(t,e){n.moveTo(t,e),a.point=r}function r(t,e){n.lineTo(t,e)}function u(){a.point=t}function i(){n.closePath()}var o=4.5,a={point:t,lineStart:function(){a.point=e},lineEnd:u,polygonStart:function(){a.lineEnd=i},polygonEnd:function(){a.lineEnd=u,a.point=t},pointRadius:function(n){return o=n,a},result:b};return a}function nr(n){function t(n){return(a?r:e)(n)}function e(t){return rr(t,function(e,r){e=n(e,r),t.point(e[0],e[1])})}function r(t){function e(e,r){e=n(e,r),t.point(e[0],e[1])}function r(){M=0/0,S.point=i,t.lineStart()}function i(e,r){var i=pe([e,r]),o=n(e,r);u(M,x,y,b,_,w,M=o[0],x=o[1],y=e,b=i[0],_=i[1],w=i[2],a,t),t.point(M,x)}function o(){S.point=e,t.lineEnd()}function c(){r(),S.point=l,S.lineEnd=s}function l(n,t){i(f=n,h=t),g=M,p=x,v=b,d=_,m=w,S.point=i}function s(){u(M,x,y,b,_,w,g,p,f,v,d,m,a,t),S.lineEnd=o,o()}var f,h,g,p,v,d,m,y,M,x,b,_,w,S={point:e,lineStart:r,lineEnd:o,polygonStart:function(){t.polygonStart(),S.lineStart=c
},polygonEnd:function(){t.polygonEnd(),S.lineStart=r}};return S}function u(t,e,r,a,c,l,s,f,h,g,p,v,d,m){var y=s-t,M=f-e,x=y*y+M*M;if(x>4*i&&d--){var b=a+g,_=c+p,w=l+v,S=Math.sqrt(b*b+_*_+w*w),k=Math.asin(w/=S),E=ga(ga(w)-1)<Ca||ga(r-h)<Ca?(r+h)/2:Math.atan2(_,b),A=n(E,k),N=A[0],C=A[1],z=N-t,q=C-e,L=M*z-y*q;(L*L/x>i||ga((y*z+M*q)/x-.5)>.3||o>a*g+c*p+l*v)&&(u(t,e,r,a,c,l,N,C,E,b/=S,_/=S,w,d,m),m.point(N,C),u(N,C,E,b,_,w,s,f,h,g,p,v,d,m))}}var i=.5,o=Math.cos(30*Da),a=16;return t.precision=function(n){return arguments.length?(a=(i=n*n)>0&&16,t):Math.sqrt(i)},t}function tr(n){var t=nr(function(t,e){return n([t*Pa,e*Pa])});return function(n){return or(t(n))}}function er(n){this.stream=n}function rr(n,t){return{point:t,sphere:function(){n.sphere()},lineStart:function(){n.lineStart()},lineEnd:function(){n.lineEnd()},polygonStart:function(){n.polygonStart()},polygonEnd:function(){n.polygonEnd()}}}function ur(n){return ir(function(){return n})()}function ir(n){function t(n){return n=a(n[0]*Da,n[1]*Da),[n[0]*h+c,l-n[1]*h]}function e(n){return n=a.invert((n[0]-c)/h,(l-n[1])/h),n&&[n[0]*Pa,n[1]*Pa]}function r(){a=Ae(o=lr(m,M,x),i);var n=i(v,d);return c=g-n[0]*h,l=p+n[1]*h,u()}function u(){return s&&(s.valid=!1,s=null),t}var i,o,a,c,l,s,f=nr(function(n,t){return n=i(n,t),[n[0]*h+c,l-n[1]*h]}),h=150,g=480,p=250,v=0,d=0,m=0,M=0,x=0,b=Lc,_=y,w=null,S=null;return t.stream=function(n){return s&&(s.valid=!1),s=or(b(o,f(_(n)))),s.valid=!0,s},t.clipAngle=function(n){return arguments.length?(b=null==n?(w=n,Lc):He((w=+n)*Da),u()):w},t.clipExtent=function(n){return arguments.length?(S=n,_=n?Ie(n[0][0],n[0][1],n[1][0],n[1][1]):y,u()):S},t.scale=function(n){return arguments.length?(h=+n,r()):h},t.translate=function(n){return arguments.length?(g=+n[0],p=+n[1],r()):[g,p]},t.center=function(n){return arguments.length?(v=n[0]%360*Da,d=n[1]%360*Da,r()):[v*Pa,d*Pa]},t.rotate=function(n){return arguments.length?(m=n[0]%360*Da,M=n[1]%360*Da,x=n.length>2?n[2]%360*Da:0,r()):[m*Pa,M*Pa,x*Pa]},ta.rebind(t,f,"precision"),function(){return i=n.apply(this,arguments),t.invert=i.invert&&e,r()}}function or(n){return rr(n,function(t,e){n.point(t*Da,e*Da)})}function ar(n,t){return[n,t]}function cr(n,t){return[n>qa?n-La:-qa>n?n+La:n,t]}function lr(n,t,e){return n?t||e?Ae(fr(n),hr(t,e)):fr(n):t||e?hr(t,e):cr}function sr(n){return function(t,e){return t+=n,[t>qa?t-La:-qa>t?t+La:t,e]}}function fr(n){var t=sr(n);return t.invert=sr(-n),t}function hr(n,t){function e(n,t){var e=Math.cos(t),a=Math.cos(n)*e,c=Math.sin(n)*e,l=Math.sin(t),s=l*r+a*u;return[Math.atan2(c*i-s*o,a*r-l*u),tt(s*i+c*o)]}var r=Math.cos(n),u=Math.sin(n),i=Math.cos(t),o=Math.sin(t);return e.invert=function(n,t){var e=Math.cos(t),a=Math.cos(n)*e,c=Math.sin(n)*e,l=Math.sin(t),s=l*i-c*o;return[Math.atan2(c*i+l*o,a*r+s*u),tt(s*r-a*u)]},e}function gr(n,t){var e=Math.cos(n),r=Math.sin(n);return function(u,i,o,a){var c=o*t;null!=u?(u=pr(e,u),i=pr(e,i),(o>0?i>u:u>i)&&(u+=o*La)):(u=n+o*La,i=n-.5*c);for(var l,s=u;o>0?s>i:i>s;s-=c)a.point((l=xe([e,-r*Math.cos(s),-r*Math.sin(s)]))[0],l[1])}}function pr(n,t){var e=pe(t);e[0]-=n,Me(e);var r=nt(-e[1]);return((-e[2]<0?-r:r)+2*Math.PI-Ca)%(2*Math.PI)}function vr(n,t,e){var r=ta.range(n,t-Ca,e).concat(t);return function(n){return r.map(function(t){return[n,t]})}}function dr(n,t,e){var r=ta.range(n,t-Ca,e).concat(t);return function(n){return r.map(function(t){return[t,n]})}}function mr(n){return n.source}function yr(n){return n.target}function Mr(n,t,e,r){var u=Math.cos(t),i=Math.sin(t),o=Math.cos(r),a=Math.sin(r),c=u*Math.cos(n),l=u*Math.sin(n),s=o*Math.cos(e),f=o*Math.sin(e),h=2*Math.asin(Math.sqrt(it(r-t)+u*o*it(e-n))),g=1/Math.sin(h),p=h?function(n){var t=Math.sin(n*=h)*g,e=Math.sin(h-n)*g,r=e*c+t*s,u=e*l+t*f,o=e*i+t*a;return[Math.atan2(u,r)*Pa,Math.atan2(o,Math.sqrt(r*r+u*u))*Pa]}:function(){return[n*Pa,t*Pa]};return p.distance=h,p}function xr(){function n(n,u){var i=Math.sin(u*=Da),o=Math.cos(u),a=ga((n*=Da)-t),c=Math.cos(a);Yc+=Math.atan2(Math.sqrt((a=o*Math.sin(a))*a+(a=r*i-e*o*c)*a),e*i+r*o*c),t=n,e=i,r=o}var t,e,r;Zc.point=function(u,i){t=u*Da,e=Math.sin(i*=Da),r=Math.cos(i),Zc.point=n},Zc.lineEnd=function(){Zc.point=Zc.lineEnd=b}}function br(n,t){function e(t,e){var r=Math.cos(t),u=Math.cos(e),i=n(r*u);return[i*u*Math.sin(t),i*Math.sin(e)]}return e.invert=function(n,e){var r=Math.sqrt(n*n+e*e),u=t(r),i=Math.sin(u),o=Math.cos(u);return[Math.atan2(n*i,r*o),Math.asin(r&&e*i/r)]},e}function _r(n,t){function e(n,t){o>0?-Ra+Ca>t&&(t=-Ra+Ca):t>Ra-Ca&&(t=Ra-Ca);var e=o/Math.pow(u(t),i);return[e*Math.sin(i*n),o-e*Math.cos(i*n)]}var r=Math.cos(n),u=function(n){return Math.tan(qa/4+n/2)},i=n===t?Math.sin(n):Math.log(r/Math.cos(t))/Math.log(u(t)/u(n)),o=r*Math.pow(u(n),i)/i;return i?(e.invert=function(n,t){var e=o-t,r=K(i)*Math.sqrt(n*n+e*e);return[Math.atan2(n,e)/i,2*Math.atan(Math.pow(o/r,1/i))-Ra]},e):Sr}function wr(n,t){function e(n,t){var e=i-t;return[e*Math.sin(u*n),i-e*Math.cos(u*n)]}var r=Math.cos(n),u=n===t?Math.sin(n):(r-Math.cos(t))/(t-n),i=r/u+n;return ga(u)<Ca?ar:(e.invert=function(n,t){var e=i-t;return[Math.atan2(n,e)/u,i-K(u)*Math.sqrt(n*n+e*e)]},e)}function Sr(n,t){return[n,Math.log(Math.tan(qa/4+t/2))]}function kr(n){var t,e=ur(n),r=e.scale,u=e.translate,i=e.clipExtent;return e.scale=function(){var n=r.apply(e,arguments);return n===e?t?e.clipExtent(null):e:n},e.translate=function(){var n=u.apply(e,arguments);return n===e?t?e.clipExtent(null):e:n},e.clipExtent=function(n){var o=i.apply(e,arguments);if(o===e){if(t=null==n){var a=qa*r(),c=u();i([[c[0]-a,c[1]-a],[c[0]+a,c[1]+a]])}}else t&&(o=null);return o},e.clipExtent(null)}function Er(n,t){return[Math.log(Math.tan(qa/4+t/2)),-n]}function Ar(n){return n[0]}function Nr(n){return n[1]}function Cr(n){for(var t=n.length,e=[0,1],r=2,u=2;t>u;u++){for(;r>1&&Q(n[e[r-2]],n[e[r-1]],n[u])<=0;)--r;e[r++]=u}return e.slice(0,r)}function zr(n,t){return n[0]-t[0]||n[1]-t[1]}function qr(n,t,e){return(e[0]-t[0])*(n[1]-t[1])<(e[1]-t[1])*(n[0]-t[0])}function Lr(n,t,e,r){var u=n[0],i=e[0],o=t[0]-u,a=r[0]-i,c=n[1],l=e[1],s=t[1]-c,f=r[1]-l,h=(a*(c-l)-f*(u-i))/(f*o-a*s);return[u+h*o,c+h*s]}function Tr(n){var t=n[0],e=n[n.length-1];return!(t[0]-e[0]||t[1]-e[1])}function Rr(){tu(this),this.edge=this.site=this.circle=null}function Dr(n){var t=el.pop()||new Rr;return t.site=n,t}function Pr(n){Xr(n),Qc.remove(n),el.push(n),tu(n)}function Ur(n){var t=n.circle,e=t.x,r=t.cy,u={x:e,y:r},i=n.P,o=n.N,a=[n];Pr(n);for(var c=i;c.circle&&ga(e-c.circle.x)<Ca&&ga(r-c.circle.cy)<Ca;)i=c.P,a.unshift(c),Pr(c),c=i;a.unshift(c),Xr(c);for(var l=o;l.circle&&ga(e-l.circle.x)<Ca&&ga(r-l.circle.cy)<Ca;)o=l.N,a.push(l),Pr(l),l=o;a.push(l),Xr(l);var s,f=a.length;for(s=1;f>s;++s)l=a[s],c=a[s-1],Kr(l.edge,c.site,l.site,u);c=a[0],l=a[f-1],l.edge=Jr(c.site,l.site,null,u),Vr(c),Vr(l)}function jr(n){for(var t,e,r,u,i=n.x,o=n.y,a=Qc._;a;)if(r=Fr(a,o)-i,r>Ca)a=a.L;else{if(u=i-Hr(a,o),!(u>Ca)){r>-Ca?(t=a.P,e=a):u>-Ca?(t=a,e=a.N):t=e=a;break}if(!a.R){t=a;break}a=a.R}var c=Dr(n);if(Qc.insert(t,c),t||e){if(t===e)return Xr(t),e=Dr(t.site),Qc.insert(c,e),c.edge=e.edge=Jr(t.site,c.site),Vr(t),void Vr(e);if(!e)return void(c.edge=Jr(t.site,c.site));Xr(t),Xr(e);var l=t.site,s=l.x,f=l.y,h=n.x-s,g=n.y-f,p=e.site,v=p.x-s,d=p.y-f,m=2*(h*d-g*v),y=h*h+g*g,M=v*v+d*d,x={x:(d*y-g*M)/m+s,y:(h*M-v*y)/m+f};Kr(e.edge,l,p,x),c.edge=Jr(l,n,null,x),e.edge=Jr(n,p,null,x),Vr(t),Vr(e)}}function Fr(n,t){var e=n.site,r=e.x,u=e.y,i=u-t;if(!i)return r;var o=n.P;if(!o)return-1/0;e=o.site;var a=e.x,c=e.y,l=c-t;if(!l)return a;var s=a-r,f=1/i-1/l,h=s/l;return f?(-h+Math.sqrt(h*h-2*f*(s*s/(-2*l)-c+l/2+u-i/2)))/f+r:(r+a)/2}function Hr(n,t){var e=n.N;if(e)return Fr(e,t);var r=n.site;return r.y===t?r.x:1/0}function Or(n){this.site=n,this.edges=[]}function Ir(n){for(var t,e,r,u,i,o,a,c,l,s,f=n[0][0],h=n[1][0],g=n[0][1],p=n[1][1],v=Kc,d=v.length;d--;)if(i=v[d],i&&i.prepare())for(a=i.edges,c=a.length,o=0;c>o;)s=a[o].end(),r=s.x,u=s.y,l=a[++o%c].start(),t=l.x,e=l.y,(ga(r-t)>Ca||ga(u-e)>Ca)&&(a.splice(o,0,new Qr(Gr(i.site,s,ga(r-f)<Ca&&p-u>Ca?{x:f,y:ga(t-f)<Ca?e:p}:ga(u-p)<Ca&&h-r>Ca?{x:ga(e-p)<Ca?t:h,y:p}:ga(r-h)<Ca&&u-g>Ca?{x:h,y:ga(t-h)<Ca?e:g}:ga(u-g)<Ca&&r-f>Ca?{x:ga(e-g)<Ca?t:f,y:g}:null),i.site,null)),++c)}function Yr(n,t){return t.angle-n.angle}function Zr(){tu(this),this.x=this.y=this.arc=this.site=this.cy=null}function Vr(n){var t=n.P,e=n.N;if(t&&e){var r=t.site,u=n.site,i=e.site;if(r!==i){var o=u.x,a=u.y,c=r.x-o,l=r.y-a,s=i.x-o,f=i.y-a,h=2*(c*f-l*s);if(!(h>=-za)){var g=c*c+l*l,p=s*s+f*f,v=(f*g-l*p)/h,d=(c*p-s*g)/h,f=d+a,m=rl.pop()||new Zr;m.arc=n,m.site=u,m.x=v+o,m.y=f+Math.sqrt(v*v+d*d),m.cy=f,n.circle=m;for(var y=null,M=tl._;M;)if(m.y<M.y||m.y===M.y&&m.x<=M.x){if(!M.L){y=M.P;break}M=M.L}else{if(!M.R){y=M;break}M=M.R}tl.insert(y,m),y||(nl=m)}}}}function Xr(n){var t=n.circle;t&&(t.P||(nl=t.N),tl.remove(t),rl.push(t),tu(t),n.circle=null)}function $r(n){for(var t,e=Gc,r=Oe(n[0][0],n[0][1],n[1][0],n[1][1]),u=e.length;u--;)t=e[u],(!Br(t,n)||!r(t)||ga(t.a.x-t.b.x)<Ca&&ga(t.a.y-t.b.y)<Ca)&&(t.a=t.b=null,e.splice(u,1))}function Br(n,t){var e=n.b;if(e)return!0;var r,u,i=n.a,o=t[0][0],a=t[1][0],c=t[0][1],l=t[1][1],s=n.l,f=n.r,h=s.x,g=s.y,p=f.x,v=f.y,d=(h+p)/2,m=(g+v)/2;if(v===g){if(o>d||d>=a)return;if(h>p){if(i){if(i.y>=l)return}else i={x:d,y:c};e={x:d,y:l}}else{if(i){if(i.y<c)return}else i={x:d,y:l};e={x:d,y:c}}}else if(r=(h-p)/(v-g),u=m-r*d,-1>r||r>1)if(h>p){if(i){if(i.y>=l)return}else i={x:(c-u)/r,y:c};e={x:(l-u)/r,y:l}}else{if(i){if(i.y<c)return}else i={x:(l-u)/r,y:l};e={x:(c-u)/r,y:c}}else if(v>g){if(i){if(i.x>=a)return}else i={x:o,y:r*o+u};e={x:a,y:r*a+u}}else{if(i){if(i.x<o)return}else i={x:a,y:r*a+u};e={x:o,y:r*o+u}}return n.a=i,n.b=e,!0}function Wr(n,t){this.l=n,this.r=t,this.a=this.b=null}function Jr(n,t,e,r){var u=new Wr(n,t);return Gc.push(u),e&&Kr(u,n,t,e),r&&Kr(u,t,n,r),Kc[n.i].edges.push(new Qr(u,n,t)),Kc[t.i].edges.push(new Qr(u,t,n)),u}function Gr(n,t,e){var r=new Wr(n,null);return r.a=t,r.b=e,Gc.push(r),r}function Kr(n,t,e,r){n.a||n.b?n.l===e?n.b=r:n.a=r:(n.a=r,n.l=t,n.r=e)}function Qr(n,t,e){var r=n.a,u=n.b;this.edge=n,this.site=t,this.angle=e?Math.atan2(e.y-t.y,e.x-t.x):n.l===t?Math.atan2(u.x-r.x,r.y-u.y):Math.atan2(r.x-u.x,u.y-r.y)}function nu(){this._=null}function tu(n){n.U=n.C=n.L=n.R=n.P=n.N=null}function eu(n,t){var e=t,r=t.R,u=e.U;u?u.L===e?u.L=r:u.R=r:n._=r,r.U=u,e.U=r,e.R=r.L,e.R&&(e.R.U=e),r.L=e}function ru(n,t){var e=t,r=t.L,u=e.U;u?u.L===e?u.L=r:u.R=r:n._=r,r.U=u,e.U=r,e.L=r.R,e.L&&(e.L.U=e),r.R=e}function uu(n){for(;n.L;)n=n.L;return n}function iu(n,t){var e,r,u,i=n.sort(ou).pop();for(Gc=[],Kc=new Array(n.length),Qc=new nu,tl=new nu;;)if(u=nl,i&&(!u||i.y<u.y||i.y===u.y&&i.x<u.x))(i.x!==e||i.y!==r)&&(Kc[i.i]=new Or(i),jr(i),e=i.x,r=i.y),i=n.pop();else{if(!u)break;Ur(u.arc)}t&&($r(t),Ir(t));var o={cells:Kc,edges:Gc};return Qc=tl=Gc=Kc=null,o}function ou(n,t){return t.y-n.y||t.x-n.x}function au(n,t,e){return(n.x-e.x)*(t.y-n.y)-(n.x-t.x)*(e.y-n.y)}function cu(n){return n.x}function lu(n){return n.y}function su(){return{leaf:!0,nodes:[],point:null,x:null,y:null}}function fu(n,t,e,r,u,i){if(!n(t,e,r,u,i)){var o=.5*(e+u),a=.5*(r+i),c=t.nodes;c[0]&&fu(n,c[0],e,r,o,a),c[1]&&fu(n,c[1],o,r,u,a),c[2]&&fu(n,c[2],e,a,o,i),c[3]&&fu(n,c[3],o,a,u,i)}}function hu(n,t,e,r,u,i,o){var a,c=1/0;return function l(n,s,f,h,g){if(!(s>i||f>o||r>h||u>g)){if(p=n.point){var p,v=t-n.x,d=e-n.y,m=v*v+d*d;if(c>m){var y=Math.sqrt(c=m);r=t-y,u=e-y,i=t+y,o=e+y,a=p}}for(var M=n.nodes,x=.5*(s+h),b=.5*(f+g),_=t>=x,w=e>=b,S=w<<1|_,k=S+4;k>S;++S)if(n=M[3&S])switch(3&S){case 0:l(n,s,f,x,b);break;case 1:l(n,x,f,h,b);break;case 2:l(n,s,b,x,g);break;case 3:l(n,x,b,h,g)}}}(n,r,u,i,o),a}function gu(n,t){n=ta.rgb(n),t=ta.rgb(t);var e=n.r,r=n.g,u=n.b,i=t.r-e,o=t.g-r,a=t.b-u;return function(n){return"#"+xt(Math.round(e+i*n))+xt(Math.round(r+o*n))+xt(Math.round(u+a*n))}}function pu(n,t){var e,r={},u={};for(e in n)e in t?r[e]=mu(n[e],t[e]):u[e]=n[e];for(e in t)e in n||(u[e]=t[e]);return function(n){for(e in r)u[e]=r[e](n);return u}}function vu(n,t){return n=+n,t=+t,function(e){return n*(1-e)+t*e}}function du(n,t){var e,r,u,i=il.lastIndex=ol.lastIndex=0,o=-1,a=[],c=[];for(n+="",t+="";(e=il.exec(n))&&(r=ol.exec(t));)(u=r.index)>i&&(u=t.slice(i,u),a[o]?a[o]+=u:a[++o]=u),(e=e[0])===(r=r[0])?a[o]?a[o]+=r:a[++o]=r:(a[++o]=null,c.push({i:o,x:vu(e,r)})),i=ol.lastIndex;return i<t.length&&(u=t.slice(i),a[o]?a[o]+=u:a[++o]=u),a.length<2?c[0]?(t=c[0].x,function(n){return t(n)+""}):function(){return t}:(t=c.length,function(n){for(var e,r=0;t>r;++r)a[(e=c[r]).i]=e.x(n);return a.join("")})}function mu(n,t){for(var e,r=ta.interpolators.length;--r>=0&&!(e=ta.interpolators[r](n,t)););return e}function yu(n,t){var e,r=[],u=[],i=n.length,o=t.length,a=Math.min(n.length,t.length);for(e=0;a>e;++e)r.push(mu(n[e],t[e]));for(;i>e;++e)u[e]=n[e];for(;o>e;++e)u[e]=t[e];return function(n){for(e=0;a>e;++e)u[e]=r[e](n);return u}}function Mu(n){return function(t){return 0>=t?0:t>=1?1:n(t)}}function xu(n){return function(t){return 1-n(1-t)}}function bu(n){return function(t){return.5*(.5>t?n(2*t):2-n(2-2*t))}}function _u(n){return n*n}function wu(n){return n*n*n}function Su(n){if(0>=n)return 0;if(n>=1)return 1;var t=n*n,e=t*n;return 4*(.5>n?e:3*(n-t)+e-.75)}function ku(n){return function(t){return Math.pow(t,n)}}function Eu(n){return 1-Math.cos(n*Ra)}function Au(n){return Math.pow(2,10*(n-1))}function Nu(n){return 1-Math.sqrt(1-n*n)}function Cu(n,t){var e;return arguments.length<2&&(t=.45),arguments.length?e=t/La*Math.asin(1/n):(n=1,e=t/4),function(r){return 1+n*Math.pow(2,-10*r)*Math.sin((r-e)*La/t)}}function zu(n){return n||(n=1.70158),function(t){return t*t*((n+1)*t-n)}}function qu(n){return 1/2.75>n?7.5625*n*n:2/2.75>n?7.5625*(n-=1.5/2.75)*n+.75:2.5/2.75>n?7.5625*(n-=2.25/2.75)*n+.9375:7.5625*(n-=2.625/2.75)*n+.984375}function Lu(n,t){n=ta.hcl(n),t=ta.hcl(t);var e=n.h,r=n.c,u=n.l,i=t.h-e,o=t.c-r,a=t.l-u;return isNaN(o)&&(o=0,r=isNaN(r)?t.c:r),isNaN(i)?(i=0,e=isNaN(e)?t.h:e):i>180?i-=360:-180>i&&(i+=360),function(n){return st(e+i*n,r+o*n,u+a*n)+""}}function Tu(n,t){n=ta.hsl(n),t=ta.hsl(t);var e=n.h,r=n.s,u=n.l,i=t.h-e,o=t.s-r,a=t.l-u;return isNaN(o)&&(o=0,r=isNaN(r)?t.s:r),isNaN(i)?(i=0,e=isNaN(e)?t.h:e):i>180?i-=360:-180>i&&(i+=360),function(n){return ct(e+i*n,r+o*n,u+a*n)+""}}function Ru(n,t){n=ta.lab(n),t=ta.lab(t);var e=n.l,r=n.a,u=n.b,i=t.l-e,o=t.a-r,a=t.b-u;return function(n){return ht(e+i*n,r+o*n,u+a*n)+""}}function Du(n,t){return t-=n,function(e){return Math.round(n+t*e)}}function Pu(n){var t=[n.a,n.b],e=[n.c,n.d],r=ju(t),u=Uu(t,e),i=ju(Fu(e,t,-u))||0;t[0]*e[1]<e[0]*t[1]&&(t[0]*=-1,t[1]*=-1,r*=-1,u*=-1),this.rotate=(r?Math.atan2(t[1],t[0]):Math.atan2(-e[0],e[1]))*Pa,this.translate=[n.e,n.f],this.scale=[r,i],this.skew=i?Math.atan2(u,i)*Pa:0}function Uu(n,t){return n[0]*t[0]+n[1]*t[1]}function ju(n){var t=Math.sqrt(Uu(n,n));return t&&(n[0]/=t,n[1]/=t),t}function Fu(n,t,e){return n[0]+=e*t[0],n[1]+=e*t[1],n}function Hu(n,t){var e,r=[],u=[],i=ta.transform(n),o=ta.transform(t),a=i.translate,c=o.translate,l=i.rotate,s=o.rotate,f=i.skew,h=o.skew,g=i.scale,p=o.scale;return a[0]!=c[0]||a[1]!=c[1]?(r.push("translate(",null,",",null,")"),u.push({i:1,x:vu(a[0],c[0])},{i:3,x:vu(a[1],c[1])})):r.push(c[0]||c[1]?"translate("+c+")":""),l!=s?(l-s>180?s+=360:s-l>180&&(l+=360),u.push({i:r.push(r.pop()+"rotate(",null,")")-2,x:vu(l,s)})):s&&r.push(r.pop()+"rotate("+s+")"),f!=h?u.push({i:r.push(r.pop()+"skewX(",null,")")-2,x:vu(f,h)}):h&&r.push(r.pop()+"skewX("+h+")"),g[0]!=p[0]||g[1]!=p[1]?(e=r.push(r.pop()+"scale(",null,",",null,")"),u.push({i:e-4,x:vu(g[0],p[0])},{i:e-2,x:vu(g[1],p[1])})):(1!=p[0]||1!=p[1])&&r.push(r.pop()+"scale("+p+")"),e=u.length,function(n){for(var t,i=-1;++i<e;)r[(t=u[i]).i]=t.x(n);return r.join("")}}function Ou(n,t){return t=(t-=n=+n)||1/t,function(e){return(e-n)/t}}function Iu(n,t){return t=(t-=n=+n)||1/t,function(e){return Math.max(0,Math.min(1,(e-n)/t))}}function Yu(n){for(var t=n.source,e=n.target,r=Vu(t,e),u=[t];t!==r;)t=t.parent,u.push(t);for(var i=u.length;e!==r;)u.splice(i,0,e),e=e.parent;return u}function Zu(n){for(var t=[],e=n.parent;null!=e;)t.push(n),n=e,e=e.parent;return t.push(n),t}function Vu(n,t){if(n===t)return n;for(var e=Zu(n),r=Zu(t),u=e.pop(),i=r.pop(),o=null;u===i;)o=u,u=e.pop(),i=r.pop();return o}function Xu(n){n.fixed|=2}function $u(n){n.fixed&=-7}function Bu(n){n.fixed|=4,n.px=n.x,n.py=n.y}function Wu(n){n.fixed&=-5}function Ju(n,t,e){var r=0,u=0;if(n.charge=0,!n.leaf)for(var i,o=n.nodes,a=o.length,c=-1;++c<a;)i=o[c],null!=i&&(Ju(i,t,e),n.charge+=i.charge,r+=i.charge*i.cx,u+=i.charge*i.cy);if(n.point){n.leaf||(n.point.x+=Math.random()-.5,n.point.y+=Math.random()-.5);var l=t*e[n.point.index];n.charge+=n.pointCharge=l,r+=l*n.point.x,u+=l*n.point.y}n.cx=r/n.charge,n.cy=u/n.charge}function Gu(n,t){return ta.rebind(n,t,"sort","children","value"),n.nodes=n,n.links=ri,n}function Ku(n,t){for(var e=[n];null!=(n=e.pop());)if(t(n),(u=n.children)&&(r=u.length))for(var r,u;--r>=0;)e.push(u[r])}function Qu(n,t){for(var e=[n],r=[];null!=(n=e.pop());)if(r.push(n),(i=n.children)&&(u=i.length))for(var u,i,o=-1;++o<u;)e.push(i[o]);for(;null!=(n=r.pop());)t(n)}function ni(n){return n.children}function ti(n){return n.value}function ei(n,t){return t.value-n.value}function ri(n){return ta.merge(n.map(function(n){return(n.children||[]).map(function(t){return{source:n,target:t}})}))}function ui(n){return n.x}function ii(n){return n.y}function oi(n,t,e){n.y0=t,n.y=e}function ai(n){return ta.range(n.length)}function ci(n){for(var t=-1,e=n[0].length,r=[];++t<e;)r[t]=0;return r}function li(n){for(var t,e=1,r=0,u=n[0][1],i=n.length;i>e;++e)(t=n[e][1])>u&&(r=e,u=t);return r}function si(n){return n.reduce(fi,0)}function fi(n,t){return n+t[1]}function hi(n,t){return gi(n,Math.ceil(Math.log(t.length)/Math.LN2+1))}function gi(n,t){for(var e=-1,r=+n[0],u=(n[1]-r)/t,i=[];++e<=t;)i[e]=u*e+r;return i}function pi(n){return[ta.min(n),ta.max(n)]}function vi(n,t){return n.value-t.value}function di(n,t){var e=n._pack_next;n._pack_next=t,t._pack_prev=n,t._pack_next=e,e._pack_prev=t}function mi(n,t){n._pack_next=t,t._pack_prev=n}function yi(n,t){var e=t.x-n.x,r=t.y-n.y,u=n.r+t.r;return.999*u*u>e*e+r*r}function Mi(n){function t(n){s=Math.min(n.x-n.r,s),f=Math.max(n.x+n.r,f),h=Math.min(n.y-n.r,h),g=Math.max(n.y+n.r,g)}if((e=n.children)&&(l=e.length)){var e,r,u,i,o,a,c,l,s=1/0,f=-1/0,h=1/0,g=-1/0;if(e.forEach(xi),r=e[0],r.x=-r.r,r.y=0,t(r),l>1&&(u=e[1],u.x=u.r,u.y=0,t(u),l>2))for(i=e[2],wi(r,u,i),t(i),di(r,i),r._pack_prev=i,di(i,u),u=r._pack_next,o=3;l>o;o++){wi(r,u,i=e[o]);var p=0,v=1,d=1;for(a=u._pack_next;a!==u;a=a._pack_next,v++)if(yi(a,i)){p=1;break}if(1==p)for(c=r._pack_prev;c!==a._pack_prev&&!yi(c,i);c=c._pack_prev,d++);p?(d>v||v==d&&u.r<r.r?mi(r,u=a):mi(r=c,u),o--):(di(r,i),u=i,t(i))}var m=(s+f)/2,y=(h+g)/2,M=0;for(o=0;l>o;o++)i=e[o],i.x-=m,i.y-=y,M=Math.max(M,i.r+Math.sqrt(i.x*i.x+i.y*i.y));n.r=M,e.forEach(bi)}}function xi(n){n._pack_next=n._pack_prev=n}function bi(n){delete n._pack_next,delete n._pack_prev}function _i(n,t,e,r){var u=n.children;if(n.x=t+=r*n.x,n.y=e+=r*n.y,n.r*=r,u)for(var i=-1,o=u.length;++i<o;)_i(u[i],t,e,r)}function wi(n,t,e){var r=n.r+e.r,u=t.x-n.x,i=t.y-n.y;if(r&&(u||i)){var o=t.r+e.r,a=u*u+i*i;o*=o,r*=r;var c=.5+(r-o)/(2*a),l=Math.sqrt(Math.max(0,2*o*(r+a)-(r-=a)*r-o*o))/(2*a);e.x=n.x+c*u+l*i,e.y=n.y+c*i-l*u}else e.x=n.x+r,e.y=n.y}function Si(n,t){return n.parent==t.parent?1:2}function ki(n){var t=n.children;return t.length?t[0]:n.t}function Ei(n){var t,e=n.children;return(t=e.length)?e[t-1]:n.t}function Ai(n,t,e){var r=e/(t.i-n.i);t.c-=r,t.s+=e,n.c+=r,t.z+=e,t.m+=e}function Ni(n){for(var t,e=0,r=0,u=n.children,i=u.length;--i>=0;)t=u[i],t.z+=e,t.m+=e,e+=t.s+(r+=t.c)}function Ci(n,t,e){return n.a.parent===t.parent?n.a:e}function zi(n){return 1+ta.max(n,function(n){return n.y})}function qi(n){return n.reduce(function(n,t){return n+t.x},0)/n.length}function Li(n){var t=n.children;return t&&t.length?Li(t[0]):n}function Ti(n){var t,e=n.children;return e&&(t=e.length)?Ti(e[t-1]):n}function Ri(n){return{x:n.x,y:n.y,dx:n.dx,dy:n.dy}}function Di(n,t){var e=n.x+t[3],r=n.y+t[0],u=n.dx-t[1]-t[3],i=n.dy-t[0]-t[2];return 0>u&&(e+=u/2,u=0),0>i&&(r+=i/2,i=0),{x:e,y:r,dx:u,dy:i}}function Pi(n){var t=n[0],e=n[n.length-1];return e>t?[t,e]:[e,t]}function Ui(n){return n.rangeExtent?n.rangeExtent():Pi(n.range())}function ji(n,t,e,r){var u=e(n[0],n[1]),i=r(t[0],t[1]);return function(n){return i(u(n))}}function Fi(n,t){var e,r=0,u=n.length-1,i=n[r],o=n[u];return i>o&&(e=r,r=u,u=e,e=i,i=o,o=e),n[r]=t.floor(i),n[u]=t.ceil(o),n}function Hi(n){return n?{floor:function(t){return Math.floor(t/n)*n},ceil:function(t){return Math.ceil(t/n)*n}}:ml}function Oi(n,t,e,r){var u=[],i=[],o=0,a=Math.min(n.length,t.length)-1;for(n[a]<n[0]&&(n=n.slice().reverse(),t=t.slice().reverse());++o<=a;)u.push(e(n[o-1],n[o])),i.push(r(t[o-1],t[o]));return function(t){var e=ta.bisect(n,t,1,a)-1;return i[e](u[e](t))}}function Ii(n,t,e,r){function u(){var u=Math.min(n.length,t.length)>2?Oi:ji,c=r?Iu:Ou;return o=u(n,t,c,e),a=u(t,n,c,mu),i}function i(n){return o(n)}var o,a;return i.invert=function(n){return a(n)},i.domain=function(t){return arguments.length?(n=t.map(Number),u()):n},i.range=function(n){return arguments.length?(t=n,u()):t},i.rangeRound=function(n){return i.range(n).interpolate(Du)},i.clamp=function(n){return arguments.length?(r=n,u()):r},i.interpolate=function(n){return arguments.length?(e=n,u()):e},i.ticks=function(t){return Xi(n,t)},i.tickFormat=function(t,e){return $i(n,t,e)},i.nice=function(t){return Zi(n,t),u()},i.copy=function(){return Ii(n,t,e,r)},u()}function Yi(n,t){return ta.rebind(n,t,"range","rangeRound","interpolate","clamp")}function Zi(n,t){return Fi(n,Hi(Vi(n,t)[2]))}function Vi(n,t){null==t&&(t=10);var e=Pi(n),r=e[1]-e[0],u=Math.pow(10,Math.floor(Math.log(r/t)/Math.LN10)),i=t/r*u;return.15>=i?u*=10:.35>=i?u*=5:.75>=i&&(u*=2),e[0]=Math.ceil(e[0]/u)*u,e[1]=Math.floor(e[1]/u)*u+.5*u,e[2]=u,e}function Xi(n,t){return ta.range.apply(ta,Vi(n,t))}function $i(n,t,e){var r=Vi(n,t);if(e){var u=ic.exec(e);if(u.shift(),"s"===u[8]){var i=ta.formatPrefix(Math.max(ga(r[0]),ga(r[1])));return u[7]||(u[7]="."+Bi(i.scale(r[2]))),u[8]="f",e=ta.format(u.join("")),function(n){return e(i.scale(n))+i.symbol}}u[7]||(u[7]="."+Wi(u[8],r)),e=u.join("")}else e=",."+Bi(r[2])+"f";return ta.format(e)}function Bi(n){return-Math.floor(Math.log(n)/Math.LN10+.01)}function Wi(n,t){var e=Bi(t[2]);return n in yl?Math.abs(e-Bi(Math.max(ga(t[0]),ga(t[1]))))+ +("e"!==n):e-2*("%"===n)}function Ji(n,t,e,r){function u(n){return(e?Math.log(0>n?0:n):-Math.log(n>0?0:-n))/Math.log(t)}function i(n){return e?Math.pow(t,n):-Math.pow(t,-n)}function o(t){return n(u(t))}return o.invert=function(t){return i(n.invert(t))},o.domain=function(t){return arguments.length?(e=t[0]>=0,n.domain((r=t.map(Number)).map(u)),o):r},o.base=function(e){return arguments.length?(t=+e,n.domain(r.map(u)),o):t},o.nice=function(){var t=Fi(r.map(u),e?Math:xl);return n.domain(t),r=t.map(i),o},o.ticks=function(){var n=Pi(r),o=[],a=n[0],c=n[1],l=Math.floor(u(a)),s=Math.ceil(u(c)),f=t%1?2:t;if(isFinite(s-l)){if(e){for(;s>l;l++)for(var h=1;f>h;h++)o.push(i(l)*h);o.push(i(l))}else for(o.push(i(l));l++<s;)for(var h=f-1;h>0;h--)o.push(i(l)*h);for(l=0;o[l]<a;l++);for(s=o.length;o[s-1]>c;s--);o=o.slice(l,s)}return o},o.tickFormat=function(n,t){if(!arguments.length)return Ml;arguments.length<2?t=Ml:"function"!=typeof t&&(t=ta.format(t));var r,a=Math.max(.1,n/o.ticks().length),c=e?(r=1e-12,Math.ceil):(r=-1e-12,Math.floor);return function(n){return n/i(c(u(n)+r))<=a?t(n):""}},o.copy=function(){return Ji(n.copy(),t,e,r)},Yi(o,n)}function Gi(n,t,e){function r(t){return n(u(t))}var u=Ki(t),i=Ki(1/t);return r.invert=function(t){return i(n.invert(t))},r.domain=function(t){return arguments.length?(n.domain((e=t.map(Number)).map(u)),r):e},r.ticks=function(n){return Xi(e,n)},r.tickFormat=function(n,t){return $i(e,n,t)},r.nice=function(n){return r.domain(Zi(e,n))},r.exponent=function(o){return arguments.length?(u=Ki(t=o),i=Ki(1/t),n.domain(e.map(u)),r):t},r.copy=function(){return Gi(n.copy(),t,e)},Yi(r,n)}function Ki(n){return function(t){return 0>t?-Math.pow(-t,n):Math.pow(t,n)}}function Qi(n,t){function e(e){return i[((u.get(e)||("range"===t.t?u.set(e,n.push(e)):0/0))-1)%i.length]}function r(t,e){return ta.range(n.length).map(function(n){return t+e*n})}var u,i,o;return e.domain=function(r){if(!arguments.length)return n;n=[],u=new l;for(var i,o=-1,a=r.length;++o<a;)u.has(i=r[o])||u.set(i,n.push(i));return e[t.t].apply(e,t.a)},e.range=function(n){return arguments.length?(i=n,o=0,t={t:"range",a:arguments},e):i},e.rangePoints=function(u,a){arguments.length<2&&(a=0);var c=u[0],l=u[1],s=n.length<2?(c=(c+l)/2,0):(l-c)/(n.length-1+a);return i=r(c+s*a/2,s),o=0,t={t:"rangePoints",a:arguments},e},e.rangeRoundPoints=function(u,a){arguments.length<2&&(a=0);var c=u[0],l=u[1],s=n.length<2?(c=l=Math.round((c+l)/2),0):(l-c)/(n.length-1+a)|0;return i=r(c+Math.round(s*a/2+(l-c-(n.length-1+a)*s)/2),s),o=0,t={t:"rangeRoundPoints",a:arguments},e},e.rangeBands=function(u,a,c){arguments.length<2&&(a=0),arguments.length<3&&(c=a);var l=u[1]<u[0],s=u[l-0],f=u[1-l],h=(f-s)/(n.length-a+2*c);return i=r(s+h*c,h),l&&i.reverse(),o=h*(1-a),t={t:"rangeBands",a:arguments},e},e.rangeRoundBands=function(u,a,c){arguments.length<2&&(a=0),arguments.length<3&&(c=a);var l=u[1]<u[0],s=u[l-0],f=u[1-l],h=Math.floor((f-s)/(n.length-a+2*c));return i=r(s+Math.round((f-s-(n.length-a)*h)/2),h),l&&i.reverse(),o=Math.round(h*(1-a)),t={t:"rangeRoundBands",a:arguments},e},e.rangeBand=function(){return o},e.rangeExtent=function(){return Pi(t.a[0])},e.copy=function(){return Qi(n,t)},e.domain(n)}function no(n,t){function i(){var e=0,r=t.length;for(a=[];++e<r;)a[e-1]=ta.quantile(n,e/r);return o}function o(n){return isNaN(n=+n)?void 0:t[ta.bisect(a,n)]}var a;return o.domain=function(t){return arguments.length?(n=t.map(r).filter(u).sort(e),i()):n},o.range=function(n){return arguments.length?(t=n,i()):t},o.quantiles=function(){return a},o.invertExtent=function(e){return e=t.indexOf(e),0>e?[0/0,0/0]:[e>0?a[e-1]:n[0],e<a.length?a[e]:n[n.length-1]]},o.copy=function(){return no(n,t)},i()}function to(n,t,e){function r(t){return e[Math.max(0,Math.min(o,Math.floor(i*(t-n))))]}function u(){return i=e.length/(t-n),o=e.length-1,r}var i,o;return r.domain=function(e){return arguments.length?(n=+e[0],t=+e[e.length-1],u()):[n,t]},r.range=function(n){return arguments.length?(e=n,u()):e},r.invertExtent=function(t){return t=e.indexOf(t),t=0>t?0/0:t/i+n,[t,t+1/i]},r.copy=function(){return to(n,t,e)},u()}function eo(n,t){function e(e){return e>=e?t[ta.bisect(n,e)]:void 0}return e.domain=function(t){return arguments.length?(n=t,e):n},e.range=function(n){return arguments.length?(t=n,e):t},e.invertExtent=function(e){return e=t.indexOf(e),[n[e-1],n[e]]},e.copy=function(){return eo(n,t)},e}function ro(n){function t(n){return+n}return t.invert=t,t.domain=t.range=function(e){return arguments.length?(n=e.map(t),t):n},t.ticks=function(t){return Xi(n,t)},t.tickFormat=function(t,e){return $i(n,t,e)},t.copy=function(){return ro(n)},t}function uo(){return 0}function io(n){return n.innerRadius}function oo(n){return n.outerRadius}function ao(n){return n.startAngle}function co(n){return n.endAngle}function lo(n){return n&&n.padAngle}function so(n,t,e,r){return(n-e)*t-(t-r)*n>0?0:1}function fo(n,t,e,r,u){var i=n[0]-t[0],o=n[1]-t[1],a=(u?r:-r)/Math.sqrt(i*i+o*o),c=a*o,l=-a*i,s=n[0]+c,f=n[1]+l,h=t[0]+c,g=t[1]+l,p=(s+h)/2,v=(f+g)/2,d=h-s,m=g-f,y=d*d+m*m,M=e-r,x=s*g-h*f,b=(0>m?-1:1)*Math.sqrt(M*M*y-x*x),_=(x*m-d*b)/y,w=(-x*d-m*b)/y,S=(x*m+d*b)/y,k=(-x*d+m*b)/y,E=_-p,A=w-v,N=S-p,C=k-v;return E*E+A*A>N*N+C*C&&(_=S,w=k),[[_-c,w-l],[_*e/M,w*e/M]]}function ho(n){function t(t){function o(){l.push("M",i(n(s),a))}for(var c,l=[],s=[],f=-1,h=t.length,g=Et(e),p=Et(r);++f<h;)u.call(this,c=t[f],f)?s.push([+g.call(this,c,f),+p.call(this,c,f)]):s.length&&(o(),s=[]);return s.length&&o(),l.length?l.join(""):null}var e=Ar,r=Nr,u=Ne,i=go,o=i.key,a=.7;return t.x=function(n){return arguments.length?(e=n,t):e},t.y=function(n){return arguments.length?(r=n,t):r},t.defined=function(n){return arguments.length?(u=n,t):u},t.interpolate=function(n){return arguments.length?(o="function"==typeof n?i=n:(i=El.get(n)||go).key,t):o},t.tension=function(n){return arguments.length?(a=n,t):a},t}function go(n){return n.join("L")}function po(n){return go(n)+"Z"}function vo(n){for(var t=0,e=n.length,r=n[0],u=[r[0],",",r[1]];++t<e;)u.push("H",(r[0]+(r=n[t])[0])/2,"V",r[1]);return e>1&&u.push("H",r[0]),u.join("")}function mo(n){for(var t=0,e=n.length,r=n[0],u=[r[0],",",r[1]];++t<e;)u.push("V",(r=n[t])[1],"H",r[0]);return u.join("")}function yo(n){for(var t=0,e=n.length,r=n[0],u=[r[0],",",r[1]];++t<e;)u.push("H",(r=n[t])[0],"V",r[1]);return u.join("")}function Mo(n,t){return n.length<4?go(n):n[1]+_o(n.slice(1,-1),wo(n,t))}function xo(n,t){return n.length<3?go(n):n[0]+_o((n.push(n[0]),n),wo([n[n.length-2]].concat(n,[n[1]]),t))}function bo(n,t){return n.length<3?go(n):n[0]+_o(n,wo(n,t))}function _o(n,t){if(t.length<1||n.length!=t.length&&n.length!=t.length+2)return go(n);var e=n.length!=t.length,r="",u=n[0],i=n[1],o=t[0],a=o,c=1;if(e&&(r+="Q"+(i[0]-2*o[0]/3)+","+(i[1]-2*o[1]/3)+","+i[0]+","+i[1],u=n[1],c=2),t.length>1){a=t[1],i=n[c],c++,r+="C"+(u[0]+o[0])+","+(u[1]+o[1])+","+(i[0]-a[0])+","+(i[1]-a[1])+","+i[0]+","+i[1];for(var l=2;l<t.length;l++,c++)i=n[c],a=t[l],r+="S"+(i[0]-a[0])+","+(i[1]-a[1])+","+i[0]+","+i[1]}if(e){var s=n[c];r+="Q"+(i[0]+2*a[0]/3)+","+(i[1]+2*a[1]/3)+","+s[0]+","+s[1]}return r}function wo(n,t){for(var e,r=[],u=(1-t)/2,i=n[0],o=n[1],a=1,c=n.length;++a<c;)e=i,i=o,o=n[a],r.push([u*(o[0]-e[0]),u*(o[1]-e[1])]);return r}function So(n){if(n.length<3)return go(n);var t=1,e=n.length,r=n[0],u=r[0],i=r[1],o=[u,u,u,(r=n[1])[0]],a=[i,i,i,r[1]],c=[u,",",i,"L",No(Cl,o),",",No(Cl,a)];for(n.push(n[e-1]);++t<=e;)r=n[t],o.shift(),o.push(r[0]),a.shift(),a.push(r[1]),Co(c,o,a);return n.pop(),c.push("L",r),c.join("")}function ko(n){if(n.length<4)return go(n);for(var t,e=[],r=-1,u=n.length,i=[0],o=[0];++r<3;)t=n[r],i.push(t[0]),o.push(t[1]);for(e.push(No(Cl,i)+","+No(Cl,o)),--r;++r<u;)t=n[r],i.shift(),i.push(t[0]),o.shift(),o.push(t[1]),Co(e,i,o);return e.join("")}function Eo(n){for(var t,e,r=-1,u=n.length,i=u+4,o=[],a=[];++r<4;)e=n[r%u],o.push(e[0]),a.push(e[1]);for(t=[No(Cl,o),",",No(Cl,a)],--r;++r<i;)e=n[r%u],o.shift(),o.push(e[0]),a.shift(),a.push(e[1]),Co(t,o,a);return t.join("")}function Ao(n,t){var e=n.length-1;if(e)for(var r,u,i=n[0][0],o=n[0][1],a=n[e][0]-i,c=n[e][1]-o,l=-1;++l<=e;)r=n[l],u=l/e,r[0]=t*r[0]+(1-t)*(i+u*a),r[1]=t*r[1]+(1-t)*(o+u*c);return So(n)}function No(n,t){return n[0]*t[0]+n[1]*t[1]+n[2]*t[2]+n[3]*t[3]}function Co(n,t,e){n.push("C",No(Al,t),",",No(Al,e),",",No(Nl,t),",",No(Nl,e),",",No(Cl,t),",",No(Cl,e))}function zo(n,t){return(t[1]-n[1])/(t[0]-n[0])}function qo(n){for(var t=0,e=n.length-1,r=[],u=n[0],i=n[1],o=r[0]=zo(u,i);++t<e;)r[t]=(o+(o=zo(u=i,i=n[t+1])))/2;return r[t]=o,r}function Lo(n){for(var t,e,r,u,i=[],o=qo(n),a=-1,c=n.length-1;++a<c;)t=zo(n[a],n[a+1]),ga(t)<Ca?o[a]=o[a+1]=0:(e=o[a]/t,r=o[a+1]/t,u=e*e+r*r,u>9&&(u=3*t/Math.sqrt(u),o[a]=u*e,o[a+1]=u*r));for(a=-1;++a<=c;)u=(n[Math.min(c,a+1)][0]-n[Math.max(0,a-1)][0])/(6*(1+o[a]*o[a])),i.push([u||0,o[a]*u||0]);return i}function To(n){return n.length<3?go(n):n[0]+_o(n,Lo(n))}function Ro(n){for(var t,e,r,u=-1,i=n.length;++u<i;)t=n[u],e=t[0],r=t[1]-Ra,t[0]=e*Math.cos(r),t[1]=e*Math.sin(r);return n}function Do(n){function t(t){function c(){v.push("M",a(n(m),f),s,l(n(d.reverse()),f),"Z")}for(var h,g,p,v=[],d=[],m=[],y=-1,M=t.length,x=Et(e),b=Et(u),_=e===r?function(){return g}:Et(r),w=u===i?function(){return p}:Et(i);++y<M;)o.call(this,h=t[y],y)?(d.push([g=+x.call(this,h,y),p=+b.call(this,h,y)]),m.push([+_.call(this,h,y),+w.call(this,h,y)])):d.length&&(c(),d=[],m=[]);return d.length&&c(),v.length?v.join(""):null}var e=Ar,r=Ar,u=0,i=Nr,o=Ne,a=go,c=a.key,l=a,s="L",f=.7;return t.x=function(n){return arguments.length?(e=r=n,t):r},t.x0=function(n){return arguments.length?(e=n,t):e},t.x1=function(n){return arguments.length?(r=n,t):r
},t.y=function(n){return arguments.length?(u=i=n,t):i},t.y0=function(n){return arguments.length?(u=n,t):u},t.y1=function(n){return arguments.length?(i=n,t):i},t.defined=function(n){return arguments.length?(o=n,t):o},t.interpolate=function(n){return arguments.length?(c="function"==typeof n?a=n:(a=El.get(n)||go).key,l=a.reverse||a,s=a.closed?"M":"L",t):c},t.tension=function(n){return arguments.length?(f=n,t):f},t}function Po(n){return n.radius}function Uo(n){return[n.x,n.y]}function jo(n){return function(){var t=n.apply(this,arguments),e=t[0],r=t[1]-Ra;return[e*Math.cos(r),e*Math.sin(r)]}}function Fo(){return 64}function Ho(){return"circle"}function Oo(n){var t=Math.sqrt(n/qa);return"M0,"+t+"A"+t+","+t+" 0 1,1 0,"+-t+"A"+t+","+t+" 0 1,1 0,"+t+"Z"}function Io(n){return function(){var t,e;(t=this[n])&&(e=t[t.active])&&(--t.count?delete t[t.active]:delete this[n],t.active+=.5,e.event&&e.event.interrupt.call(this,this.__data__,e.index))}}function Yo(n,t,e){return ya(n,Pl),n.namespace=t,n.id=e,n}function Zo(n,t,e,r){var u=n.id,i=n.namespace;return Y(n,"function"==typeof e?function(n,o,a){n[i][u].tween.set(t,r(e.call(n,n.__data__,o,a)))}:(e=r(e),function(n){n[i][u].tween.set(t,e)}))}function Vo(n){return null==n&&(n=""),function(){this.textContent=n}}function Xo(n){return null==n?"__transition__":"__transition_"+n+"__"}function $o(n,t,e,r,u){var i=n[e]||(n[e]={active:0,count:0}),o=i[r];if(!o){var a=u.time;o=i[r]={tween:new l,time:a,delay:u.delay,duration:u.duration,ease:u.ease,index:t},u=null,++i.count,ta.timer(function(u){function c(e){if(i.active>r)return s();var u=i[i.active];u&&(--i.count,delete i[i.active],u.event&&u.event.interrupt.call(n,n.__data__,u.index)),i.active=r,o.event&&o.event.start.call(n,n.__data__,t),o.tween.forEach(function(e,r){(r=r.call(n,n.__data__,t))&&v.push(r)}),h=o.ease,f=o.duration,ta.timer(function(){return p.c=l(e||1)?Ne:l,1},0,a)}function l(e){if(i.active!==r)return 1;for(var u=e/f,a=h(u),c=v.length;c>0;)v[--c].call(n,a);return u>=1?(o.event&&o.event.end.call(n,n.__data__,t),s()):void 0}function s(){return--i.count?delete i[r]:delete n[e],1}var f,h,g=o.delay,p=ec,v=[];return p.t=g+a,u>=g?c(u-g):void(p.c=c)},0,a)}}function Bo(n,t,e){n.attr("transform",function(n){var r=t(n);return"translate("+(isFinite(r)?r:e(n))+",0)"})}function Wo(n,t,e){n.attr("transform",function(n){var r=t(n);return"translate(0,"+(isFinite(r)?r:e(n))+")"})}function Jo(n){return n.toISOString()}function Go(n,t,e){function r(t){return n(t)}function u(n,e){var r=n[1]-n[0],u=r/e,i=ta.bisect(Vl,u);return i==Vl.length?[t.year,Vi(n.map(function(n){return n/31536e6}),e)[2]]:i?t[u/Vl[i-1]<Vl[i]/u?i-1:i]:[Bl,Vi(n,e)[2]]}return r.invert=function(t){return Ko(n.invert(t))},r.domain=function(t){return arguments.length?(n.domain(t),r):n.domain().map(Ko)},r.nice=function(n,t){function e(e){return!isNaN(e)&&!n.range(e,Ko(+e+1),t).length}var i=r.domain(),o=Pi(i),a=null==n?u(o,10):"number"==typeof n&&u(o,n);return a&&(n=a[0],t=a[1]),r.domain(Fi(i,t>1?{floor:function(t){for(;e(t=n.floor(t));)t=Ko(t-1);return t},ceil:function(t){for(;e(t=n.ceil(t));)t=Ko(+t+1);return t}}:n))},r.ticks=function(n,t){var e=Pi(r.domain()),i=null==n?u(e,10):"number"==typeof n?u(e,n):!n.range&&[{range:n},t];return i&&(n=i[0],t=i[1]),n.range(e[0],Ko(+e[1]+1),1>t?1:t)},r.tickFormat=function(){return e},r.copy=function(){return Go(n.copy(),t,e)},Yi(r,n)}function Ko(n){return new Date(n)}function Qo(n){return JSON.parse(n.responseText)}function na(n){var t=ua.createRange();return t.selectNode(ua.body),t.createContextualFragment(n.responseText)}var ta={version:"3.5.5"},ea=[].slice,ra=function(n){return ea.call(n)},ua=this.document;if(ua)try{ra(ua.documentElement.childNodes)[0].nodeType}catch(ia){ra=function(n){for(var t=n.length,e=new Array(t);t--;)e[t]=n[t];return e}}if(Date.now||(Date.now=function(){return+new Date}),ua)try{ua.createElement("DIV").style.setProperty("opacity",0,"")}catch(oa){var aa=this.Element.prototype,ca=aa.setAttribute,la=aa.setAttributeNS,sa=this.CSSStyleDeclaration.prototype,fa=sa.setProperty;aa.setAttribute=function(n,t){ca.call(this,n,t+"")},aa.setAttributeNS=function(n,t,e){la.call(this,n,t,e+"")},sa.setProperty=function(n,t,e){fa.call(this,n,t+"",e)}}ta.ascending=e,ta.descending=function(n,t){return n>t?-1:t>n?1:t>=n?0:0/0},ta.min=function(n,t){var e,r,u=-1,i=n.length;if(1===arguments.length){for(;++u<i;)if(null!=(r=n[u])&&r>=r){e=r;break}for(;++u<i;)null!=(r=n[u])&&e>r&&(e=r)}else{for(;++u<i;)if(null!=(r=t.call(n,n[u],u))&&r>=r){e=r;break}for(;++u<i;)null!=(r=t.call(n,n[u],u))&&e>r&&(e=r)}return e},ta.max=function(n,t){var e,r,u=-1,i=n.length;if(1===arguments.length){for(;++u<i;)if(null!=(r=n[u])&&r>=r){e=r;break}for(;++u<i;)null!=(r=n[u])&&r>e&&(e=r)}else{for(;++u<i;)if(null!=(r=t.call(n,n[u],u))&&r>=r){e=r;break}for(;++u<i;)null!=(r=t.call(n,n[u],u))&&r>e&&(e=r)}return e},ta.extent=function(n,t){var e,r,u,i=-1,o=n.length;if(1===arguments.length){for(;++i<o;)if(null!=(r=n[i])&&r>=r){e=u=r;break}for(;++i<o;)null!=(r=n[i])&&(e>r&&(e=r),r>u&&(u=r))}else{for(;++i<o;)if(null!=(r=t.call(n,n[i],i))&&r>=r){e=u=r;break}for(;++i<o;)null!=(r=t.call(n,n[i],i))&&(e>r&&(e=r),r>u&&(u=r))}return[e,u]},ta.sum=function(n,t){var e,r=0,i=n.length,o=-1;if(1===arguments.length)for(;++o<i;)u(e=+n[o])&&(r+=e);else for(;++o<i;)u(e=+t.call(n,n[o],o))&&(r+=e);return r},ta.mean=function(n,t){var e,i=0,o=n.length,a=-1,c=o;if(1===arguments.length)for(;++a<o;)u(e=r(n[a]))?i+=e:--c;else for(;++a<o;)u(e=r(t.call(n,n[a],a)))?i+=e:--c;return c?i/c:void 0},ta.quantile=function(n,t){var e=(n.length-1)*t+1,r=Math.floor(e),u=+n[r-1],i=e-r;return i?u+i*(n[r]-u):u},ta.median=function(n,t){var i,o=[],a=n.length,c=-1;if(1===arguments.length)for(;++c<a;)u(i=r(n[c]))&&o.push(i);else for(;++c<a;)u(i=r(t.call(n,n[c],c)))&&o.push(i);return o.length?ta.quantile(o.sort(e),.5):void 0},ta.variance=function(n,t){var e,i,o=n.length,a=0,c=0,l=-1,s=0;if(1===arguments.length)for(;++l<o;)u(e=r(n[l]))&&(i=e-a,a+=i/++s,c+=i*(e-a));else for(;++l<o;)u(e=r(t.call(n,n[l],l)))&&(i=e-a,a+=i/++s,c+=i*(e-a));return s>1?c/(s-1):void 0},ta.deviation=function(){var n=ta.variance.apply(this,arguments);return n?Math.sqrt(n):n};var ha=i(e);ta.bisectLeft=ha.left,ta.bisect=ta.bisectRight=ha.right,ta.bisector=function(n){return i(1===n.length?function(t,r){return e(n(t),r)}:n)},ta.shuffle=function(n,t,e){(i=arguments.length)<3&&(e=n.length,2>i&&(t=0));for(var r,u,i=e-t;i;)u=Math.random()*i--|0,r=n[i+t],n[i+t]=n[u+t],n[u+t]=r;return n},ta.permute=function(n,t){for(var e=t.length,r=new Array(e);e--;)r[e]=n[t[e]];return r},ta.pairs=function(n){for(var t,e=0,r=n.length-1,u=n[0],i=new Array(0>r?0:r);r>e;)i[e]=[t=u,u=n[++e]];return i},ta.zip=function(){if(!(r=arguments.length))return[];for(var n=-1,t=ta.min(arguments,o),e=new Array(t);++n<t;)for(var r,u=-1,i=e[n]=new Array(r);++u<r;)i[u]=arguments[u][n];return e},ta.transpose=function(n){return ta.zip.apply(ta,n)},ta.keys=function(n){var t=[];for(var e in n)t.push(e);return t},ta.values=function(n){var t=[];for(var e in n)t.push(n[e]);return t},ta.entries=function(n){var t=[];for(var e in n)t.push({key:e,value:n[e]});return t},ta.merge=function(n){for(var t,e,r,u=n.length,i=-1,o=0;++i<u;)o+=n[i].length;for(e=new Array(o);--u>=0;)for(r=n[u],t=r.length;--t>=0;)e[--o]=r[t];return e};var ga=Math.abs;ta.range=function(n,t,e){if(arguments.length<3&&(e=1,arguments.length<2&&(t=n,n=0)),(t-n)/e===1/0)throw new Error("infinite range");var r,u=[],i=a(ga(e)),o=-1;if(n*=i,t*=i,e*=i,0>e)for(;(r=n+e*++o)>t;)u.push(r/i);else for(;(r=n+e*++o)<t;)u.push(r/i);return u},ta.map=function(n,t){var e=new l;if(n instanceof l)n.forEach(function(n,t){e.set(n,t)});else if(Array.isArray(n)){var r,u=-1,i=n.length;if(1===arguments.length)for(;++u<i;)e.set(u,n[u]);else for(;++u<i;)e.set(t.call(n,r=n[u],u),r)}else for(var o in n)e.set(o,n[o]);return e};var pa="__proto__",va="\x00";c(l,{has:h,get:function(n){return this._[s(n)]},set:function(n,t){return this._[s(n)]=t},remove:g,keys:p,values:function(){var n=[];for(var t in this._)n.push(this._[t]);return n},entries:function(){var n=[];for(var t in this._)n.push({key:f(t),value:this._[t]});return n},size:v,empty:d,forEach:function(n){for(var t in this._)n.call(this,f(t),this._[t])}}),ta.nest=function(){function n(t,o,a){if(a>=i.length)return r?r.call(u,o):e?o.sort(e):o;for(var c,s,f,h,g=-1,p=o.length,v=i[a++],d=new l;++g<p;)(h=d.get(c=v(s=o[g])))?h.push(s):d.set(c,[s]);return t?(s=t(),f=function(e,r){s.set(e,n(t,r,a))}):(s={},f=function(e,r){s[e]=n(t,r,a)}),d.forEach(f),s}function t(n,e){if(e>=i.length)return n;var r=[],u=o[e++];return n.forEach(function(n,u){r.push({key:n,values:t(u,e)})}),u?r.sort(function(n,t){return u(n.key,t.key)}):r}var e,r,u={},i=[],o=[];return u.map=function(t,e){return n(e,t,0)},u.entries=function(e){return t(n(ta.map,e,0),0)},u.key=function(n){return i.push(n),u},u.sortKeys=function(n){return o[i.length-1]=n,u},u.sortValues=function(n){return e=n,u},u.rollup=function(n){return r=n,u},u},ta.set=function(n){var t=new m;if(n)for(var e=0,r=n.length;r>e;++e)t.add(n[e]);return t},c(m,{has:h,add:function(n){return this._[s(n+="")]=!0,n},remove:g,values:p,size:v,empty:d,forEach:function(n){for(var t in this._)n.call(this,f(t))}}),ta.behavior={},ta.rebind=function(n,t){for(var e,r=1,u=arguments.length;++r<u;)n[e=arguments[r]]=M(n,t,t[e]);return n};var da=["webkit","ms","moz","Moz","o","O"];ta.dispatch=function(){for(var n=new _,t=-1,e=arguments.length;++t<e;)n[arguments[t]]=w(n);return n},_.prototype.on=function(n,t){var e=n.indexOf("."),r="";if(e>=0&&(r=n.slice(e+1),n=n.slice(0,e)),n)return arguments.length<2?this[n].on(r):this[n].on(r,t);if(2===arguments.length){if(null==t)for(n in this)this.hasOwnProperty(n)&&this[n].on(r,null);return this}},ta.event=null,ta.requote=function(n){return n.replace(ma,"\\$&")};var ma=/[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g,ya={}.__proto__?function(n,t){n.__proto__=t}:function(n,t){for(var e in t)n[e]=t[e]},Ma=function(n,t){return t.querySelector(n)},xa=function(n,t){return t.querySelectorAll(n)},ba=function(n,t){var e=n.matches||n[x(n,"matchesSelector")];return(ba=function(n,t){return e.call(n,t)})(n,t)};"function"==typeof Sizzle&&(Ma=function(n,t){return Sizzle(n,t)[0]||null},xa=Sizzle,ba=Sizzle.matchesSelector),ta.selection=function(){return ta.select(ua.documentElement)};var _a=ta.selection.prototype=[];_a.select=function(n){var t,e,r,u,i=[];n=N(n);for(var o=-1,a=this.length;++o<a;){i.push(t=[]),t.parentNode=(r=this[o]).parentNode;for(var c=-1,l=r.length;++c<l;)(u=r[c])?(t.push(e=n.call(u,u.__data__,c,o)),e&&"__data__"in u&&(e.__data__=u.__data__)):t.push(null)}return A(i)},_a.selectAll=function(n){var t,e,r=[];n=C(n);for(var u=-1,i=this.length;++u<i;)for(var o=this[u],a=-1,c=o.length;++a<c;)(e=o[a])&&(r.push(t=ra(n.call(e,e.__data__,a,u))),t.parentNode=e);return A(r)};var wa={svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};ta.ns={prefix:wa,qualify:function(n){var t=n.indexOf(":"),e=n;return t>=0&&(e=n.slice(0,t),n=n.slice(t+1)),wa.hasOwnProperty(e)?{space:wa[e],local:n}:n}},_a.attr=function(n,t){if(arguments.length<2){if("string"==typeof n){var e=this.node();return n=ta.ns.qualify(n),n.local?e.getAttributeNS(n.space,n.local):e.getAttribute(n)}for(t in n)this.each(z(t,n[t]));return this}return this.each(z(n,t))},_a.classed=function(n,t){if(arguments.length<2){if("string"==typeof n){var e=this.node(),r=(n=T(n)).length,u=-1;if(t=e.classList){for(;++u<r;)if(!t.contains(n[u]))return!1}else for(t=e.getAttribute("class");++u<r;)if(!L(n[u]).test(t))return!1;return!0}for(t in n)this.each(R(t,n[t]));return this}return this.each(R(n,t))},_a.style=function(n,e,r){var u=arguments.length;if(3>u){if("string"!=typeof n){2>u&&(e="");for(r in n)this.each(P(r,n[r],e));return this}if(2>u){var i=this.node();return t(i).getComputedStyle(i,null).getPropertyValue(n)}r=""}return this.each(P(n,e,r))},_a.property=function(n,t){if(arguments.length<2){if("string"==typeof n)return this.node()[n];for(t in n)this.each(U(t,n[t]));return this}return this.each(U(n,t))},_a.text=function(n){return arguments.length?this.each("function"==typeof n?function(){var t=n.apply(this,arguments);this.textContent=null==t?"":t}:null==n?function(){this.textContent=""}:function(){this.textContent=n}):this.node().textContent},_a.html=function(n){return arguments.length?this.each("function"==typeof n?function(){var t=n.apply(this,arguments);this.innerHTML=null==t?"":t}:null==n?function(){this.innerHTML=""}:function(){this.innerHTML=n}):this.node().innerHTML},_a.append=function(n){return n=j(n),this.select(function(){return this.appendChild(n.apply(this,arguments))})},_a.insert=function(n,t){return n=j(n),t=N(t),this.select(function(){return this.insertBefore(n.apply(this,arguments),t.apply(this,arguments)||null)})},_a.remove=function(){return this.each(F)},_a.data=function(n,t){function e(n,e){var r,u,i,o=n.length,f=e.length,h=Math.min(o,f),g=new Array(f),p=new Array(f),v=new Array(o);if(t){var d,m=new l,y=new Array(o);for(r=-1;++r<o;)m.has(d=t.call(u=n[r],u.__data__,r))?v[r]=u:m.set(d,u),y[r]=d;for(r=-1;++r<f;)(u=m.get(d=t.call(e,i=e[r],r)))?u!==!0&&(g[r]=u,u.__data__=i):p[r]=H(i),m.set(d,!0);for(r=-1;++r<o;)m.get(y[r])!==!0&&(v[r]=n[r])}else{for(r=-1;++r<h;)u=n[r],i=e[r],u?(u.__data__=i,g[r]=u):p[r]=H(i);for(;f>r;++r)p[r]=H(e[r]);for(;o>r;++r)v[r]=n[r]}p.update=g,p.parentNode=g.parentNode=v.parentNode=n.parentNode,a.push(p),c.push(g),s.push(v)}var r,u,i=-1,o=this.length;if(!arguments.length){for(n=new Array(o=(r=this[0]).length);++i<o;)(u=r[i])&&(n[i]=u.__data__);return n}var a=Z([]),c=A([]),s=A([]);if("function"==typeof n)for(;++i<o;)e(r=this[i],n.call(r,r.parentNode.__data__,i));else for(;++i<o;)e(r=this[i],n);return c.enter=function(){return a},c.exit=function(){return s},c},_a.datum=function(n){return arguments.length?this.property("__data__",n):this.property("__data__")},_a.filter=function(n){var t,e,r,u=[];"function"!=typeof n&&(n=O(n));for(var i=0,o=this.length;o>i;i++){u.push(t=[]),t.parentNode=(e=this[i]).parentNode;for(var a=0,c=e.length;c>a;a++)(r=e[a])&&n.call(r,r.__data__,a,i)&&t.push(r)}return A(u)},_a.order=function(){for(var n=-1,t=this.length;++n<t;)for(var e,r=this[n],u=r.length-1,i=r[u];--u>=0;)(e=r[u])&&(i&&i!==e.nextSibling&&i.parentNode.insertBefore(e,i),i=e);return this},_a.sort=function(n){n=I.apply(this,arguments);for(var t=-1,e=this.length;++t<e;)this[t].sort(n);return this.order()},_a.each=function(n){return Y(this,function(t,e,r){n.call(t,t.__data__,e,r)})},_a.call=function(n){var t=ra(arguments);return n.apply(t[0]=this,t),this},_a.empty=function(){return!this.node()},_a.node=function(){for(var n=0,t=this.length;t>n;n++)for(var e=this[n],r=0,u=e.length;u>r;r++){var i=e[r];if(i)return i}return null},_a.size=function(){var n=0;return Y(this,function(){++n}),n};var Sa=[];ta.selection.enter=Z,ta.selection.enter.prototype=Sa,Sa.append=_a.append,Sa.empty=_a.empty,Sa.node=_a.node,Sa.call=_a.call,Sa.size=_a.size,Sa.select=function(n){for(var t,e,r,u,i,o=[],a=-1,c=this.length;++a<c;){r=(u=this[a]).update,o.push(t=[]),t.parentNode=u.parentNode;for(var l=-1,s=u.length;++l<s;)(i=u[l])?(t.push(r[l]=e=n.call(u.parentNode,i.__data__,l,a)),e.__data__=i.__data__):t.push(null)}return A(o)},Sa.insert=function(n,t){return arguments.length<2&&(t=V(this)),_a.insert.call(this,n,t)},ta.select=function(t){var e;return"string"==typeof t?(e=[Ma(t,ua)],e.parentNode=ua.documentElement):(e=[t],e.parentNode=n(t)),A([e])},ta.selectAll=function(n){var t;return"string"==typeof n?(t=ra(xa(n,ua)),t.parentNode=ua.documentElement):(t=n,t.parentNode=null),A([t])},_a.on=function(n,t,e){var r=arguments.length;if(3>r){if("string"!=typeof n){2>r&&(t=!1);for(e in n)this.each(X(e,n[e],t));return this}if(2>r)return(r=this.node()["__on"+n])&&r._;e=!1}return this.each(X(n,t,e))};var ka=ta.map({mouseenter:"mouseover",mouseleave:"mouseout"});ua&&ka.forEach(function(n){"on"+n in ua&&ka.remove(n)});var Ea,Aa=0;ta.mouse=function(n){return J(n,k())};var Na=this.navigator&&/WebKit/.test(this.navigator.userAgent)?-1:0;ta.touch=function(n,t,e){if(arguments.length<3&&(e=t,t=k().changedTouches),t)for(var r,u=0,i=t.length;i>u;++u)if((r=t[u]).identifier===e)return J(n,r)},ta.behavior.drag=function(){function n(){this.on("mousedown.drag",i).on("touchstart.drag",o)}function e(n,t,e,i,o){return function(){function a(){var n,e,r=t(h,v);r&&(n=r[0]-M[0],e=r[1]-M[1],p|=n|e,M=r,g({type:"drag",x:r[0]+l[0],y:r[1]+l[1],dx:n,dy:e}))}function c(){t(h,v)&&(m.on(i+d,null).on(o+d,null),y(p&&ta.event.target===f),g({type:"dragend"}))}var l,s=this,f=ta.event.target,h=s.parentNode,g=r.of(s,arguments),p=0,v=n(),d=".drag"+(null==v?"":"-"+v),m=ta.select(e(f)).on(i+d,a).on(o+d,c),y=W(f),M=t(h,v);u?(l=u.apply(s,arguments),l=[l.x-M[0],l.y-M[1]]):l=[0,0],g({type:"dragstart"})}}var r=E(n,"drag","dragstart","dragend"),u=null,i=e(b,ta.mouse,t,"mousemove","mouseup"),o=e(G,ta.touch,y,"touchmove","touchend");return n.origin=function(t){return arguments.length?(u=t,n):u},ta.rebind(n,r,"on")},ta.touches=function(n,t){return arguments.length<2&&(t=k().touches),t?ra(t).map(function(t){var e=J(n,t);return e.identifier=t.identifier,e}):[]};var Ca=1e-6,za=Ca*Ca,qa=Math.PI,La=2*qa,Ta=La-Ca,Ra=qa/2,Da=qa/180,Pa=180/qa,Ua=Math.SQRT2,ja=2,Fa=4;ta.interpolateZoom=function(n,t){function e(n){var t=n*y;if(m){var e=rt(v),o=i/(ja*h)*(e*ut(Ua*t+v)-et(v));return[r+o*l,u+o*s,i*e/rt(Ua*t+v)]}return[r+n*l,u+n*s,i*Math.exp(Ua*t)]}var r=n[0],u=n[1],i=n[2],o=t[0],a=t[1],c=t[2],l=o-r,s=a-u,f=l*l+s*s,h=Math.sqrt(f),g=(c*c-i*i+Fa*f)/(2*i*ja*h),p=(c*c-i*i-Fa*f)/(2*c*ja*h),v=Math.log(Math.sqrt(g*g+1)-g),d=Math.log(Math.sqrt(p*p+1)-p),m=d-v,y=(m||Math.log(c/i))/Ua;return e.duration=1e3*y,e},ta.behavior.zoom=function(){function n(n){n.on(q,f).on(Oa+".zoom",g).on("dblclick.zoom",p).on(R,h)}function e(n){return[(n[0]-k.x)/k.k,(n[1]-k.y)/k.k]}function r(n){return[n[0]*k.k+k.x,n[1]*k.k+k.y]}function u(n){k.k=Math.max(N[0],Math.min(N[1],n))}function i(n,t){t=r(t),k.x+=n[0]-t[0],k.y+=n[1]-t[1]}function o(t,e,r,o){t.__chart__={x:k.x,y:k.y,k:k.k},u(Math.pow(2,o)),i(d=e,r),t=ta.select(t),C>0&&(t=t.transition().duration(C)),t.call(n.event)}function a(){b&&b.domain(x.range().map(function(n){return(n-k.x)/k.k}).map(x.invert)),w&&w.domain(_.range().map(function(n){return(n-k.y)/k.k}).map(_.invert))}function c(n){z++||n({type:"zoomstart"})}function l(n){a(),n({type:"zoom",scale:k.k,translate:[k.x,k.y]})}function s(n){--z||n({type:"zoomend"}),d=null}function f(){function n(){f=1,i(ta.mouse(u),g),l(a)}function r(){h.on(L,null).on(T,null),p(f&&ta.event.target===o),s(a)}var u=this,o=ta.event.target,a=D.of(u,arguments),f=0,h=ta.select(t(u)).on(L,n).on(T,r),g=e(ta.mouse(u)),p=W(u);Dl.call(u),c(a)}function h(){function n(){var n=ta.touches(p);return g=k.k,n.forEach(function(n){n.identifier in d&&(d[n.identifier]=e(n))}),n}function t(){var t=ta.event.target;ta.select(t).on(x,r).on(b,a),_.push(t);for(var e=ta.event.changedTouches,u=0,i=e.length;i>u;++u)d[e[u].identifier]=null;var c=n(),l=Date.now();if(1===c.length){if(500>l-M){var s=c[0];o(p,s,d[s.identifier],Math.floor(Math.log(k.k)/Math.LN2)+1),S()}M=l}else if(c.length>1){var s=c[0],f=c[1],h=s[0]-f[0],g=s[1]-f[1];m=h*h+g*g}}function r(){var n,t,e,r,o=ta.touches(p);Dl.call(p);for(var a=0,c=o.length;c>a;++a,r=null)if(e=o[a],r=d[e.identifier]){if(t)break;n=e,t=r}if(r){var s=(s=e[0]-n[0])*s+(s=e[1]-n[1])*s,f=m&&Math.sqrt(s/m);n=[(n[0]+e[0])/2,(n[1]+e[1])/2],t=[(t[0]+r[0])/2,(t[1]+r[1])/2],u(f*g)}M=null,i(n,t),l(v)}function a(){if(ta.event.touches.length){for(var t=ta.event.changedTouches,e=0,r=t.length;r>e;++e)delete d[t[e].identifier];for(var u in d)return void n()}ta.selectAll(_).on(y,null),w.on(q,f).on(R,h),E(),s(v)}var g,p=this,v=D.of(p,arguments),d={},m=0,y=".zoom-"+ta.event.changedTouches[0].identifier,x="touchmove"+y,b="touchend"+y,_=[],w=ta.select(p),E=W(p);t(),c(v),w.on(q,null).on(R,t)}function g(){var n=D.of(this,arguments);y?clearTimeout(y):(v=e(d=m||ta.mouse(this)),Dl.call(this),c(n)),y=setTimeout(function(){y=null,s(n)},50),S(),u(Math.pow(2,.002*Ha())*k.k),i(d,v),l(n)}function p(){var n=ta.mouse(this),t=Math.log(k.k)/Math.LN2;o(this,n,e(n),ta.event.shiftKey?Math.ceil(t)-1:Math.floor(t)+1)}var v,d,m,y,M,x,b,_,w,k={x:0,y:0,k:1},A=[960,500],N=Ia,C=250,z=0,q="mousedown.zoom",L="mousemove.zoom",T="mouseup.zoom",R="touchstart.zoom",D=E(n,"zoomstart","zoom","zoomend");return Oa||(Oa="onwheel"in ua?(Ha=function(){return-ta.event.deltaY*(ta.event.deltaMode?120:1)},"wheel"):"onmousewheel"in ua?(Ha=function(){return ta.event.wheelDelta},"mousewheel"):(Ha=function(){return-ta.event.detail},"MozMousePixelScroll")),n.event=function(n){n.each(function(){var n=D.of(this,arguments),t=k;Tl?ta.select(this).transition().each("start.zoom",function(){k=this.__chart__||{x:0,y:0,k:1},c(n)}).tween("zoom:zoom",function(){var e=A[0],r=A[1],u=d?d[0]:e/2,i=d?d[1]:r/2,o=ta.interpolateZoom([(u-k.x)/k.k,(i-k.y)/k.k,e/k.k],[(u-t.x)/t.k,(i-t.y)/t.k,e/t.k]);return function(t){var r=o(t),a=e/r[2];this.__chart__=k={x:u-r[0]*a,y:i-r[1]*a,k:a},l(n)}}).each("interrupt.zoom",function(){s(n)}).each("end.zoom",function(){s(n)}):(this.__chart__=k,c(n),l(n),s(n))})},n.translate=function(t){return arguments.length?(k={x:+t[0],y:+t[1],k:k.k},a(),n):[k.x,k.y]},n.scale=function(t){return arguments.length?(k={x:k.x,y:k.y,k:+t},a(),n):k.k},n.scaleExtent=function(t){return arguments.length?(N=null==t?Ia:[+t[0],+t[1]],n):N},n.center=function(t){return arguments.length?(m=t&&[+t[0],+t[1]],n):m},n.size=function(t){return arguments.length?(A=t&&[+t[0],+t[1]],n):A},n.duration=function(t){return arguments.length?(C=+t,n):C},n.x=function(t){return arguments.length?(b=t,x=t.copy(),k={x:0,y:0,k:1},n):b},n.y=function(t){return arguments.length?(w=t,_=t.copy(),k={x:0,y:0,k:1},n):w},ta.rebind(n,D,"on")};var Ha,Oa,Ia=[0,1/0];ta.color=ot,ot.prototype.toString=function(){return this.rgb()+""},ta.hsl=at;var Ya=at.prototype=new ot;Ya.brighter=function(n){return n=Math.pow(.7,arguments.length?n:1),new at(this.h,this.s,this.l/n)},Ya.darker=function(n){return n=Math.pow(.7,arguments.length?n:1),new at(this.h,this.s,n*this.l)},Ya.rgb=function(){return ct(this.h,this.s,this.l)},ta.hcl=lt;var Za=lt.prototype=new ot;Za.brighter=function(n){return new lt(this.h,this.c,Math.min(100,this.l+Va*(arguments.length?n:1)))},Za.darker=function(n){return new lt(this.h,this.c,Math.max(0,this.l-Va*(arguments.length?n:1)))},Za.rgb=function(){return st(this.h,this.c,this.l).rgb()},ta.lab=ft;var Va=18,Xa=.95047,$a=1,Ba=1.08883,Wa=ft.prototype=new ot;Wa.brighter=function(n){return new ft(Math.min(100,this.l+Va*(arguments.length?n:1)),this.a,this.b)},Wa.darker=function(n){return new ft(Math.max(0,this.l-Va*(arguments.length?n:1)),this.a,this.b)},Wa.rgb=function(){return ht(this.l,this.a,this.b)},ta.rgb=mt;var Ja=mt.prototype=new ot;Ja.brighter=function(n){n=Math.pow(.7,arguments.length?n:1);var t=this.r,e=this.g,r=this.b,u=30;return t||e||r?(t&&u>t&&(t=u),e&&u>e&&(e=u),r&&u>r&&(r=u),new mt(Math.min(255,t/n),Math.min(255,e/n),Math.min(255,r/n))):new mt(u,u,u)},Ja.darker=function(n){return n=Math.pow(.7,arguments.length?n:1),new mt(n*this.r,n*this.g,n*this.b)},Ja.hsl=function(){return _t(this.r,this.g,this.b)},Ja.toString=function(){return"#"+xt(this.r)+xt(this.g)+xt(this.b)};var Ga=ta.map({aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074});Ga.forEach(function(n,t){Ga.set(n,yt(t))}),ta.functor=Et,ta.xhr=At(y),ta.dsv=function(n,t){function e(n,e,i){arguments.length<3&&(i=e,e=null);var o=Nt(n,t,null==e?r:u(e),i);return o.row=function(n){return arguments.length?o.response(null==(e=n)?r:u(n)):e},o}function r(n){return e.parse(n.responseText)}function u(n){return function(t){return e.parse(t.responseText,n)}}function i(t){return t.map(o).join(n)}function o(n){return a.test(n)?'"'+n.replace(/\"/g,'""')+'"':n}var a=new RegExp('["'+n+"\n]"),c=n.charCodeAt(0);return e.parse=function(n,t){var r;return e.parseRows(n,function(n,e){if(r)return r(n,e-1);var u=new Function("d","return {"+n.map(function(n,t){return JSON.stringify(n)+": d["+t+"]"}).join(",")+"}");r=t?function(n,e){return t(u(n),e)}:u})},e.parseRows=function(n,t){function e(){if(s>=l)return o;if(u)return u=!1,i;var t=s;if(34===n.charCodeAt(t)){for(var e=t;e++<l;)if(34===n.charCodeAt(e)){if(34!==n.charCodeAt(e+1))break;++e}s=e+2;var r=n.charCodeAt(e+1);return 13===r?(u=!0,10===n.charCodeAt(e+2)&&++s):10===r&&(u=!0),n.slice(t+1,e).replace(/""/g,'"')}for(;l>s;){var r=n.charCodeAt(s++),a=1;if(10===r)u=!0;else if(13===r)u=!0,10===n.charCodeAt(s)&&(++s,++a);else if(r!==c)continue;return n.slice(t,s-a)}return n.slice(t)}for(var r,u,i={},o={},a=[],l=n.length,s=0,f=0;(r=e())!==o;){for(var h=[];r!==i&&r!==o;)h.push(r),r=e();t&&null==(h=t(h,f++))||a.push(h)}return a},e.format=function(t){if(Array.isArray(t[0]))return e.formatRows(t);var r=new m,u=[];return t.forEach(function(n){for(var t in n)r.has(t)||u.push(r.add(t))}),[u.map(o).join(n)].concat(t.map(function(t){return u.map(function(n){return o(t[n])}).join(n)})).join("\n")},e.formatRows=function(n){return n.map(i).join("\n")},e},ta.csv=ta.dsv(",","text/csv"),ta.tsv=ta.dsv("	","text/tab-separated-values");var Ka,Qa,nc,tc,ec,rc=this[x(this,"requestAnimationFrame")]||function(n){setTimeout(n,17)};ta.timer=function(n,t,e){var r=arguments.length;2>r&&(t=0),3>r&&(e=Date.now());var u=e+t,i={c:n,t:u,f:!1,n:null};Qa?Qa.n=i:Ka=i,Qa=i,nc||(tc=clearTimeout(tc),nc=1,rc(qt))},ta.timer.flush=function(){Lt(),Tt()},ta.round=function(n,t){return t?Math.round(n*(t=Math.pow(10,t)))/t:Math.round(n)};var uc=["y","z","a","f","p","n","\xb5","m","","k","M","G","T","P","E","Z","Y"].map(Dt);ta.formatPrefix=function(n,t){var e=0;return n&&(0>n&&(n*=-1),t&&(n=ta.round(n,Rt(n,t))),e=1+Math.floor(1e-12+Math.log(n)/Math.LN10),e=Math.max(-24,Math.min(24,3*Math.floor((e-1)/3)))),uc[8+e/3]};var ic=/(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i,oc=ta.map({b:function(n){return n.toString(2)},c:function(n){return String.fromCharCode(n)},o:function(n){return n.toString(8)},x:function(n){return n.toString(16)},X:function(n){return n.toString(16).toUpperCase()},g:function(n,t){return n.toPrecision(t)},e:function(n,t){return n.toExponential(t)},f:function(n,t){return n.toFixed(t)},r:function(n,t){return(n=ta.round(n,Rt(n,t))).toFixed(Math.max(0,Math.min(20,Rt(n*(1+1e-15),t))))}}),ac=ta.time={},cc=Date;jt.prototype={getDate:function(){return this._.getUTCDate()},getDay:function(){return this._.getUTCDay()},getFullYear:function(){return this._.getUTCFullYear()},getHours:function(){return this._.getUTCHours()},getMilliseconds:function(){return this._.getUTCMilliseconds()},getMinutes:function(){return this._.getUTCMinutes()},getMonth:function(){return this._.getUTCMonth()},getSeconds:function(){return this._.getUTCSeconds()},getTime:function(){return this._.getTime()},getTimezoneOffset:function(){return 0},valueOf:function(){return this._.valueOf()},setDate:function(){lc.setUTCDate.apply(this._,arguments)},setDay:function(){lc.setUTCDay.apply(this._,arguments)},setFullYear:function(){lc.setUTCFullYear.apply(this._,arguments)},setHours:function(){lc.setUTCHours.apply(this._,arguments)},setMilliseconds:function(){lc.setUTCMilliseconds.apply(this._,arguments)},setMinutes:function(){lc.setUTCMinutes.apply(this._,arguments)},setMonth:function(){lc.setUTCMonth.apply(this._,arguments)},setSeconds:function(){lc.setUTCSeconds.apply(this._,arguments)},setTime:function(){lc.setTime.apply(this._,arguments)}};var lc=Date.prototype;ac.year=Ft(function(n){return n=ac.day(n),n.setMonth(0,1),n},function(n,t){n.setFullYear(n.getFullYear()+t)},function(n){return n.getFullYear()}),ac.years=ac.year.range,ac.years.utc=ac.year.utc.range,ac.day=Ft(function(n){var t=new cc(2e3,0);return t.setFullYear(n.getFullYear(),n.getMonth(),n.getDate()),t},function(n,t){n.setDate(n.getDate()+t)},function(n){return n.getDate()-1}),ac.days=ac.day.range,ac.days.utc=ac.day.utc.range,ac.dayOfYear=function(n){var t=ac.year(n);return Math.floor((n-t-6e4*(n.getTimezoneOffset()-t.getTimezoneOffset()))/864e5)},["sunday","monday","tuesday","wednesday","thursday","friday","saturday"].forEach(function(n,t){t=7-t;var e=ac[n]=Ft(function(n){return(n=ac.day(n)).setDate(n.getDate()-(n.getDay()+t)%7),n},function(n,t){n.setDate(n.getDate()+7*Math.floor(t))},function(n){var e=ac.year(n).getDay();return Math.floor((ac.dayOfYear(n)+(e+t)%7)/7)-(e!==t)});ac[n+"s"]=e.range,ac[n+"s"].utc=e.utc.range,ac[n+"OfYear"]=function(n){var e=ac.year(n).getDay();return Math.floor((ac.dayOfYear(n)+(e+t)%7)/7)}}),ac.week=ac.sunday,ac.weeks=ac.sunday.range,ac.weeks.utc=ac.sunday.utc.range,ac.weekOfYear=ac.sundayOfYear;var sc={"-":"",_:" ",0:"0"},fc=/^\s*\d+/,hc=/^%/;ta.locale=function(n){return{numberFormat:Pt(n),timeFormat:Ot(n)}};var gc=ta.locale({decimal:".",thousands:",",grouping:[3],currency:["$",""],dateTime:"%a %b %e %X %Y",date:"%m/%d/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});ta.format=gc.numberFormat,ta.geo={},ce.prototype={s:0,t:0,add:function(n){le(n,this.t,pc),le(pc.s,this.s,this),this.s?this.t+=pc.t:this.s=pc.t
},reset:function(){this.s=this.t=0},valueOf:function(){return this.s}};var pc=new ce;ta.geo.stream=function(n,t){n&&vc.hasOwnProperty(n.type)?vc[n.type](n,t):se(n,t)};var vc={Feature:function(n,t){se(n.geometry,t)},FeatureCollection:function(n,t){for(var e=n.features,r=-1,u=e.length;++r<u;)se(e[r].geometry,t)}},dc={Sphere:function(n,t){t.sphere()},Point:function(n,t){n=n.coordinates,t.point(n[0],n[1],n[2])},MultiPoint:function(n,t){for(var e=n.coordinates,r=-1,u=e.length;++r<u;)n=e[r],t.point(n[0],n[1],n[2])},LineString:function(n,t){fe(n.coordinates,t,0)},MultiLineString:function(n,t){for(var e=n.coordinates,r=-1,u=e.length;++r<u;)fe(e[r],t,0)},Polygon:function(n,t){he(n.coordinates,t)},MultiPolygon:function(n,t){for(var e=n.coordinates,r=-1,u=e.length;++r<u;)he(e[r],t)},GeometryCollection:function(n,t){for(var e=n.geometries,r=-1,u=e.length;++r<u;)se(e[r],t)}};ta.geo.area=function(n){return mc=0,ta.geo.stream(n,Mc),mc};var mc,yc=new ce,Mc={sphere:function(){mc+=4*qa},point:b,lineStart:b,lineEnd:b,polygonStart:function(){yc.reset(),Mc.lineStart=ge},polygonEnd:function(){var n=2*yc;mc+=0>n?4*qa+n:n,Mc.lineStart=Mc.lineEnd=Mc.point=b}};ta.geo.bounds=function(){function n(n,t){M.push(x=[s=n,h=n]),f>t&&(f=t),t>g&&(g=t)}function t(t,e){var r=pe([t*Da,e*Da]);if(m){var u=de(m,r),i=[u[1],-u[0],0],o=de(i,u);Me(o),o=xe(o);var c=t-p,l=c>0?1:-1,v=o[0]*Pa*l,d=ga(c)>180;if(d^(v>l*p&&l*t>v)){var y=o[1]*Pa;y>g&&(g=y)}else if(v=(v+360)%360-180,d^(v>l*p&&l*t>v)){var y=-o[1]*Pa;f>y&&(f=y)}else f>e&&(f=e),e>g&&(g=e);d?p>t?a(s,t)>a(s,h)&&(h=t):a(t,h)>a(s,h)&&(s=t):h>=s?(s>t&&(s=t),t>h&&(h=t)):t>p?a(s,t)>a(s,h)&&(h=t):a(t,h)>a(s,h)&&(s=t)}else n(t,e);m=r,p=t}function e(){b.point=t}function r(){x[0]=s,x[1]=h,b.point=n,m=null}function u(n,e){if(m){var r=n-p;y+=ga(r)>180?r+(r>0?360:-360):r}else v=n,d=e;Mc.point(n,e),t(n,e)}function i(){Mc.lineStart()}function o(){u(v,d),Mc.lineEnd(),ga(y)>Ca&&(s=-(h=180)),x[0]=s,x[1]=h,m=null}function a(n,t){return(t-=n)<0?t+360:t}function c(n,t){return n[0]-t[0]}function l(n,t){return t[0]<=t[1]?t[0]<=n&&n<=t[1]:n<t[0]||t[1]<n}var s,f,h,g,p,v,d,m,y,M,x,b={point:n,lineStart:e,lineEnd:r,polygonStart:function(){b.point=u,b.lineStart=i,b.lineEnd=o,y=0,Mc.polygonStart()},polygonEnd:function(){Mc.polygonEnd(),b.point=n,b.lineStart=e,b.lineEnd=r,0>yc?(s=-(h=180),f=-(g=90)):y>Ca?g=90:-Ca>y&&(f=-90),x[0]=s,x[1]=h}};return function(n){g=h=-(s=f=1/0),M=[],ta.geo.stream(n,b);var t=M.length;if(t){M.sort(c);for(var e,r=1,u=M[0],i=[u];t>r;++r)e=M[r],l(e[0],u)||l(e[1],u)?(a(u[0],e[1])>a(u[0],u[1])&&(u[1]=e[1]),a(e[0],u[1])>a(u[0],u[1])&&(u[0]=e[0])):i.push(u=e);for(var o,e,p=-1/0,t=i.length-1,r=0,u=i[t];t>=r;u=e,++r)e=i[r],(o=a(u[1],e[0]))>p&&(p=o,s=e[0],h=u[1])}return M=x=null,1/0===s||1/0===f?[[0/0,0/0],[0/0,0/0]]:[[s,f],[h,g]]}}(),ta.geo.centroid=function(n){xc=bc=_c=wc=Sc=kc=Ec=Ac=Nc=Cc=zc=0,ta.geo.stream(n,qc);var t=Nc,e=Cc,r=zc,u=t*t+e*e+r*r;return za>u&&(t=kc,e=Ec,r=Ac,Ca>bc&&(t=_c,e=wc,r=Sc),u=t*t+e*e+r*r,za>u)?[0/0,0/0]:[Math.atan2(e,t)*Pa,tt(r/Math.sqrt(u))*Pa]};var xc,bc,_c,wc,Sc,kc,Ec,Ac,Nc,Cc,zc,qc={sphere:b,point:_e,lineStart:Se,lineEnd:ke,polygonStart:function(){qc.lineStart=Ee},polygonEnd:function(){qc.lineStart=Se}},Lc=Le(Ne,Pe,je,[-qa,-qa/2]),Tc=1e9;ta.geo.clipExtent=function(){var n,t,e,r,u,i,o={stream:function(n){return u&&(u.valid=!1),u=i(n),u.valid=!0,u},extent:function(a){return arguments.length?(i=Ie(n=+a[0][0],t=+a[0][1],e=+a[1][0],r=+a[1][1]),u&&(u.valid=!1,u=null),o):[[n,t],[e,r]]}};return o.extent([[0,0],[960,500]])},(ta.geo.conicEqualArea=function(){return Ye(Ze)}).raw=Ze,ta.geo.albers=function(){return ta.geo.conicEqualArea().rotate([96,0]).center([-.6,38.7]).parallels([29.5,45.5]).scale(1070)},ta.geo.albersUsa=function(){function n(n){var i=n[0],o=n[1];return t=null,e(i,o),t||(r(i,o),t)||u(i,o),t}var t,e,r,u,i=ta.geo.albers(),o=ta.geo.conicEqualArea().rotate([154,0]).center([-2,58.5]).parallels([55,65]),a=ta.geo.conicEqualArea().rotate([157,0]).center([-3,19.9]).parallels([8,18]),c={point:function(n,e){t=[n,e]}};return n.invert=function(n){var t=i.scale(),e=i.translate(),r=(n[0]-e[0])/t,u=(n[1]-e[1])/t;return(u>=.12&&.234>u&&r>=-.425&&-.214>r?o:u>=.166&&.234>u&&r>=-.214&&-.115>r?a:i).invert(n)},n.stream=function(n){var t=i.stream(n),e=o.stream(n),r=a.stream(n);return{point:function(n,u){t.point(n,u),e.point(n,u),r.point(n,u)},sphere:function(){t.sphere(),e.sphere(),r.sphere()},lineStart:function(){t.lineStart(),e.lineStart(),r.lineStart()},lineEnd:function(){t.lineEnd(),e.lineEnd(),r.lineEnd()},polygonStart:function(){t.polygonStart(),e.polygonStart(),r.polygonStart()},polygonEnd:function(){t.polygonEnd(),e.polygonEnd(),r.polygonEnd()}}},n.precision=function(t){return arguments.length?(i.precision(t),o.precision(t),a.precision(t),n):i.precision()},n.scale=function(t){return arguments.length?(i.scale(t),o.scale(.35*t),a.scale(t),n.translate(i.translate())):i.scale()},n.translate=function(t){if(!arguments.length)return i.translate();var l=i.scale(),s=+t[0],f=+t[1];return e=i.translate(t).clipExtent([[s-.455*l,f-.238*l],[s+.455*l,f+.238*l]]).stream(c).point,r=o.translate([s-.307*l,f+.201*l]).clipExtent([[s-.425*l+Ca,f+.12*l+Ca],[s-.214*l-Ca,f+.234*l-Ca]]).stream(c).point,u=a.translate([s-.205*l,f+.212*l]).clipExtent([[s-.214*l+Ca,f+.166*l+Ca],[s-.115*l-Ca,f+.234*l-Ca]]).stream(c).point,n},n.scale(1070)};var Rc,Dc,Pc,Uc,jc,Fc,Hc={point:b,lineStart:b,lineEnd:b,polygonStart:function(){Dc=0,Hc.lineStart=Ve},polygonEnd:function(){Hc.lineStart=Hc.lineEnd=Hc.point=b,Rc+=ga(Dc/2)}},Oc={point:Xe,lineStart:b,lineEnd:b,polygonStart:b,polygonEnd:b},Ic={point:We,lineStart:Je,lineEnd:Ge,polygonStart:function(){Ic.lineStart=Ke},polygonEnd:function(){Ic.point=We,Ic.lineStart=Je,Ic.lineEnd=Ge}};ta.geo.path=function(){function n(n){return n&&("function"==typeof a&&i.pointRadius(+a.apply(this,arguments)),o&&o.valid||(o=u(i)),ta.geo.stream(n,o)),i.result()}function t(){return o=null,n}var e,r,u,i,o,a=4.5;return n.area=function(n){return Rc=0,ta.geo.stream(n,u(Hc)),Rc},n.centroid=function(n){return _c=wc=Sc=kc=Ec=Ac=Nc=Cc=zc=0,ta.geo.stream(n,u(Ic)),zc?[Nc/zc,Cc/zc]:Ac?[kc/Ac,Ec/Ac]:Sc?[_c/Sc,wc/Sc]:[0/0,0/0]},n.bounds=function(n){return jc=Fc=-(Pc=Uc=1/0),ta.geo.stream(n,u(Oc)),[[Pc,Uc],[jc,Fc]]},n.projection=function(n){return arguments.length?(u=(e=n)?n.stream||tr(n):y,t()):e},n.context=function(n){return arguments.length?(i=null==(r=n)?new $e:new Qe(n),"function"!=typeof a&&i.pointRadius(a),t()):r},n.pointRadius=function(t){return arguments.length?(a="function"==typeof t?t:(i.pointRadius(+t),+t),n):a},n.projection(ta.geo.albersUsa()).context(null)},ta.geo.transform=function(n){return{stream:function(t){var e=new er(t);for(var r in n)e[r]=n[r];return e}}},er.prototype={point:function(n,t){this.stream.point(n,t)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}},ta.geo.projection=ur,ta.geo.projectionMutator=ir,(ta.geo.equirectangular=function(){return ur(ar)}).raw=ar.invert=ar,ta.geo.rotation=function(n){function t(t){return t=n(t[0]*Da,t[1]*Da),t[0]*=Pa,t[1]*=Pa,t}return n=lr(n[0]%360*Da,n[1]*Da,n.length>2?n[2]*Da:0),t.invert=function(t){return t=n.invert(t[0]*Da,t[1]*Da),t[0]*=Pa,t[1]*=Pa,t},t},cr.invert=ar,ta.geo.circle=function(){function n(){var n="function"==typeof r?r.apply(this,arguments):r,t=lr(-n[0]*Da,-n[1]*Da,0).invert,u=[];return e(null,null,1,{point:function(n,e){u.push(n=t(n,e)),n[0]*=Pa,n[1]*=Pa}}),{type:"Polygon",coordinates:[u]}}var t,e,r=[0,0],u=6;return n.origin=function(t){return arguments.length?(r=t,n):r},n.angle=function(r){return arguments.length?(e=gr((t=+r)*Da,u*Da),n):t},n.precision=function(r){return arguments.length?(e=gr(t*Da,(u=+r)*Da),n):u},n.angle(90)},ta.geo.distance=function(n,t){var e,r=(t[0]-n[0])*Da,u=n[1]*Da,i=t[1]*Da,o=Math.sin(r),a=Math.cos(r),c=Math.sin(u),l=Math.cos(u),s=Math.sin(i),f=Math.cos(i);return Math.atan2(Math.sqrt((e=f*o)*e+(e=l*s-c*f*a)*e),c*s+l*f*a)},ta.geo.graticule=function(){function n(){return{type:"MultiLineString",coordinates:t()}}function t(){return ta.range(Math.ceil(i/d)*d,u,d).map(h).concat(ta.range(Math.ceil(l/m)*m,c,m).map(g)).concat(ta.range(Math.ceil(r/p)*p,e,p).filter(function(n){return ga(n%d)>Ca}).map(s)).concat(ta.range(Math.ceil(a/v)*v,o,v).filter(function(n){return ga(n%m)>Ca}).map(f))}var e,r,u,i,o,a,c,l,s,f,h,g,p=10,v=p,d=90,m=360,y=2.5;return n.lines=function(){return t().map(function(n){return{type:"LineString",coordinates:n}})},n.outline=function(){return{type:"Polygon",coordinates:[h(i).concat(g(c).slice(1),h(u).reverse().slice(1),g(l).reverse().slice(1))]}},n.extent=function(t){return arguments.length?n.majorExtent(t).minorExtent(t):n.minorExtent()},n.majorExtent=function(t){return arguments.length?(i=+t[0][0],u=+t[1][0],l=+t[0][1],c=+t[1][1],i>u&&(t=i,i=u,u=t),l>c&&(t=l,l=c,c=t),n.precision(y)):[[i,l],[u,c]]},n.minorExtent=function(t){return arguments.length?(r=+t[0][0],e=+t[1][0],a=+t[0][1],o=+t[1][1],r>e&&(t=r,r=e,e=t),a>o&&(t=a,a=o,o=t),n.precision(y)):[[r,a],[e,o]]},n.step=function(t){return arguments.length?n.majorStep(t).minorStep(t):n.minorStep()},n.majorStep=function(t){return arguments.length?(d=+t[0],m=+t[1],n):[d,m]},n.minorStep=function(t){return arguments.length?(p=+t[0],v=+t[1],n):[p,v]},n.precision=function(t){return arguments.length?(y=+t,s=vr(a,o,90),f=dr(r,e,y),h=vr(l,c,90),g=dr(i,u,y),n):y},n.majorExtent([[-180,-90+Ca],[180,90-Ca]]).minorExtent([[-180,-80-Ca],[180,80+Ca]])},ta.geo.greatArc=function(){function n(){return{type:"LineString",coordinates:[t||r.apply(this,arguments),e||u.apply(this,arguments)]}}var t,e,r=mr,u=yr;return n.distance=function(){return ta.geo.distance(t||r.apply(this,arguments),e||u.apply(this,arguments))},n.source=function(e){return arguments.length?(r=e,t="function"==typeof e?null:e,n):r},n.target=function(t){return arguments.length?(u=t,e="function"==typeof t?null:t,n):u},n.precision=function(){return arguments.length?n:0},n},ta.geo.interpolate=function(n,t){return Mr(n[0]*Da,n[1]*Da,t[0]*Da,t[1]*Da)},ta.geo.length=function(n){return Yc=0,ta.geo.stream(n,Zc),Yc};var Yc,Zc={sphere:b,point:b,lineStart:xr,lineEnd:b,polygonStart:b,polygonEnd:b},Vc=br(function(n){return Math.sqrt(2/(1+n))},function(n){return 2*Math.asin(n/2)});(ta.geo.azimuthalEqualArea=function(){return ur(Vc)}).raw=Vc;var Xc=br(function(n){var t=Math.acos(n);return t&&t/Math.sin(t)},y);(ta.geo.azimuthalEquidistant=function(){return ur(Xc)}).raw=Xc,(ta.geo.conicConformal=function(){return Ye(_r)}).raw=_r,(ta.geo.conicEquidistant=function(){return Ye(wr)}).raw=wr;var $c=br(function(n){return 1/n},Math.atan);(ta.geo.gnomonic=function(){return ur($c)}).raw=$c,Sr.invert=function(n,t){return[n,2*Math.atan(Math.exp(t))-Ra]},(ta.geo.mercator=function(){return kr(Sr)}).raw=Sr;var Bc=br(function(){return 1},Math.asin);(ta.geo.orthographic=function(){return ur(Bc)}).raw=Bc;var Wc=br(function(n){return 1/(1+n)},function(n){return 2*Math.atan(n)});(ta.geo.stereographic=function(){return ur(Wc)}).raw=Wc,Er.invert=function(n,t){return[-t,2*Math.atan(Math.exp(n))-Ra]},(ta.geo.transverseMercator=function(){var n=kr(Er),t=n.center,e=n.rotate;return n.center=function(n){return n?t([-n[1],n[0]]):(n=t(),[n[1],-n[0]])},n.rotate=function(n){return n?e([n[0],n[1],n.length>2?n[2]+90:90]):(n=e(),[n[0],n[1],n[2]-90])},e([0,0,90])}).raw=Er,ta.geom={},ta.geom.hull=function(n){function t(n){if(n.length<3)return[];var t,u=Et(e),i=Et(r),o=n.length,a=[],c=[];for(t=0;o>t;t++)a.push([+u.call(this,n[t],t),+i.call(this,n[t],t),t]);for(a.sort(zr),t=0;o>t;t++)c.push([a[t][0],-a[t][1]]);var l=Cr(a),s=Cr(c),f=s[0]===l[0],h=s[s.length-1]===l[l.length-1],g=[];for(t=l.length-1;t>=0;--t)g.push(n[a[l[t]][2]]);for(t=+f;t<s.length-h;++t)g.push(n[a[s[t]][2]]);return g}var e=Ar,r=Nr;return arguments.length?t(n):(t.x=function(n){return arguments.length?(e=n,t):e},t.y=function(n){return arguments.length?(r=n,t):r},t)},ta.geom.polygon=function(n){return ya(n,Jc),n};var Jc=ta.geom.polygon.prototype=[];Jc.area=function(){for(var n,t=-1,e=this.length,r=this[e-1],u=0;++t<e;)n=r,r=this[t],u+=n[1]*r[0]-n[0]*r[1];return.5*u},Jc.centroid=function(n){var t,e,r=-1,u=this.length,i=0,o=0,a=this[u-1];for(arguments.length||(n=-1/(6*this.area()));++r<u;)t=a,a=this[r],e=t[0]*a[1]-a[0]*t[1],i+=(t[0]+a[0])*e,o+=(t[1]+a[1])*e;return[i*n,o*n]},Jc.clip=function(n){for(var t,e,r,u,i,o,a=Tr(n),c=-1,l=this.length-Tr(this),s=this[l-1];++c<l;){for(t=n.slice(),n.length=0,u=this[c],i=t[(r=t.length-a)-1],e=-1;++e<r;)o=t[e],qr(o,s,u)?(qr(i,s,u)||n.push(Lr(i,o,s,u)),n.push(o)):qr(i,s,u)&&n.push(Lr(i,o,s,u)),i=o;a&&n.push(n[0]),s=u}return n};var Gc,Kc,Qc,nl,tl,el=[],rl=[];Or.prototype.prepare=function(){for(var n,t=this.edges,e=t.length;e--;)n=t[e].edge,n.b&&n.a||t.splice(e,1);return t.sort(Yr),t.length},Qr.prototype={start:function(){return this.edge.l===this.site?this.edge.a:this.edge.b},end:function(){return this.edge.l===this.site?this.edge.b:this.edge.a}},nu.prototype={insert:function(n,t){var e,r,u;if(n){if(t.P=n,t.N=n.N,n.N&&(n.N.P=t),n.N=t,n.R){for(n=n.R;n.L;)n=n.L;n.L=t}else n.R=t;e=n}else this._?(n=uu(this._),t.P=null,t.N=n,n.P=n.L=t,e=n):(t.P=t.N=null,this._=t,e=null);for(t.L=t.R=null,t.U=e,t.C=!0,n=t;e&&e.C;)r=e.U,e===r.L?(u=r.R,u&&u.C?(e.C=u.C=!1,r.C=!0,n=r):(n===e.R&&(eu(this,e),n=e,e=n.U),e.C=!1,r.C=!0,ru(this,r))):(u=r.L,u&&u.C?(e.C=u.C=!1,r.C=!0,n=r):(n===e.L&&(ru(this,e),n=e,e=n.U),e.C=!1,r.C=!0,eu(this,r))),e=n.U;this._.C=!1},remove:function(n){n.N&&(n.N.P=n.P),n.P&&(n.P.N=n.N),n.N=n.P=null;var t,e,r,u=n.U,i=n.L,o=n.R;if(e=i?o?uu(o):i:o,u?u.L===n?u.L=e:u.R=e:this._=e,i&&o?(r=e.C,e.C=n.C,e.L=i,i.U=e,e!==o?(u=e.U,e.U=n.U,n=e.R,u.L=n,e.R=o,o.U=e):(e.U=u,u=e,n=e.R)):(r=n.C,n=e),n&&(n.U=u),!r){if(n&&n.C)return void(n.C=!1);do{if(n===this._)break;if(n===u.L){if(t=u.R,t.C&&(t.C=!1,u.C=!0,eu(this,u),t=u.R),t.L&&t.L.C||t.R&&t.R.C){t.R&&t.R.C||(t.L.C=!1,t.C=!0,ru(this,t),t=u.R),t.C=u.C,u.C=t.R.C=!1,eu(this,u),n=this._;break}}else if(t=u.L,t.C&&(t.C=!1,u.C=!0,ru(this,u),t=u.L),t.L&&t.L.C||t.R&&t.R.C){t.L&&t.L.C||(t.R.C=!1,t.C=!0,eu(this,t),t=u.L),t.C=u.C,u.C=t.L.C=!1,ru(this,u),n=this._;break}t.C=!0,n=u,u=u.U}while(!n.C);n&&(n.C=!1)}}},ta.geom.voronoi=function(n){function t(n){var t=new Array(n.length),r=a[0][0],u=a[0][1],i=a[1][0],o=a[1][1];return iu(e(n),a).cells.forEach(function(e,a){var c=e.edges,l=e.site,s=t[a]=c.length?c.map(function(n){var t=n.start();return[t.x,t.y]}):l.x>=r&&l.x<=i&&l.y>=u&&l.y<=o?[[r,o],[i,o],[i,u],[r,u]]:[];s.point=n[a]}),t}function e(n){return n.map(function(n,t){return{x:Math.round(i(n,t)/Ca)*Ca,y:Math.round(o(n,t)/Ca)*Ca,i:t}})}var r=Ar,u=Nr,i=r,o=u,a=ul;return n?t(n):(t.links=function(n){return iu(e(n)).edges.filter(function(n){return n.l&&n.r}).map(function(t){return{source:n[t.l.i],target:n[t.r.i]}})},t.triangles=function(n){var t=[];return iu(e(n)).cells.forEach(function(e,r){for(var u,i,o=e.site,a=e.edges.sort(Yr),c=-1,l=a.length,s=a[l-1].edge,f=s.l===o?s.r:s.l;++c<l;)u=s,i=f,s=a[c].edge,f=s.l===o?s.r:s.l,r<i.i&&r<f.i&&au(o,i,f)<0&&t.push([n[r],n[i.i],n[f.i]])}),t},t.x=function(n){return arguments.length?(i=Et(r=n),t):r},t.y=function(n){return arguments.length?(o=Et(u=n),t):u},t.clipExtent=function(n){return arguments.length?(a=null==n?ul:n,t):a===ul?null:a},t.size=function(n){return arguments.length?t.clipExtent(n&&[[0,0],n]):a===ul?null:a&&a[1]},t)};var ul=[[-1e6,-1e6],[1e6,1e6]];ta.geom.delaunay=function(n){return ta.geom.voronoi().triangles(n)},ta.geom.quadtree=function(n,t,e,r,u){function i(n){function i(n,t,e,r,u,i,o,a){if(!isNaN(e)&&!isNaN(r))if(n.leaf){var c=n.x,s=n.y;if(null!=c)if(ga(c-e)+ga(s-r)<.01)l(n,t,e,r,u,i,o,a);else{var f=n.point;n.x=n.y=n.point=null,l(n,f,c,s,u,i,o,a),l(n,t,e,r,u,i,o,a)}else n.x=e,n.y=r,n.point=t}else l(n,t,e,r,u,i,o,a)}function l(n,t,e,r,u,o,a,c){var l=.5*(u+a),s=.5*(o+c),f=e>=l,h=r>=s,g=h<<1|f;n.leaf=!1,n=n.nodes[g]||(n.nodes[g]=su()),f?u=l:a=l,h?o=s:c=s,i(n,t,e,r,u,o,a,c)}var s,f,h,g,p,v,d,m,y,M=Et(a),x=Et(c);if(null!=t)v=t,d=e,m=r,y=u;else if(m=y=-(v=d=1/0),f=[],h=[],p=n.length,o)for(g=0;p>g;++g)s=n[g],s.x<v&&(v=s.x),s.y<d&&(d=s.y),s.x>m&&(m=s.x),s.y>y&&(y=s.y),f.push(s.x),h.push(s.y);else for(g=0;p>g;++g){var b=+M(s=n[g],g),_=+x(s,g);v>b&&(v=b),d>_&&(d=_),b>m&&(m=b),_>y&&(y=_),f.push(b),h.push(_)}var w=m-v,S=y-d;w>S?y=d+w:m=v+S;var k=su();if(k.add=function(n){i(k,n,+M(n,++g),+x(n,g),v,d,m,y)},k.visit=function(n){fu(n,k,v,d,m,y)},k.find=function(n){return hu(k,n[0],n[1],v,d,m,y)},g=-1,null==t){for(;++g<p;)i(k,n[g],f[g],h[g],v,d,m,y);--g}else n.forEach(k.add);return f=h=n=s=null,k}var o,a=Ar,c=Nr;return(o=arguments.length)?(a=cu,c=lu,3===o&&(u=e,r=t,e=t=0),i(n)):(i.x=function(n){return arguments.length?(a=n,i):a},i.y=function(n){return arguments.length?(c=n,i):c},i.extent=function(n){return arguments.length?(null==n?t=e=r=u=null:(t=+n[0][0],e=+n[0][1],r=+n[1][0],u=+n[1][1]),i):null==t?null:[[t,e],[r,u]]},i.size=function(n){return arguments.length?(null==n?t=e=r=u=null:(t=e=0,r=+n[0],u=+n[1]),i):null==t?null:[r-t,u-e]},i)},ta.interpolateRgb=gu,ta.interpolateObject=pu,ta.interpolateNumber=vu,ta.interpolateString=du;var il=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,ol=new RegExp(il.source,"g");ta.interpolate=mu,ta.interpolators=[function(n,t){var e=typeof t;return("string"===e?Ga.has(t)||/^(#|rgb\(|hsl\()/.test(t)?gu:du:t instanceof ot?gu:Array.isArray(t)?yu:"object"===e&&isNaN(t)?pu:vu)(n,t)}],ta.interpolateArray=yu;var al=function(){return y},cl=ta.map({linear:al,poly:ku,quad:function(){return _u},cubic:function(){return wu},sin:function(){return Eu},exp:function(){return Au},circle:function(){return Nu},elastic:Cu,back:zu,bounce:function(){return qu}}),ll=ta.map({"in":y,out:xu,"in-out":bu,"out-in":function(n){return bu(xu(n))}});ta.ease=function(n){var t=n.indexOf("-"),e=t>=0?n.slice(0,t):n,r=t>=0?n.slice(t+1):"in";return e=cl.get(e)||al,r=ll.get(r)||y,Mu(r(e.apply(null,ea.call(arguments,1))))},ta.interpolateHcl=Lu,ta.interpolateHsl=Tu,ta.interpolateLab=Ru,ta.interpolateRound=Du,ta.transform=function(n){var t=ua.createElementNS(ta.ns.prefix.svg,"g");return(ta.transform=function(n){if(null!=n){t.setAttribute("transform",n);var e=t.transform.baseVal.consolidate()}return new Pu(e?e.matrix:sl)})(n)},Pu.prototype.toString=function(){return"translate("+this.translate+")rotate("+this.rotate+")skewX("+this.skew+")scale("+this.scale+")"};var sl={a:1,b:0,c:0,d:1,e:0,f:0};ta.interpolateTransform=Hu,ta.layout={},ta.layout.bundle=function(){return function(n){for(var t=[],e=-1,r=n.length;++e<r;)t.push(Yu(n[e]));return t}},ta.layout.chord=function(){function n(){var n,l,f,h,g,p={},v=[],d=ta.range(i),m=[];for(e=[],r=[],n=0,h=-1;++h<i;){for(l=0,g=-1;++g<i;)l+=u[h][g];v.push(l),m.push(ta.range(i)),n+=l}for(o&&d.sort(function(n,t){return o(v[n],v[t])}),a&&m.forEach(function(n,t){n.sort(function(n,e){return a(u[t][n],u[t][e])})}),n=(La-s*i)/n,l=0,h=-1;++h<i;){for(f=l,g=-1;++g<i;){var y=d[h],M=m[y][g],x=u[y][M],b=l,_=l+=x*n;p[y+"-"+M]={index:y,subindex:M,startAngle:b,endAngle:_,value:x}}r[y]={index:y,startAngle:f,endAngle:l,value:(l-f)/n},l+=s}for(h=-1;++h<i;)for(g=h-1;++g<i;){var w=p[h+"-"+g],S=p[g+"-"+h];(w.value||S.value)&&e.push(w.value<S.value?{source:S,target:w}:{source:w,target:S})}c&&t()}function t(){e.sort(function(n,t){return c((n.source.value+n.target.value)/2,(t.source.value+t.target.value)/2)})}var e,r,u,i,o,a,c,l={},s=0;return l.matrix=function(n){return arguments.length?(i=(u=n)&&u.length,e=r=null,l):u},l.padding=function(n){return arguments.length?(s=n,e=r=null,l):s},l.sortGroups=function(n){return arguments.length?(o=n,e=r=null,l):o},l.sortSubgroups=function(n){return arguments.length?(a=n,e=null,l):a},l.sortChords=function(n){return arguments.length?(c=n,e&&t(),l):c},l.chords=function(){return e||n(),e},l.groups=function(){return r||n(),r},l},ta.layout.force=function(){function n(n){return function(t,e,r,u){if(t.point!==n){var i=t.cx-n.x,o=t.cy-n.y,a=u-e,c=i*i+o*o;if(c>a*a/d){if(p>c){var l=t.charge/c;n.px-=i*l,n.py-=o*l}return!0}if(t.point&&c&&p>c){var l=t.pointCharge/c;n.px-=i*l,n.py-=o*l}}return!t.charge}}function t(n){n.px=ta.event.x,n.py=ta.event.y,a.resume()}var e,r,u,i,o,a={},c=ta.dispatch("start","tick","end"),l=[1,1],s=.9,f=fl,h=hl,g=-30,p=gl,v=.1,d=.64,m=[],M=[];return a.tick=function(){if((r*=.99)<.005)return c.end({type:"end",alpha:r=0}),!0;var t,e,a,f,h,p,d,y,x,b=m.length,_=M.length;for(e=0;_>e;++e)a=M[e],f=a.source,h=a.target,y=h.x-f.x,x=h.y-f.y,(p=y*y+x*x)&&(p=r*i[e]*((p=Math.sqrt(p))-u[e])/p,y*=p,x*=p,h.x-=y*(d=f.weight/(h.weight+f.weight)),h.y-=x*d,f.x+=y*(d=1-d),f.y+=x*d);if((d=r*v)&&(y=l[0]/2,x=l[1]/2,e=-1,d))for(;++e<b;)a=m[e],a.x+=(y-a.x)*d,a.y+=(x-a.y)*d;if(g)for(Ju(t=ta.geom.quadtree(m),r,o),e=-1;++e<b;)(a=m[e]).fixed||t.visit(n(a));for(e=-1;++e<b;)a=m[e],a.fixed?(a.x=a.px,a.y=a.py):(a.x-=(a.px-(a.px=a.x))*s,a.y-=(a.py-(a.py=a.y))*s);c.tick({type:"tick",alpha:r})},a.nodes=function(n){return arguments.length?(m=n,a):m},a.links=function(n){return arguments.length?(M=n,a):M},a.size=function(n){return arguments.length?(l=n,a):l},a.linkDistance=function(n){return arguments.length?(f="function"==typeof n?n:+n,a):f},a.distance=a.linkDistance,a.linkStrength=function(n){return arguments.length?(h="function"==typeof n?n:+n,a):h},a.friction=function(n){return arguments.length?(s=+n,a):s},a.charge=function(n){return arguments.length?(g="function"==typeof n?n:+n,a):g},a.chargeDistance=function(n){return arguments.length?(p=n*n,a):Math.sqrt(p)},a.gravity=function(n){return arguments.length?(v=+n,a):v},a.theta=function(n){return arguments.length?(d=n*n,a):Math.sqrt(d)},a.alpha=function(n){return arguments.length?(n=+n,r?r=n>0?n:0:n>0&&(c.start({type:"start",alpha:r=n}),ta.timer(a.tick)),a):r},a.start=function(){function n(n,r){if(!e){for(e=new Array(c),a=0;c>a;++a)e[a]=[];for(a=0;s>a;++a){var u=M[a];e[u.source.index].push(u.target),e[u.target.index].push(u.source)}}for(var i,o=e[t],a=-1,l=o.length;++a<l;)if(!isNaN(i=o[a][n]))return i;return Math.random()*r}var t,e,r,c=m.length,s=M.length,p=l[0],v=l[1];for(t=0;c>t;++t)(r=m[t]).index=t,r.weight=0;for(t=0;s>t;++t)r=M[t],"number"==typeof r.source&&(r.source=m[r.source]),"number"==typeof r.target&&(r.target=m[r.target]),++r.source.weight,++r.target.weight;for(t=0;c>t;++t)r=m[t],isNaN(r.x)&&(r.x=n("x",p)),isNaN(r.y)&&(r.y=n("y",v)),isNaN(r.px)&&(r.px=r.x),isNaN(r.py)&&(r.py=r.y);if(u=[],"function"==typeof f)for(t=0;s>t;++t)u[t]=+f.call(this,M[t],t);else for(t=0;s>t;++t)u[t]=f;if(i=[],"function"==typeof h)for(t=0;s>t;++t)i[t]=+h.call(this,M[t],t);else for(t=0;s>t;++t)i[t]=h;if(o=[],"function"==typeof g)for(t=0;c>t;++t)o[t]=+g.call(this,m[t],t);else for(t=0;c>t;++t)o[t]=g;return a.resume()},a.resume=function(){return a.alpha(.1)},a.stop=function(){return a.alpha(0)},a.drag=function(){return e||(e=ta.behavior.drag().origin(y).on("dragstart.force",Xu).on("drag.force",t).on("dragend.force",$u)),arguments.length?void this.on("mouseover.force",Bu).on("mouseout.force",Wu).call(e):e},ta.rebind(a,c,"on")};var fl=20,hl=1,gl=1/0;ta.layout.hierarchy=function(){function n(u){var i,o=[u],a=[];for(u.depth=0;null!=(i=o.pop());)if(a.push(i),(l=e.call(n,i,i.depth))&&(c=l.length)){for(var c,l,s;--c>=0;)o.push(s=l[c]),s.parent=i,s.depth=i.depth+1;r&&(i.value=0),i.children=l}else r&&(i.value=+r.call(n,i,i.depth)||0),delete i.children;return Qu(u,function(n){var e,u;t&&(e=n.children)&&e.sort(t),r&&(u=n.parent)&&(u.value+=n.value)}),a}var t=ei,e=ni,r=ti;return n.sort=function(e){return arguments.length?(t=e,n):t},n.children=function(t){return arguments.length?(e=t,n):e},n.value=function(t){return arguments.length?(r=t,n):r},n.revalue=function(t){return r&&(Ku(t,function(n){n.children&&(n.value=0)}),Qu(t,function(t){var e;t.children||(t.value=+r.call(n,t,t.depth)||0),(e=t.parent)&&(e.value+=t.value)})),t},n},ta.layout.partition=function(){function n(t,e,r,u){var i=t.children;if(t.x=e,t.y=t.depth*u,t.dx=r,t.dy=u,i&&(o=i.length)){var o,a,c,l=-1;for(r=t.value?r/t.value:0;++l<o;)n(a=i[l],e,c=a.value*r,u),e+=c}}function t(n){var e=n.children,r=0;if(e&&(u=e.length))for(var u,i=-1;++i<u;)r=Math.max(r,t(e[i]));return 1+r}function e(e,i){var o=r.call(this,e,i);return n(o[0],0,u[0],u[1]/t(o[0])),o}var r=ta.layout.hierarchy(),u=[1,1];return e.size=function(n){return arguments.length?(u=n,e):u},Gu(e,r)},ta.layout.pie=function(){function n(o){var a,c=o.length,l=o.map(function(e,r){return+t.call(n,e,r)}),s=+("function"==typeof r?r.apply(this,arguments):r),f=("function"==typeof u?u.apply(this,arguments):u)-s,h=Math.min(Math.abs(f)/c,+("function"==typeof i?i.apply(this,arguments):i)),g=h*(0>f?-1:1),p=(f-c*g)/ta.sum(l),v=ta.range(c),d=[];return null!=e&&v.sort(e===pl?function(n,t){return l[t]-l[n]}:function(n,t){return e(o[n],o[t])}),v.forEach(function(n){d[n]={data:o[n],value:a=l[n],startAngle:s,endAngle:s+=a*p+g,padAngle:h}}),d}var t=Number,e=pl,r=0,u=La,i=0;return n.value=function(e){return arguments.length?(t=e,n):t},n.sort=function(t){return arguments.length?(e=t,n):e},n.startAngle=function(t){return arguments.length?(r=t,n):r},n.endAngle=function(t){return arguments.length?(u=t,n):u},n.padAngle=function(t){return arguments.length?(i=t,n):i},n};var pl={};ta.layout.stack=function(){function n(a,c){if(!(h=a.length))return a;var l=a.map(function(e,r){return t.call(n,e,r)}),s=l.map(function(t){return t.map(function(t,e){return[i.call(n,t,e),o.call(n,t,e)]})}),f=e.call(n,s,c);l=ta.permute(l,f),s=ta.permute(s,f);var h,g,p,v,d=r.call(n,s,c),m=l[0].length;for(p=0;m>p;++p)for(u.call(n,l[0][p],v=d[p],s[0][p][1]),g=1;h>g;++g)u.call(n,l[g][p],v+=s[g-1][p][1],s[g][p][1]);return a}var t=y,e=ai,r=ci,u=oi,i=ui,o=ii;return n.values=function(e){return arguments.length?(t=e,n):t},n.order=function(t){return arguments.length?(e="function"==typeof t?t:vl.get(t)||ai,n):e},n.offset=function(t){return arguments.length?(r="function"==typeof t?t:dl.get(t)||ci,n):r},n.x=function(t){return arguments.length?(i=t,n):i},n.y=function(t){return arguments.length?(o=t,n):o},n.out=function(t){return arguments.length?(u=t,n):u},n};var vl=ta.map({"inside-out":function(n){var t,e,r=n.length,u=n.map(li),i=n.map(si),o=ta.range(r).sort(function(n,t){return u[n]-u[t]}),a=0,c=0,l=[],s=[];for(t=0;r>t;++t)e=o[t],c>a?(a+=i[e],l.push(e)):(c+=i[e],s.push(e));return s.reverse().concat(l)},reverse:function(n){return ta.range(n.length).reverse()},"default":ai}),dl=ta.map({silhouette:function(n){var t,e,r,u=n.length,i=n[0].length,o=[],a=0,c=[];for(e=0;i>e;++e){for(t=0,r=0;u>t;t++)r+=n[t][e][1];r>a&&(a=r),o.push(r)}for(e=0;i>e;++e)c[e]=(a-o[e])/2;return c},wiggle:function(n){var t,e,r,u,i,o,a,c,l,s=n.length,f=n[0],h=f.length,g=[];for(g[0]=c=l=0,e=1;h>e;++e){for(t=0,u=0;s>t;++t)u+=n[t][e][1];for(t=0,i=0,a=f[e][0]-f[e-1][0];s>t;++t){for(r=0,o=(n[t][e][1]-n[t][e-1][1])/(2*a);t>r;++r)o+=(n[r][e][1]-n[r][e-1][1])/a;i+=o*n[t][e][1]}g[e]=c-=u?i/u*a:0,l>c&&(l=c)}for(e=0;h>e;++e)g[e]-=l;return g},expand:function(n){var t,e,r,u=n.length,i=n[0].length,o=1/u,a=[];for(e=0;i>e;++e){for(t=0,r=0;u>t;t++)r+=n[t][e][1];if(r)for(t=0;u>t;t++)n[t][e][1]/=r;else for(t=0;u>t;t++)n[t][e][1]=o}for(e=0;i>e;++e)a[e]=0;return a},zero:ci});ta.layout.histogram=function(){function n(n,i){for(var o,a,c=[],l=n.map(e,this),s=r.call(this,l,i),f=u.call(this,s,l,i),i=-1,h=l.length,g=f.length-1,p=t?1:1/h;++i<g;)o=c[i]=[],o.dx=f[i+1]-(o.x=f[i]),o.y=0;if(g>0)for(i=-1;++i<h;)a=l[i],a>=s[0]&&a<=s[1]&&(o=c[ta.bisect(f,a,1,g)-1],o.y+=p,o.push(n[i]));return c}var t=!0,e=Number,r=pi,u=hi;return n.value=function(t){return arguments.length?(e=t,n):e},n.range=function(t){return arguments.length?(r=Et(t),n):r},n.bins=function(t){return arguments.length?(u="number"==typeof t?function(n){return gi(n,t)}:Et(t),n):u},n.frequency=function(e){return arguments.length?(t=!!e,n):t},n},ta.layout.pack=function(){function n(n,i){var o=e.call(this,n,i),a=o[0],c=u[0],l=u[1],s=null==t?Math.sqrt:"function"==typeof t?t:function(){return t};if(a.x=a.y=0,Qu(a,function(n){n.r=+s(n.value)}),Qu(a,Mi),r){var f=r*(t?1:Math.max(2*a.r/c,2*a.r/l))/2;Qu(a,function(n){n.r+=f}),Qu(a,Mi),Qu(a,function(n){n.r-=f})}return _i(a,c/2,l/2,t?1:1/Math.max(2*a.r/c,2*a.r/l)),o}var t,e=ta.layout.hierarchy().sort(vi),r=0,u=[1,1];return n.size=function(t){return arguments.length?(u=t,n):u},n.radius=function(e){return arguments.length?(t=null==e||"function"==typeof e?e:+e,n):t},n.padding=function(t){return arguments.length?(r=+t,n):r},Gu(n,e)},ta.layout.tree=function(){function n(n,u){var s=o.call(this,n,u),f=s[0],h=t(f);if(Qu(h,e),h.parent.m=-h.z,Ku(h,r),l)Ku(f,i);else{var g=f,p=f,v=f;Ku(f,function(n){n.x<g.x&&(g=n),n.x>p.x&&(p=n),n.depth>v.depth&&(v=n)});var d=a(g,p)/2-g.x,m=c[0]/(p.x+a(p,g)/2+d),y=c[1]/(v.depth||1);Ku(f,function(n){n.x=(n.x+d)*m,n.y=n.depth*y})}return s}function t(n){for(var t,e={A:null,children:[n]},r=[e];null!=(t=r.pop());)for(var u,i=t.children,o=0,a=i.length;a>o;++o)r.push((i[o]=u={_:i[o],parent:t,children:(u=i[o].children)&&u.slice()||[],A:null,a:null,z:0,m:0,c:0,s:0,t:null,i:o}).a=u);return e.children[0]}function e(n){var t=n.children,e=n.parent.children,r=n.i?e[n.i-1]:null;if(t.length){Ni(n);var i=(t[0].z+t[t.length-1].z)/2;r?(n.z=r.z+a(n._,r._),n.m=n.z-i):n.z=i}else r&&(n.z=r.z+a(n._,r._));n.parent.A=u(n,r,n.parent.A||e[0])}function r(n){n._.x=n.z+n.parent.m,n.m+=n.parent.m}function u(n,t,e){if(t){for(var r,u=n,i=n,o=t,c=u.parent.children[0],l=u.m,s=i.m,f=o.m,h=c.m;o=Ei(o),u=ki(u),o&&u;)c=ki(c),i=Ei(i),i.a=n,r=o.z+f-u.z-l+a(o._,u._),r>0&&(Ai(Ci(o,n,e),n,r),l+=r,s+=r),f+=o.m,l+=u.m,h+=c.m,s+=i.m;o&&!Ei(i)&&(i.t=o,i.m+=f-s),u&&!ki(c)&&(c.t=u,c.m+=l-h,e=n)}return e}function i(n){n.x*=c[0],n.y=n.depth*c[1]}var o=ta.layout.hierarchy().sort(null).value(null),a=Si,c=[1,1],l=null;return n.separation=function(t){return arguments.length?(a=t,n):a},n.size=function(t){return arguments.length?(l=null==(c=t)?i:null,n):l?null:c},n.nodeSize=function(t){return arguments.length?(l=null==(c=t)?null:i,n):l?c:null},Gu(n,o)},ta.layout.cluster=function(){function n(n,i){var o,a=t.call(this,n,i),c=a[0],l=0;Qu(c,function(n){var t=n.children;t&&t.length?(n.x=qi(t),n.y=zi(t)):(n.x=o?l+=e(n,o):0,n.y=0,o=n)});var s=Li(c),f=Ti(c),h=s.x-e(s,f)/2,g=f.x+e(f,s)/2;return Qu(c,u?function(n){n.x=(n.x-c.x)*r[0],n.y=(c.y-n.y)*r[1]}:function(n){n.x=(n.x-h)/(g-h)*r[0],n.y=(1-(c.y?n.y/c.y:1))*r[1]}),a}var t=ta.layout.hierarchy().sort(null).value(null),e=Si,r=[1,1],u=!1;return n.separation=function(t){return arguments.length?(e=t,n):e},n.size=function(t){return arguments.length?(u=null==(r=t),n):u?null:r},n.nodeSize=function(t){return arguments.length?(u=null!=(r=t),n):u?r:null},Gu(n,t)},ta.layout.treemap=function(){function n(n,t){for(var e,r,u=-1,i=n.length;++u<i;)r=(e=n[u]).value*(0>t?0:t),e.area=isNaN(r)||0>=r?0:r}function t(e){var i=e.children;if(i&&i.length){var o,a,c,l=f(e),s=[],h=i.slice(),p=1/0,v="slice"===g?l.dx:"dice"===g?l.dy:"slice-dice"===g?1&e.depth?l.dy:l.dx:Math.min(l.dx,l.dy);for(n(h,l.dx*l.dy/e.value),s.area=0;(c=h.length)>0;)s.push(o=h[c-1]),s.area+=o.area,"squarify"!==g||(a=r(s,v))<=p?(h.pop(),p=a):(s.area-=s.pop().area,u(s,v,l,!1),v=Math.min(l.dx,l.dy),s.length=s.area=0,p=1/0);s.length&&(u(s,v,l,!0),s.length=s.area=0),i.forEach(t)}}function e(t){var r=t.children;if(r&&r.length){var i,o=f(t),a=r.slice(),c=[];for(n(a,o.dx*o.dy/t.value),c.area=0;i=a.pop();)c.push(i),c.area+=i.area,null!=i.z&&(u(c,i.z?o.dx:o.dy,o,!a.length),c.length=c.area=0);r.forEach(e)}}function r(n,t){for(var e,r=n.area,u=0,i=1/0,o=-1,a=n.length;++o<a;)(e=n[o].area)&&(i>e&&(i=e),e>u&&(u=e));return r*=r,t*=t,r?Math.max(t*u*p/r,r/(t*i*p)):1/0}function u(n,t,e,r){var u,i=-1,o=n.length,a=e.x,l=e.y,s=t?c(n.area/t):0;if(t==e.dx){for((r||s>e.dy)&&(s=e.dy);++i<o;)u=n[i],u.x=a,u.y=l,u.dy=s,a+=u.dx=Math.min(e.x+e.dx-a,s?c(u.area/s):0);u.z=!0,u.dx+=e.x+e.dx-a,e.y+=s,e.dy-=s}else{for((r||s>e.dx)&&(s=e.dx);++i<o;)u=n[i],u.x=a,u.y=l,u.dx=s,l+=u.dy=Math.min(e.y+e.dy-l,s?c(u.area/s):0);u.z=!1,u.dy+=e.y+e.dy-l,e.x+=s,e.dx-=s}}function i(r){var u=o||a(r),i=u[0];return i.x=0,i.y=0,i.dx=l[0],i.dy=l[1],o&&a.revalue(i),n([i],i.dx*i.dy/i.value),(o?e:t)(i),h&&(o=u),u}var o,a=ta.layout.hierarchy(),c=Math.round,l=[1,1],s=null,f=Ri,h=!1,g="squarify",p=.5*(1+Math.sqrt(5));
return i.size=function(n){return arguments.length?(l=n,i):l},i.padding=function(n){function t(t){var e=n.call(i,t,t.depth);return null==e?Ri(t):Di(t,"number"==typeof e?[e,e,e,e]:e)}function e(t){return Di(t,n)}if(!arguments.length)return s;var r;return f=null==(s=n)?Ri:"function"==(r=typeof n)?t:"number"===r?(n=[n,n,n,n],e):e,i},i.round=function(n){return arguments.length?(c=n?Math.round:Number,i):c!=Number},i.sticky=function(n){return arguments.length?(h=n,o=null,i):h},i.ratio=function(n){return arguments.length?(p=n,i):p},i.mode=function(n){return arguments.length?(g=n+"",i):g},Gu(i,a)},ta.random={normal:function(n,t){var e=arguments.length;return 2>e&&(t=1),1>e&&(n=0),function(){var e,r,u;do e=2*Math.random()-1,r=2*Math.random()-1,u=e*e+r*r;while(!u||u>1);return n+t*e*Math.sqrt(-2*Math.log(u)/u)}},logNormal:function(){var n=ta.random.normal.apply(ta,arguments);return function(){return Math.exp(n())}},bates:function(n){var t=ta.random.irwinHall(n);return function(){return t()/n}},irwinHall:function(n){return function(){for(var t=0,e=0;n>e;e++)t+=Math.random();return t}}},ta.scale={};var ml={floor:y,ceil:y};ta.scale.linear=function(){return Ii([0,1],[0,1],mu,!1)};var yl={s:1,g:1,p:1,r:1,e:1};ta.scale.log=function(){return Ji(ta.scale.linear().domain([0,1]),10,!0,[1,10])};var Ml=ta.format(".0e"),xl={floor:function(n){return-Math.ceil(-n)},ceil:function(n){return-Math.floor(-n)}};ta.scale.pow=function(){return Gi(ta.scale.linear(),1,[0,1])},ta.scale.sqrt=function(){return ta.scale.pow().exponent(.5)},ta.scale.ordinal=function(){return Qi([],{t:"range",a:[[]]})},ta.scale.category10=function(){return ta.scale.ordinal().range(bl)},ta.scale.category20=function(){return ta.scale.ordinal().range(_l)},ta.scale.category20b=function(){return ta.scale.ordinal().range(wl)},ta.scale.category20c=function(){return ta.scale.ordinal().range(Sl)};var bl=[2062260,16744206,2924588,14034728,9725885,9197131,14907330,8355711,12369186,1556175].map(Mt),_l=[2062260,11454440,16744206,16759672,2924588,10018698,14034728,16750742,9725885,12955861,9197131,12885140,14907330,16234194,8355711,13092807,12369186,14408589,1556175,10410725].map(Mt),wl=[3750777,5395619,7040719,10264286,6519097,9216594,11915115,13556636,9202993,12426809,15186514,15190932,8666169,11356490,14049643,15177372,8077683,10834324,13528509,14589654].map(Mt),Sl=[3244733,7057110,10406625,13032431,15095053,16616764,16625259,16634018,3253076,7652470,10607003,13101504,7695281,10394312,12369372,14342891,6513507,9868950,12434877,14277081].map(Mt);ta.scale.quantile=function(){return no([],[])},ta.scale.quantize=function(){return to(0,1,[0,1])},ta.scale.threshold=function(){return eo([.5],[0,1])},ta.scale.identity=function(){return ro([0,1])},ta.svg={},ta.svg.arc=function(){function n(){var n=Math.max(0,+e.apply(this,arguments)),l=Math.max(0,+r.apply(this,arguments)),s=o.apply(this,arguments)-Ra,f=a.apply(this,arguments)-Ra,h=Math.abs(f-s),g=s>f?0:1;if(n>l&&(p=l,l=n,n=p),h>=Ta)return t(l,g)+(n?t(n,1-g):"")+"Z";var p,v,d,m,y,M,x,b,_,w,S,k,E=0,A=0,N=[];if((m=(+c.apply(this,arguments)||0)/2)&&(d=i===kl?Math.sqrt(n*n+l*l):+i.apply(this,arguments),g||(A*=-1),l&&(A=tt(d/l*Math.sin(m))),n&&(E=tt(d/n*Math.sin(m)))),l){y=l*Math.cos(s+A),M=l*Math.sin(s+A),x=l*Math.cos(f-A),b=l*Math.sin(f-A);var C=Math.abs(f-s-2*A)<=qa?0:1;if(A&&so(y,M,x,b)===g^C){var z=(s+f)/2;y=l*Math.cos(z),M=l*Math.sin(z),x=b=null}}else y=M=0;if(n){_=n*Math.cos(f-E),w=n*Math.sin(f-E),S=n*Math.cos(s+E),k=n*Math.sin(s+E);var q=Math.abs(s-f+2*E)<=qa?0:1;if(E&&so(_,w,S,k)===1-g^q){var L=(s+f)/2;_=n*Math.cos(L),w=n*Math.sin(L),S=k=null}}else _=w=0;if((p=Math.min(Math.abs(l-n)/2,+u.apply(this,arguments)))>.001){v=l>n^g?0:1;var T=null==S?[_,w]:null==x?[y,M]:Lr([y,M],[S,k],[x,b],[_,w]),R=y-T[0],D=M-T[1],P=x-T[0],U=b-T[1],j=1/Math.sin(Math.acos((R*P+D*U)/(Math.sqrt(R*R+D*D)*Math.sqrt(P*P+U*U)))/2),F=Math.sqrt(T[0]*T[0]+T[1]*T[1]);if(null!=x){var H=Math.min(p,(l-F)/(j+1)),O=fo(null==S?[_,w]:[S,k],[y,M],l,H,g),I=fo([x,b],[_,w],l,H,g);p===H?N.push("M",O[0],"A",H,",",H," 0 0,",v," ",O[1],"A",l,",",l," 0 ",1-g^so(O[1][0],O[1][1],I[1][0],I[1][1]),",",g," ",I[1],"A",H,",",H," 0 0,",v," ",I[0]):N.push("M",O[0],"A",H,",",H," 0 1,",v," ",I[0])}else N.push("M",y,",",M);if(null!=S){var Y=Math.min(p,(n-F)/(j-1)),Z=fo([y,M],[S,k],n,-Y,g),V=fo([_,w],null==x?[y,M]:[x,b],n,-Y,g);p===Y?N.push("L",V[0],"A",Y,",",Y," 0 0,",v," ",V[1],"A",n,",",n," 0 ",g^so(V[1][0],V[1][1],Z[1][0],Z[1][1]),",",1-g," ",Z[1],"A",Y,",",Y," 0 0,",v," ",Z[0]):N.push("L",V[0],"A",Y,",",Y," 0 0,",v," ",Z[0])}else N.push("L",_,",",w)}else N.push("M",y,",",M),null!=x&&N.push("A",l,",",l," 0 ",C,",",g," ",x,",",b),N.push("L",_,",",w),null!=S&&N.push("A",n,",",n," 0 ",q,",",1-g," ",S,",",k);return N.push("Z"),N.join("")}function t(n,t){return"M0,"+n+"A"+n+","+n+" 0 1,"+t+" 0,"+-n+"A"+n+","+n+" 0 1,"+t+" 0,"+n}var e=io,r=oo,u=uo,i=kl,o=ao,a=co,c=lo;return n.innerRadius=function(t){return arguments.length?(e=Et(t),n):e},n.outerRadius=function(t){return arguments.length?(r=Et(t),n):r},n.cornerRadius=function(t){return arguments.length?(u=Et(t),n):u},n.padRadius=function(t){return arguments.length?(i=t==kl?kl:Et(t),n):i},n.startAngle=function(t){return arguments.length?(o=Et(t),n):o},n.endAngle=function(t){return arguments.length?(a=Et(t),n):a},n.padAngle=function(t){return arguments.length?(c=Et(t),n):c},n.centroid=function(){var n=(+e.apply(this,arguments)+ +r.apply(this,arguments))/2,t=(+o.apply(this,arguments)+ +a.apply(this,arguments))/2-Ra;return[Math.cos(t)*n,Math.sin(t)*n]},n};var kl="auto";ta.svg.line=function(){return ho(y)};var El=ta.map({linear:go,"linear-closed":po,step:vo,"step-before":mo,"step-after":yo,basis:So,"basis-open":ko,"basis-closed":Eo,bundle:Ao,cardinal:bo,"cardinal-open":Mo,"cardinal-closed":xo,monotone:To});El.forEach(function(n,t){t.key=n,t.closed=/-closed$/.test(n)});var Al=[0,2/3,1/3,0],Nl=[0,1/3,2/3,0],Cl=[0,1/6,2/3,1/6];ta.svg.line.radial=function(){var n=ho(Ro);return n.radius=n.x,delete n.x,n.angle=n.y,delete n.y,n},mo.reverse=yo,yo.reverse=mo,ta.svg.area=function(){return Do(y)},ta.svg.area.radial=function(){var n=Do(Ro);return n.radius=n.x,delete n.x,n.innerRadius=n.x0,delete n.x0,n.outerRadius=n.x1,delete n.x1,n.angle=n.y,delete n.y,n.startAngle=n.y0,delete n.y0,n.endAngle=n.y1,delete n.y1,n},ta.svg.chord=function(){function n(n,a){var c=t(this,i,n,a),l=t(this,o,n,a);return"M"+c.p0+r(c.r,c.p1,c.a1-c.a0)+(e(c,l)?u(c.r,c.p1,c.r,c.p0):u(c.r,c.p1,l.r,l.p0)+r(l.r,l.p1,l.a1-l.a0)+u(l.r,l.p1,c.r,c.p0))+"Z"}function t(n,t,e,r){var u=t.call(n,e,r),i=a.call(n,u,r),o=c.call(n,u,r)-Ra,s=l.call(n,u,r)-Ra;return{r:i,a0:o,a1:s,p0:[i*Math.cos(o),i*Math.sin(o)],p1:[i*Math.cos(s),i*Math.sin(s)]}}function e(n,t){return n.a0==t.a0&&n.a1==t.a1}function r(n,t,e){return"A"+n+","+n+" 0 "+ +(e>qa)+",1 "+t}function u(n,t,e,r){return"Q 0,0 "+r}var i=mr,o=yr,a=Po,c=ao,l=co;return n.radius=function(t){return arguments.length?(a=Et(t),n):a},n.source=function(t){return arguments.length?(i=Et(t),n):i},n.target=function(t){return arguments.length?(o=Et(t),n):o},n.startAngle=function(t){return arguments.length?(c=Et(t),n):c},n.endAngle=function(t){return arguments.length?(l=Et(t),n):l},n},ta.svg.diagonal=function(){function n(n,u){var i=t.call(this,n,u),o=e.call(this,n,u),a=(i.y+o.y)/2,c=[i,{x:i.x,y:a},{x:o.x,y:a},o];return c=c.map(r),"M"+c[0]+"C"+c[1]+" "+c[2]+" "+c[3]}var t=mr,e=yr,r=Uo;return n.source=function(e){return arguments.length?(t=Et(e),n):t},n.target=function(t){return arguments.length?(e=Et(t),n):e},n.projection=function(t){return arguments.length?(r=t,n):r},n},ta.svg.diagonal.radial=function(){var n=ta.svg.diagonal(),t=Uo,e=n.projection;return n.projection=function(n){return arguments.length?e(jo(t=n)):t},n},ta.svg.symbol=function(){function n(n,r){return(zl.get(t.call(this,n,r))||Oo)(e.call(this,n,r))}var t=Ho,e=Fo;return n.type=function(e){return arguments.length?(t=Et(e),n):t},n.size=function(t){return arguments.length?(e=Et(t),n):e},n};var zl=ta.map({circle:Oo,cross:function(n){var t=Math.sqrt(n/5)/2;return"M"+-3*t+","+-t+"H"+-t+"V"+-3*t+"H"+t+"V"+-t+"H"+3*t+"V"+t+"H"+t+"V"+3*t+"H"+-t+"V"+t+"H"+-3*t+"Z"},diamond:function(n){var t=Math.sqrt(n/(2*Ll)),e=t*Ll;return"M0,"+-t+"L"+e+",0 0,"+t+" "+-e+",0Z"},square:function(n){var t=Math.sqrt(n)/2;return"M"+-t+","+-t+"L"+t+","+-t+" "+t+","+t+" "+-t+","+t+"Z"},"triangle-down":function(n){var t=Math.sqrt(n/ql),e=t*ql/2;return"M0,"+e+"L"+t+","+-e+" "+-t+","+-e+"Z"},"triangle-up":function(n){var t=Math.sqrt(n/ql),e=t*ql/2;return"M0,"+-e+"L"+t+","+e+" "+-t+","+e+"Z"}});ta.svg.symbolTypes=zl.keys();var ql=Math.sqrt(3),Ll=Math.tan(30*Da);_a.transition=function(n){for(var t,e,r=Tl||++Ul,u=Xo(n),i=[],o=Rl||{time:Date.now(),ease:Su,delay:0,duration:250},a=-1,c=this.length;++a<c;){i.push(t=[]);for(var l=this[a],s=-1,f=l.length;++s<f;)(e=l[s])&&$o(e,s,u,r,o),t.push(e)}return Yo(i,u,r)},_a.interrupt=function(n){return this.each(null==n?Dl:Io(Xo(n)))};var Tl,Rl,Dl=Io(Xo()),Pl=[],Ul=0;Pl.call=_a.call,Pl.empty=_a.empty,Pl.node=_a.node,Pl.size=_a.size,ta.transition=function(n,t){return n&&n.transition?Tl?n.transition(t):n:ta.selection().transition(n)},ta.transition.prototype=Pl,Pl.select=function(n){var t,e,r,u=this.id,i=this.namespace,o=[];n=N(n);for(var a=-1,c=this.length;++a<c;){o.push(t=[]);for(var l=this[a],s=-1,f=l.length;++s<f;)(r=l[s])&&(e=n.call(r,r.__data__,s,a))?("__data__"in r&&(e.__data__=r.__data__),$o(e,s,i,u,r[i][u]),t.push(e)):t.push(null)}return Yo(o,i,u)},Pl.selectAll=function(n){var t,e,r,u,i,o=this.id,a=this.namespace,c=[];n=C(n);for(var l=-1,s=this.length;++l<s;)for(var f=this[l],h=-1,g=f.length;++h<g;)if(r=f[h]){i=r[a][o],e=n.call(r,r.__data__,h,l),c.push(t=[]);for(var p=-1,v=e.length;++p<v;)(u=e[p])&&$o(u,p,a,o,i),t.push(u)}return Yo(c,a,o)},Pl.filter=function(n){var t,e,r,u=[];"function"!=typeof n&&(n=O(n));for(var i=0,o=this.length;o>i;i++){u.push(t=[]);for(var e=this[i],a=0,c=e.length;c>a;a++)(r=e[a])&&n.call(r,r.__data__,a,i)&&t.push(r)}return Yo(u,this.namespace,this.id)},Pl.tween=function(n,t){var e=this.id,r=this.namespace;return arguments.length<2?this.node()[r][e].tween.get(n):Y(this,null==t?function(t){t[r][e].tween.remove(n)}:function(u){u[r][e].tween.set(n,t)})},Pl.attr=function(n,t){function e(){this.removeAttribute(a)}function r(){this.removeAttributeNS(a.space,a.local)}function u(n){return null==n?e:(n+="",function(){var t,e=this.getAttribute(a);return e!==n&&(t=o(e,n),function(n){this.setAttribute(a,t(n))})})}function i(n){return null==n?r:(n+="",function(){var t,e=this.getAttributeNS(a.space,a.local);return e!==n&&(t=o(e,n),function(n){this.setAttributeNS(a.space,a.local,t(n))})})}if(arguments.length<2){for(t in n)this.attr(t,n[t]);return this}var o="transform"==n?Hu:mu,a=ta.ns.qualify(n);return Zo(this,"attr."+n,t,a.local?i:u)},Pl.attrTween=function(n,t){function e(n,e){var r=t.call(this,n,e,this.getAttribute(u));return r&&function(n){this.setAttribute(u,r(n))}}function r(n,e){var r=t.call(this,n,e,this.getAttributeNS(u.space,u.local));return r&&function(n){this.setAttributeNS(u.space,u.local,r(n))}}var u=ta.ns.qualify(n);return this.tween("attr."+n,u.local?r:e)},Pl.style=function(n,e,r){function u(){this.style.removeProperty(n)}function i(e){return null==e?u:(e+="",function(){var u,i=t(this).getComputedStyle(this,null).getPropertyValue(n);return i!==e&&(u=mu(i,e),function(t){this.style.setProperty(n,u(t),r)})})}var o=arguments.length;if(3>o){if("string"!=typeof n){2>o&&(e="");for(r in n)this.style(r,n[r],e);return this}r=""}return Zo(this,"style."+n,e,i)},Pl.styleTween=function(n,e,r){function u(u,i){var o=e.call(this,u,i,t(this).getComputedStyle(this,null).getPropertyValue(n));return o&&function(t){this.style.setProperty(n,o(t),r)}}return arguments.length<3&&(r=""),this.tween("style."+n,u)},Pl.text=function(n){return Zo(this,"text",n,Vo)},Pl.remove=function(){var n=this.namespace;return this.each("end.transition",function(){var t;this[n].count<2&&(t=this.parentNode)&&t.removeChild(this)})},Pl.ease=function(n){var t=this.id,e=this.namespace;return arguments.length<1?this.node()[e][t].ease:("function"!=typeof n&&(n=ta.ease.apply(ta,arguments)),Y(this,function(r){r[e][t].ease=n}))},Pl.delay=function(n){var t=this.id,e=this.namespace;return arguments.length<1?this.node()[e][t].delay:Y(this,"function"==typeof n?function(r,u,i){r[e][t].delay=+n.call(r,r.__data__,u,i)}:(n=+n,function(r){r[e][t].delay=n}))},Pl.duration=function(n){var t=this.id,e=this.namespace;return arguments.length<1?this.node()[e][t].duration:Y(this,"function"==typeof n?function(r,u,i){r[e][t].duration=Math.max(1,n.call(r,r.__data__,u,i))}:(n=Math.max(1,n),function(r){r[e][t].duration=n}))},Pl.each=function(n,t){var e=this.id,r=this.namespace;if(arguments.length<2){var u=Rl,i=Tl;try{Tl=e,Y(this,function(t,u,i){Rl=t[r][e],n.call(t,t.__data__,u,i)})}finally{Rl=u,Tl=i}}else Y(this,function(u){var i=u[r][e];(i.event||(i.event=ta.dispatch("start","end","interrupt"))).on(n,t)});return this},Pl.transition=function(){for(var n,t,e,r,u=this.id,i=++Ul,o=this.namespace,a=[],c=0,l=this.length;l>c;c++){a.push(n=[]);for(var t=this[c],s=0,f=t.length;f>s;s++)(e=t[s])&&(r=e[o][u],$o(e,s,o,i,{time:r.time,ease:r.ease,delay:r.delay+r.duration,duration:r.duration})),n.push(e)}return Yo(a,o,i)},ta.svg.axis=function(){function n(n){n.each(function(){var n,l=ta.select(this),s=this.__chart__||e,f=this.__chart__=e.copy(),h=null==c?f.ticks?f.ticks.apply(f,a):f.domain():c,g=null==t?f.tickFormat?f.tickFormat.apply(f,a):y:t,p=l.selectAll(".tick").data(h,f),v=p.enter().insert("g",".domain").attr("class","tick").style("opacity",Ca),d=ta.transition(p.exit()).style("opacity",Ca).remove(),m=ta.transition(p.order()).style("opacity",1),M=Math.max(u,0)+o,x=Ui(f),b=l.selectAll(".domain").data([0]),_=(b.enter().append("path").attr("class","domain"),ta.transition(b));v.append("line"),v.append("text");var w,S,k,E,A=v.select("line"),N=m.select("line"),C=p.select("text").text(g),z=v.select("text"),q=m.select("text"),L="top"===r||"left"===r?-1:1;if("bottom"===r||"top"===r?(n=Bo,w="x",k="y",S="x2",E="y2",C.attr("dy",0>L?"0em":".71em").style("text-anchor","middle"),_.attr("d","M"+x[0]+","+L*i+"V0H"+x[1]+"V"+L*i)):(n=Wo,w="y",k="x",S="y2",E="x2",C.attr("dy",".32em").style("text-anchor",0>L?"end":"start"),_.attr("d","M"+L*i+","+x[0]+"H0V"+x[1]+"H"+L*i)),A.attr(E,L*u),z.attr(k,L*M),N.attr(S,0).attr(E,L*u),q.attr(w,0).attr(k,L*M),f.rangeBand){var T=f,R=T.rangeBand()/2;s=f=function(n){return T(n)+R}}else s.rangeBand?s=f:d.call(n,f,s);v.call(n,s,f),m.call(n,f,f)})}var t,e=ta.scale.linear(),r=jl,u=6,i=6,o=3,a=[10],c=null;return n.scale=function(t){return arguments.length?(e=t,n):e},n.orient=function(t){return arguments.length?(r=t in Fl?t+"":jl,n):r},n.ticks=function(){return arguments.length?(a=arguments,n):a},n.tickValues=function(t){return arguments.length?(c=t,n):c},n.tickFormat=function(e){return arguments.length?(t=e,n):t},n.tickSize=function(t){var e=arguments.length;return e?(u=+t,i=+arguments[e-1],n):u},n.innerTickSize=function(t){return arguments.length?(u=+t,n):u},n.outerTickSize=function(t){return arguments.length?(i=+t,n):i},n.tickPadding=function(t){return arguments.length?(o=+t,n):o},n.tickSubdivide=function(){return arguments.length&&n},n};var jl="bottom",Fl={top:1,right:1,bottom:1,left:1};ta.svg.brush=function(){function n(t){t.each(function(){var t=ta.select(this).style("pointer-events","all").style("-webkit-tap-highlight-color","rgba(0,0,0,0)").on("mousedown.brush",i).on("touchstart.brush",i),o=t.selectAll(".background").data([0]);o.enter().append("rect").attr("class","background").style("visibility","hidden").style("cursor","crosshair"),t.selectAll(".extent").data([0]).enter().append("rect").attr("class","extent").style("cursor","move");var a=t.selectAll(".resize").data(v,y);a.exit().remove(),a.enter().append("g").attr("class",function(n){return"resize "+n}).style("cursor",function(n){return Hl[n]}).append("rect").attr("x",function(n){return/[ew]$/.test(n)?-3:null}).attr("y",function(n){return/^[ns]/.test(n)?-3:null}).attr("width",6).attr("height",6).style("visibility","hidden"),a.style("display",n.empty()?"none":null);var c,f=ta.transition(t),h=ta.transition(o);l&&(c=Ui(l),h.attr("x",c[0]).attr("width",c[1]-c[0]),r(f)),s&&(c=Ui(s),h.attr("y",c[0]).attr("height",c[1]-c[0]),u(f)),e(f)})}function e(n){n.selectAll(".resize").attr("transform",function(n){return"translate("+f[+/e$/.test(n)]+","+h[+/^s/.test(n)]+")"})}function r(n){n.select(".extent").attr("x",f[0]),n.selectAll(".extent,.n>rect,.s>rect").attr("width",f[1]-f[0])}function u(n){n.select(".extent").attr("y",h[0]),n.selectAll(".extent,.e>rect,.w>rect").attr("height",h[1]-h[0])}function i(){function i(){32==ta.event.keyCode&&(C||(M=null,q[0]-=f[1],q[1]-=h[1],C=2),S())}function v(){32==ta.event.keyCode&&2==C&&(q[0]+=f[1],q[1]+=h[1],C=0,S())}function d(){var n=ta.mouse(b),t=!1;x&&(n[0]+=x[0],n[1]+=x[1]),C||(ta.event.altKey?(M||(M=[(f[0]+f[1])/2,(h[0]+h[1])/2]),q[0]=f[+(n[0]<M[0])],q[1]=h[+(n[1]<M[1])]):M=null),A&&m(n,l,0)&&(r(k),t=!0),N&&m(n,s,1)&&(u(k),t=!0),t&&(e(k),w({type:"brush",mode:C?"move":"resize"}))}function m(n,t,e){var r,u,i=Ui(t),c=i[0],l=i[1],s=q[e],v=e?h:f,d=v[1]-v[0];return C&&(c-=s,l-=d+s),r=(e?p:g)?Math.max(c,Math.min(l,n[e])):n[e],C?u=(r+=s)+d:(M&&(s=Math.max(c,Math.min(l,2*M[e]-r))),r>s?(u=r,r=s):u=s),v[0]!=r||v[1]!=u?(e?a=null:o=null,v[0]=r,v[1]=u,!0):void 0}function y(){d(),k.style("pointer-events","all").selectAll(".resize").style("display",n.empty()?"none":null),ta.select("body").style("cursor",null),L.on("mousemove.brush",null).on("mouseup.brush",null).on("touchmove.brush",null).on("touchend.brush",null).on("keydown.brush",null).on("keyup.brush",null),z(),w({type:"brushend"})}var M,x,b=this,_=ta.select(ta.event.target),w=c.of(b,arguments),k=ta.select(b),E=_.datum(),A=!/^(n|s)$/.test(E)&&l,N=!/^(e|w)$/.test(E)&&s,C=_.classed("extent"),z=W(b),q=ta.mouse(b),L=ta.select(t(b)).on("keydown.brush",i).on("keyup.brush",v);if(ta.event.changedTouches?L.on("touchmove.brush",d).on("touchend.brush",y):L.on("mousemove.brush",d).on("mouseup.brush",y),k.interrupt().selectAll("*").interrupt(),C)q[0]=f[0]-q[0],q[1]=h[0]-q[1];else if(E){var T=+/w$/.test(E),R=+/^n/.test(E);x=[f[1-T]-q[0],h[1-R]-q[1]],q[0]=f[T],q[1]=h[R]}else ta.event.altKey&&(M=q.slice());k.style("pointer-events","none").selectAll(".resize").style("display",null),ta.select("body").style("cursor",_.style("cursor")),w({type:"brushstart"}),d()}var o,a,c=E(n,"brushstart","brush","brushend"),l=null,s=null,f=[0,0],h=[0,0],g=!0,p=!0,v=Ol[0];return n.event=function(n){n.each(function(){var n=c.of(this,arguments),t={x:f,y:h,i:o,j:a},e=this.__chart__||t;this.__chart__=t,Tl?ta.select(this).transition().each("start.brush",function(){o=e.i,a=e.j,f=e.x,h=e.y,n({type:"brushstart"})}).tween("brush:brush",function(){var e=yu(f,t.x),r=yu(h,t.y);return o=a=null,function(u){f=t.x=e(u),h=t.y=r(u),n({type:"brush",mode:"resize"})}}).each("end.brush",function(){o=t.i,a=t.j,n({type:"brush",mode:"resize"}),n({type:"brushend"})}):(n({type:"brushstart"}),n({type:"brush",mode:"resize"}),n({type:"brushend"}))})},n.x=function(t){return arguments.length?(l=t,v=Ol[!l<<1|!s],n):l},n.y=function(t){return arguments.length?(s=t,v=Ol[!l<<1|!s],n):s},n.clamp=function(t){return arguments.length?(l&&s?(g=!!t[0],p=!!t[1]):l?g=!!t:s&&(p=!!t),n):l&&s?[g,p]:l?g:s?p:null},n.extent=function(t){var e,r,u,i,c;return arguments.length?(l&&(e=t[0],r=t[1],s&&(e=e[0],r=r[0]),o=[e,r],l.invert&&(e=l(e),r=l(r)),e>r&&(c=e,e=r,r=c),(e!=f[0]||r!=f[1])&&(f=[e,r])),s&&(u=t[0],i=t[1],l&&(u=u[1],i=i[1]),a=[u,i],s.invert&&(u=s(u),i=s(i)),u>i&&(c=u,u=i,i=c),(u!=h[0]||i!=h[1])&&(h=[u,i])),n):(l&&(o?(e=o[0],r=o[1]):(e=f[0],r=f[1],l.invert&&(e=l.invert(e),r=l.invert(r)),e>r&&(c=e,e=r,r=c))),s&&(a?(u=a[0],i=a[1]):(u=h[0],i=h[1],s.invert&&(u=s.invert(u),i=s.invert(i)),u>i&&(c=u,u=i,i=c))),l&&s?[[e,u],[r,i]]:l?[e,r]:s&&[u,i])},n.clear=function(){return n.empty()||(f=[0,0],h=[0,0],o=a=null),n},n.empty=function(){return!!l&&f[0]==f[1]||!!s&&h[0]==h[1]},ta.rebind(n,c,"on")};var Hl={n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},Ol=[["n","e","s","w","nw","ne","se","sw"],["e","w"],["n","s"],[]],Il=ac.format=gc.timeFormat,Yl=Il.utc,Zl=Yl("%Y-%m-%dT%H:%M:%S.%LZ");Il.iso=Date.prototype.toISOString&&+new Date("2000-01-01T00:00:00.000Z")?Jo:Zl,Jo.parse=function(n){var t=new Date(n);return isNaN(t)?null:t},Jo.toString=Zl.toString,ac.second=Ft(function(n){return new cc(1e3*Math.floor(n/1e3))},function(n,t){n.setTime(n.getTime()+1e3*Math.floor(t))},function(n){return n.getSeconds()}),ac.seconds=ac.second.range,ac.seconds.utc=ac.second.utc.range,ac.minute=Ft(function(n){return new cc(6e4*Math.floor(n/6e4))},function(n,t){n.setTime(n.getTime()+6e4*Math.floor(t))},function(n){return n.getMinutes()}),ac.minutes=ac.minute.range,ac.minutes.utc=ac.minute.utc.range,ac.hour=Ft(function(n){var t=n.getTimezoneOffset()/60;return new cc(36e5*(Math.floor(n/36e5-t)+t))},function(n,t){n.setTime(n.getTime()+36e5*Math.floor(t))},function(n){return n.getHours()}),ac.hours=ac.hour.range,ac.hours.utc=ac.hour.utc.range,ac.month=Ft(function(n){return n=ac.day(n),n.setDate(1),n},function(n,t){n.setMonth(n.getMonth()+t)},function(n){return n.getMonth()}),ac.months=ac.month.range,ac.months.utc=ac.month.utc.range;var Vl=[1e3,5e3,15e3,3e4,6e4,3e5,9e5,18e5,36e5,108e5,216e5,432e5,864e5,1728e5,6048e5,2592e6,7776e6,31536e6],Xl=[[ac.second,1],[ac.second,5],[ac.second,15],[ac.second,30],[ac.minute,1],[ac.minute,5],[ac.minute,15],[ac.minute,30],[ac.hour,1],[ac.hour,3],[ac.hour,6],[ac.hour,12],[ac.day,1],[ac.day,2],[ac.week,1],[ac.month,1],[ac.month,3],[ac.year,1]],$l=Il.multi([[".%L",function(n){return n.getMilliseconds()}],[":%S",function(n){return n.getSeconds()}],["%I:%M",function(n){return n.getMinutes()}],["%I %p",function(n){return n.getHours()}],["%a %d",function(n){return n.getDay()&&1!=n.getDate()}],["%b %d",function(n){return 1!=n.getDate()}],["%B",function(n){return n.getMonth()}],["%Y",Ne]]),Bl={range:function(n,t,e){return ta.range(Math.ceil(n/e)*e,+t,e).map(Ko)},floor:y,ceil:y};Xl.year=ac.year,ac.scale=function(){return Go(ta.scale.linear(),Xl,$l)};var Wl=Xl.map(function(n){return[n[0].utc,n[1]]}),Jl=Yl.multi([[".%L",function(n){return n.getUTCMilliseconds()}],[":%S",function(n){return n.getUTCSeconds()}],["%I:%M",function(n){return n.getUTCMinutes()}],["%I %p",function(n){return n.getUTCHours()}],["%a %d",function(n){return n.getUTCDay()&&1!=n.getUTCDate()}],["%b %d",function(n){return 1!=n.getUTCDate()}],["%B",function(n){return n.getUTCMonth()}],["%Y",Ne]]);Wl.year=ac.year.utc,ac.scale.utc=function(){return Go(ta.scale.linear(),Wl,Jl)},ta.text=At(function(n){return n.responseText}),ta.json=function(n,t){return Nt(n,"application/json",Qo,t)},ta.html=function(n,t){return Nt(n,"text/html",na,t)},ta.xml=At(function(n){return n.responseXML}),"function"==typeof define&&define.amd?define(ta):"object"==typeof module&&module.exports&&(module.exports=ta),this.d3=ta}();/*!
* d3pie
* @author Ben Keen
* @version 0.1.8
* @date April 2015
* @repo http://github.com/benkeen/d3pie
*/
!function(a,b){"function"==typeof define&&define.amd?define([],b):"object"==typeof exports?module.exports=b(require()):a.d3pie=b(a)}(this,function(){var a="d3pie",b="0.1.6",c=0,d={header:{title:{text:"",color:"#333333",fontSize:18,font:"arial"},subtitle:{text:"",color:"#666666",fontSize:14,font:"arial"},location:"top-center",titleSubtitlePadding:8},footer:{text:"",color:"#666666",fontSize:14,font:"arial",location:"left"},size:{canvasHeight:500,canvasWidth:500,pieInnerRadius:"0%",pieOuterRadius:null},data:{sortOrder:"none",ignoreSmallSegments:{enabled:!1,valueType:"percentage",value:null},smallSegmentGrouping:{enabled:!1,value:1,valueType:"percentage",label:"Other",color:"#cccccc"},content:[]},labels:{outer:{format:"label",hideWhenLessThanPercentage:null,pieDistance:30},inner:{format:"percentage",hideWhenLessThanPercentage:null},mainLabel:{color:"#333333",font:"arial",fontSize:10},percentage:{color:"#dddddd",font:"arial",fontSize:10,decimalPlaces:0},value:{color:"#cccc44",font:"arial",fontSize:10},lines:{enabled:!0,style:"curved",color:"segment"},truncation:{enabled:!1,truncateLength:30},formatter:null},effects:{load:{effect:"default",speed:1e3},pullOutSegmentOnClick:{effect:"bounce",speed:300,size:10},highlightSegmentOnMouseover:!0,highlightLuminosity:-.2},tooltips:{enabled:!1,type:"placeholder",string:"",placeholderParser:null,styles:{fadeInSpeed:250,backgroundColor:"#000000",backgroundOpacity:.5,color:"#efefef",borderRadius:2,font:"arial",fontSize:10,padding:4}},misc:{colors:{background:null,segments:["#2484c1","#65a620","#7b6888","#a05d56","#961a1a","#d8d23a","#e98125","#d0743c","#635222","#6ada6a","#0c6197","#7d9058","#207f33","#44b9b0","#bca44a","#e4a14b","#a3acb2","#8cc3e9","#69a6f9","#5b388f","#546e91","#8bde95","#d2ab58","#273c71","#98bf6e","#4daa4b","#98abc5","#cc1010","#31383b","#006391","#c2643f","#b0a474","#a5a39c","#a9c2bc","#22af8c","#7fcecf","#987ac6","#3d3b87","#b77b1c","#c9c2b6","#807ece","#8db27c","#be66a2","#9ed3c6","#00644b","#005064","#77979f","#77e079","#9c73ab","#1f79a7"],segmentStroke:"#ffffff"},gradient:{enabled:!1,percentage:95,color:"#000000"},canvasPadding:{top:5,right:5,bottom:5,left:5},pieCenterOffset:{x:0,y:0},cssPrefix:null},callbacks:{onload:null,onMouseoverSegment:null,onMouseoutSegment:null,onClickSegment:null}},e={initialCheck:function(a){var b=a.cssPrefix,c=a.element,d=a.options;if(!window.d3||!window.d3.hasOwnProperty("version"))return console.error("d3pie error: d3 is not available"),!1;if(!(c instanceof HTMLElement||c instanceof SVGElement))return console.error("d3pie error: the first d3pie() param must be a valid DOM element (not jQuery) or a ID string."),!1;if(!/[a-zA-Z][a-zA-Z0-9_-]*$/.test(b))return console.error("d3pie error: invalid options.misc.cssPrefix"),!1;if(!f.isArray(d.data.content))return console.error("d3pie error: invalid config structure: missing data.content property."),!1;if(0===d.data.content.length)return console.error("d3pie error: no data supplied."),!1;for(var e=[],g=0;g<d.data.content.length;g++)"number"!=typeof d.data.content[g].value||isNaN(d.data.content[g].value)?console.log("not valid: ",d.data.content[g]):d.data.content[g].value<=0?console.log("not valid - should have positive value: ",d.data.content[g]):e.push(d.data.content[g]);return a.options.data.content=e,!0}},f={addSVGSpace:function(a){var b=a.element,c=a.options.size.canvasWidth,d=a.options.size.canvasHeight,e=a.options.misc.colors.background,f=d3.select(b).append("svg:svg").attr("width",c).attr("height",d);return"transparent"!==e&&f.style("background-color",function(){return e}),f},whenIdExists:function(a,b){var c=1,d=1e3,e=setInterval(function(){document.getElementById(a)&&(clearInterval(e),b()),c>d&&clearInterval(e),c++},1)},whenElementsExist:function(a,b){var c=1,d=1e3,e=setInterval(function(){for(var f=!0,g=0;g<a.length;g++)if(!document.getElementById(a[g])){f=!1;break}f&&(clearInterval(e),b()),c>d&&clearInterval(e),c++},1)},shuffleArray:function(a){for(var b,c,d=a.length;0!==d;)c=Math.floor(Math.random()*d),d-=1,b=a[d],a[d]=a[c],a[c]=b;return a},processObj:function(a,b,c){return"string"==typeof b?f.processObj(a,b.split("."),c):1===b.length&&void 0!==c?(a[b[0]]=c,a[b[0]]):0===b.length?a:f.processObj(a[b[0]],b.slice(1),c)},getDimensions:function(a){var b=document.getElementById(a),c=0,d=0;if(b){var e=b.getBBox();c=e.width,d=e.height}else console.log("error: getDimensions() "+a+" not found.");return{w:c,h:d}},rectIntersect:function(a,b){var c=b.x>a.x+a.w||b.x+b.w<a.x||b.y+b.h<a.y||b.y>a.y+a.h;return!c},getColorShade:function(a,b){a=String(a).replace(/[^0-9a-f]/gi,""),a.length<6&&(a=a[0]+a[0]+a[1]+a[1]+a[2]+a[2]),b=b||0;for(var c="#",d=0;3>d;d++){var e=parseInt(a.substr(2*d,2),16);e=Math.round(Math.min(Math.max(0,e+e*b),255)).toString(16),c+=("00"+e).substr(e.length)}return c},initSegmentColors:function(a){for(var b=a.options.data.content,c=a.options.misc.colors.segments,d=[],e=0;e<b.length;e++)d.push(b[e].hasOwnProperty("color")?b[e].color:c[e]);return d},applySmallSegmentGrouping:function(a,b){var c;"percentage"===b.valueType&&(c=h.getTotalPieSize(a));for(var d=[],e=[],f=0,g=0;g<a.length;g++)if("percentage"===b.valueType){var i=a[g].value/c*100;if(i<=b.value){e.push(a[g]),f+=a[g].value;continue}a[g].isGrouped=!1,d.push(a[g])}else{if(a[g].value<=b.value){e.push(a[g]),f+=a[g].value;continue}a[g].isGrouped=!1,d.push(a[g])}return e.length&&d.push({color:b.color,label:b.label,value:f,isGrouped:!0,groupedData:e}),d},showPoint:function(a,b,c){a.append("circle").attr("cx",b).attr("cy",c).attr("r",2).style("fill","black")},isFunction:function(a){var b={};return a&&"[object Function]"===b.toString.call(a)},isArray:function(a){return"[object Array]"===Object.prototype.toString.call(a)}},g=function(){var a,b,c,d,e,f,h=arguments[0]||{},i=1,j=arguments.length,k=!1,l=Object.prototype.toString,m=Object.prototype.hasOwnProperty,n={"[object Boolean]":"boolean","[object Number]":"number","[object String]":"string","[object Function]":"function","[object Array]":"array","[object Date]":"date","[object RegExp]":"regexp","[object Object]":"object"},o={isFunction:function(a){return"function"===o.type(a)},isArray:Array.isArray||function(a){return"array"===o.type(a)},isWindow:function(a){return null!==a&&a===a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return null===a?String(a):n[l.call(a)]||"object"},isPlainObject:function(a){if(!a||"object"!==o.type(a)||a.nodeType)return!1;try{if(a.constructor&&!m.call(a,"constructor")&&!m.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(b){return!1}var c;for(c in a);return void 0===c||m.call(a,c)}};for("boolean"==typeof h&&(k=h,h=arguments[1]||{},i=2),"object"==typeof h||o.isFunction(h)||(h={}),j===i&&(h=this,--i),i;j>i;i++)if(null!==(a=arguments[i]))for(b in a)c=h[b],d=a[b],h!==d&&(k&&d&&(o.isPlainObject(d)||(e=o.isArray(d)))?(e?(e=!1,f=c&&o.isArray(c)?c:[]):f=c&&o.isPlainObject(c)?c:{},h[b]=g(k,f,d)):void 0!==d&&(h[b]=d));return h},h={toRadians:function(a){return a*(Math.PI/180)},toDegrees:function(a){return a*(180/Math.PI)},computePieRadius:function(a){var b=a.options.size,c=a.options.misc.canvasPadding,d=b.canvasWidth-c.left-c.right,e=b.canvasHeight-c.top-c.bottom;"pie-center"!==a.options.header.location&&(e-=a.textComponents.headerHeight),a.textComponents.footer.exists&&(e-=a.textComponents.footer.h),e=0>e?0:e;var f,g,h=(e>d?d:e)/3;if(null!==b.pieOuterRadius)if(/%/.test(b.pieOuterRadius)){g=parseInt(b.pieOuterRadius.replace(/[\D]/,""),10),g=g>99?99:g,g=0>g?0:g;var i=e>d?d:e;if("none"!==a.options.labels.outer.format){var j=2*parseInt(a.options.labels.outer.pieDistance,10);i-j>0&&(i-=j)}h=Math.floor(i/100*g)/2}else h=parseInt(b.pieOuterRadius,10);/%/.test(b.pieInnerRadius)?(g=parseInt(b.pieInnerRadius.replace(/[\D]/,""),10),g=g>99?99:g,g=0>g?0:g,f=Math.floor(h/100*g)):f=parseInt(b.pieInnerRadius,10),a.innerRadius=f,a.outerRadius=h},getTotalPieSize:function(a){for(var b=0,c=0;c<a.length;c++)b+=a[c].value;return b},sortPieData:function(a){var b=a.options.data.content,c=a.options.data.sortOrder;switch(c){case"none":break;case"random":b=f.shuffleArray(b);break;case"value-asc":b.sort(function(a,b){return a.value<b.value?-1:1});break;case"value-desc":b.sort(function(a,b){return a.value<b.value?1:-1});break;case"label-asc":b.sort(function(a,b){return a.label.toLowerCase()>b.label.toLowerCase()?1:-1});break;case"label-desc":b.sort(function(a,b){return a.label.toLowerCase()<b.label.toLowerCase()?1:-1})}return b},getPieTranslateCenter:function(a){return"translate("+a.x+","+a.y+")"},calculatePieCenter:function(a){var b=a.options.misc.pieCenterOffset,c=a.textComponents.title.exists&&"pie-center"!==a.options.header.location,d=a.textComponents.subtitle.exists&&"pie-center"!==a.options.header.location,e=a.options.misc.canvasPadding.top;c&&d?e+=a.textComponents.title.h+a.options.header.titleSubtitlePadding+a.textComponents.subtitle.h:c?e+=a.textComponents.title.h:d&&(e+=a.textComponents.subtitle.h);var f=0;a.textComponents.footer.exists&&(f=a.textComponents.footer.h+a.options.misc.canvasPadding.bottom);var g=(a.options.size.canvasWidth-a.options.misc.canvasPadding.left-a.options.misc.canvasPadding.right)/2+a.options.misc.canvasPadding.left,h=(a.options.size.canvasHeight-f-e)/2+e;g+=b.x,h+=b.y,a.pieCenter={x:g,y:h}},rotate:function(a,b,c,d,e){e=e*Math.PI/180;var f=Math.cos,g=Math.sin,h=(a-c)*f(e)-(b-d)*g(e)+c,i=(a-c)*g(e)+(b-d)*f(e)+d;return{x:h,y:i}},translate:function(a,b,c,d){var e=h.toRadians(d);return{x:a+c*Math.sin(e),y:b-c*Math.cos(e)}},pointIsInArc:function(a,b,c){var d=c.innerRadius()(b),e=c.outerRadius()(b),f=c.startAngle()(b),g=c.endAngle()(b),h=a.x*a.x+a.y*a.y,i=Math.atan2(a.x,-a.y);return i=0>i?i+2*Math.PI:i,h>=d*d&&e*e>=h&&i>=f&&g>=i}},i={add:function(a,b,c){var d=i.getIncludes(c),e=a.options.labels,f=a.svg.insert("g","."+a.cssPrefix+"labels-"+b).attr("class",a.cssPrefix+"labels-"+b),g=f.selectAll("."+a.cssPrefix+"labelGroup-"+b).data(a.options.data.content).enter().append("g").attr("id",function(c,d){return a.cssPrefix+"labelGroup"+d+"-"+b}).attr("data-index",function(a,b){return b}).attr("class",a.cssPrefix+"labelGroup-"+b).style("opacity",0),h={section:b,sectionDisplayType:c};d.mainLabel&&g.append("text").attr("id",function(c,d){return a.cssPrefix+"segmentMainLabel"+d+"-"+b}).attr("class",a.cssPrefix+"segmentMainLabel-"+b).text(function(a,b){var c=a.label;return e.formatter?(h.index=b,h.part="mainLabel",h.value=a.value,h.label=c,c=e.formatter(h)):e.truncation.enabled&&a.label.length>e.truncation.truncateLength&&(c=a.label.substring(0,e.truncation.truncateLength)+"..."),c}).style("font-size",e.mainLabel.fontSize+"px").style("font-family",e.mainLabel.font).style("fill",e.mainLabel.color),d.percentage&&g.append("text").attr("id",function(c,d){return a.cssPrefix+"segmentPercentage"+d+"-"+b}).attr("class",a.cssPrefix+"segmentPercentage-"+b).text(function(b,c){var d=j.getPercentage(a,c,a.options.labels.percentage.decimalPlaces);return e.formatter?(h.index=c,h.part="percentage",h.value=b.value,h.label=d,d=e.formatter(h)):d+="%",d}).style("font-size",e.percentage.fontSize+"px").style("font-family",e.percentage.font).style("fill",e.percentage.color),d.value&&g.append("text").attr("id",function(c,d){return a.cssPrefix+"segmentValue"+d+"-"+b}).attr("class",a.cssPrefix+"segmentValue-"+b).text(function(a,b){return h.index=b,h.part="value",h.value=a.value,h.label=a.value,e.formatter?e.formatter(h,a.value):a.value}).style("font-size",e.value.fontSize+"px").style("font-family",e.value.font).style("fill",e.value.color)},positionLabelElements:function(a,b,c){i["dimensions-"+b]=[];var d=d3.selectAll("."+a.cssPrefix+"labelGroup-"+b);d.each(function(c,d){var e=d3.select(this).selectAll("."+a.cssPrefix+"segmentMainLabel-"+b),f=d3.select(this).selectAll("."+a.cssPrefix+"segmentPercentage-"+b),g=d3.select(this).selectAll("."+a.cssPrefix+"segmentValue-"+b);i["dimensions-"+b].push({mainLabel:null!==e.node()?e.node().getBBox():null,percentage:null!==f.node()?f.node().getBBox():null,value:null!==g.node()?g.node().getBBox():null})});var e=5,f=i["dimensions-"+b];switch(c){case"label-value1":d3.selectAll("."+a.cssPrefix+"segmentValue-"+b).attr("dx",function(a,b){return f[b].mainLabel.width+e});break;case"label-value2":d3.selectAll("."+a.cssPrefix+"segmentValue-"+b).attr("dy",function(a,b){return f[b].mainLabel.height});break;case"label-percentage1":d3.selectAll("."+a.cssPrefix+"segmentPercentage-"+b).attr("dx",function(a,b){return f[b].mainLabel.width+e});break;case"label-percentage2":d3.selectAll("."+a.cssPrefix+"segmentPercentage-"+b).attr("dx",function(a,b){return f[b].mainLabel.width/2-f[b].percentage.width/2}).attr("dy",function(a,b){return f[b].mainLabel.height})}},computeLabelLinePositions:function(a){a.lineCoordGroups=[],d3.selectAll("."+a.cssPrefix+"labelGroup-outer").each(function(b,c){return i.computeLinePosition(a,c)})},computeLinePosition:function(a,b){var c,d,e,f,g=j.getSegmentAngle(b,a.options.data.content,a.totalSize,{midpoint:!0}),i=h.rotate(a.pieCenter.x,a.pieCenter.y-a.outerRadius,a.pieCenter.x,a.pieCenter.y,g),k=a.outerLabelGroupData[b].h/5,l=6,m=Math.floor(g/90),n=4;switch(2===m&&180===g&&(m=1),m){case 0:c=a.outerLabelGroupData[b].x-l-(a.outerLabelGroupData[b].x-l-i.x)/2,d=a.outerLabelGroupData[b].y+(i.y-a.outerLabelGroupData[b].y)/n,e=a.outerLabelGroupData[b].x-l,f=a.outerLabelGroupData[b].y-k;break;case 1:c=i.x+(a.outerLabelGroupData[b].x-i.x)/n,d=i.y+(a.outerLabelGroupData[b].y-i.y)/n,e=a.outerLabelGroupData[b].x-l,f=a.outerLabelGroupData[b].y-k;break;case 2:var o=a.outerLabelGroupData[b].x+a.outerLabelGroupData[b].w+l;c=i.x-(i.x-o)/n,d=i.y+(a.outerLabelGroupData[b].y-i.y)/n,e=a.outerLabelGroupData[b].x+a.outerLabelGroupData[b].w+l,f=a.outerLabelGroupData[b].y-k;break;case 3:var p=a.outerLabelGroupData[b].x+a.outerLabelGroupData[b].w+l;c=p+(i.x-p)/n,d=a.outerLabelGroupData[b].y+(i.y-a.outerLabelGroupData[b].y)/n,e=a.outerLabelGroupData[b].x+a.outerLabelGroupData[b].w+l,f=a.outerLabelGroupData[b].y-k}"straight"===a.options.labels.lines.style?a.lineCoordGroups[b]=[{x:i.x,y:i.y},{x:e,y:f}]:a.lineCoordGroups[b]=[{x:i.x,y:i.y},{x:c,y:d},{x:e,y:f}]},addLabelLines:function(a){var b=a.svg.insert("g","."+a.cssPrefix+"pieChart").attr("class",a.cssPrefix+"lineGroups").style("opacity",0),c=b.selectAll("."+a.cssPrefix+"lineGroup").data(a.lineCoordGroups).enter().append("g").attr("class",a.cssPrefix+"lineGroup"),d=d3.svg.line().interpolate("basis").x(function(a){return a.x}).y(function(a){return a.y});c.append("path").attr("d",d).attr("stroke",function(b,c){return"segment"===a.options.labels.lines.color?a.options.colors[c]:a.options.labels.lines.color}).attr("stroke-width",1).attr("fill","none").style("opacity",function(b,c){var d=a.options.labels.outer.hideWhenLessThanPercentage,e=j.getPercentage(a,c,a.options.labels.percentage.decimalPlaces),f=null!==d&&d>e||""===a.options.data.content[c].label;return f?0:1})},positionLabelGroups:function(a,b){"none"!==a.options.labels[b].format&&d3.selectAll("."+a.cssPrefix+"labelGroup-"+b).style("opacity",0).attr("transform",function(c,d){var e,i;if("outer"===b)e=a.outerLabelGroupData[d].x,i=a.outerLabelGroupData[d].y;else{var k=g(!0,{},a.pieCenter);if(a.innerRadius>0){var l=j.getSegmentAngle(d,a.options.data.content,a.totalSize,{midpoint:!0}),m=h.translate(a.pieCenter.x,a.pieCenter.y,a.innerRadius,l);k.x=m.x,k.y=m.y}var n=f.getDimensions(a.cssPrefix+"labelGroup"+d+"-inner"),o=n.w/2,p=n.h/4;e=k.x+(a.lineCoordGroups[d][0].x-k.x)/1.8,i=k.y+(a.lineCoordGroups[d][0].y-k.y)/1.8,e-=o,i+=p}return"translate("+e+","+i+")"})},fadeInLabelsAndLines:function(a){var b="default"===a.options.effects.load.effect?a.options.effects.load.speed:1;setTimeout(function(){var b="default"===a.options.effects.load.effect?400:1;d3.selectAll("."+a.cssPrefix+"labelGroup-outer").transition().duration(b).style("opacity",function(b,c){var d=a.options.labels.outer.hideWhenLessThanPercentage,e=j.getPercentage(a,c,a.options.labels.percentage.decimalPlaces);return null!==d&&d>e?0:1}),d3.selectAll("."+a.cssPrefix+"labelGroup-inner").transition().duration(b).style("opacity",function(b,c){var d=a.options.labels.inner.hideWhenLessThanPercentage,e=j.getPercentage(a,c,a.options.labels.percentage.decimalPlaces);return null!==d&&d>e?0:1}),d3.selectAll("g."+a.cssPrefix+"lineGroups").transition().duration(b).style("opacity",1),f.isFunction(a.options.callbacks.onload)&&setTimeout(function(){try{a.options.callbacks.onload()}catch(b){}},b)},b)},getIncludes:function(a){var b=!1,c=!1,d=!1;switch(a){case"label":b=!0;break;case"value":c=!0;break;case"percentage":d=!0;break;case"label-value1":case"label-value2":b=!0,c=!0;break;case"label-percentage1":case"label-percentage2":b=!0,d=!0}return{mainLabel:b,value:c,percentage:d}},computeOuterLabelCoords:function(a){a.svg.selectAll("."+a.cssPrefix+"labelGroup-outer").each(function(b,c){return i.getIdealOuterLabelPositions(a,c)}),i.resolveOuterLabelCollisions(a)},resolveOuterLabelCollisions:function(a){if("none"!==a.options.labels.outer.format){var b=a.options.data.content.length;i.checkConflict(a,0,"clockwise",b),i.checkConflict(a,b-1,"anticlockwise",b)}},checkConflict:function(a,b,c,d){var e,g;if(!(1>=d)){var h=a.outerLabelGroupData[b].hs;if(!("clockwise"===c&&"right"!==h||"anticlockwise"===c&&"left"!==h)){var j="clockwise"===c?b+1:b-1,k=a.outerLabelGroupData[b],l=a.outerLabelGroupData[j],m={labelHeights:a.outerLabelGroupData[0].h,center:a.pieCenter,lineLength:a.outerRadius+a.options.labels.outer.pieDistance,heightChange:a.outerLabelGroupData[0].h+1};if("clockwise"===c){for(e=0;b>=e;e++)if(g=a.outerLabelGroupData[e],f.rectIntersect(g,l)){i.adjustLabelPos(a,j,k,m);break}}else for(e=d-1;e>=b;e--)if(g=a.outerLabelGroupData[e],f.rectIntersect(g,l)){i.adjustLabelPos(a,j,k,m);break}i.checkConflict(a,j,c,d)}}},adjustLabelPos:function(a,b,c,d){var e,f,g,h;h=c.y+d.heightChange,f=d.center.y-h,e=Math.sqrt(Math.abs(d.lineLength)>Math.abs(f)?d.lineLength*d.lineLength-f*f:f*f-d.lineLength*d.lineLength),g="right"===c.hs?d.center.x+e:d.center.x-e-a.outerLabelGroupData[b].w,a.outerLabelGroupData[b].x=g,a.outerLabelGroupData[b].y=h},getIdealOuterLabelPositions:function(a,b){var c=d3.select("#"+a.cssPrefix+"labelGroup"+b+"-outer").node();if(c){var d=c.getBBox(),e=j.getSegmentAngle(b,a.options.data.content,a.totalSize,{midpoint:!0}),f=a.pieCenter.x,g=a.pieCenter.y-(a.outerRadius+a.options.labels.outer.pieDistance),i=h.rotate(f,g,a.pieCenter.x,a.pieCenter.y,e),k="right";e>180?(i.x-=d.width+8,k="left"):i.x+=8,a.outerLabelGroupData[b]={x:i.x,y:i.y,w:d.width,h:d.height,hs:k}}}},j={create:function(a){var b=a.pieCenter,c=a.options.colors,d=a.options.effects.load,e=a.options.misc.colors.segmentStroke,f=a.svg.insert("g","#"+a.cssPrefix+"title").attr("transform",function(){return h.getPieTranslateCenter(b)}).attr("class",a.cssPrefix+"pieChart"),g=d3.svg.arc().innerRadius(a.innerRadius).outerRadius(a.outerRadius).startAngle(0).endAngle(function(b){return b.value/a.totalSize*2*Math.PI}),i=f.selectAll("."+a.cssPrefix+"arc").data(a.options.data.content).enter().append("g").attr("class",a.cssPrefix+"arc"),k=d.speed;"none"===d.effect&&(k=0),i.append("path").attr("id",function(b,c){return a.cssPrefix+"segment"+c}).attr("fill",function(b,d){var e=c[d];return a.options.misc.gradient.enabled&&(e="url(#"+a.cssPrefix+"grad"+d+")"),e}).style("stroke",e).style("stroke-width",1).transition().ease("cubic-in-out").duration(k).attr("data-index",function(a,b){return b}).attrTween("d",function(b){var c=d3.interpolate({value:0},b);return function(b){return a.arc(c(b))}}),a.svg.selectAll("g."+a.cssPrefix+"arc").attr("transform",function(b,c){var d=0;return c>0&&(d=j.getSegmentAngle(c-1,a.options.data.content,a.totalSize)),"rotate("+d+")"}),a.arc=g},addGradients:function(a){var b=a.svg.append("defs").selectAll("radialGradient").data(a.options.data.content).enter().append("radialGradient").attr("gradientUnits","userSpaceOnUse").attr("cx",0).attr("cy",0).attr("r","120%").attr("id",function(b,c){return a.cssPrefix+"grad"+c});b.append("stop").attr("offset","0%").style("stop-color",function(b,c){return a.options.colors[c]}),b.append("stop").attr("offset",a.options.misc.gradient.percentage+"%").style("stop-color",a.options.misc.gradient.color)},addSegmentEventHandlers:function(a){var b=d3.selectAll("."+a.cssPrefix+"arc,."+a.cssPrefix+"labelGroup-inner,."+a.cssPrefix+"labelGroup-outer");b.on("click",function(){var b,c=d3.select(this);if(c.attr("class")===a.cssPrefix+"arc")b=c.select("path");else{var d=c.attr("data-index");b=d3.select("#"+a.cssPrefix+"segment"+d)}var e=b.attr("class")===a.cssPrefix+"expanded";j.onSegmentEvent(a,a.options.callbacks.onClickSegment,b,e),"none"!==a.options.effects.pullOutSegmentOnClick.effect&&(e?j.closeSegment(a,b.node()):j.openSegment(a,b.node()))}),b.on("mouseover",function(){var b,c,d=d3.select(this);if(d.attr("class")===a.cssPrefix+"arc"?b=d.select("path"):(c=d.attr("data-index"),b=d3.select("#"+a.cssPrefix+"segment"+c)),a.options.effects.highlightSegmentOnMouseover){c=b.attr("data-index");var e=a.options.colors[c];b.style("fill",f.getColorShade(e,a.options.effects.highlightLuminosity))}a.options.tooltips.enabled&&(c=b.attr("data-index"),l.showTooltip(a,c));var g=b.attr("class")===a.cssPrefix+"expanded";j.onSegmentEvent(a,a.options.callbacks.onMouseoverSegment,b,g)}),b.on("mousemove",function(){l.moveTooltip(a)}),b.on("mouseout",function(){var b,c,d=d3.select(this);if(d.attr("class")===a.cssPrefix+"arc"?b=d.select("path"):(c=d.attr("data-index"),b=d3.select("#"+a.cssPrefix+"segment"+c)),a.options.effects.highlightSegmentOnMouseover){c=b.attr("data-index");var e=a.options.colors[c];a.options.misc.gradient.enabled&&(e="url(#"+a.cssPrefix+"grad"+c+")"),b.style("fill",e)}a.options.tooltips.enabled&&(c=b.attr("data-index"),l.hideTooltip(a,c));var f=b.attr("class")===a.cssPrefix+"expanded";j.onSegmentEvent(a,a.options.callbacks.onMouseoutSegment,b,f)})},onSegmentEvent:function(a,b,c,d){if(f.isFunction(b)){var e=parseInt(c.attr("data-index"),10);b({segment:c.node(),index:e,expanded:d,data:a.options.data.content[e]})}},openSegment:function(a,b){a.isOpeningSegment||(a.isOpeningSegment=!0,d3.selectAll("."+a.cssPrefix+"expanded").length>0&&j.closeSegment(a,d3.select("."+a.cssPrefix+"expanded").node()),d3.select(b).transition().ease(a.options.effects.pullOutSegmentOnClick.effect).duration(a.options.effects.pullOutSegmentOnClick.speed).attr("transform",function(b,c){var d=a.arc.centroid(b),e=d[0],f=d[1],g=Math.sqrt(e*e+f*f),h=parseInt(a.options.effects.pullOutSegmentOnClick.size,10);return"translate("+e/g*h+","+f/g*h+")"}).each("end",function(c,d){a.currentlyOpenSegment=b,a.isOpeningSegment=!1,d3.select(this).attr("class",a.cssPrefix+"expanded")}))},closeSegment:function(a,b){d3.select(b).transition().duration(400).attr("transform","translate(0,0)").each("end",function(b,c){d3.select(this).attr("class",""),a.currentlyOpenSegment=null})},getCentroid:function(a){var b=a.getBBox();return{x:b.x+b.width/2,y:b.y+b.height/2}},getSegmentAngle:function(a,b,c,d){var e,f=g({compounded:!0,midpoint:!1},d),h=b[a].value;if(f.compounded){e=0;for(var i=0;a>=i;i++)e+=b[i].value}"undefined"==typeof e&&(e=h);var j=e/c*360;if(f.midpoint){var k=h/c*360;j-=k/2}return j},getPercentage:function(a,b,c){var d=a.options.data.content[b].value/a.totalSize;return 0>=c?Math.round(100*d):(100*d).toFixed(c)}},k={offscreenCoord:-1e4,addTitle:function(a){a.svg.selectAll("."+a.cssPrefix+"title").data([a.options.header.title]).enter().append("text").text(function(a){return a.text}).attr({id:a.cssPrefix+"title","class":a.cssPrefix+"title",x:k.offscreenCoord,y:k.offscreenCoord}).attr("text-anchor",function(){var b;return b="top-center"===a.options.header.location||"pie-center"===a.options.header.location?"middle":"left"}).attr("fill",function(a){return a.color}).style("font-size",function(a){return a.fontSize+"px"}).style("font-family",function(a){return a.font})},positionTitle:function(a){var b,c=a.textComponents,d=a.options.header.location,e=a.options.misc.canvasPadding,f=a.options.size.canvasWidth,g=a.options.header.titleSubtitlePadding;b="top-left"===d?e.left:(f-e.right)/2+e.left,b+=a.options.misc.pieCenterOffset.x;var h=e.top+c.title.h;if("pie-center"===d)if(h=a.pieCenter.y,c.subtitle.exists){var i=c.title.h+g+c.subtitle.h;h=h-i/2+c.title.h}else h+=c.title.h/4;a.svg.select("#"+a.cssPrefix+"title").attr("x",b).attr("y",h)},addSubtitle:function(a){var b=a.options.header.location;a.svg.selectAll("."+a.cssPrefix+"subtitle").data([a.options.header.subtitle]).enter().append("text").text(function(a){return a.text}).attr("x",k.offscreenCoord).attr("y",k.offscreenCoord).attr("id",a.cssPrefix+"subtitle").attr("class",a.cssPrefix+"subtitle").attr("text-anchor",function(){var a;return a="top-center"===b||"pie-center"===b?"middle":"left"}).attr("fill",function(a){return a.color}).style("font-size",function(a){return a.fontSize+"px"}).style("font-family",function(a){return a.font})},positionSubtitle:function(a){var b,c=a.options.misc.canvasPadding,d=a.options.size.canvasWidth;b="top-left"===a.options.header.location?c.left:(d-c.right)/2+c.left,b+=a.options.misc.pieCenterOffset.x;var e=k.getHeaderHeight(a);a.svg.select("#"+a.cssPrefix+"subtitle").attr("x",b).attr("y",e)},addFooter:function(a){a.svg.selectAll("."+a.cssPrefix+"footer").data([a.options.footer]).enter().append("text").text(function(a){return a.text}).attr("x",k.offscreenCoord).attr("y",k.offscreenCoord).attr("id",a.cssPrefix+"footer").attr("class",a.cssPrefix+"footer").attr("text-anchor",function(){var b="left";return"bottom-center"===a.options.footer.location?b="middle":"bottom-right"===a.options.footer.location&&(b="left"),b}).attr("fill",function(a){return a.color}).style("font-size",function(a){return a.fontSize+"px"}).style("font-family",function(a){return a.font})},positionFooter:function(a){var b,c=a.options.footer.location,d=a.textComponents.footer.w,e=a.options.size.canvasWidth,f=a.options.size.canvasHeight,g=a.options.misc.canvasPadding;b="bottom-left"===c?g.left:"bottom-right"===c?e-d-g.right:e/2,a.svg.select("#"+a.cssPrefix+"footer").attr("x",b).attr("y",f-g.bottom)},getHeaderHeight:function(a){var b;if(a.textComponents.title.exists){var c=a.textComponents.title.h+a.options.header.titleSubtitlePadding+a.textComponents.subtitle.h;b="pie-center"===a.options.header.location?a.pieCenter.y-c/2+c:c+a.options.misc.canvasPadding.top}else if("pie-center"===a.options.header.location){var d=a.options.misc.canvasPadding.bottom+a.textComponents.footer.h;b=(a.options.size.canvasHeight-d)/2+a.options.misc.canvasPadding.top+a.textComponents.subtitle.h/2}else b=a.options.misc.canvasPadding.top+a.textComponents.subtitle.h;return b}},l={addTooltips:function(a){var b=a.svg.insert("g").attr("class",a.cssPrefix+"tooltips");b.selectAll("."+a.cssPrefix+"tooltip").data(a.options.data.content).enter().append("g").attr("class",a.cssPrefix+"tooltip").attr("id",function(b,c){return a.cssPrefix+"tooltip"+c}).style("opacity",0).append("rect").attr({rx:a.options.tooltips.styles.borderRadius,ry:a.options.tooltips.styles.borderRadius,x:-a.options.tooltips.styles.padding,opacity:a.options.tooltips.styles.backgroundOpacity}).style("fill",a.options.tooltips.styles.backgroundColor),b.selectAll("."+a.cssPrefix+"tooltip").data(a.options.data.content).append("text").attr("fill",function(b){return a.options.tooltips.styles.color}).style("font-size",function(b){return a.options.tooltips.styles.fontSize}).style("font-family",function(b){return a.options.tooltips.styles.font}).text(function(b,c){var d=a.options.tooltips.string;return"caption"===a.options.tooltips.type&&(d=b.caption),l.replacePlaceholders(a,d,c,{label:b.label,value:b.value,percentage:j.getPercentage(a,c,a.options.labels.percentage.decimalPlaces)})}),b.selectAll("."+a.cssPrefix+"tooltip rect").attr({width:function(b,c){var d=f.getDimensions(a.cssPrefix+"tooltip"+c);return d.w+2*a.options.tooltips.styles.padding},height:function(b,c){var d=f.getDimensions(a.cssPrefix+"tooltip"+c);return d.h+2*a.options.tooltips.styles.padding},y:function(b,c){var d=f.getDimensions(a.cssPrefix+"tooltip"+c);return-(d.h/2)+1}})},showTooltip:function(a,b){var c=a.options.tooltips.styles.fadeInSpeed;l.currentTooltip===b&&(c=1),l.currentTooltip=b,d3.select("#"+a.cssPrefix+"tooltip"+b).transition().duration(c).style("opacity",function(){return 1}),l.moveTooltip(a)},moveTooltip:function(a){d3.selectAll("#"+a.cssPrefix+"tooltip"+l.currentTooltip).attr("transform",function(b){var c=d3.mouse(this.parentNode),d=c[0]+a.options.tooltips.styles.padding+2,e=c[1]-2*a.options.tooltips.styles.padding-2;return"translate("+d+","+e+")"})},hideTooltip:function(a,b){d3.select("#"+a.cssPrefix+"tooltip"+b).style("opacity",function(){return 0}),d3.select("#"+a.cssPrefix+"tooltip"+l.currentTooltip).attr("transform",function(b,c){var d=a.options.size.canvasWidth+1e3,e=a.options.size.canvasHeight+1e3;return"translate("+d+","+e+")"})},replacePlaceholders:function(a,b,c,d){f.isFunction(a.options.tooltips.placeholderParser)&&a.options.tooltips.placeholderParser(c,d);var e=function(){return function(a){var b=arguments[1];return d.hasOwnProperty(b)?d[arguments[1]]:arguments[0]}};return b.replace(/\{(\w+)\}/g,e(d))}},m=function(i,j){if(this.element=i,"string"==typeof i){var k=i.replace(/^#/,"");this.element=document.getElementById(k)}var l={};g(!0,l,d,j),this.options=l,null!==this.options.misc.cssPrefix?this.cssPrefix=this.options.misc.cssPrefix:(this.cssPrefix="p"+c+"_",c++),e.initialCheck(this)&&(d3.select(this.element).attr(a,b),this.options.data.content=h.sortPieData(this),this.options.data.smallSegmentGrouping.enabled&&(this.options.data.content=f.applySmallSegmentGrouping(this.options.data.content,this.options.data.smallSegmentGrouping)),this.options.colors=f.initSegmentColors(this),this.totalSize=h.getTotalPieSize(this.options.data.content),n.call(this))};m.prototype.recreate=function(){e.initialCheck(this)&&(this.options.data.content=h.sortPieData(this),this.options.data.smallSegmentGrouping.enabled&&(this.options.data.content=f.applySmallSegmentGrouping(this.options.data.content,this.options.data.smallSegmentGrouping)),this.options.colors=f.initSegmentColors(this),this.totalSize=h.getTotalPieSize(this.options.data.content),n.call(this))},m.prototype.redraw=function(){this.element.innerHTML="",n.call(this)},m.prototype.destroy=function(){this.element.innerHTML="",d3.select(this.element).attr(a,null)},m.prototype.getOpenSegment=function(){var a=this.currentlyOpenSegment;if(null!==a&&"undefined"!=typeof a){var b=parseInt(d3.select(a).attr("data-index"),10);return{element:a,index:b,data:this.options.data.content[b]}}return null},m.prototype.openSegment=function(a){a=parseInt(a,10),0>a||a>this.options.data.content.length-1||j.openSegment(this,d3.select("#"+this.cssPrefix+"segment"+a).node())},m.prototype.closeSegment=function(){var a=this.currentlyOpenSegment;a&&j.closeSegment(this,a)},m.prototype.updateProp=function(a,b){switch(a){case"header.title.text":var c=f.processObj(this.options,a);f.processObj(this.options,a,b),d3.select("#"+this.cssPrefix+"title").html(b),(""===c&&""!==b||""!==c&&""===b)&&this.redraw();break;case"header.subtitle.text":var d=f.processObj(this.options,a);f.processObj(this.options,a,b),d3.select("#"+this.cssPrefix+"subtitle").html(b),(""===d&&""!==b||""!==d&&""===b)&&this.redraw();break;case"callbacks.onload":case"callbacks.onMouseoverSegment":case"callbacks.onMouseoutSegment":case"callbacks.onClickSegment":case"effects.pullOutSegmentOnClick.effect":case"effects.pullOutSegmentOnClick.speed":case"effects.pullOutSegmentOnClick.size":case"effects.highlightSegmentOnMouseover":case"effects.highlightLuminosity":f.processObj(this.options,a,b);break;default:f.processObj(this.options,a,b),this.destroy(),this.recreate()}};var n=function(){this.svg=f.addSVGSpace(this),this.textComponents={headerHeight:0,title:{exists:""!==this.options.header.title.text,h:0,w:0},subtitle:{exists:""!==this.options.header.subtitle.text,h:0,w:0},footer:{exists:""!==this.options.footer.text,h:0,w:0}},this.outerLabelGroupData=[],
this.textComponents.title.exists&&k.addTitle(this),this.textComponents.subtitle.exists&&k.addSubtitle(this),k.addFooter(this);var a=this;f.whenIdExists(this.cssPrefix+"footer",function(){k.positionFooter(a);var b=f.getDimensions(a.cssPrefix+"footer");a.textComponents.footer.h=b.h,a.textComponents.footer.w=b.w});var b=[];this.textComponents.title.exists&&b.push(this.cssPrefix+"title"),this.textComponents.subtitle.exists&&b.push(this.cssPrefix+"subtitle"),this.textComponents.footer.exists&&b.push(this.cssPrefix+"footer"),f.whenElementsExist(b,function(){if(a.textComponents.title.exists){var b=f.getDimensions(a.cssPrefix+"title");a.textComponents.title.h=b.h,a.textComponents.title.w=b.w}if(a.textComponents.subtitle.exists){var c=f.getDimensions(a.cssPrefix+"subtitle");a.textComponents.subtitle.h=c.h,a.textComponents.subtitle.w=c.w}if(a.textComponents.title.exists||a.textComponents.subtitle.exists){var d=0;a.textComponents.title.exists&&(d+=a.textComponents.title.h,a.textComponents.subtitle.exists&&(d+=a.options.header.titleSubtitlePadding)),a.textComponents.subtitle.exists&&(d+=a.textComponents.subtitle.h),a.textComponents.headerHeight=d}h.computePieRadius(a),h.calculatePieCenter(a),k.positionTitle(a),k.positionSubtitle(a),a.options.misc.gradient.enabled&&j.addGradients(a),j.create(a),i.add(a,"inner",a.options.labels.inner.format),i.add(a,"outer",a.options.labels.outer.format),i.positionLabelElements(a,"inner",a.options.labels.inner.format),i.positionLabelElements(a,"outer",a.options.labels.outer.format),i.computeOuterLabelCoords(a),i.positionLabelGroups(a,"outer"),i.computeLabelLinePositions(a),a.options.labels.lines.enabled&&"none"!==a.options.labels.outer.format&&i.addLabelLines(a),i.positionLabelGroups(a,"inner"),i.fadeInLabelsAndLines(a),a.options.tooltips.enabled&&l.addTooltips(a),j.addSegmentEventHandlers(a)})};return m});/**
 * Travian Ajax Function umkapseln, damit es auf die ajax.php geht
 */
Travian.ajax = Travian.ajax.wrap(function(proceed, options)
{
	if (!options.url)
	{
		options.url = 'ajax.php';
	}

	return proceed(options);
});

/**
 * Travian Game Object
 */
Travian.Game =
{
	/**
	 * der Name der aktuellen seite bzw. des aktuellen PHP Skriptes ohne
	 * Dateiendung
	 *
	 * @var string
	 */
	currentPage: window.location.href.split('/').pop().split('.php', 2).shift(),

	/**
	 * HTML Schnipssel fÃ¼r JS Countdown anzeige wenn Event Jam ist
	 *
	 * @var string
	 */
	eventJamHtml: null,

	/**
	 * Travian Game Speed
	 *
	 * @var int
	 */
	speed: 1,

	/**
	 * Travian Version
	 *
	 * @var float
	 */
	version: 4.0,

	/**
	 * World ID
	 *
	 * @var string
	 */
	worldId: null,

	/**
	 * Ajax Requests with Update
	 *
	 * @deprecated
	 * @return Request
	 */
	ajaxUpdate: function(element, options)
	{
		element = $(element);
		options = options || {};

		// CallBack functions merken
		var fn =
		{
			onRequest: options.onRequest || Travian.emptyFunction,
			onComplete: options.onComplete || Travian.emptyFunction,
			onCancel: options.onCancel || Travian.emptyFunction,
			onSuccess: options.onSuccess || Travian.emptyFunction,
			onFailure: options.onFailure || Travian.emptyFunction,
			onException: options.onException || Travian.emptyFunction
		};

		if (!options.url)
		{
			options.url = 'admin.php';
		}

		// cmd mit an admin.php als GET mitschicken
		if (options.parameters && options.parameters.cmd)
		{
			options.url = options.url + (options.url.indexOf('?') == -1 ? '?' : '&') + 'cmd=' + options.parameters.cmd;
		}

		// options anpassen und request abschicken
		return new Request(Object.merge({}, options,
		{
			method: 'get',
			encoding: 'utf-8',
			evalResponse: false,
			evalScripts: false,
			onRequest: function()
			{
				fn.onRequest(this);
			},
			onComplete: function()
			{
				fn.onComplete(this.response.text);
			},
			onCancel: function()
			{
				fn.onCancel(this);
			},
			onSuccess: function()
			{
				element.set('html', this.response.text);
				fn.onSuccess(this.response.text);
			},
			onFailure: function()
			{
				fn.onFailure(this.response.text);
			},
			onException: function()
			{
				fn.onException(this);
			}
		})).send();
	},

	/**
	 * geht zu einer Seite im Paginator
	 *
	 * @param int page
	 * @param string ajaxCommand
	 * @param string htmlElementId
	 * @param int entriesPerPage
	 * @return Travian
	 */
	gotoPage: function(page, ajaxCommand, htmlElementId, entriesPerPage)
	{
		Travian.ajax(
		{
			data:
			{
				cmd: ajaxCommand,
				data:
				{
					page: page,
					entries: entriesPerPage
				}
			},
			onSuccess: function(data)
			{
				$(htmlElementId).set('html', data.result);
			}
		});

		return this;
	},

	/**
	 * zeigt ein IFrame Popup als JS Dialog an
	 * used for short instruction popup
	 *
	 * @param int i
	 * @param int typ
	 * @returns boolean
	 */
	iPopup: function(i, typ)
	{
		('<iframe class="popup" frameborder="0" id="Frame" src="manual.php?typ=' + typ + '&amp;gid=' + i + '" width="475" height="525" scrolling="no" border="0" allowTransparency="true"></iframe>').dialog(
		{
			title: '{allgemein.anleitung}'.translate(),
			buttonOk: false,
			enableBackground: false,
			draggable: true,
			fx:
			{
				options:
				{
					duration: 0
				}
			}
		});

		return false;
	},

    /**
     * Shows a url in an  Iframe
     * @param string url
     * @returns boolean
     */
    iPopupUrl: function(url,heading)
    {
        ('<iframe class="popup" frameborder="0" id="Frame" src="' + url + '" width="475" height="500" scrolling="yes" border="0" allowTransparency="true"></iframe>').dialog(
            {
                title: heading,
                buttonOk: false,
                enableBackground: false,
                draggable: true,
                fx:
                {
                    options:
                    {
                        duration: 0
                    }
                }
            });

        return false;
    },

	/**
	 * zeigt eine Einheit in groÃŸ an
	 *
	 * @param int uid
	 * @returns boolean
	 */
	unitZoom: function(uid)
	{
		('<div class="zoomTop"></div><div class="zoomMiddle"><img src="img/x.gif" class="unitBig u' + uid + 'Big" /></div><div class="zoomBottom"></div>').dialog(
		{
			buttonOk: false
		});

		return false;
	},

	/**
	 * Zeigt den Editieren Dialog an fÃ¼r den Dorfnamen auf den Dorfnamenschild
	 *
	 * @param string title
	 * @param string nameBoxText
	 * @param string buttonText
	 * @param int did
	 */
	showEditVillageDialog: function(title, nameBoxText, buttonText, did)
	{
		var html = nameBoxText + ' <input type="text" id="villageNameInput" name="villageName" value="" maxlength="20" class="text" />';

		html.dialog(
			{
			title: title,
			relativeTo: $('villageName'),
			buttonTextOk: buttonText,
			onOkay: function(dialog, contentElement)
			{
				Travian.ajax(
				{
					data:
					{
						cmd: 'changeVillageName',
						name: $('villageNameInput').value,
						did: did
					},
					onSuccess: function(data)
					{
						$('villageNameField').innerHTML = data.name;
					}
				});
			},

			onOpen: function(dialog, contentElement)
			{
				contentElement.down('#villageNameInput').value = $('villageNameField').get('text');
			}
		});

		return this;
	}
};

window.addEvent('domready', function()
{
	Travian.TimersAndCounters.init();

	$$('*.dynamic_img').addEvents(
	{
		'mouseenter': function()
		{
			this.addClass('over');
		},
		'mouseleave': function()
		{
			this.removeClass('over');
			this.removeClass('clicked');
		},
		'mousedown': function()
		{
			this.removeClass('over');
			this.addClass('clicked');
		}
	});
});
Travian.Game.Preferences =
{
	/**
	 * stores all available user preferences
	 * has initial default values for preferences that are possible even when there is no player logged in
	 */
	preferences: {
        WMBlueprints: '[]'
	},

	/**
	 * initializes the preferences
	 * @param options string a json string containing all keys and values available for the current user
	 */
	initialize: function(options) {
		var $this = this;

		// write the key => value pairs in the preferences storage
		for(var key in options) {
			if(options.hasOwnProperty(key)) {
				switch (options[key]) {
					case 'true':
						$this.preferences[key] = true;
						break;
					case 'false':
						$this.preferences[key] = false;
						break;
					case 'null':
						$this.preferences[key] = null;
						break;
					default:
						$this.preferences[key] = options[key];
				}
			}
		}
	},

	/**
	 * returns the given preference key or null if it is not set
	 *
	 * @param key string
	 * @returns string|null
     */
	get: function(key) {
		if(this.preferences[key] !== undefined) {
			return this.preferences[key];
		}

		return null;
	},

	/**
	 * sets a preference value
	 *
	 * @param key string
	 * @param value string
	 * @param sync boolean if request should be synchronous or not (WARNING: do not set it to true if not absolutely needed! The browser will freeze until the response is ready)
     */
	set: function(key, value, sync) {
		if(this.preferences[key] != value) {

			this.preferences[key] = value;

			Travian.ajax(
			{
				data: {
					cmd: 'preferences',
					key: key,
					value: value
				},
				async: !(sync || false)
			});
		}
	}
};
Travian.Game.Layout =
{

	/**
	 * Object with arrays for the possible states
	 * the first entry in the array is always the default state
	*
	* @var object
	*/
	states:
	{
		'travian_toggle': [
			'expanded', 'collapsed'
		]
	},

	/**
	 * indicator for the UI gold amount update via AJAX
	 * true: ajax call has not finished
	 * false: ajax call not yet executed or already finished
	 *
	 * @var boolean
	 */
	goldIsUpdating: false,

	/**
	* toggles the state of a sidebar box
	*
	* @param box the element that should be toggled
	* @param preferenceName name of the preference setting that should save the data
	* @param key key inside the preference data that saves the state of this box
	*/
	toggleBox: function(box, preferenceName, key)
	{
		var preferenceKey = preferenceName+'_'+key;

		// get the current state
		var currentState = Travian.Game.Preferences.get(preferenceKey);

		// if there is no current state yet, save the default one
		if(currentState === null) {
			currentState = this.states[preferenceName][0];
		}

		var newState = '';

		// change CSS classes
		Array.each(this.states[preferenceName], function(state)
		{
			box.removeClass(state);

			// add the state that is not currently active
			if (state != currentState)
			{
				newState = state;
				box.addClass(newState);

				box.down('button.toggle').setTitle('{' + key + '_' + newState + '}'.translate());
			}
		});

		// save the new state
		Travian.Game.Preferences.set(preferenceKey, newState, false);
	},

	/**
	* Ãœber AJAX wird die ajax_getLayoutButtonTitle.php aufgerufen und der Title
	* dann entsprechend der RÃ¼ckgabe geÃ¤ndert
	*
	* @param element button Button fÃ¼r den der Titel nachgeladen wird
	* @param string boxId ID der SidebarBox (siehe TGSidebarBoxFactory)
	* @param string buttonId ID des Button (siehe TGHelper_LayoutButton)
	*/
	loadLayoutButtonTitle: function(button, boxId, buttonId)
	{
		Travian.ajax(
		{
			data:
			{
				cmd: 'getLayoutButtonTitle',
				boxId: boxId,
				buttonId: buttonId
			},
			onSuccess: function(data)
			{
				var content =
				{
					title: data.newTitle,
					text: data.newText,
					unescaped: false
				};
				button.setTip(content);
				Travian.Tip.show(content);
			}
		});
	},

	setInfoboxItemsRead: function()
	{
		var sidebarBox = $('sidebarBoxInfobox');
		if (sidebarBox && sidebarBox.hasClass('toggleable'))
		{
			var allUnreadedItems = $$('#sidebarBoxInfobox li.unreaded').get('id');
			if (allUnreadedItems.length > 0)
			{
				if (sidebarBox.hasClass('collapsed') && allUnreadedItems.length > 0)
				{
					Travian.ajax(
					{
						data:
						{
							cmd: 'infoboxSetReaded',
							infoIds: allUnreadedItems
						},
						onSuccess: function(data)
						{
							$$('#sidebarBoxInfobox li.unreaded').removeClass('unreaded');

							if(typeof data.messageCounterContent != 'undefined') {
								$$('#sidebarBoxInfobox span.messageShortInfo').set('html',data.messageCounterContent);
							}
						}
					});
				}
			}
		}
	},
	setupInfoboxItemsDeletionWithMessage: function (message, buttonText) {
		$$('.infoboxDeleteButton').each(function(item){
			item.addEvent('click', function(e){
				var infoId = this.get('data-id');
				var dialog = new Travian.Dialog({
					buttonTextOk: buttonText,
					onOkay: function() {
						Travian.ajax({
							data: {
								cmd: 'infoboxDelete',
								id : infoId
							},
						});
					}
				});
				dialog.setContent(message);
				dialog.show();
				return false;
			});
		});
	},
	goldButtonAnimation: function(doAnimation)
	{
		if (doAnimation === undefined) {
			var doAnimation = true;
		}
		var waitTime = 30000;
		var delayTime = 60;
		var count = 0;
		var timeoutID = '';
		var button = $$('#navigation .gold a');
		var changeClass = function()
		{
			if (doAnimation) {
				var timer = delayTime;
				button.removeClass('ani_' + count);
				if (count < 12)
				{
					count++;
					button.addClass('ani_' + count);
				}
				else
				{
					count = 0;
					timer = waitTime;
				}
			}
			timeoutID = window.setTimeout(changeClass, timer);
		};
		var start = function()
		{
			timeoutID = window.setTimeout(changeClass, waitTime);

			$$('#navigation .gold a').addEvent('mouseover', function()
			{
				clearTimeout(timeoutID);
				this.removeClass('ani_' + count);
				count = 0;
			});

			$$('#navigation .gold a').addEvent('mouseout', function()
			{
				timeoutID = window.setTimeout(changeClass, waitTime);
			});
		};

		start();
	},

	/**
	 * updates the gold amount in the UI if there are any changes
	 */
	updateGold: function(callback)
	{
		Travian.Game.Layout.goldIsUpdating = true;

		// get current gold amount displayed in the UI
		var goldAmountBefore = parseInt($$('.ajaxReplaceableGoldAmount')[0].get('html'));

		Travian.ajax(
		{
			data:
			{
				cmd: 'getGoldAmount'
			},
			onSuccess: function(data)
			{
				var goldAmountAfter = data.goldAmount;

				if(goldAmountAfter != goldAmountBefore) {
					// the gold amount changed, so we need to update the UI
					$$('.ajaxReplaceableGoldAmount').set('html', goldAmountAfter);

					// call the callback method if available
					if(typeof callback == 'function') {
						callback();
					} else if(typeof callback == 'string' && typeof callback.split('.').reduce(function(a, b) { return a[b] }, window) == 'function') {
						callback.split('.').reduce(function(a, b) { return a[b] }, window);
					}
				}

				Travian.Game.Layout.goldIsUpdating = false;
			}
		});
	},

    updateResources: function (newValues) {
        if (newValues == undefined) {
            Travian.ajax(
                {
                    data: {
                        cmd: 'getResources'
                    },
                    onSuccess: function (data) {
                        Travian.Game.Layout.updateResources(data);
                    }
                });
        } else {
            // update JS object, the timer will update the HTML with next tick
            for (var i = 1; i <= 4; i++) {
                resources.storage['l' + i] = parseInt(newValues['l' + i]);
            }
            // Re-Init everything since we have new timers on the page and resources changed
            Travian.TimersAndCounters.init();
        }
    },

	/**
	 * creates or removes the background overlay
     */
	toggleBackgroundOverlay: function() {
    	var overlay = $('backgroundOverlay');

    	if(overlay) {
			overlay.removeClass('visible');
			setTimeout(function() {
				overlay.destroy();
				overlay.dispose();
			}, 500)
		} else {
			overlay = new Element('div', {id: 'backgroundOverlay'});
			overlay.inject(document.getElement('body'), 'top');
			overlay.addClass('visible');
		}
	}
};
Travian.Game.InputCoordinates = (function()
{
	// TODO mootools: adopt, grap, etc

	// umkapseln der Inject Funktion, damit wir alle Inputs finden
	Element.inject = Element.inject.wrap(function(proceed, elementInsert, element, where)
	{
		fnFindAndAddInputElements(Travian.Game.InputCoordinates, elementInsert);
		return proceed(elementInsert, element, where);
	});

	// umkapseln der Inject Funktion, damit wir alle Inputs finden
	Element.prototype.inject = Element.prototype.inject.wrap(function(proceed, element, where)
	{
		fnFindAndAddInputElements(Travian.Game.InputCoordinates, this);
		return proceed(element, where);
	});

	// umkapseln der Insert Funktion, damit wir alle Inputs finden
	Element.insert = Element.insert.wrap(function(proceed, elementInsert, insertions)
	{
		return fnFindAndAddInputElements(Travian.Game.InputCoordinates, proceed(elementInsert, insertions));
	});
	// umkapseln der Insert Funktion, damit wir alle Inputs finden
	Element.prototype.insert = Element.prototype.insert.wrap(function(proceed, insertions)
	{
		return fnFindAndAddInputElements(Travian.Game.InputCoordinates, proceed(insertions));
	});

	/**
	 * findet entsprechende Input Coord Elemente und fÃ¼gt diese hinzu
	 *
	 * @param Travian.Game.InputCoordinates inputCoordinates
	 * @param element element
	 * @return element
	 */
	var fnFindAndAddInputElements = function(inputCoordinates, element)
	{
		var xyPair = {
			x:	null,
			y:	null
		};
		$(element).getElements(inputCoordinates.options.selector).each(function(element)
		{
			if (element.hasClass(inputCoordinates.options.classNames.x))
			{
				xyPair.x = element;
			}
			if (element.hasClass(inputCoordinates.options.classNames.y))
			{
				xyPair.y = element;
			}

			if (xyPair.x != null && xyPair.y != null)
			{
				inputCoordinates.add(xyPair);

				xyPair.x = null;
				xyPair.y = null;
			}
		});

		return element;
	};

	/**
	 * test auf Ober/Untergrenze
	 *
	 * @param Travian.Game.InputCoordinates inputCoordinates
	 * @param element element
	 * @param int
	 */
	var fnTestRange = function(inputCoordinates, element)
	{
		// grenzwerte prÃ¼fen und ggf korrigieren
		var value = parseInt(element.value);
		if (value < inputCoordinates.options.range.min)
		{
			element.value = inputCoordinates.options.range.min;
			value = inputCoordinates.options.range.min;
		}
		else if (value > inputCoordinates.options.range.max)
		{
			element.value = inputCoordinates.options.range.max;
			value = inputCoordinates.options.range.max;
		}

		return value;
	};

	/**
	 * wenn etwas via Copy & Paste eingefÃ¼gt wurde, dieses Parsen und entsprechend Ã¼bertragen
	 *
	 * @param Travian.Game.InputCoordinates inputCoordinates
	 * @param object elements {x, y}
	 * @param element element
	 * @param bool
	 */
	var fnParsePaste = function(inputCoordinates, elements, element)
	{
		var elementValue = element.value;

		var splitChar = inputCoordinates.options.splitChars.find(function(character)
		{
			return elementValue.indexOf(character) != -1;
		});

		// kein Trennzeichen gefunden dann zurÃ¼ck
		if (!splitChar)
		{
			return false;
		}

		// am trennzeichen trennen und in Zahl umwandeln
		var valuesSplitted = elementValue.split(splitChar);

		// nur wenn der split wirklich sinnvoll ist
		if (valuesSplitted.length <= 1)
		{
			return false;
		}

		// werte parsen
		var values =
		[
			valuesSplitted.shift(),
			valuesSplitted.join('')
		].map(function(splitValue)
		{
			splitValue = fnParseValueToNumber(inputCoordinates, splitValue);
			if (splitValue < inputCoordinates.options.range.min)
			{
				splitValue = inputCoordinates.options.range.min;
			}
			else if (splitValue > inputCoordinates.options.range.max)
			{
				splitValue = inputCoordinates.options.range.max;
			}

			return parseInt(splitValue);
		});

		// es sind keine sinnvolle werten
		if (typeof values[0] != 'number' || typeof values[1] != 'number' || values[0].isNaN() || values[1].isNaN())
		{
			return false;
		}

		elements.x.value = values[0];
		elements.y.value = values[1];

		return true;
	};

	/**
	 * wenn etwas von einem String in eine Zahl konvertiert werden soll
	 *
	 * @param Travian.Game.InputCoordinates inputCoordinates
	 * @param string value
	 * @param int
	 */
	var fnParseValueToNumber = function(inputCoordinates, value)
	{
		return value.split('').filter(function(character, index)
		{
			return (character == '-' || !parseInt(character).isNaN());
		}).filter(function(character, index)
		{
			// sonderfall '-' darf nur am anfang stehen
			return !(index >= 1 && character == '-');
		}).join('');
	};

	/**
	 * beim "hoch drÃ¼cken" der Taste in einem Koordinaten Feld
	 *
	 * @param event e
	 * @param Travian.Game.InputCoordinates inputCoordinate
	 * @param object elements
	 * @param element inputElement
	 */
	var fnOnChange = function(e, inputCoordinates, elements, inputElement)
	{
		if (fnParsePaste(inputCoordinates, elements, inputElement))
		{
			e.stop();
			return;
		}

		inputElement.value = fnParseValueToNumber(inputCoordinates, inputElement.value);
	};

	/**
	 * beim runtern drÃ¼cken der Taste in einem Koordinaten Feld
	 *
	 * @param event e
	 * @param Travian.Game.InputCoordinates inputCoordinates
	 * @param element inputElement
	 * @param function onSplitChar
	 */
	var fnOnKeyDown = function(e, inputCoordinates, inputElement, onSplitChar)
	{
		// diese Zeichen werden ohne probleme durchgelassen
		if (inputCoordinates.options.passThroughChars[e.code])
		{
			return;
		}

		// Steuerungsfunktionen durchlassen
		if (e.control)
		{
			return;
		}

		// sonderfall '-' darf nur am anfang stehen
		if (inputCoordinates.options.validChars[e.code] == '-' && inputElement.value.indexOf('-') != -1 && inputElement.getSelectionStart() != 0)
		{
			e.stop();
			return;
		}

		// es wurde ein Trennzeichen im Feld eingegeben, dann tu was
		if (inputCoordinates.options.splitChars[e.code])
		{
			// beim Trennzeichen wenn eine zahl eingegeben wurde
			if (inputElement.value.length != 0 && parseInt(inputElement.value).isNaN() == false)
			{
				if (Browser.name == 'opera')
				{
					inputElement.value = fnParseValueToNumber(inputCoordinates, inputElement.value);
				}

				(onSplitChar || Travian.emptyFunction)();
			}

			e.stop();
			return;
		}
		// prÃ¼fen ob das eingegebene gÃ¼ltige zeichen sind. Wenn nicht dann eingabe abbrechen
		else if (!inputCoordinates.options.validChars[e.code])
		{
			e.stop();
			return;
		}
	};

	/**
	 * beim "hoch drÃ¼cken" der Taste in einem Koordinaten Feld
	 *
	 * @param event e
	 * @param Travian.Game.InputCoordinates inputCoordinate
	 * @param object elements
	 * @param element inputElement
	 * @param function onPaste
	 * @param function onCharLimit
	 */
	var fnOnKeyUp = function(e, inputCoordinates, elements, inputElement, onPaste, onCharLimit)
	{
		// diese Zeichen werden ohne probleme durchgelassen
		if (inputCoordinates.options.passThroughChars[e.code])
		{
			return;
		}

		if (fnParsePaste(inputCoordinates, elements, inputElement))
		{
			if (Browser.name == 'opera')
			{
				inputElement.value = fnParseValueToNumber(inputCoordinates, inputElement.value);
			}

			(onPaste || Travian.emptyFunction)();

			e.stop();
			return;
		}

		// Steuerungsfunktionen durchlassen
		if (e.control)
		{
			return;
		}

		e.stop();

		// sonderfall '-' darf nur am anfang stehen
		var result = (inputElement.value.length >= 1 && inputCoordinates.options.validChars[e.code] == '-');
		// es wurde ein Trennzeichen im X Feld eingegeben
		result = result || (inputCoordinates.options.splitChars[e.code]);
		// prÃ¼fen ob das eingegebene gÃ¼ltige zeichen sind. Wenn nicht dann eingabe abbrechen
		result = result || (!inputCoordinates.options.validChars[e.code]);
		if (result)
		{
			return;
		}

		// grenzen testen und wenn maximum erreicht ist, entsprechend
		// ins nÃ¤chste Feld springen
		var value = fnTestRange(inputCoordinates, inputElement);

		// keine Zahl nichts zu tun
		if (value.isNaN())
		{
			return;
		}

		// wurde die untergrenze in zeichenlÃ¤nge erreicht jump to y
		result = value.sgn() == -1 && inputCoordinates.options.range.min.toString().length == value.toString().length;
		// wurde die obergrenze in zeichenlÃ¤nge erreicht jump to y
		result = result || (value.sgn() >= 0 && inputCoordinates.options.range.max.toString().length == value.toString().length);
		if (result)
		{
			if (Browser.name == 'opera')
			{
				inputElement.value = fnParseValueToNumber(inputCoordinates, inputElement.value);
			}

			(onCharLimit || Travian.emptyFunction)();

			return;
		}
	};

	// Class definition
	return new (new Class(
	{
		Implements:
		[
			Options
		],

		// alle gefundenen elemente
		elements: [],

		/**
		 * options
		 *
		 * @var object
		 */
		options: {
			// CSS Selector um die elemente zu finden
			selector:	'input[class~=coordinates]',
			// CSS Class Names um die elemente X und Y auseinander zu halten
			classNames:
			{
				// fÃ¼r X
				x:		'x',
				// fÃ¼r y
				y:		'y'
			},

			// definiert die ober und untergrenzen der werte
			range:
			{
				min:	Travian.Defaults.Map.Size.left,
				max:	Travian.Defaults.Map.Size.right
			},

			// an diesen Zeichen wird getrennt und beim nÃ¤chsten eingefÃ¼gt oder zum nÃ¤chsten gesprungen
			splitChars:	$H(
			{
				226:	'|',
				188:	',', // Komma
				78:		',', // Komma Numblock Presto
				110:	',', // Komma Numblock
				190:	'.', // Punkt
				32:		' ' // Leerzeichen
			}),

			// Alle zeichen die vor einer Zahl stehen dÃ¼rfen
			prefixChars: $H(
			{
				107:	'+', // Plus
				43:		'+', // Plus Mac

				109:	'-', // Minus
				189:	'-', // Minus Mac
				173:	'-' // Bindestrich "Minus" fÃ¼r Firefox
			}),

			//alle erlaubten zeichen
			validChars:	$H(
			{
				109:	'-', // Minus
				189:	'-', // Minus Mac
				173:	'-', // Bindestrich "Minus" fÃ¼r Firefox
				96:		'0', // Zahl 0 Numblock
				97:		'1', // Zahl 1 Numblock
				98:		'2', // Zahl 2 Numblock
				99:		'3', // Zahl 3 Numblock
				100:	'4', // Zahl 4 Numblock
				101:	'5', // Zahl 5 Numblock
				102:	'6', // Zahl 6 Numblock
				103:	'7', // Zahl 7 Numblock
				104:	'8', // Zahl 8 Numblock
				105:	'9', // Zahl 9 Numblock
				48:		'0', // Zahl 0
				49:		'1', // Zahl 1
				50:		'2', // Zahl 2
				51:		'3', // Zahl 3
				52:		'4', // Zahl 4
				53:		'5', // Zahl 5
				54:		'6', // Zahl 6
				55:		'7', // Zahl 7
				56:		'8', // Zahl 8
				57:		'9' // Zahl 9
			}),

			// alle zeichen die immer durchgelassen werden
			passThroughChars: $H(
			{
				8:		String.fromCharCode(8), // Backspace
				9:		String.fromCharCode(9), // Tab
				13:		String.fromCharCode(13), // Enter
				36:		String.fromCharCode(36), // Pos 1
				35:		String.fromCharCode(35), // End
				37:		String.fromCharCode(37), // Pfeiltaste links
				39:		String.fromCharCode(39), // Pfeiltaste Rechts
				46:		String.fromCharCode(46) // Del
			})
		},

		/**
		 * fÃ¼gt neue Elemente hinzu
		 *
		 * @param object elements {x, y}
		 * @return Travian.Game.InputCoordinates
		 */
		add: function(elements)
		{
			var $this = this;
			elements = Object.clone(elements);

			// keine Daten
			if (!elements.x || !elements.y)
			{
				return this;
			}
			// schon abgefangen
			if (elements.x._inputCoordinates && elements.y._inputCoordinates)
			{
				return this;
			}

			// markieren das input schon abgefangen wird
			elements.x._inputCoordinates = true;
			elements.y._inputCoordinates = true;

			// maxlength entfernen
			elements.x.removeAttribute('maxlength');
			elements.y.removeAttribute('maxlength');

			var elementEvent = null;

			// events setzen an X
			elements.x.addEvents(
			{
				change: function(e)
				{
					fnOnChange(e, $this, elements, elements.x);
				},

				keydown: function(e)
				{
					fnOnKeyDown(e, $this, elements.x, function()
					{
						elements.y.focus();
					});

					return;
				},

				keyup: function(e)
				{
					fnOnKeyUp(e, $this, elements, elements.x, function()
					{
						elements.y.focus();
					},
					function()
					{
						elements.y.focus();
					});
				}
			});

			// events setzen an Y
			elements.y.addEvents(
			{
				change: function(e)
				{
					fnOnChange(e, $this, elements, elements.y);
				},

				keydown: function(e)
				{
					fnOnKeyDown(e, $this, elements.y);
				},

				keyup: function(e)
				{
					fnOnKeyUp(e, $this, elements, elements.y);
				}
			});

			return this;
		},

		/**
		 * Constructor
		 *
		 * @param object options
		 */
		initialize: function(options)
		{
			var $this = this;

			this.setOptions(options);

			$(document).addEvent('domready', (function()
			{
				fnFindAndAddInputElements($this, document.body);

			}));
		}
	}));
})();/*
 * Based on MooColorPicker
 */
Travian.Game.ColorPicker = new Class(
{

	Implements: [
		Options, Events
	],

	options:
	{
		colors: [],
		defaultColor: -1,
		className: 'moocolorcheckbox',
		selectedClassName: 'moocolorcheckbox_selected'
	},

	initialize: function(container, options)
	{
		var $this = this;
		this.setOptions(options);
		this.container = $(container);
		this.container.setStyle('overflow', 'hidden');
		this.container.addEvents(
		{
			'mouseenter': function()
			{
				$this.fireEvent('mouseenter');
			},
			'mouseleave': function()
			{
				$this.fireEvent('mouseleave');
			}
		});
		this.draw();
		if (this.options.defaultColor >= 0)
			this.selectColor(this.options.colors[this.options.defaultColor]);
		return this;
	},

	addColor: function(color)
	{
		if (!color)
			return this;
		this.options.colors.include(color);
		this.draw();
		return this.draw();
	},

	removeColor: function(color)
	{
		if (!color)
			return this;
		this.options.colors.erase(color);
		return this.draw();
	},

	selectColor: function(color)
	{
		if (!color)
			return this;
		var $this = this;
		this.container.getElements('div.moocolorcheckbox-container').each(function(item)
		{
			if (item.down('.entry').getStyle('background-color').toUpperCase() == color.toUpperCase())
			{
				$this.fireEvent('change', [
					color, item
				]);
				item.addClass($this.options.selectedClassName);
			}
			else
			{
				item.removeClass($this.options.selectedClassName);
			}
		});
		return this;
	},

	getContainer: function()
	{
		return this.container;
	},

	draw: function()
	{
		var $this = this;
		this.container.empty();
		this.options.colors.each(function(color, index)
		{
			var div = new Element('div',
			{
				'class': $this.options.className + ' moocolorcheckbox-container'
			});
			var divChild = new Element('div',
			{
				'class': 'entry'
			});

			divChild.set('html', '&nbsp;').setStyles(
			{
				'background-color': color
			}).inject(div);

			div.setStyles(
			{
				'float': 'left',
				cursor: 'pointer'
			}).addEvents(
			{
				'click': function()
				{
					$this.selectColor(color);
				},
				'mouseenter': function()
				{
					$this.fireEvent('mouseenter', [
						div
					]);
				},
				'mouseleave': function()
				{
					$this.fireEvent('mouseleave', [
						div
					]);
				}
			}).inject($this.container);
		});
		return this;
	}

});/*
 * Based on MooColorPicker
 */

Travian.Game.ImagePicker = new Class(
{

	Implements: [
		Options, Events
	],

	options:
	{
		images: [],
		defaultImage: -1,
		className: 'mooimagecheckbox',
		selectedClassName: 'mooimagecheckbox_selected'
	},

	initialize: function(container, options)
	{
		var $this = this;
		this.setOptions(options);
		this.container = $(container);
		this.container.setStyle('overflow', 'hidden');
		this.container.addEvents(
		{
			'mouseenter': function()
			{
				$this.fireEvent('mouseenter');
			},
			'mouseleave': function()
			{
				$this.fireEvent('mouseleave');
			}
		});
		this.draw();
		if (this.options.defaultImage >= 0)
		{
			this.selectImage(this.options.images[this.options.defaultImage]);
		}
		return this;
	},

	addImage: function(image)
	{
		if (!image)
		{
			return this;
		}
		this.options.images.include(image);
		this.draw();
		return this.draw();
	},

	removeImage: function(image)
	{
		if (!image)
		{
			return this;
		}
		this.options.images.erase(image);
		return this.draw();
	},

	selectImage: function(image)
	{
		if (!image)
		{
			return this;
		}
		var $this = this;
		this.container.getElements('div').each(function(item)
		{
			var src = item.down('img')._src;
			if (src.toUpperCase() == image.toUpperCase())
			{
				$this.fireEvent('change', [
					image, item
				]);
				item.addClass($this.options.selectedClassName);
			}
			else
			{
				item.removeClass($this.options.selectedClassName);
			}
		});
		return this;
	},

	getContainer: function()
	{
		return this.container;
	},

	draw: function()
	{
		var $this = this;
		this.container.empty();
		this.options.images.each(function(image, index)
		{
			var div = new Element('div',
			{
				'class': $this.options.className
			});
			div.set('html', '<img src="' + image + '" alt="" />').down('img')._src = image;
			div.setStyles(
			{
				'float': 'left',
				cursor: 'pointer'
			}).addEvents(
			{
				'click': function()
				{
					$this.selectImage(image);
				},
				'mouseenter': function()
				{
					$this.fireEvent('mouseenter', [
						div
					]);
				},
				'mouseleave': function()
				{
					$this.fireEvent('mouseleave', [
						div
					]);
				}
			}).inject($this.container);
		});
		return this;
	}

});
Travian.Game.Menu = new Class(
{
	/**
	 * Constructor
	 *
	 * FÃ¼gt den Elmenten deren Effekte hinzu
	 *
	 * @param element element
	 */
	initialize: function(element)
	{
		var menu = $(element);
		var $this = this;

		menu.getElements('a').each(function(e)
		{
			var element = e.getParent('.normal');

			if (!element)
			{
				return;
			}

			// plus features
			if (element.hasClass('gold'))
			{

				element.addEvents(
				{
					mouseenter: function(e)
					{
						element.toggleClass('hover');
					},

					mouseleave: function(e)
					{
						element.toggleClass('hover');
					}
				});
				// keine normalen hovers an der stelle verwenden
				return;
			}

			// normale tabs
			element.addEvents(
			{
				mouseenter: function(e)
				{
					var target = $this.getMorphContainer(e);

					if (typeOf(target._fxMenu) != 'null' && target._fxMenu.cancel)
					{
						target._fxMenu.cancel();
					}

					target._fxMenu = (new Fx.Morph(target,
					{
						duration: 200,
						transition: Fx.Transitions.Sine.easeOut,
						unit: true
					})).start({
						'height': 39,
						'margin-top': 0
					});
				},

				mouseleave: function(e)
				{
					var target = $this.getMorphContainer(e);

					if (typeOf(target._fxMenu) != 'null' && target._fxMenu.cancel)
					{
						target._fxMenu.cancel();
					}

					target._fxMenu = (new Fx.Morph(target,
					{
						duration: 200,
						transition: Fx.Transitions.Sine.easeOut,
						unit: true
					})).start({
						'height': 30,
						'margin-top': 7
					});
				}
			});
		});
	},

	getMorphContainer: function(e)
	{
		var target = $(e.target);

		if (target.getParent('.container'))
		{
			var target = target.getParent('.container');
		}

		return target;
	}
});Travian.Game.SwitchDown = new Class(
{
	/**
	 * Constructor
	 *
	 * FÃ¼gt den Elmenten deren Effekte hinzu
	 *
	 * @param element element
	 */
	initialize: function(element)
	{
		var switchDownElement = element;

		switchDownElement.getChildren().each(
			function(element)
			{
				element.addEvent('click',
					function(event)
					{
						switchDownElement.getChildren().toggleClass('hide');

						event.stop();
						return false;
					});
			});
	}
});
Travian.Game.AddLine = new Class(
{
	Implements: [Options, Events],

	/**
	 * alle Options
	 *
	 * @var object
	 */
	options:
	{
		/**
		 * hinter dem letzten eingefÃ¼gten element einfÃ¼gen
		 *
		 * @var bool
		 */
		insertAfterLastEntry: true,

		/**
		 * alle relevanten Elemente
		 */
		elements:
		{
			/**
			 * Link Elements um neue EintrÃ¤ge hinzuzufÃ¼gen, wenn nicht angegeben wird selector.add verwendet
			 *
			 * @var element
			 */
			add: null,

			/**
			 * hinter diesem Element einfÃ¼gen
			 *
			 * @var element
			 */
			insert: null,

			/**
			 * Table Element, in welchem das Template, Link und sonstiges enthalten ist und in welchem
			 * die neue Zeile hinzugefÃ¼gt wird
			 *
			 * @var element
			 */
			table: null,

			/**
			 * Element mit den Template bzw welches das HTML definiert, wenn nicht angegeben wird selector.template verwendet
			 *
			 * @var element
			 */
			template: null
		},

		/**
		 * Anzahl der bereits aktuell hinzugefÃ¼gter element
		 *
		 * @var int
		 */
		entryCount: 0,

		/**
		 * Anzahl maximaler Element die hinzugefÃ¼gt werden kÃ¶nnen
		 *
		 * @var int
		 */
		maxEntries: false,

		/**
		 * alle eventuellen selectoren
		 *
		 * @var object
		 */
		selectors: {
			/**
			 * CSS Selector zum finden des Add Elements um neue EintrÃ¤ge hinzuzufÃ¼gen
			 *
			 * @var string
			 */
			add: '.addLine.addElement',

			/**
			 * CSS Selector zum finden des Insert Elements um neue EintrÃ¤ge hinzuzufÃ¼gen
			 *
			 * @var string
			 */
			insert: '.addLine.insertElement',

			/**
			 * CSS Selector zum finden des Element mit den Template bzw welches das HTML definiert
			 *
			 * @var string
			 */
			template: '.addLine.templateElement'
		}

		/*,
			onAddBefore: function ($this)
			onAddAfter: function ($this, newInsertElement)
			onCloneBefore: function  ($this)
			onCloneAfter: function  ($this, newInsertElement)
			onInsertBefore: function  ($this, newInsertElement)
			onInsertAfter: function  ($this, newInsertElement)
			onInsertInputBefore: function ($this, newInsertElement, newInputElement)
			onInsertInputAfter: function ($this, newInsertElement, newInputElement)
		*/
	},

	/**
	 * anzahl aller EintrÃ¤ge
	 *
	 * @return int
	 */
	getEntryCount: function()
	{
		return this.options.entryCount;
	},

	/**
	 * Konstruktor
	 *
	 * @param object options
	 */
	initialize: function(options)
	{
		var $this = this;

		this.setOptions(options);

		if (!this.options.elements.table)
		{
			throw 'Table element for Travian.Game.AddLine is not definied';
		}
		this.options.elements.table = $(this.options.elements.table);

		// bestimmte elemente finden und prÃ¼fen
		$w('template add insert').each(function(key)
		{
			// element template finden
			if (!$this.options.elements[key])
			{
				$this.options.elements[key] = $this.options.elements.table.down($this.options.selectors[key]);
			}

			// element template prÃ¼fen
			if (!$this.options.elements[key])
			{
				throw 'Element "' + key + '" for Travian.Game.AddLine is not definied';
			}
		});

		// add Element markieren damit wir es spÃ¤ter wiederfinden im geclonten Template
		this.options.elements.add.addClass('addLine removeElement');

		// Template Element in den Speicher reinclonen und dieses weiterverwenden
		// nicht das die Template Zeile verwendet wird und inkonsistente informationen entstehen
		this.options.elements.template = $(this.options.elements.template).cloneNode(true);

		// Markierung an dem aktuellen Add Element wieder entfernen
		this.options.elements.add.removeClass('addLine removeElement');

		// Event Binding an das Add Element
		this.options.elements.add.addEvent('click', function(e)
		{
			var elementInsert = null;
			var inputs = null;
			var elementAdd = null;

			// zeile Clonen, inputs aufbereiten, neue zeile einfÃ¼gen und neue addElement entfernten altes dort einsetzen
			e.stop();

			// AddBefore
			$this.fireEvent('addBefore', [$this]);

			// clone Before
			$this.fireEvent('cloneBefore', [$this]);
			// clone
			elementInsert = $this.options.elements.template.cloneNode(true);
			// clone After
			$this.fireEvent('cloneAfter', [$this, elementInsert]);

			// alle inputs finden damit diese spÃ¤ter aufbereitet werden kÃ¶nnen
			inputs = elementInsert.select('label', 'input', 'textarea', 'button', 'select');

			// insert Before
			$this.fireEvent('insertBefore', [$this, elementInsert]);

			// alle inputs durchgehen und via CallBack mitteilen
			inputs.each(function(inputElement)
			{
				if (inputElement.tagName.toLowerCase() == 'input')
				{
					if (inputElement.type.toLowerCase() == 'checkbox' || inputElement.type.toLowerCase() == 'radio')
					{
						inputElement.tagName.checked = false;
					}
					else if (inputElement.type.toLowerCase() == 'text' || inputElement.type.toLowerCase() == 'password')
					{
						inputElement.tagName.value = '';
					}
				}
				else if (inputElement.tagName.toLowerCase() == 'select')
				{
					inputElement.tagName.selectedIndex = -1;
				}
				else if (inputElement.tagName.toLowerCase() == 'textarea')
				{
					inputElement.tagName.value = '';
				}

				$this.fireEvent('insertInputBefore', [$this, elementInsert, inputElement]);
			});

			// insert von der neuen Zeile
			$this.options.elements.insert.insert(
			{
				after: elementInsert.setStyles(
				{
					opacity: 0
				})
			});

			// aus der neuen Zeile ein Add Element entfernen und das aktuelle dahin setzen, sofern eines vorhanden ist
			elementAdd = elementInsert.down('.addLine.removeElement');
			if (elementAdd)
			{
				elementAdd.insert(
				{
					after: $this.options.elements.add
				});
				elementAdd.dispose();
			}

			// eingefÃ¼gt anzahl erhÃ¶hen
			$this.options.entryCount++;

			// maximale anzahl erreicht?
			if ($this.options.maxEntries !== false && $this.options.maxEntries == $this.options.entryCount)
			{
				$this.options.elements.add.dispose();
				Travian.Tip.hide();
			}

			// alle inputs durchgehen und via CallBack mitteilen nach dem EinfÃ¼gen
			inputs.each(function(inputElement)
			{
				$this.fireEvent('insertInputAfter', [$this, elementInsert, inputElement]);
			});

			// Add the fade in/out effects if no other effect is defined
			new Fx.Morph(elementInsert,
			{
				duration: 400
			}).start(
			{
				opacity: [0, 1]
			});

			// insert After
			$this.fireEvent('insertAfter', [$this, elementInsert]);

			// immer hinter dem letzten element einfÃ¼gen
			if ($this.options.insertAfterLastEntry === true)
			{
				$this.options.elements.insert = elementInsert;
			}

			// AddAfter
			$this.fireEvent('addAfter', [$this, elementInsert]);
		});
	}
});/**
 * instant tabs allow the user to switch between tabs without reloading
 * the page or loading additional ajax data
 * @type {Class}
 */
Travian.Game.InstantTabs = new Class(
{
    /**
     * initializes the listeners for instant tabs
     */
    initialize: function()
    {
        $$('.instantTabs .tabNavi .container').addEvent('click', function(e) {
            e.preventDefault();

            // check which position the selected tab has
            var node = this;
            var i = 0;
            $$('.instantTabs .tabNavi .container').each(function(element) {
                if(node != null) {
                    if(element === node) {
                       node = null;
                    } else {
                        i++;
                    }
                }
            });

            // i now stores the position of the tab (1, 2, 3, ...)
            // mark the element as active and display the according content box
            $$('.instantTabs .tabNavi .container').removeClass('active');
            this.addClass('active');

            $$('.instantTabs .tabContainer').addClass('hide');
            $$('.instantTabs .tabContainer')[i].removeClass('hide');

        });
    }
});/**
 * Travian Game AutoCompleter im allgemeinen und erweitert den Travian.AutoCompleter
 * mit allen vorausgefÃ¼llten werten
 */
Travian.Game.AutoCompleter = new Class(
{
	Extends: Travian.AutoCompleter,

	/**
	 * Constructor
	 *
	 * @param element|string element
	 * @param object parameters zusÃ¤tzliche zu schickende Parameter
	 */
	initialize: function(element, options)
	{
		this.parent(element, 'ajax.php?cmd=autoComplete', options);
	}
});/**
 * Travian AutoCompleter fÃ¼r Spielernamen und erweitert den Travian.Game.AutoCompleter
 * mit allen vorausgefÃ¼llten werten
 */
Travian.Game.AutoCompleter.UserName = new Class(
{
	Extends: Travian.Game.AutoCompleter,

	/**
	 * Constructor
	 *
	 * @param element|string element

	 */
	initialize: function(element)
	{
		this.parent(element,
		{
			multiple: true,
			separator: '; ',
			autoTrim: true,
			allowDupes: false,
			postData:
			{
				type: 'username'
			}
		});
	}
});/**
 * Travian AutoCompleter fÃ¼r Dorfnamen und erweitert den Travian.Game.AutoCompleter
 * mit allen vorausgefÃ¼llten werten
 */
Travian.Game.AutoCompleter.VillageName = new Class(
{
	Extends: Travian.Game.AutoCompleter,

	/**
	 * Constructor
	 *
	 * @param element|string element

	 */
	initialize: function(element)
	{
		this.parent(element,
		{
			maxChoices:	20,
			postData:
			{
				type:	'villagename'
			}
		});
	}
});Travian.Game.Messages = {};

Travian.Game.Messages.Write = {

	/**
	 * Input for element for recepients
	 */
	recieverElement: undefined,

	/**
	 * Adds an aditional recipient to the list of recepients
	 * @param name
	 */
	addRecipient: function(name) {
		var recipients = this.recieverElement.get('value').split(';').map(function(entry) { return entry.trim(); }).filter(function(entry) { return entry !== '' });
		recipients.push(name);
		this.recieverElement.set('value', recipients.join('; '));
	},

	/**
	 * Constructor
	 */
	initialize: function() {
		var $this = this;
		this.recieverElement = $('receiver');

		// Allianz Button
		$('ally').addEvent('click', function() {
			$this.addRecipient('[ally]');
		});

		// Autocompleter Spielername
		new Travian.Game.AutoCompleter.UserName('receiver');

		var recipient_checked = false;
        var check_in_progress = false;

		//zum ÃœberprÃ¼fen, ob der einegegbene EmpfÃ¤nger gÃ¼ltig ist
		this.recieverElement.up('form').addEvent('submit', function(e)
		{
			e.stop();

            if(!check_in_progress)
            {
                check_in_progress = true;

                Travian.ajax(
                {
                    data:
                    {
                        cmd:		'checkRecipient',
                        recipients:	$this.recieverElement.get('value').split(';').map(function(entry) {return entry.trim()})
                    },
                    onSuccess: function()
                    {
                        $('receiver').up('form').submit();
                        recipient_checked = true;
                        check_in_progress = false;
                    },
                    onComplete: function()
                {
                    check_in_progress = false;
                }

                });
            }
		});
	},

	/**
	 * Zeigt das Adressbuch an
	 *
	 * @param string element
	 * @retrun Travian.Game.Messages.Write
	 */
	showAddressBook: function(element)
	{
		var setElementToContent = true;
		var $this = this;
		var inputRecipients = $('recipient').getElement('input');

		if (this.addressBookDialog)
		{
			
			$(element).removeClass('hide');
			this.addressBookDialog.show();
		}
		else
		{
			this.addressBookDialog = ''.dialog(
			{
				title: '{nachrichten.adressbuch}'.translate(),
				buttonTextOk: '{allgemein.save}'.translate(),
				submitMethod: 'post',
				submitUrl: 'messages.php?t=1',
				destroyElement: false,
				onOpen: function(dialog, content)
				{
					dialog.refreshOnClose = true;
					$$('.dialog').removeClass('hide');
					if (!setElementToContent)
					{
						return;
					}

					setElementToContent = false;
					$(element).removeClass('hide');
					$(element).inject(content);
					content.getElements('td.pla a').addEvent('click', function(e) {
						dialog.refreshOnClose = false;
						$this.addRecipient($(e.target).get('text'));
						e.stop();
						dialog.close();
					});
				},
				onClose: function()
				{
					$$('.dialog').addClass('hide');
					if($this.addressBookDialog.refreshOnClose && inputRecipients.get('value') === '' && window.location.href.indexOf("&b=1") > -1) {
						window.location = $this.addressBookDialog.form.action;
					}
				}
			}).dialog;
		}
		return this;
	}
};Travian.Game.Notice = new Class({

	/**
	 * Maximum notice length
	 */
	maxNotesLength: -1,

	/**
	 * Notice <textarea/> element
	 */
	element: $('notice'),

	/**
	 * Constructor
	 */
	initialize: function (maxNotesLength, element)
	{
		if (typeof maxNotesLength === "undefined")
		{
			maxNotesLength = -1;
		}

		this.maxNotesLength = parseInt(maxNotesLength);

        if (typeof element === "undefined")
        {
            element = $('notice');
        }

        this.element = element;

		var $this = this;
		$('send').addEvent('click', function (event)
		{
			if (!$this.DoubleClickPreventer)
			{
				$this.DoubleClickPreventer = new Travian.DoubleClickPreventer();
				$this.DoubleClickPreventer.timeout = 250;
			}

			if (!$this.DoubleClickPreventer.check())
			{
				return;
			}

			if (!$this.checkMaxLength())
			{
				event.preventDefault();
				$this.showNoticeTooLongMessage();
			}
		});
	},

	/**
	 * Show the error message
	 */
	showNoticeTooLongMessage: function ()
	{
		Travian.Translation.get("nachrichten.notice_too_long").dialog();
	},

	/**
	 * Checks if the notice is too long
	 *
	 * @returns {boolean}
	 */
	checkMaxLength: function ()
	{
		if (this.element == null)
		{
			return false;
		}

		if (this.maxNotesLength < 0)
		{
			return true;
		}

		return this.element.value.length <= this.maxNotesLength;
	}
});Travian.Game.BBEditor = (function()
{
	/**
     * returns the information from the class, previously defined as attributes
	 *
	 * @param element element
	 * @param string information (previous attribute name)
	 * @return string
	 */
	var getInformationFromClass = function(element, information)
	{
		var chkElement = element;
		if (element.nodeName.toLowerCase() == 'img')
		{
			element = chkElement.up('button');
			if (!element)
			{
				element = chkElement.up('a');
			}
		}
		var result = element.className.split(' ').find(function(className)
		{
			if (className.indexOf(information) == 0)
			{
				return true;
			}
			return false;
		});

		if (result)
		{
			result = result.substr(0, result.length - 1).split('{');
			if (result.length == 2)
			{
				result = result[1];
			}
			else
			{
				result = null;
			}
		}

		return result;
	};

	return new Class(
	{
		preview: null,
		textArea: null,
		id: null,

		Binds: [
			'fetchPreview', 'showToolbarWindow', 'insertTag', 'insertSingleTag', 'insertSmilieTag', 'hideToolbarWindow', 'showPreview', 'hidePreview'
		],

		/**
		 * Initializes the editor
		 */
		initialize: function(textAreaId, showPreviewOnStart)
		{

			// connect elements
			this.id = textAreaId;
			this.textArea = $(textAreaId);
			this.toolbar = $(textAreaId + '_toolbar');
			this.preview = $(textAreaId + '_preview');

			// init elements
			this.preview.setStyle('display', 'none');
			this.preview.addClass('preview');

			// add Events
			$(textAreaId + '_previewButton').addEvent('click', this.fetchPreview);
			$(textAreaId + '_resourceButton').addEvent('click', this.showToolbarWindow);
			$(textAreaId + '_smilieButton').addEvent('click', this.showToolbarWindow);
			$(textAreaId + '_troopButton').addEvent('click', this.showToolbarWindow);
			$(textAreaId).addEvent('click', this.hideToolbarWindow);
			this.addEvent($(textAreaId + '_toolbar'), this.insertTag);
			this.addEvent($(textAreaId + '_resources'), this.insertTag);
			this.addEvent($(textAreaId + '_smilies'), this.insertTag);
			this.addEvent($(textAreaId + '_troops'), this.insertTag);

            showPreviewOnStart = typeof showPreviewOnStart !== 'undefined' ? showPreviewOnStart : false;
            if(showPreviewOnStart === true)
            {
                this.fetchPreview();
            }
		},

		/**
		 * Binds the events to clickable objects
		 *
		 * @param object containerObject
		 * @param string callback
		 */
		addEvent: function(div, call)
		{
			var childen = div.getChildren();
			for (i = 0; i < childen.length; i++)
			{
				if (getInformationFromClass($(childen[i]), 'bbTag')) // $(childen[i]).get('bbTag'))
				{
					$(childen[i]).addEvent('click', call);
				}
			}
		},

		/**
		 * Inserts a selected tag into the textarea
		 *
		 * @param Object
		 */
		insertTag: function(e)
		{
			e.stop();

			this.hidePreview();

			if ($(e.target).match('button'))
			{
				var link = $(e.target);
			}
			else
			{
				var link = $(e.target.parentNode);
			}

			var tag = getInformationFromClass(link, 'bbTag'); // link.get('bbTag');

			switch (getInformationFromClass(link, 'bbType'))
			// link.get('bbType'))
			{
				// double tag
				case 'd':
					this.textArea.insertAroundCursor(
					{
						before: '[' + tag + ']',
						after: '[/' + tag + ']'
					});
					break;
				// smilie
				case 's':
					this.textArea.insertAtCursor(tag, false);
					break;
				// once
				case 'o':
					this.textArea.insertAtCursor('[' + getInformationFromClass(link, 'bbTag') + ']', false); // link.get('bbTag')
					// +
					// ']',
					// false);
					break;
			}

			this.textArea.scrollTo(this.textArea.selectionStart);
		},

		/**
		 * Shows a sub window of the toolbar
		 *
		 * @param Object
		 */
		showToolbarWindow: function(e)
		{

			e.stop();

			var targetDiv = e.target;
			var element = $(this.id + '_' + getInformationFromClass(targetDiv, 'bbWin')); // targetDiv.get('bbWin'));
			var show = true;
			if (element.getStyle('display') == 'block')
			{
				show = false;
			}

			this.hideToolbarWindow();

			if (show)
			{
				element.fade('hide').fade('in');
				element.setStyle('display', 'block');
			}
		},

		/**
		 * Hides the sub windows of the toolbar
		 *
		 * @param Object
		 */
		hideToolbarWindow: function(e)
		{
			if (e)
			{
				e.stop();
			}

			var childen = $(this.id + '_toolbarWindows').getChildren();
			for (i = 0; i < childen.length; i++)
			{
				$(childen[i]).setStyle('display', 'none');
			}
		},

		/**
		 * Fetches the preview text from the server
		 *
		 * @param Object
		 */
		fetchPreview: function(e)
		{
            if(typeof e !== "undefined")
            {
                e.stop();
            }

			if (this.textArea.getStyle('display') == 'none' || this.textArea.value.length < 1)
			{
				this.hidePreview();
				return;
			}

			$this = this;
			Travian.ajax(
			{
				data:
				{
					cmd: 'bb',
					nl2br: 1,
					target: this.id,
					text: this.textArea.value
				},
				onSuccess: function(response)
				{
					$this.showPreview(response);
				}
			});
		},

		/**
		 * Shows the preview
		 *
		 * @param string textAreaId
		 */
		showPreview: function(data)
		{
			if (data.error === true)
			{
				alert(data.errorMsg);
				return;
			}
			else
			{
				this.preview.innerHTML = data.text;
				this.preview.setStyle('display', 'block');
				this.textArea.setStyle('display', 'none');
			}
		},

		/**
		 * Hides the preview
		 *
		 * @param string textAreaId
		 */
		hidePreview: function()
		{
			this.preview.setStyle('display', 'none');
			this.textArea.setStyle('display', 'inline');
		}
	});
})();// Gold Silbert Wechsel Class
Travian.Game.GoldToSilver = (function()
{
	/**
	 * ÃœberprÃ¼ft, ob der User die Menge Gold in Silber Ã¼bertragen kann
	 *
	 * @param Travian.Game.GoldToSilver goldToSilver
	 * @param int gold
	 * @param int amountGold
	 * @return bool
	 */
	var fnIsGoldToSilverTransferValid = function(goldToSilver, gold, amountGold)
	{
		return (amountGold >= 1 && gold >= amountGold);
	};

	/**
	 * ÃœberprÃ¼ft, ob der User die Menge Silber in Gold Ã¼bertragen kann
	 *
	 * @param Travian.Game.GoldToSilver goldToSilver
	 * @param int silver
	 * @param int amountSilver
	 * @return bool
	 */
	var fnIsSilverToGoldTransferValid = function(goldToSilver, silver, amountSilver)
	{
		return (amountSilver >= 1 && amountSilver >= goldToSilver.options.rateSilverToGold && silver >= amountSilver);
	};

	return new Class(
	{
		Binds:
		[
			'transfer',
			'transferSilverToGold'
		],
		Implements:
		[
			Options
		],

		/**
		 * options
		 *
		 * @var object
		 */
		options: {

			/**
			 * Element fÃ¼r die Goldeingabe
			 *
			 * @var element
			 */
			elementInputGold: null,

			/**
			 * Element fÃ¼r die Silbereingabe
			 *
			 * @var element
			 */
			elementInputSilver: null,

			/**
			 * Element fÃ¼r den Tausch von Gold nach Silber anzeige
			 *
			 * @var element
			 */
			elementResultGold: null,

			/**
			 * Element fÃ¼r den Tausch von Silber nach Gold anzeige
			 *
			 * @var element
			 */
			elementResultSilver: null,

			/**
			 * aktuelles Gold
			 *
			 * @var int
			 */
			gold: null,

			/**
			 * Wechselkurs Gold zu Silber
			 *
			 * @var float
			 */
			rateGoldToSilver: null,

			/**
			 * Wechselkurs Silber zu Gold
			 *
			 * @var float
			 */
			rateSilverToGold: null,

			/**
			 * aktuelles Silber
			 *
			 * @var int
			 */
			silver: null,

			/**
			 * um Fokuswechsel zu handhaben
			 *
			 * @var element
			 */
			lastFocusedElement: null
		},

		/**
		 * Konstruktor
		 *
		 * @param object options
		 */
		initialize: function(options)
		{
			this.setOptions(options);

			this.options.elementInputGold = $(this.options.elementInputGold);
			this.options.elementInputSilver = $(this.options.elementInputSilver);
			this.options.elementResultGold = $(this.options.elementResultGold);
			this.options.elementResultSilver = $(this.options.elementResultSilver);

			this.options.elementInputGold.addEvent('keyup', this.transfer);
			this.options.elementInputSilver.addEvent('keyup', this.transfer);
		},

		/**
		 * resetted bei fokuswechsel das andere input feld
		 *
		 * @param element current focused element
		 */
		handleFocusChange: function(focusedElement)
		{
			if (this.options.lastFocusedElement != focusedElement)
			{
				if (focusedElement != this.options.elementInputGold)
				{
					this.options.elementInputGold.value = '';
				}
				else
				{
					this.options.elementInputSilver.value = '';
				}

				this.options.lastFocusedElement = focusedElement;
			}
		},

		/**
		 * gold nach Silber und umgekehrt wechslen
		 *
		 * @param event keyup event
		 *
		 * @return Travian.Game.GoldToSilver
		 */
		transfer: function(e)
		{
			this.handleFocusChange(e.target);

			var valueGold = parseInt(this.options.elementInputGold.value);
			var valueSilver = parseInt(this.options.elementInputSilver.value);
			var gold = this.options.gold;
			var silver = this.options.silver;

			// ist der Transfer fÃ¼r Gold nach Silber gÃ¼ltig
			if (typeOf(valueGold) == 'null' || fnIsGoldToSilverTransferValid(this, gold, valueGold) == false)
			{
				valueGold = 0;
			}
			valueGold = Math.floor(valueGold * this.options.rateGoldToSilver) / this.options.rateGoldToSilver;

			// first Gold to Silver
			silver += Math.floor(valueGold * this.options.rateGoldToSilver);
			gold -= valueGold;

			// ist der Transfer gÃ¼ltig fÃ¼r Silber nach Gold
			if (typeOf(valueSilver) == 'null' || fnIsSilverToGoldTransferValid(this, silver, valueSilver) == false)
			{
				valueSilver = 0;
			}
			valueSilver = Math.floor(valueSilver / this.options.rateSilverToGold) * this.options.rateSilverToGold;

			// second Silver to gold
			gold += Math.floor(valueSilver / this.options.rateSilverToGold);
			silver -= valueSilver;

			// differenz
			gold -= this.options.gold;
			silver -= this.options.silver;

			if (gold > 0)
			{
				gold = '+' + gold;
			}
			if (silver > 0)
			{
				silver = '+' + silver;
			}

			// anzeige
			this.options.elementResultGold.set('html', gold);
			this.options.elementResultSilver.set('html', silver);

			return this;
		}
	});
})();Travian.Game.RaidList = {
	/**
	 * datenstruktur passend zur Farmliste
	 *
	 * @var object
	 */
	data: null,

    /**
     * flag to distinguish addition of the place to a new/other raid list slot from editing the place in existing raid list slot
     * @var bool
     */
    weAreAdding: false,

	/**
	 * add a slot
	 *
	 * @param {Number} listId
     * @param {Number} x
     * @param {Number} y
     * @param {String} [context=null]
	 */
	addSlot: function(listId, x,y, context)
	{
        context = context || null;

        Travian.ajax(
        {
            data: {
                cmd: 'raidList',
                action: 'ActionAddSlotForm',
                listId: listId,
                weAreAdding: (Travian.Game.RaidList.weAreAdding ? true : null),
                x: x,
                y: y,
                context: context
            },
            onSuccess: function(data)
            {
                (data.html).dialog({
                    buttonOk: false,
                    context: "raidAddSlotDialog"
                });
                return true;
            }
        });
	},

    /**
     * Wrapper for adding slot used in village popup
     *
     * @param {Number} listId
     * @param {Number} x
     * @param {Number} y
     */
    addSlotPopupWrapper: function(listId, x, y)
    {
        Travian.Game.RaidList.weAreAdding = true;
        Travian.Game.RaidList.addSlotWrapper(listId, x ,y);
    },

    /**
     * Wrapper for editing existing slot used in village popup
     *
     * @param {Number} listId
     * @param {Number} x
     * @param {Number} y
     */
    editSlotPopupWrapper: function(listId, x, y)
    {
        Travian.Game.RaidList.weAreAdding = false;
        Travian.Game.RaidList.addSlotWrapper(listId, x ,y);
    },

    /**
     * Wrapper for form popup
     *
     * @param {Number} listId
     * @param {Number} x
     * @param {Number} y
     */
    addSlotWrapper: function(listId, x, y)
    {
        var tWindows = Travian.WindowManager.getWindows();

        if (tWindows.length > 0 && !!tWindows.getLast()) {
            tWindows.getLast().close();
        }

        Travian.Game.RaidList.addSlot(listId, x, y);
    },

    /**
     * saves a slot
     *
     * @param {Number} listId
     * @param {Object} queryObj
     * @param {Boolean} pageReload
     * @param {Number} [slotId=null]
     */
    saveSlot: function(listId, queryObj, pageReload, slotId)
    {
        slotId = Travian.Game.RaidList.weAreAdding ? null : (slotId || null);

        Travian.ajax(
            {
                data: {
                    cmd: 'raidList',
                    action: 'ActionAddSlot',
                    listId: listId,
                    slotId: slotId,
                    x: queryObj.x,
                    y: queryObj.y,
                    t1: queryObj.t1,
                    t2: queryObj.t2,
                    t3: queryObj.t3,
                    t4: queryObj.t4,
                    t5: queryObj.t5,
                    t6: queryObj.t6,
                    t7: queryObj.t7,
                    t8: queryObj.t8,
                    t9: queryObj.t9,
                    t10: queryObj.t10
                },
                onSuccess: function(response)
                {
                    Travian.WindowManager.getWindowsByContext("raidAddSlotDialog").pop().close();

                    if (pageReload !== false) {
                        var urlHashId = null;

                        if (typeof response != 'undefined' && typeof response.updatedSlotId != 'undefined' && response.updatedSlotId > 0) {
                            urlHashId = response.updatedSlotId;
                        } else if (slotId !== null) {
                            urlHashId = slotId;
                        }

                        var newHash = urlHashId !== null ? '#slot-row-' + urlHashId : '';

                        // we add an unnecessary parameter to the URL to make sure the browser will refresh the page and not just change the hash
                        // window.location.reload() does not work here, because it would try to resend post data in firefox

                        var randomParameterValue = Math.floor(Date.now() / 1000);
                        var url = window.location.href;
                        var parsedURL = Travian.parseURL(url);
                        parsedURL.searchObject['lid'] = listId;
                        parsedURL.searchObject['xx'] = randomParameterValue;
                        parsedURL.hash = newHash;
                        // Remove any previously exists actions in the URL
                        delete parsedURL.searchObject['action'];
                        window.location = Travian.composeURL(parsedURL);
                    }
                    return true;
                }
            });
    },


    /**
	 * edit a slot
	 *
	 * @param {Number} listId
	 * @param {Number} slotId
     * @param {Boolean} pageReload
     * @param {String} [context=null]
	 */
	editSlot: function(listId, slotId, pageReload, context)
	{
        context = context || null;

        Travian.ajax(
            {
                data: {
                    cmd: 'raidList',
                    action: 'ActionAddSlotForm',
                    listId: listId,
                    slotId: slotId,
                    pageReload: pageReload,
                    context: context
                },
                onSuccess: function(data)
                {
                    (data.html).dialog({
                        buttonOk: false,
                        context: "raidAddSlotDialog"
                    });
                    return true;
                }
            });
	},

    /**
     * delete a slot
     *
     * @param {Number} slotId
     * @param {Boolean} pageReload
     */
    deleteSlot: function(slotId, pageReload)
    {
        Travian.ajax(
            {
                data: {
                    cmd: 'raidList',
                    action: 'actionDeleteSlot',
                    slotId: slotId
                },
                onSuccess: function()
                {
                    if(pageReload !== false){
                        window.location.reload();
                    } else {
                        Travian.WindowManager.getWindowsByContext("raidAddSlotDialog").pop().close();
                    }
                    return true;
                }
            });
    },


	/**
	 * lÃ¤dt eine Liste nach
	 *
	 * @param int listId
	 * @param string sortField
	 * @param string sortDirection
	 * @return Travian.Game.RaidList
	 */
	loadList: function(listId, sortField, sortDirection)
	{
		var $this = this;
		var list = $('list' + listId);

		list.down('.loading').removeClass('hide');

		Travian.ajax(
		{
			data:
			{
				cmd: 'raidListSlots',
				lid: listId,
				sort: sortField,
				direction: sortDirection
			},
			onComplete: function()
			{
                //show current list content
                list.down('.loading').addClass('hide');
            },
			onSuccess: function(data)
			{
				list.down('.listContent').set('html', data.html);
                list.down('.listContent').removeClass('hide');
                list.down('.openedClosedSwitch').removeClass('switchClosed');
                list.down('.openedClosedSwitch').addClass('switchOpened');
				$this.data[listId] = data.list;

				list.down('input[name=sort]').value = data.sort;
				list.down('input[name=direction]').value = data.direction;
			}
		});

		return this;
	},

    showCreateNewList: function() {
        Travian.ajax({
            data:{
                cmd: 'raidList',
                action: 'actionAddListForm'
            },
            onSuccess: function(data) {
                (data.html).dialog({
                    buttonOk: false
                });
            }
        });
    },

    createNewList: function() {
        var formData = $$('#raidListCreate form').serializeForm();
        var params = {
            cmd: 'raidList',
            action: 'actionAddList'
        };
        var data = Object.merge(formData[0], params);
        Travian.ajax({
            data:data,
            onSuccess: function(data) {
                if (data.validation_message) {
                    $$('#raidListCreate #error').set('html', data.validation_message);
                } else {
                    window.location.reload();
                }
            }
        });
    },

    showUpdateList: function(listId) {
        Travian.ajax({
            data:{
                cmd: 'raidList',
                action: 'actionUpdateListForm',
                listId: listId
            },
            onSuccess: function(data) {
                (data.html).dialog({
                    buttonOk: false
                });
            }
        });
    },

    updateList: function(listId) {
        var formData = $$('#raidListCreate form').serializeForm();
        var params = {
            cmd: 'raidList',
            action: 'actionUpdateList',
            listId: listId
        };
        var data = Object.merge(formData[0], params);
        Travian.ajax({
            data:data,
            onSuccess: function(data) {
                if (data.validation_message) {
                    $$('#raidListCreate #error').set('html', data.validation_message);
                } else {
                    window.location.reload();
                }
            }
        });
    },

	/**
	 * markiert alle eintrÃ¤g einer liste zum abschicken
	 *
	 * @param int listId
	 * @param bool marked
	 * @return Travian.Game.RaidList
	 */
	markAllSlotsOfAListForRaid: function(listId, marked)
	{
		Object.each(this.data[listId].slots, function(slot)
		{
			slot.marked = marked;
		});

		$('list' + listId).getElements('.markSlot').each(function(element)
		{
			element.checked = marked;
		});

		this.updateTroopSummaryForAList(listId);

		return this;
	},

	/**
	 * markiert einen eintrag zum abschicken
	 *
	 * @param int listId
	 * @param int slotId
	 * @param bool marked
	 * @param bool updateTroopSummary optional default true
	 * @return Travian.Game.RaidList
	 */
	markSlotForRaid: function(listId, slotId, marked, updateTroopSummary)
	{
		this.data[listId].slots[slotId].marked = marked;

		if (typeof updateTroopSummary == 'undefined' || updateTroopSummary)
		{
			this.updateTroopSummaryForAList(listId);
		}

		return this;
	},

	/**
	 * setzt komplett alle Daten
	 *
	 * @param object data
	 */
	setData: function(data)
	{
		this.data = data;
	},

	/**
	 * sortiert die angegebene Farmliste entsprechend des angegebenen SchlÃ¼ssels
	 *
	 * @param int listId
	 * @param string sortKey
	 * @return Travian.Game.RaidList
	 */
	sort: function(listId, sortKey)
	{
		return this.loadList(listId, sortKey, this.data[listId].directions[sortKey] != 'asc' ? 'asc' : 'desc');
	},

	/**
	 * blendet eine Liste ein oder aus. Ist diese noch nicht geladen, wird diese nachgeladen
	 *
	 * @param currentListId
	 * @return Travian.Game.RaidList
	 */
	toggleList: function(currentListId)
	{
        if (typeof this.data[currentListId] == 'undefined')
        {
            this.loadList(currentListId);
        }
        for (var listId in this.data) {
            if (this.data.hasOwnProperty(listId)) {
                var list = $('list' + listId);
                if (listId == currentListId) {
                    Travian.toggleSwitch(list.down('.listContent'), list.down('.openedClosedSwitch'));
                } else {
                    list.down('.listContent').addClass('hide');
                    list.down('.openedClosedSwitch').addClass('switchClosed');
                    list.down('.openedClosedSwitch').removeClass('switchOpened');
                }
            }
        }

		return this;
	},

    /**
     * When opening an other farm list, close all already open farm lists
     *
     * @param listId
     * @returns {Travian.Game.RaidList}
     */
    updateListsVisibility: function(listId)
    {
        var  list = $('list' + listId),
            listIsVisible = false,
            scrollFx = new Fx.Scroll(window, {duration: 100}),
            index, currentList;

        if (list.down('.listContent.hide') === null) {
            listIsVisible = true;
        }

        // if current list is closed
        if (!listIsVisible){
            // close all other lists if any are open
            for (index in this.data) {
                if (this.data.hasOwnProperty(index) && index != listId) {
                    currentList = $('list' + index);
                    if (currentList.down('.listContent.hide') === null) {
                        Travian.toggleSwitch(currentList.down('.listContent'), currentList.down('.openedClosedSwitch'));
                    }
                }
            }
        }

        // open/close the list
        Travian.toggleSwitch(list.down('.listContent'), list.down('.openedClosedSwitch'));

        if (!listIsVisible) {
            //scroll to list head only when opening a list
            scrollFx.toElement(list);
        }

        return this;
    },

	/**
	 * Aktuellisiert die TruppenÃ¼bersicht zu einer Liste
	 *
	 * @param int listId
	 * @return Travian.Game.RaidList
	 */
	updateTroopSummaryForAList: function(listId)
	{
		var $this = this;

		var troops = $H(this.data[listId].slots).inject([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], function(acc, slot)
		{
			if (slot.marked)
			{
				for (var i = 1; i <= 10; i++)
				{
					acc[i] += slot.troops[i];
				}
			}

			return acc;
		});

		$('list' + listId).getElements('.troopSelectionValue').each(function(element, index)
		{
			if (troops[index + 1] > 0)
			{
				element.set('html', '<span class="{alert}">{selected}/{available}'.substitute(
				{
					selected:	troops[index + 1],
					available:	$this.data[listId].troops[index + 1],
					alert:		troops[index + 1] > $this.data[listId].troops[index + 1] ? 'alert' : ''
				})).up('.troopSelectionUnit').show();
			}
			else
			{
				element.up('.troopSelectionUnit').hide();
			}
		});

		return this;
	},

    /**
     * opens a confirm dialog where the user has to enter a captcha first before sending the raid
     */
    confirm: function(invalidResponse) {

        var sort = $$('input[name=sort]')[0].get('value');
        var direction = $$('input[name=direction]')[0].get('value');
        var lid = $$('input[name=lid]')[0].get('value');

        var slots = [];

        $$('.markSlot.check:checked').each(function(element) {
            var slotID = element.get('id');
            slotID = slotID.replace('slot','');
            slots.push(slotID);
        });

        var attempt = 'new';
        if(typeof invalidResponse !== 'undefined') {
            attempt = 'retry';
        }

	    new Travian.Dialog.Ajax({
            data: {
                cmd: 'raidListCaptcha',
                sort: sort,
                direction: direction,
                lid: lid,
                slots: slots,
                attempt: attempt
            },
            buttonOk: false,
            darkOverlay: true
        });
    }
};Travian.Game.Reports = {
	/**
	 * Aufbereitung des Zugriffsrechtsdialogs fÃ¼r Berichte
	 */
	editRights : function(element, options)
	{
		Travian.ajax(
		{
			data:
			{
				cmd: 'reportRightsGet',
				reportId: options.datas.reportId
			},
			onSuccess: function(data)
			{
				options.datas = Object.merge({}, options.datas || {}, data || {});
				var html = '<div class="reports" id="editRights"><div><input type="checkbox" id="right1" class="check" /> {anonymOpponent}</div><div><input type="checkbox" id="right2" class="check" /> {anonymMyself}</div><div><input type="checkbox" id="right3" class="check" /> {hiddenOwnTroops}</div><div><input type="checkbox" id="right4" class="check" /> {hiddenOtherTroops}</div><div class="description">{description}<br /><textarea id="description"></textarea></div></div>';
				html.substitute(options.text).dialog(
				{
					relativeTo: element,
					buttonTextOk : options.text.buttonTextOk,
					buttonTextCancel : options.text.buttonTextCancel,
					title : options.text.title,

					onOpen : function(dialog, contentElement)
					{
						$('right1').checked = options.datas.right1;
						$('right2').checked = options.datas.right2;
						$('right3').checked = options.datas.right3;
						$('right4').checked = options.datas.right4;
						$('description').innerHTML = options.datas.description;
					},
					onOkay : function(dialog, contentElement)
					{
						Travian.ajax(
						{
							data:
							{
								cmd: 'reportRightsSet',
								data: Object.merge({}, options.datas,
								{
									right1: $('right1').checked,
									right2: $('right2').checked,
									right3: $('right3').checked,
									right4: $('right4').checked,
									description : $('description').value
								})
							}
						});
					}
				});
			}
		});
		return false;
	}
};
//global variable that controls page reload after countdown reaches 0
var reload_enabled = true;
// Global variable defining the way page is going to be reloaded if needed
var auto_reload = 1;
// Global variable allowing the page to introduce a predefined delay for reload
var delayTimeForReload = 0;
//Global variable used by the Marketplace script for allocating resources to merchants
var resources = {};

Travian.TimersAndCounters = {
    timeCounters: [],
    resourceCounters: {},
    startedAt: Math.floor(Date.now() / 1000),
    pathReload: 'reload=auto',

    timeToInt: function(timeAsString) {
        var p, sek;
        p = timeAsString.split(':');
        sek = p[0] * 3600 + p[1] * 60 + p[2] * 1;
        return sek;
    },

    intToTime: function(value, nomarkup) {
        var hour, minute, second, time;

        // Anything less than delayTimeForReload plus one second (scheduled for reload) is an event jam
        if (value < (0 - delayTimeForReload - 1)) {
            time = nomarkup ? '0:00:0?' : (Travian.Game.eventJamHtml || '0:00:0?');
        } else {
            value = Math.max(0, value);
            hour = Math.floor(value / 3600);
            minute = Math.floor(value / 60) % 60;
            second = value % 60;
            time = hour + ':';
            if (minute < 10) {
                time += '0';
            }
            time += minute + ':';
            if (second < 10) {
                time += '0';
            }
            time += second;
        }
        return time;
    },

    init: function() {
        this.initResourcesCounters();
        this.initTimers();
        this.dropReload();
    },

    initTimers: function() {
        this.startedAt = Math.floor(Date.now() / 1000);
        this.timeCounters = [];
        this.initTimersInContext(document);
    },

    initTimer: function(timerNode) {
        var value, entity;

        switch (timerNode.getAttribute('counting')) {
            case 'down':
                value = timerNode.getAttribute('value').toInt() || 0;
                entity = {
                    node: timerNode,
                    value: value,
                    counting: 'down',
                    // If the timer is less than delayTimeForReload seconds on page load, the reload will have the delay,
                    // and will not happen earlier than delayTimeForReload seconds after the timer is finished
                    reloadDelay: value < delayTimeForReload ? delayTimeForReload * 1000 : 0,
                    inReload: false
                };
                break;
            default:
                entity = {
                    node: timerNode,
                    value: this.timeToInt(timerNode.innerHTML || '00:00:00'),
                    counting: 'up',
                    inReload: false
                };
                break;
        }
        this.updateTimerValue(entity);
        // Add only counters having meaningful value
        if (entity.value > -1) {
            this.timeCounters.push(entity);
        }
    },

    initTimersInContext: function(context) {
        var i,
            timers = context.getElementsByClassName('timer');

        for (i = 0; i < timers.length; i++) {
            this.initTimer(timers[i]);
        }

        this.executeTimers();
    },

    updateTimerValue: function(timer) {
        var timePassed = Math.floor(Date.now() / 1000) - this.startedAt;
        var counter;
        var reload = false;

        switch (timer.counting) {
            case 'down':
                counter = timer.value - timePassed;
                timer.node.innerHTML = this.intToTime(counter);
                timer.node.setAttribute('value', counter);
                if (counter < 1) {
                    reload = true;
                }
                break;
            case 'up':
                timer.node.innerHTML = this.intToTime((timer.value + timePassed) % 86400);
                break;
        }
        return reload;
    },

    executeTimers: function() {
        if (this.timeCounters.length > 0) {
            window.setTimeout('Travian.TimersAndCounters.executeTimers()', 1000);
        }
        for (var i = 0; i < this.timeCounters.length; i++) {
            var timer = this.timeCounters[i];
            if (this.updateTimerValue(timer) && !timer.inReload && window.reload_enabled) {
                timer.inReload = true;
                this.processReload(timer.reloadDelay);
            }
        }
    },

    initResourcesCounters: function() {

        this.resourceCounters = {};
        this.initResourcesCounter('l1', 'lbar1');
        this.initResourcesCounter('l2', 'lbar2');
        this.initResourcesCounter('l3', 'lbar3');
        this.initResourcesCounter('l4', 'lbar4');
    },

    initResourcesCounter: function(element_id, bar_id) {
        var myElement = document.getElementById(element_id);

        try {
            var productionPerHour = resources.production[element_id];

            if (productionPerHour != 0) {
                this.resourceCounters[element_id] = {
                    startInMs: Date.now(),
                    production: productionPerHour,
                    initialResources: resources.storage[element_id],
                    maximumResources: resources.maxStorage[element_id],
                    minimumResources: 0,
                    tickInMs: Math.max(Math.round(Math.abs(3600000 / productionPerHour)), 100),
                    bar: document.getElementById(bar_id),
                    node: myElement
                };

                this.executeCounter(element_id);
            }
        } catch (e) {
            // Nothing special here, just not found elements
        }
    },

    executeCounter: function(counter_id) {
        var counter = this.resourceCounters[counter_id];
        var timePassed = Date.now() - counter.startInMs;

        var newValue = Math.floor(counter.initialResources + timePassed * (counter.production / 3600000));
        switch (true) {
            case (newValue >= counter.maximumResources):
                newValue = counter.maximumResources;
                break;
            case (newValue <= counter.minimumResources):
                newValue = counter.minimumResources;
                break;
            default:
                window.setTimeout('Travian.TimersAndCounters.executeCounter(\''+counter_id+'\')', counter.tickInMs);
        }
        var numberFormatter = new Travian.Formatter({
            forceDecimal: false
        });
        counter.node.innerHTML = numberFormatter.getFormattedNumber(newValue);
        resources.storage[counter_id] = newValue;

        var bar = counter.bar;
        if (bar) {
            var percent = Math.round(100 * newValue / counter.maximumResources);

            bar.removeClass('stockFull');
            if (newValue >= counter.maximumResources) {
                bar.addClass('stockFull');
            }
            bar.setStyles({
                width: percent + '%'
            });
        }
    },

    dropReload: function() {
        var path, hash, pos, posHash;

        path = document.location.href;
        hash = document.location.hash;
        if (hash != "") {
            posHash = path.indexOf(hash);
            path = path.substring(0, posHash);
        }
        pos = path.indexOf(this.pathReload);
        if (pos != -1) {
            path = path.substring(0, pos - 1) + hash;
            window.history.pushState({id: path}, "", path);
        }
    },

    processReload: function(delay) {
        var reloadFunction;

        switch (auto_reload) {
            case 0:
                reloadFunction = this.modalReload;
                break;
            case 1:
                reloadFunction = Travian.WindowManager.checkForModalDialogs() ? this.modalReload : this.plainReload;
                break;
            case 2:
                if (typeof window.customReload == 'function') {
                    reloadFunction = window.customReload;
                } else {
                    reloadFunction = this.modalReload();
                }
                break;
        }

        setTimeout(reloadFunction, delay + 1000);
    },

    // I wish the Internet Explorer die some day
    plainReload: function() {
        window.location.href = window.location.href;
    },

    modalReload: function() {
        var path, hash, posHash;

        path = window.location.href;
        hash = window.location.hash;
        if (hash != "") {
            posHash = path.indexOf(hash);
            path = path.substring(0, posHash);
        }
        if (path.indexOf(this.pathReload) == -1) {
            if (path.indexOf('?') == -1) {
                path += '?' + this.pathReload;
            } else {
                path += '&' + this.pathReload;
            }
        }
        document.location.href = path + hash;
    }
};
Travian.Game.Hero = {};Travian.Game.Hero.Editor = function()
{
	var randomize = null;

	return new Class(
	{
		unloadIdentifier: null,
		Implements: [
			Options
		],

		/**
		 * options
		 *
		 * @var object
		 */
		options:
		{
			/**
			 * Das Container Element, welches den Editor enthÃ¤lt
			 *
			 * @var element
			 */
			element: null,

			/**
			 * Command
			 *
			 * @var string
			 */
			command: null,

			/**
			 * Attribute
			 *
			 * @var object
			 */
			attributes: null,

			/**
			 * Helden Image SRC Url
			 *
			 * @var string
			 */
			urlHeroImage: null,

			/**
			 * Element im Dom welches aktualisiert wird, wenn man speichert
			 *
			 * @var string
			 */
			elementHeroImage: null
		},

		/**
		 * alle Elemente einklappen
		 *
		 * @return Travian.Game.Hero.Editor
		 */
		hideAll: function()
		{
			var infoBoxes = this.options.element.getElements('.attributes .container .infoOpen').removeClass('infoOpen');
			infoBoxes.down('.headline').removeClass('switchOpened').addClass('switchClosed');
			this.options.element.getElements('.attributes .container .details').hide();

			return this;
		},

		/**
		 * Constructor
		 *
		 * @param object options
		 */
		initialize: function(options)
		{
			var $this = this;

			$this.initializeAttributes(options);

			// buttons mit funktion versehen
			var el = this.options.element.down('#save');
			if (el != null)
			{
				el.addEvent('click', function(e)
				{
					$this.sendAction('save', function()
					{
						// Das Heldenbild im Layout aktualisieren
						var newUrlHeroImage = Travian.parseURL($this.options.urlHeroImage);
						delete(newUrlHeroImage.searchObject.code);
						newUrlHeroImage.searchObject.time = (new Date()).getTime();
						$$("."+$this.options.elementHeroImage).set("src", Travian.composeURI(newUrlHeroImage));
					});
					e.stop();
				});
			}

			var el = this.options.element.down('#random');
			if (el != null)
			{
				el.removeEvent('click', randomize);
				randomize = function(e)
				{
					$this.sendAction('random');
					e.stop();
				};
				el.addEvent('click', randomize);
			}

			this.bindGenderSwitch();

			// show hero and store settings
			this.storeAttributesInInput(this.options.attributes);
		},

		initializeAttributes: function(options)
		{
			var $this = this;

			this.setOptions(options);

			this.options.element = $(this.options.element);
			this.hideAll();

			// Elemente fÃ¼r die Click Events durchgehen damit die container auf und
			// zugeklappt werden kÃ¶nnen
			this.options.element.getElements('.attributes .container .info').each(function(element)
			{
				element.addEvent('click', function(event)
				{
					$this.showAttribute(element);
					event.preventDefault();
				});
			});

			// Die buttons entsprechend durchgehen und alle relevanten events setzen
			this.options.element.getElements('.attributes .container .attribute').addEvent('click', function(e)
			{
				var id = parseInt(e.target.id.split('attribute_button_')[1]);
				var attribName = e.target.getParent('.info').id;
				$this.options.attributes[attribName] = id;

				$this.sendAction('show');
				e.stop();
			});
		},

		/**
		 * sendet die Daten
		 *
		 * @param string action
		 * @param function fnCallback
		 * @return Travian.Game.Hero.Editor
		 */
		sendAction: function(action, fnCallback)
		{
			if (action == 'save')
			{
				Travian.Form.UnloadHelper.disableSecurity(this.unloadIdentifier);
			}
			else
			{
				this.unloadIdentifier = Travian.Form.UnloadHelper.enableSecurity(this.unloadIdentifier);
			}

			var $this = this;

			Travian.ajax(
			{
				data:
				{
					cmd: this.options.command,
					action: action,
					attribs: this.options.attributes
				},
				onSuccess: function(data)
				{
					$$('.hero_head .image').set('html', data.html);

					if (data.attributesHtml)
					{
						$('attributesContainer').set('html', data.attributesHtml);
						$this.initializeAttributes($this.options);
					}

					$this.options.attributes = data.attributes;
					$this.storeAttributesInInput(data.attributes);

					(fnCallback || Travian.emptyFunction)();
				}
			});

			return this;
		},

		/**
		 * Attribute aufklappen
		 *
		 * @param element element
		 * @return Travian.Game.Hero.Editor
		 */
		showAttribute: function(element)
		{
			var wasOpen = element.hasClass('infoOpen');
			this.hideAll();
			if (!wasOpen) {
				element.addClass('infoOpen');
				element.down('.headline').removeClass('switchClosed').addClass('switchOpened');
				element.down('.details').show();
			}

			return this;
		},

		/**
		 * speichert die Attribute
		 *
		 * @return Travian.Game.Hero.Editor
		 */
		storeAttributesInInput: function(attribs)
		{
			var el = this.options.element.down('input[name=attributes]');
			if (el != null)
			{
				el.set('value', escape(JSON.encode(attribs)));
			}

			return this;
		},
		switchGender: function(gender)
		{
			if ($(this.options.element).hasClass('genderSwitch'))
			{
				if (gender == 'male')
				{
					this.options.element.removeClass('female').addClass('male');
					$('heroEditorActivateMale').addClass('iconActive disabled');
					$('heroEditorActivateFemale').removeClass('iconActive disabled');
				}
				else
				{
					this.options.element.removeClass('male').addClass('female');
					$('heroEditorActivateFemale').addClass('iconActive disabled');
					$('heroEditorActivateMale').removeClass('iconActive disabled');
				}
			}
			// Request
			this.options.attributes['gender'] = gender;
			this.sendAction('gender');
		},
		bindGenderSwitch: function()
		{
			var parent = this;
			$$('#heroEditorActivateMale, #heroEditorActivateFemale').addEvent('click', function(e)
			{
				if (this.get('id') == 'heroEditorActivateMale' && parent.options.element.hasClass('male') == false)
				{
					parent.switchGender('male');
				}
				else if (this.get('id') == 'heroEditorActivateFemale' && parent.options.element.hasClass('female') == false)
				{
					parent.switchGender('female');
				}
				e.stop();
			});
		}
	});
}();
Travian.Game.Hero.Inventory = new Class(
{
	Implements: [
		Options
	],

	/**
	 * aktuelle Drag Status
	 *
	 * @var boolean
	 */
	dragStatus: false,

	/**
	 * alle Items
	 *
	 * @var array
	 */
	items: [],

	/**
	 * options
	 *
	 * @var object
	 */
	options:
	{
		/**
		 * der A Parameter... uuuuuhuhuhuuh
		 *
		 * @var int
		 */
		a: null,

		/**
		 * Checksum param
		 *
		 * @var string
		 */
		c: null,

		/**
		 * Geschlecht
		 *
		 * @var string
		 */
		gender: 'male',

		/**
		 * aktuelle Helden Status Werte
		 *
		 * @var object
		 */
		heroState: {

		},

		/**
		 * Der Held ist im Dorf oder nicht
		 *
		 * @var boolean
		 */
		isInVillage: true,

		/**
		 * Der Held ist tod oder nicht
		 *
		 * @var boolean
		 */
		isDead: false,

		/**
		 * alle initialdaten
		 *
		 * @var array
		 */
		data: [],

		/**
		 * Hash fÃ¼r Caching
		 *
		 * @var string
		 */
		heroBodyHash: false,

		/**
		 * String zu den Bildern
		 *
		 * @var string
		 */
		images: 'img/hero/items/item{typeId}.png',

		/**
		 * Texte zur Anzeige
		 *
		 * @var object
		 */
		text:
		{
			/**
			 * Text fÃ¼r die Anzeige, wenn Item gesplittet werden soll beim
			 * verschieben
			 *
			 * @var string
			 */
			moveDialogDescription: 'Anzahl der zu verschiebenden Items: {inputField}',
			useDialogDescription: 'Anzahl der zu anwendenden Items: {inputField}',
			/**
			 * Titel fÃ¼r die Anzeige, wenn Item gesplittet werden soll beim
			 * verschieben
			 *
			 * @var string
			 */
			useOneDialogTitle: 'Soll dieser Gegenstand wirklich benutzt werden?',

			/**
			 * Text fÃ¼r den Okay Button in Dialogen
			 *
			 * @var string
			 */
			buttonOk: 'Ok',

			/**
			 * Text fÃ¼r den Cancel Button in Dialogen
			 *
			 * @var string
			 */
			buttonCancel: 'Cancel'
		}
	},

	/**
	 * gibt an, ob ein drag aktiv ist oder nicht
	 *
	 * @var boolean
	 */
	startDrop: false,

	/**
	 * erstellt ein neues Item in der Ansicht
	 *
	 * @param options
	 * @return Travian.Game.Hero.Inventory
	 */
	createAndAddItem: function(options)
	{
		this.items.include(Object.merge(
		{
			placeElement: undefined,
			html_id: 'item_' + options.id
		}, options || {}));

		return this;
	},

	/**
	 * erstellt die divs fÃ¼r ein Item
	 *
	 * @return Travian.Game.Hero.Inventory
	 */
	createDivs: function()
	{
		var $this = this;
		var elementPlaceHolder = $('placeHolder');

		this.items.each(function(item, index)
		{
			item.isUseable = (item.slot == 'bag' || $this.options.isInVillage);

			if ($this.options.isDead && !item.isUsableIfDead)
			{
				item.isUseable = false;
			}

			var descriptionText = '';
			if (!item.isUseable)
			{
				if ($this.options.isDead)
				{
					descriptionText = $this.options.text.notMoveableTextDead;
				}
				else
				{
					descriptionText = $this.options.text.notMoveableText;
				}

				descriptionText += '<br />';
			}

			descriptionText += item.attributes.join('<br />');

			var element = (new Element('div',
			{
				id: 'item_' + item.id,
				'class': 'item ' + $this.options.gender + '_item_' + item.typeId + ' ' + (item.isUseable ? '' : 'disabled'),
				html: '<div class="amount">' + item.amount + '</div>',
				styles:
				{
					position: 'relative'
				},
				events:
				{
					click: function()
					{
						// proceed with the click if: Mobile or the DblClickPreventer is undefined (first click after reload)
						// or when the DblClickPreventer timeout is expired
						var clickProceed = Travian.isMobile() || typeof $this.DoubleClickPreventer === 'undefined' || !$this.DoubleClickPreventer.prevent;

						if (item.isUseable && clickProceed)
						{
                            //for mobile show description on first click (tap) and use item on the next click
                            if (!Travian.isMobile() || (item.clickedFirstTime && Travian.isMobile()))
                            {
                                //It is either desktop device or a mobile device and this is not the first click (tap) on the item.
                                //Use the item:
                                Travian.Tip.hide();
                                $this.moveToMatchingPlace(this);
                            }
                            else
                            {
                                //It is a mobile device and this is the first time the item is clicked.
                                //Show item's description:
                                if ($this.startDrop != true)
                                {
                                    $this.mark(item.slot);
                                }
                                item.clickedFirstTime = true;
                            }
						}
					},
					mouseover: function()
					{
						if (item.isUseable)
						{
							if ($this.startDrop != true)
							{
								$this.mark(item.slot);
							}
						}
					},
					mouseout: function()
					{
						if (item.isUseable)
						{
							if ($this.startDrop != true)
							{
								$this.unMark(item.slot);
							}
						}
					}
				}
			}));

			element.setTip(
			{
				unescaped: true,
				title: '(' + item.amount + ') ' + item.name,
				text: descriptionText
			});

			element.inject(elementPlaceHolder);

			element.item = item;

			var elementInsert = null;
			if (item.placeId == 0)
			{
				elementInsert = $(item.slot);
				element.addClass('onHero');
			}
			else
			{
				elementInsert = $('inventory_' + item.placeId);
			}

			$this.moveToDrop(element, elementInsert.addClass(item.isUseable ? '' : 'disabled'), true);
		});
		this.makeDraggable();

		$(this.options.elementHeroBody).src = this.options.urlBodyImage.substitute(
		{
			heroBodyHash: this.options.heroBodyHash
		});

		return this;
	},

	/**
	 * Zeigt den Dialog an
	 *
	 * options (includes all dialog options)
	 * =======================================
	 * text = text for the display of the dialog
	 * amount = amount of items that we want to use
	 * maximum = amount of items that we have
	 * calculate = if exists, calculations for the entered amount of items are executed
	 *
	 * calculate
	 * ==================================
	 * valuePerItem = value per item
     * bonusPercent = bonus per item in percent
	 * currentValue = value before change
	 *
	 * @param {Object} options
	 * @return Travian.Game.Hero.Inventory
	 */
	dialog: function(options)
	{
		var $this = this;
		var text = options.text;
		var amount = options.amount;
		var maximum = options.amount;
		var calculate = options.calculate;

		// Dialog unspezifische optionen entfernen
		delete (options.text);
		delete (options.amount);
		delete (options.calculate);

		// onOpen umkapseln, da hier noch einiges extra gemacht wird
		options.onOpen = (options.onOpen || Travian.emptyFunction).wrap(function(proceed, dialog, contentElement) {
			var elementInput = contentElement.down('#amount');
			if (elementInput) {
				var fnCalculate = function(newAmount) {
					if (calculate) {
						var bonusFactor = 1 + calculate.bonusPercent / 100;
                        var newTotal = newAmount * Math.round(calculate.valuePerItem * bonusFactor);
						var newValue = newAmount * calculate.valuePerItem;
						var newBonus = newTotal - newValue;
						var displayUseValue = contentElement.down('.displayUseValue');
                        var displayUseBonusP = contentElement.down('.displayUseBonusP');
                        var displayUseBonus = contentElement.down('.displayUseBonus');
                        var displayAfterUse = contentElement.down('.displayAfterUse');
						if(displayUseValue) displayUseValue.set('html', newValue);
                        if(displayUseBonusP) displayUseBonusP.set('html', calculate.bonusPercent);
                        if(displayUseBonus) displayUseBonus.set('html', newBonus);
                        if(displayAfterUse) displayAfterUse.set('html', calculate.currentValue + newTotal);
					}
				};
				elementInput.set('value', amount);
				fnCalculate(amount);
				dialog.makeInputAmountable(elementInput, maximum, fnCalculate.bind($this));
			}

			return proceed(dialog, contentElement);
		});

		// standard einstellungen setzen
		options = Object.merge(options,
		{
			buttonTextOk: this.options.text.buttonOk,
			buttonTextCancel: this.options.text.buttonCancel
		});

		// text entsprechend anpassen
		text.substitute(
		{
            inputField: '<input class="text" id="amount" type="text" value="0" />',
            equipmentBonus: '<span class="displayUseBonusP">0</span>'
		}).dialog(options);

		return this;
	},

	/**
	 * Klick ins Inventar oder auf passende Feld
	 *
	 * @param int id
	 * @param int dropId
	 * @param int amount
	 * @return Travian.Game.Hero.Inventory
	 */
	executeMovement: function(id, dropId, amount)
	{
		var $this = this;

		if (!$this.DoubleClickPreventer)
		{
			$this.DoubleClickPreventer = new Travian.DoubleClickPreventer();
			// Upped the timeout to be on the safe side. Timer is canceled when the item finished moving.
			$this.DoubleClickPreventer.timeout = 5000;
		}

		if (!$this.DoubleClickPreventer.check())
		{
			return false;
		}

		Travian.ajax(
		{
			data:
			{
				cmd: 'heroInventory',
				id: id,
				drid: dropId,
				amount: amount,
				a: this.options.a,
				c: this.options.c
			},
			onSuccess: function(data)
			{
				$this.options.c = data.checkSum;
				$this.options.heroState = Object.merge($this.options.heroState, data.heroState || {});

				if (data.heroBodyHash)
				{
					$this.options.heroBodyHash = data.heroBodyHash;
				}
				// Items neu einzeichnen
				$this.items.each(function(item, index)
				{
					$(item.html_id).dispose();
				});

				$this.items = new Array();

				data.items.each(function(jsonItem, index)
				{
					$this.createAndAddItem(jsonItem);
				});

				$$('.inventory').each(function(item)
				{
					item.dispose();
				});

				var id = data.inventorySize;

				// show level up buttons
				if (data.heroData.freePoints > 0)
				{
					$$('div.hero_inventory .attribute .setPoint').show();
				}

				for ( var i = 1, element = null; i <= id; i++)
				{
					element = new Element('div',
					{
						id: 'inventory_' + i,
						'class': 'inventory draggable'
					});

					element.inject($('itemsToSale').down('.market'), 'before');
				}

				$this.createDivs();

				// werte am helden neu setzen
				var elementAttributesContainer = $('attributes');
				var healthSidebarElement = $$('.heroHealthBarBox');
				var experienceSidebarElement = $$('.heroXpBarBox');
				$H(data.heroData).each(function(entry, key)
				{

					var box = elementAttributesContainer.down('.' + key);

					if (box != null)
					{
						var elementCurrent = box.down('.current');
						var elementProgress = box.down('.progress .bar');
						var elementPoints = box.down('.points');
						var elementTooltips = box.getElements('.tooltip');

						if (box.hasClass('res'))
						{
							var labels = $('setResource').getElements('.resource label .current');
							labels.each(function(item, index)
							{
								item.set('html', entry['resourceHero' + index]);
							});
						}

						if (box.hasClass('tooltip'))
						{
							elementTooltips.push(box);
						}

						if (elementCurrent && elementCurrent.down('.value'))
						{
							elementCurrent = elementCurrent.down('.value');
						}
						if (typeof entry.current != 'undefined' && elementCurrent)
						{
							elementCurrent.set('html', entry.current);
						}

						if (typeof entry.percent != 'undefined' && elementProgress)
						{
							elementProgress.setStyles(
							{
								width: entry.percent + '%'
							});

							if (typeof entry.backgroundColor != 'undefined')
							{
								elementProgress.setStyles(
								{
									backgroundColor: entry.backgroundColor
								});
							}
						}

						if (typeof entry.points != 'undefined' && elementPoints)
						{
							// prÃ¼fe auf Inputfeld
							if (elementPoints.down('input') !== null)
							{
								elementPoints.down('input').value = entry.points;
							}
							else
							{
								elementPoints.set('html', entry.points);
							}
						}

						if (typeof entry.tooltip != 'undefined' && elementTooltips.length)
						{
							elementTooltips.setTipUnescaped(entry.tooltip);
						}
					}
				});

				if (elementAttributesContainer.className != 'hero-dead') {
					elementAttributesContainer.down('.experience').down('.value').set('html', data.heroData.experience.current);
					// Health Balken
					if (elementAttributesContainer.down('.health')) {
						elementAttributesContainer.down('.health').down('.value').set('html', data.heroData.health.percent + "%");
						elementAttributesContainer.down('.health').down('.bar').setStyles({
							width: data.heroData.health.percent + '%'
						});
					}
					//health sidebar:
					healthSidebarElement.setTitle(data.heroData.health.tooltipSidebar);
					healthSidebarElement.down('.bar').setStyles({
						width: data.heroData.health.percent + '%'
					});
					//experience sidebar:
					experienceSidebarElement.setTitle(data.heroData.experience.tooltipSidebar);
					experienceSidebarElement.down('.bar').setStyles({
						width: data.heroData.experience.percent + '%'
					});
				}

				// Set the item "free" for moving again
				if (typeof $this.DoubleClickPreventer !== 'undefined') {
					$this.DoubleClickPreventer.cancelTimer();
				}
				// Reset the dragsStatus in any case
				$this.dragStatus = false;

				// Callbacks nach dem Request
				if ($this.options.afterRequestCallback[data.itemTypeId])
				{
					$this.options.afterRequestCallback[data.itemTypeId]($this, $this.options, amount, data);
				}
			}
		});

		return this;
	},

	/**
	 * findet den ersten freien inventarplatz
	 *
	 * @return object
	 */
	findFirstFreeInventory: function()
	{
		var freeItem = null;

		$$('.inventory').each(function(item)
		{
			if (item.getChildren().length == 0 && freeItem == null)
			{
				freeItem = item;
			}
		});

		return freeItem;
	},

	/**
	 * Constructor
	 *
	 * @param object options
	 */
	initialize: function(options)
	{
		var $this = this;

		this.setOptions(options);

		this.options.data.each(function(item)
		{
			$this.createAndAddItem(item);
		});

		this.createDivs();
	},

	/**
	 * prÃ¼ft eine id auf eine inventar ID
	 *
	 * @param string id
	 * @return bool
	 */
	isInventoryId: function(id)
	{
		return id.substr(0, 9) == 'inventory';
	},

	/**
     * enables drag support
	 *
	 * @return Travian.Game.Hero.Inventory
	 */
	makeDraggable: function()
	{
		var $this = this;
		var dragContainer = $('drag_cont');
		var dropElement = $$('.draggable');
		var text = $('text');

		$$('.item').each(function(item)
		{
			if (item.item.isUseable == false)
			{
				return;
			}
            //Make hero items dragable, but only for non-mobile versions
            if(!Travian.isMobile())
            {
                new Drag.Move(item,
                    {
                        // Drag.Move options
                        droppables: dropElement,
                        container: dragContainer,
                        // Drag options
                        handle: item,
                        // Drag.Move Events
                        onDrop: function(el, dr)
                        {
                            Travian.Tip.hide();
                            if ($this.startDrop == true)
                            {
                                if (el.item.slot != 'bag' && el.item.placeId == 0)
                                {
                                    el.addClass('onHero');
                                }
                                // not dragged onto a drop area
                                if (!dr)
                                {
                                    $this.moveToDrop(el, el.item.placeElement);
                                }
                                // dragged onto a suitable drop area or inventory
                                else if (dr.id == el.item.slot || $this.isInventoryId(dr.id))
                                {
                                    el.addClass('highlight');
                                    (function()
                                    {
                                        el.removeClass('highlight');
                                    }).delay(500);
                                    $this.unMark(dr);

                                    if (el.item.placeElement != dr)
                                    {
                                        $this.moveToDrop(el, dr);
                                    }
                                    else
                                    {
                                        $this.moveToDrop(el, el.item.placeElement);
                                    }
                                }
                                // ??
                                else
                                {
                                    $this.moveToDrop(el, el.item.placeElement);
                                }
                                $this.startDrop = false;
                                el.removeClass('whileDragging');
                            }

                            // ie6 & ie7 Fix, ie6 & ie7 have a bug on calculating the z-index of nested elements
                            // http://brenelz.com/blog/squish-the-internet-explorer-z-index-bug/
                            if ($$('body')[0].hasClass('ie6') || $$('body')[0].hasClass('ie7'))
                            {
                                el.getParents().each(function(e)
                                {
                                    // depending on the element's context the root container is reset parallel to the according inventory
                                    if (e.id == 'bodyOptions' || e.id == 'hero_inventory')
                                    {
                                        e.setStyles(
                                            {
                                                zIndex: 0,
                                                position: 'static'
                                            });
                                    }
                                });
                            }

                            return true;
                        },
                        onLeave: function(el, dr)
                        {
                            // $this.unMark(dr);
                        },
                        onEnter: function(el, dr)
                        {
                            if (dr.id == el.item.slot || dr.id.substr(0, 9) == 'inventory')
                            {
                                $this.mark(dr);
                            }
                        },
                        // Drag Events
                        onStart: function(el)
                        {
                            $this.startDrop = true;
                            $this.dragStatus = true;
                            el.addClass('whileDragging').removeClass('onHero');

                            // ie6 & ie7 Fix, ie6 & ie7 have a bug on calculating the z-index of nested elements
                            // http://brenelz.com/blog/squish-the-internet-explorer-z-index-bug/
                            if ($$('body')[0].hasClass('ie6') || $$('body')[0].hasClass('ie7'))
                            {
                                el.getParents().each(function(e)
                                {
                                    // depending on the element's context the root container parallel to the according inventory is set to the foreground
                                    if (e.id == 'bodyOptions' || e.id == 'hero_inventory')
                                    {
                                        e.setStyles(
                                            {
                                                zIndex: 1,
                                                position: 'relative'
                                            });
                                    }
                                });
                            }
                        }
                    });
            }

		});

		return this;
	},

	/**
	 * markiert einen Slot
	 *
	 * @param element slot
	 * @retrun Travian.Game.Hero.Inventory
	 */
	mark: function(slot)
	{
		$(slot).addClass('heroMarked');

		return this;
	},

	/**
	 * bewegt ein Item
	 *
	 * @param object item
	 * @param object drop
	 * @param int amount
	 * @return Travian.Game.Hero.Inventory
	 */
	moveItem: function(item, drop, amount)
	{
		if (amount)
		{
			this.executeMovement(item.item.id, drop.id, amount);
		}
		else
		{
			Element.dispose(item).inject(drop);
		}

		this.resetItemDrop(item);
		item.item.placeElement = drop;

		return this;
	},

	/**
     * moves an item to its drop point
	 *
	 * @param object item
	 * @param object drop
	 * @param bool noAjax
	 * @return Travian.Game.Hero.Inventory
	 */
	moveToDrop: function(item, drop, noAjax)
	{
		var $this = this;
		var freeItem = null;
		var dialogOptions =
		{
			title: '',
			text: '',
			executeAfterOkay: true,
			show: true,
			onOpen: Travian.emptyFunction,
			onOkay: Travian.emptyFunction,
			onCancel: Travian.emptyFunction,
			relativeTo: item,
			amount: item.item.amount
		};

		var showDialog = false;

		var dropFunction = function()
		{
			if (!dialogOptions.executeAfterOkay)
			{
				$this.resetItemDrop(item);
				return;
			}

			var amount;
			if (noAjax)
			{
				amount = false;
			}
			else if (showDialog == true)
			{
				amount = ($('amount') != undefined) ? $('amount').value : 1;
			}
			else
			{
				amount = item.item.amount;
			}

			$this.moveItem(item, drop, amount);
		};

		if (noAjax != true && !this.isInventoryId(drop.id) && ((item.item.instant && item.item.amount == 1) || item.item.amount > 1))
		{
            // dialog callback function for texts
			if (this.options.useOneDialogTitleCallbacks[item.item.typeId])
			{
				dialogOptions = Object.merge(dialogOptions, this.options.useOneDialogTitleCallbacks[item.item.typeId](item.item, this.options, dialogOptions) || {});
			}

			showDialog = true;

            // Default Texts
            if (dialogOptions.title == '') {
                dialogOptions.title = item.item.name;
            }
            if (dialogOptions.text == '') {
                // item can be executed instantly
                if (item.item.instant) {
                    // there's only one item
                    if (item.item.amount == 1) {
                        dialogOptions.text = this.options.text.useOneDialogTitle;
                    }
                    // there are more than one items
                    else {
                        dialogOptions.text = this.options.text.useDialogDescription;
                    }
                }
                // item can be moved
                else {
                    dialogOptions.text = this.options.text.moveDialogDescription;
                }
            }

            // if dialog should be shown
			if (dialogOptions.show)
			{
                // change dialog function behaviour
				dialogOptions.onOkay = (dialogOptions.onOkay || Travian.emptyFunction).wrap(function(proceed, dialog, contentElement)
				{
					dropFunction(dialog, contentElement);

					return proceed(dialog, contentElement);
				});
				dialogOptions.onCancel = (dialogOptions.onCancel || Travian.emptyFunction).wrap(function(proceed, dialog, contentElement)
				{
					$this.moveToDrop(item, item.item.placeElement, true);

					return proceed(dialog, contentElement);
				});

				this.dialog(dialogOptions);
			}
		}
		else
		{
			dropFunction();
		}

		return this;
	},

	/**
	 * bewegt ein Item zum passended Platz
	 *
	 * @param object item
	 * @return Travian.Game.Hero.Inventory
	 */
	moveToMatchingPlace: function(item)
	{
		if (this.dragStatus == false)
		{
			var slot = item.item.slot;

			if (item.item.placeElement == $(slot))
			{
				var freeItem = this.findFirstFreeInventory();
				this.moveToDrop(item, freeItem);
			}
			else
			{
				this.moveToDrop(item, $(slot));
			}

			this.unMark(slot);
		}
		else
		{
			this.dragStatus = false;
		}

		return this;
	},

	/**
	 * setzt das Item zurÃ¼ck zu dem DragStartPunkt
	 *
	 * @return Travian.Game.Hero.Inventory
	 */
	resetItemDrop: function(item)
	{
		item.setStyles(
		{
			left: 0,
			top: 0
		});

		return this;
	},

	/**
	 * demarkiert ein Item
	 *
	 * @param element slot
	 * @return Travian.Game.Hero.Inventory
	 */
	unMark: function(slot)
	{
		$(slot).removeClass('heroMarked');

		return this;
	}
});
/**
 * Wechselstube
 */
Travian.Game.Hero.SilverExchange = new Class(
{
	Implements: [
		Options, Events
	],

	/**
	 * Optionswerte durch die Wahl des BaseMultipliers als
	 * Multiplikationsfaktor kann die Umrechnungsformel verallgemeinert werden
	 */
	options:
	{
		// Elemente fÃ¼r den Silber zu Gold-Wechsel
		exchangeOptions:
		{
			/**
			 * @var string (BenÃ¶tigt) Tauschrichtung
			 */
			directionType: 'SilverToGold',

			/**
			 * @var DOMElement (Optional) button um zu diesem Wechseltyp zu wechseln.
			 */
			showExchangeTypeElement: null,

			/**
			 * @var DOMElement (BenÃ¶tigt) eingabeelement fÃ¼r diesen Wechseltyp
			 */
			inputElement: null,

			/**
			 * Liste aller Objekte, die das Resultat mitgeteilt bekommen sollen.
			 * Erwartet werden Objekte mit der Form: {setType:..., element:...}
			 * setType wird an die Mootools-methode Ã¼bergeben
			 */
			resultValueElements: [],

			/**
			 * Liste aller Objekte, die den Beginn der Rechnung mitgeteilt bekommen sollen.
			 * Erwartet werden Objekte mit der Form: {setType:..., element:...}
			 * setType wird an die Mootools-methode Ã¼bergeben
			 */
			inputValueElements: [],

			/**
			 * @var float (BenÃ¶tigt) Factor mit dem die usereingabe multipliziert wird um
			 *	  zum Ergebniss zu gelangen
			 */
			baseMultiplier: 1,

			/**
			 * @var float (BenÃ¶tigt) Maximale obergrenze
			 */
			maxAmount: null,

			/**
			 * @var DOMElement (BenÃ¶tigt) Button zum verschicken des Silber zu Gold tausches.
			 */
			submitButton : null,

            /**
             * var DOMElement second button for gold convert
             */
            submitButton2 : null,

			/**
			 * @var function (Optional) Funktion zum individuellen Handhaben der MaximalWerte
			 */
			handleMaxFunction : null,

			/**
			 * @var function Funktion auf dem listener
			 */
			submitButtonClickListener : null
		},

		// perJS-Anzeigbare Nachrichten
		/**
		 * Erwarteter aufbau einer Nachricht:
		 * {type:'...', message:'...'}
		 */
		messages :
		{
			/**
			 * @var string Nachricht
			 */
			notEnoughGold: null,

			/**
			 * @var string Nachricht
			 */
			autoCorrect: null,

			/**
			 * @var string Nachricht
			 */
			disabledSubmitTooltip: null,

			/**
			 * @var string Nachricht
			 */
			enabledSubmitTooltip: null,

			/**
			 * @var string Nachricht
			 */
			maxAmountTooltip: null
		},

		/**
		 * Funktion die nach erfolgreichem Wechsel getriggert wird.
		 *
		 * @var function maxAmountChangedFunction({oldGold: g1, oldSilver: s1, newGold: g2, newSilver: s2})
		 */
		maxAmountChangedFunction: null
	},

	/**
	 * Warten wir auf eine Antwort?
	 */
	isWaiting: false,

	/**
	 * Timestamp, wann die WechselStube das letzte mal "benutzt" wurde (wird fÃ¼r auslaufen Timer mit SeitenReloads benÃ¶tigt)
	 */
	lastUseTimestamp: 0,

	/**
	 * Initialisiert die Wechselstube
	 *
	 * @param {array} options
	 *
	 * @return this
	 */
	initialize: function(options)
	{
		this.setOptions(options);

		// wenn gesetzt Listener aufbauen
		if (this.options.exchangeOptions.showExchangeTypeElement)
		{
			this.assignListenerToShowExchangeType(this.options.exchangeOptions.showExchangeTypeElement);
		}

		if (this.options.exchangeOptions.submitButton
			&& this.options.exchangeOptions.directionType == 'SilverToGold')
		{
			var $this = this;
			this.options.exchangeOptions.submitButton.addEvent(
				'click',
				function(event)
				{
					$this.sendAction(this);
					event.stop();
				});
		}

		if (this.options.exchangeOptions.inputElement)
		{
			// GoldTausch listener hinzufÃ¼gen
			this.assignListenerToExchangeInput(this.options.exchangeOptions.inputElement);
		}
	},

	/**
	 * FÃ¼gt alle Listener fÃ¼r das UmrechnungsInputfeld hinzu
	 * bei GoldZuSilber wird zusÃ¤tzlich der Preis auf dem PaymentButton angepasst
	 *
	 * @param {MooTools-DOMElement} element Element dem die Listener hinzugefÃ¼gt
	 *			werden sollen
	 * @param {function} maxHandlingCallback callback zur Behandlung
	 *			Fallspezifischem Handling des MaxAmounts (sollte den neuen
	 *			targetvalue zurÃ¼ck geben)
	 *
	 * @return this
	 */
	assignListenerToExchangeInput: function(element)
	{
		var $this = this;

		// listener berechnet und ersetzt das Ergebniss der Umrechnungs-Formel
		var keyUpInputListener = function(value)
		{
			$this.hideAllMessages();
            if($this.options.exchangeOptions.submitButton && $this.options.exchangeOptions.submitButton2)
            {
                $this.options.exchangeOptions.submitButton2.addClass('hide');
                $this.options.exchangeOptions.submitButton.removeClass('hide');
            }
			return $this.updateExchangeValue(value);
		};

		element.filterInput(
			{
				regex:/^[1-9][0-9]{0,6}$/,
				success: keyUpInputListener
			});

		return this;
	},

	/**
	 * berechnet das Ergebnis aus der Umrechnungsformel
	 * und setzt es in alle konfigurierten Elemente ein
	 *
	 * @return this
	 */
	updateExchangeValue: function(value)
	{
		this.setLastUseTimestamp();

		var usedOptionPart = this.options.exchangeOptions;
		var inputValue = parseInt(value, 10) || 0;
		var targetValue = 0;

		// nachdem festgestellt wurde, das maxAmount erreicht ist,
		// darf der Tooltip nicht mehr (durch Button enable) aktualisiert werden.
		var tooltipKey = 'enabledSubmitTooltip';
		var callbackToHandleMaximum = usedOptionPart.handleMaxFunction;
		var allowInput = true;

		// wenn maxAmount gesetzt ist wird versucht die funktion
		// callbackToHandleMaximum aufzurufen um entsprechend
		// auf das erreichen des Maximalen Wertes zu reagieren.
		if (usedOptionPart.maxAmount !== null && 'function' == typeof callbackToHandleMaximum && inputValue > usedOptionPart.maxAmount)
		{
			targetValue = callbackToHandleMaximum.call(this, inputValue);
			tooltipKey = 'maxAmountTooltip';
            this.updateElementsTooltip(usedOptionPart.submitButton, 'maxAmountTooltip');

            if(usedOptionPart.submitButton2)
            {
                this.updateElementsTooltip(usedOptionPart.submitButton2, 'maxAmountTooltip');
            }

			$$('#silverExchange .exchangeType' + this.options.exchangeOptions.directionType + ' input')[0].set('value', inputValue);
			allowInput = false;//usedOptionPart.directionType == "SilverToGold" ? false : true;
		}
		else
		{
			targetValue = inputValue;
		}

		// nach mÃ¶glicher VerÃ¤nderung wird das Ergebnis berechnet
		targetValue = Math.floor(targetValue * usedOptionPart.baseMultiplier);

		// wenn das Ergebniss 0 sein wÃ¼rde soll der submitbutton ausgegraut werden
		if (usedOptionPart.submitButton && targetValue == 0)
		{
			// deactivate Button
			this.disableElement(usedOptionPart.submitButton);
			tooltipKey = 'disabledSubmitTooltip';

            if(usedOptionPart.submitButton2)
            {
                this.disableElement(usedOptionPart.submitButton2);
            }
		}
		else if (usedOptionPart.submitButton) // an sonsten wird der submitButton aktiviert
		{
			// activate Button
			this.enableElement(usedOptionPart.submitButton);

            if(usedOptionPart.submitButton2)
            {
                this.enableElement(usedOptionPart.submitButton2);
            }
		}

		// aktualisieren des SubmitTooltips wenn vorhanden
        this.updateElementsTooltip(usedOptionPart.submitButton, tooltipKey);

        if(usedOptionPart.submitButton2)
        {
            this.updateElementsTooltip(usedOptionPart.submitButton2, tooltipKey);
        }

		this.setElementsValue(usedOptionPart.resultValueElements, targetValue);
		this.setElementsValue(usedOptionPart.inputValueElements, inputValue);

		return allowInput;
	},

	/**
	 * Hilfs-Funktion die allen Ã¼bergebenen Elementen den value mitteilt
	 * Erwartet wird ein Array von Objekten mit der Form: {setType:..., element:...}
	 * setType wird an die Mootools-methode Ã¼bergeben
	 *
	 * @param array elementsArray
	 * @param mixed value
	 *
	 * @return this;
	 */
	setElementsValue: function(elementsArray, value)
	{
		// jedem Element das Ergebnis mitteilen
		if (typeof(elementsArray) == 'object' && (elementsArray instanceof Array))
		{
			for (var i = 0; i < elementsArray.length; i++)
			{
				elementsArray[i].element.set(elementsArray[i].setType, value);
			}
		}
		return this;
	},

	/**
	 * FÃ¼gt alle listener dem Ã¼bergebenen Element hinzu
	 * Element ist dann in der Lage das Teil-Formular anzuzeigen.
	 *
	 * @param {MooTools-DOMElement} element
	 *
	 * @return this
	 */
	assignListenerToShowExchangeType: function(element)
	{
		var $this = this;

		// Bei Mausclick wird die entsprechende Tauschrichtung angezeigt
		var clickListener = function(event)
		{
			$this.switchToExchangeType();
			event.stop();
		};

		element.addEvent('click', clickListener);
		return this;
	},

	/**
	 * Wechselt die Anzeige der Wechselstube zwischen GoldZuSilber- und
	 * SilberZuGold-Tausch
	 *
	 * @return this
	 */
	switchToExchangeType: function()
	{
		this.setLastUseTimestamp();

		// switchButton umschalten
		this.inactivateEach('#silverExchange .directionButtons .directionButton');
		this.activate(this.options.exchangeOptions.showExchangeTypeElement);

		// input Formel umschalten
		this.inactivateEach('#silverExchange .exchangeType');
		this.activate($$('#silverExchange .exchangeType' + this.options.exchangeOptions.directionType)[0]);

		this.hideAllMessages();
		this.updateExchangeValue($$('#silverExchange .exchangeType' + this.options.exchangeOptions.directionType + ' input')[0].get('value'));

		return this;
	},

	/**
	 * Deaktiviert alle elemente, die Ã¼ber den Selektor erreicht werden
	 *
	 * @param {string} selector
	 *
	 * @return void
	 */
	inactivateEach: function(selector)
	{
		Array.each($$(selector), function(item)
		{
			item.removeClass('active');
			item.addClass('disabled');
		});
	},

	/**
	 * Aktiviert ein Element
	 *
	 * @param {DOMElement} element aktiviert das Ã¼bergebene domElement
	 *
	 * @return this
	 */
	activate: function(element)
	{
		element.addClass('active');
		element.removeClass('disabled');
		return this;
	},

	/**
	 * Anzeige einer Nachricht anhand eines SchlÃ¼ssels Erwartet die Nachricht im
	 * OptionsArray
	 * Wird von funktionen aufgerufen die im Backend definiert werden.
	 *
	 * @param {string} messageKey
	 *
	 * @return this
	 */
	showMessageByKey: function(messageKey)
	{
		var message = this.options.messages[messageKey];
		this.showMessage(message);
		return this;
	},

	/**
	 * Anzeige einer Nachricht erwartet:
	 * {'type' : 'error|notice|info',
	 *  'message' : "Hallo Welt"}
	 *
	 * @param {object} msgObj
	 *
	 * @return this
	 */
	showMessage: function(msgObj)
	{
		var messageHtml = '<span class="' + msgObj.type + '">' + msgObj.message + '</span>';
		$$('#silverExchange .exchangeMessageLine').set('html', messageHtml);
		return this;
	},

	/**
	 * Verschecken aller Nachrichten
	 *
	 * @return this
	 */
	hideAllMessages: function()
	{
		$$('#silverExchange .exchangeMessageLine').set('html', '<span>&nbsp;</span>');
		return this;
	},

	/**
	 * Aktualisiert den Tooltip fÃ¼r das Ã¼bergebene Element
	 *
	 * @return this
	 */
	updateElementsTooltip: function(element, messageKey)
	{
		if (this.options.messages[messageKey] && this.options.messages[messageKey].message)
		{
			element.setTip(this.options.messages[messageKey].message);
		}
	},

	/**
	 * Verschickt das Formular per ajax Wird direkt vom SubmitButton aufgerufen
	 *
	 * Triggert ein changeMaxAmounts-Event um die neuen Werte an eventListener mitzuteilen
	 *
	 * @oaram button
	 *
	 * @return {Object}
	 */
	sendAction: function(button)
	{
		var $this = this;
		$this.setLastUseTimestamp();

		if (this.isButtonInactive(button))
		{
			return false;
		}

		if (this.isWaiting === true)
		{
			return false;
		}

		this.isWaiting = true;
		this.disableElement(button);

		var inputs = $$('#silverExchange .exchangeType input.text');

		inputs.each(this.disableElement);

		var startTime = new Date().getTime();

		var exTyp = this.options.exchangeOptions.directionType;
		var silver = inputs.filter('input[class^=silverInput]')[0].get('value');
		var gold = inputs.filter('input[class^=goldInput]')[0].get('value');

		Travian.ajax(
		{
			data:
			{
				cmd: 'silverExchange',
				exTyp: exTyp,
				s: silver,
				g: gold
			},
			onSuccess: function(response)
			{
				if (response.errorMessage)
				{
					$this.setError(response);
				}
				else
				{
					// min 500 millisec timeout
					var timeDiff = Math.max(0, 500 - (new Date().getTime() - startTime));

					var unwait = function(response)
					{
						if (response.message)
						{

							$this.isWaiting = false;
							$this.hideAllMessages();
							$this.overrideGoldAndSilver(response.oldGold, response.oldSilver, response.newGold, response.newSilver);
							$this.enableElement(button);

							inputs.each(this.enableElement);

							if ($this.options.exchangeOptions.directionType == 'SilverToGold')
							{
								$this.options.exchangeOptions.maxAmount = response.newSilver;
							}
							else
							{
								$this.options.exchangeOptions.maxAmount = response.newGold;
							}

							if ($this.options.maxAmountChangedFunction === 'function')
							{
								$this.options.maxAmountChangedFunction.call(this, {oldGold:response.oldGold, oldSilver:response.oldSilver, newGold:response.newGold, newSilver:response.newSilver});
							}

							$this.fireEvent('changeMaxAmounts', {oldGold:response.oldGold, oldSilver:response.oldSilver, newGold:response.newGold, newSilver:response.newSilver});

							// tastatureingabe triggern um initial ggf Nachrichten anzeigen zu kÃ¶nnen.
							$this.updateExchangeValue($$('#silverExchange .exchangeType' + $this.options.exchangeOptions.directionType + ' input')[0].get('value'));
							$this.showMessage(response.message);

							var url = Travian.parseURL(window.location.href);
							$this.updateHeroAuctionContent(url.searchObject.action, { filter: url.searchObject.filter, page: url.searchObject.page });
						}
					}.delay(timeDiff, $this, response);
				}
			}
		});

		return this;
	},

	/**
	 * Aktualisiert die MaxAmounts dieses Wechselstubenobjekts
	 * Erwartet: {oldGold:g1, oldSilver:s1, newGold:g2, newSilver:s2}
	 *
	 * @param object data
	 *
	 * @return this
	 */
	setMaxAmounts: function(data)
	{
		if (this.options.exchangeOptions.directionType == 'SilverToGold')
		{
			this.options.exchangeOptions.maxAmount = data.newSilver;
		}
		else
		{
			this.options.exchangeOptions.maxAmount = data.newGold;
		}
		return this;
	},

	/**
	 * deaktiviert einen Button
	 *
	 * @param DOMElement button Button um den es geht
	 *
	 * @return this
	 */
	disableElement: function(element)
	{
		element.addClass('disabled');
		return this;
	},

	/**
	 * aktiviert einen Button
	 *
	 * @return this
	 */
	enableElement: function(element)
	{
		element.removeClass('disabled');
		return this;
	},

	/**
	 * prÃ¼ft, ob der Button aktiviert oder deaktivert ist.
	 *
	 * @return true/false true=button ist inactiv false=button ist activ
	 */
	isButtonInactive: function(button)
	{
		return button.hasClass('disabled');
	},

	/**
	 * Ãœberschreibt die Gold und SilberstÃ¤nde auf der kompletten Seite
	 *
	 * @return this
	 */
	overrideGoldAndSilver: function(oldGold, oldSilver, newGold, newSilver)
	{

		if (newGold === undefined && newSilver === undefined)
		{
			return this;
		}

		var oldAmount;
		var newAmount;

		var eachCalculateDiff = function(item)
		{

			if (this.type == 'gold')
			{
				oldAmount = parseInt(oldGold);
				newAmount = parseInt(newGold);
			}
			else
			{
				oldAmount = parseInt(oldSilver);
				newAmount = parseInt(newSilver);
			}
		
			var itemAmount = item.get('html');
			
			// Steuerzeichen usw. entfernen
			var numberFormatter = new Travian.Formatter({forceDecimal:false});
			itemAmount = numberFormatter.removeNonDigits(itemAmount);
			
			itemDiff = oldAmount - itemAmount;

			item.set('html', newAmount + itemDiff);
		};

		$$('.ajaxReplaceableSilverAmountDiff').each(eachCalculateDiff,
		{
			type: 'silver'
		});
		$$('.ajaxReplaceableGoldAmountDiff').each(eachCalculateDiff,
		{
			type: 'gold'
		});

		$$('.ajaxReplaceableSilverAmount').each(function(item)
		{
			item.set('html', newSilver)
		});

		$$('.ajaxReplaceableGoldAmount').each(function(item)
		{
			item.set('html', newGold)
		});

		return this;
	},

	/**
	 * Speichern wann die Wechselstube das letzte mal benutzt wurde.
	 */
	setLastUseTimestamp: function()
	{
		window.lastTimestampUseSilverExchange = new Date().getTime();
	},

	/**
	 * Updates the content of the subtab by the ajax request
	 * @param {string} section Tab section name
	 * @param {Object} additional any other parameters to add to the call
     */
	updateHeroAuctionContent: function(section, additional) {
		var additionalValues = additional || {};
		var data = {
				cmd: 'heroAuctionContent',
				action: section
			};
		for (var key in additionalValues) {
			if (additionalValues.hasOwnProperty(key) && !data[key]) {
				data[key] = additionalValues[key];
			}
		}
		Travian.ajax({
			data: data,
			onSuccess: function(response) {
				if (response.html) {
					$$('#auction').set('html', response.html);
					Travian.TimersAndCounters.initTimers();
				}
			}
		});
	}
});Travian.Game.Hero.HorseToggle = {

    /**
     * @var boolean flag if an ajax call is still running
     */
    waitingForResponse: false,

    init: function() {
        $$('#horseToggleBox > div button').addEvent('mouseover', function() {
            var horseToggleBox = $(this).up().up().up();
            if (horseToggleBox.hasClass('inactive')) {
                horseToggleBox.addClass('hover');
            }
        });

        $$('#horseToggleBox > div button').addEvent('mouseout', function() {
            var horseToggleBox = $(this).up().up().up();
            if (horseToggleBox.hasClass('inactive')) {
                horseToggleBox.removeClass('hover');
            }
        });

        $$('#horseToggleBox > div button').addEvent('click', function() {

            if(Travian.Game.Hero.HorseToggle.waitingForResponse) {
                return false;
            }

            var horseToggleBox = $(this).up().up().up();
            if(horseToggleBox.hasClass('inactive')) {

                var inactiveBefore = $$('#horseToggleBox > div.inactive');
                var activeBefore = $$('#horseToggleBox > div.active');

                inactiveBefore.getElements('.button button')[0].addClass('disabled');

                Travian.Game.Hero.HorseToggle.waitingForResponse = true;

                Travian.ajax(
                {
                    data: {
                        cmd: 'horseToggle'
                    },

                    onSuccess: function(data) {

                        if(data.changed) {
                            var speedDisplay = $$('.speed .powervalue .current')[0];

                            if(speedDisplay) {
                                speedDisplay.set('html', data.newSpeed);
                            }

                            $$('#heroSpeedValueNumber').set('html', data.newSpeed);

                            inactiveBefore.removeClass('inactive').addClass('active');
                            activeBefore.removeClass('active').addClass('inactive');

                            window.fireEvent('domAltered', $$('#horseToggleBox > div.inactive'));
                            window.fireEvent('domAltered', $$('#horseToggleBox > div.active'));
                        }

                        inactiveBefore.getElements('.button button')[0].removeClass('disabled');

                        Travian.Game.Hero.HorseToggle.waitingForResponse = false;
                    }
                });
            }
        });
    }
};Travian.Game.Hero.Properties = {};/**
 * Formular fÃ¼r Heldenattribute & Rohstoffproduktion
 */
Travian.Game.Hero.Properties.PropertyForm = new Class(
{
	Extends: Travian.Form,

	unloadIdentifier: null,

	/**
	 * Aktualisiert den Zustand des Button.
	 *
	 * @return Travian.Game.Hero.Properties.PropertyForm
	 */
	onDirty: function(dirty)
	{
		// suche Button
		var buttonSaveHeroAttributes = this.elements['saveHeroAttributes'].getInput();

		// suche messageElement
		var messageElement = $$('.heroAttributesFormMessage');

		if (dirty)
		{
			messageElement.removeClass('hide');
			buttonSaveHeroAttributes.removeClass('disabled').disabled = false;

			this.unloadIdentifier = Travian.Form.UnloadHelper.enableSecurity(this.unloadIdentifier);
		}
		else
		{
			messageElement.addClass('hide');
			buttonSaveHeroAttributes.addClass('disabled').disabled = true;

			Travian.Form.UnloadHelper.disableSecurity(this.unloadIdentifier);
		}

		// Sync the resetHeroAttributes button disable state so the button can't be clicked when seemingly disabled
		if(typeof this.elements['resetHeroAttributes'] !== 'undefined') {
			var buttonResetHeroAttributes = this.elements['resetHeroAttributes'].getInput();
			buttonResetHeroAttributes.disabled = buttonResetHeroAttributes.hasClass('disabled');
		}

		return this;
	},

	/**
	 * Callback fÃ¼r Klick auf Button.
	 * Setzt einen Request zur Speicherung des Formulars ab.
	 *
	 * @return Travian.Game.Hero.Properties.PropertyForm
	 */
	onClick: function (element) {
		switch (element.getName()) {
			case 'saveHeroAttributes':
				this.saveHeroAttributes();
				break;
			case 'resetHeroAttributes':
				this.resetHeroAttributes();
				break;
			default:
				return;
		}
		return this;
	},

	saveHeroAttributes: function () {
		var data = {
			cmd: 'heroSetAttributes',
			resource: this.elements['resource'].getValue(),
			attackBehaviour: this.elements['attackBehaviour'].getValue()
		};
		if (this.elements['properties'] !== undefined)
		{
			data.attributes = this.elements['properties'].getPropertyValues();
		}

		Travian.Form.UnloadHelper.disableSecurity(this.unloadIdentifier);

		Travian.ajax(
			{
				data: data
			});
	},

	resetHeroAttributes: function () {
		Travian.ajax(
			{
				data: {cmd: 'heroResetAttributes'}
			});
	}
});Travian.Game.Hero.PropertySetter = new Class(
{
	Extends: Travian.Form.Element,

	/**
	 * options
	 *
	 * @var object
	 */
	options:
	{
		/**
		 * verfÃ¼gbare zu setzende Punkte
		 *
		 * @var int
		 */
		availablePoints: 0,

		/**
		 * Element Kontainer
		 *
		 * @var string|DOM Node
		 */
		element: null,

		/**
		 * css selektor zum finden der Minus Buttons
		 *
		 * @var string
		 */
		selectorBtnMinus: '.pointsValueSetter.sub a',

		/**
		 * css selektor zum finden der Plus Buttons
		 *
		 * @var string
		 */
		selectorBtnPlus: '.pointsValueSetter.add a',

		/**
		 * css selektor fÃ¼r die verfÃ¼gbaren punkte anzeige
		 *
		 * @var string
		 */
		elementAvailablePoints: null
	},

	/**
	 * liefert die noch verfÃ¼gbaren punkte
	 *
	 * @return int
	 */
	getAvailablePoints: function()
	{
		return this.options.availablePoints - this.getSettedPoints();
	},

	/**
	 * liefert die eingestellten Werte
	 *
	 * @return object
	 */
	getPropertyValues: function()
	{
		return this.options.attributes.inject({}, function(acc, attribute)
		{
			acc[attribute.getId()] = attribute.getSettedPoints();

			return acc;
		});
	},

	/**
	 * PrÃ¼ft, ob sich etwas geÃ¤ndert hat.
	 *
	 * @return bool
	 */
	isDirty: function()
	{
		return this.getSettedPoints() > 0;
	},

	/**
	 * Constructor
	 *
	 * @param object options
	 */
	initialize: function(form, options)
	{
		var $this = this;

		this.parent(form);

		this.options = Object.append(this.options, options || {});

		// eltern element zuweisen
		this.options.attributes.each(function(attribute)
		{
			attribute.setPropertySetter($this);
		});

		// element finden
		this.options.element = $(this.options.element);
		this.options.elementAvailablePoints = $(this.options.elementAvailablePoints);

		// aktualisierung
		this.update();
	},

	/**
	 * liefert die verfÃ¼gbaren punkte
	 *
	 * @return int
	 */
	getSettedPoints: function()
	{
		return this.options.attributes.inject(0, function(acc, attribute)
		{
			return acc + attribute.getSettedPoints();
		});
	},

	/**
	 * aktualisieren der Ansicht
	 *
	 * @return Travian.Game.Hero.PropertySetter
	 */
	update: function()
	{
		this.options.attributes.each(function(attribute)
		{
			attribute.updateButtons();
		});

		// Anzeige der Punkte aktualisieren
		this.options.elementAvailablePoints.set('html', this.getAvailablePoints());

		this.onChange();

		return this;
	}
});Travian.Game.Hero.PropertySetter.Attribute = new Class(
{
	Implements: [
		Options
	],

	/**
	 * options
	 *
	 * @var object
	 */
	options:
	{
		/**
		 * attribute Id
		 *
		 * @var string
		 */
		id: null,

		/**
		 * element container fÃ¼r das Attribute
		 *
		 * @var string
		 */
		element: null,

		/**
		 * Aktuelle Wert aus den verteilten Punkten
		 *
		 * @var float
		 */
		value: null,

		/**
		 * aktuell bereits verwendete Punkte
		 *
		 * @var int
		 */
		usedPoints: null,

		/**
		 * maximaler Wert an punkte welcher gesetzt werden kann
		 *
		 * @var int
		 */
		maxPoints: null,

		/**
		 * css selektor zum finden der Minus Buttons
		 *
		 * @var string
		 */
		elementBtnMinus: '.pointsValueSetter.sub a',

		/**
		 * css selektor zum finden der Plus Buttons
		 *
		 * @var string
		 */
		elementBtnPlus: '.pointsValueSetter.add a',

		/**
		 * css selektor zum finden der Plus Buttons
		 *
		 * @var string
		 */
		elementInput: '.points input',

		/**
		 * Progress bar
		 *
		 * @var string
		 */
		elementProgressBar: '.progress .bar.setted',

		/**
		 * Value
		 *
		 * @var string
		 */
		elementValue: '.current .value'
	},

	propertySetter: null,

	/**
	 * gesetzte Punkte
	 *
	 * @var int
	 */
	settedPoints: 0,

	/**
	 * fÃ¼gt einen oder mehrere Punkte hinzu
	 *
	 * @param int point
	 * @return Travian.Game.Hero.PropertySetter.Attribute
	 */
	addPoint: function(point)
	{
		if (typeOf(point) == 'null')
		{
			point = 1;
		}

		if (point < 0)
		{
			point = 0;
		}

		return this.setSettedPoints(this.getSettedPoints() + point);
	},

	/**
	 * Berechnet den neuen Wert fÃ¼r die Anzeige
	 *
	 * @return int
	 */
	calculateValue: function()
	{
		return 0;
	},

	/**
	 * id des attributes
	 *
	 * @return string
	 */
	getId: function()
	{
		return this.options.id;
	},

	/**
	 * liefert die maximale anzahl an punkte die vergeben werden kÃ¶nnen
	 *
	 * @var int
	 */
	getMaxPoints: function()
	{
		return this.options.maxPoints;
	},

	/**
	 * liefert das Parent Object
	 *
	 * @return Travian.Game.Hero.PropertySetter
	 */
	getPropertySetter: function()
	{
		if (this.propertySetter == null)
		{
			throw 'missing propertySetter in Travian.Game.Hero.PropertySetter.Attribute';
		}

		return this.propertySetter;
	},

	/**
	 * liefert die gesetzten punkte
	 *
	 * @return int
	 */
	getSettedPoints: function()
	{
		return this.settedPoints;
	},

	/**
	 * absolute anzahl an punkten die gesetzt sind
	 *
	 * @return int
	 */
	getTotalPoints: function()
	{
		return this.settedPoints + this.options.usedPoints;
	},

	/**
	 * Constructor
	 *
	 * @param object options
	 */
	initialize: function(options)
	{
		var $this = this;

		this.setOptions(options);

		this.options.element = $(this.options.element);
		this.options.elementBtnMinus = this.options.element.down(this.options.elementBtnMinus);
		this.options.elementBtnPlus = this.options.element.down(this.options.elementBtnPlus);
		this.options.elementInput = this.options.element.down(this.options.elementInput);
		this.options.elementProgressBar = this.options.element.down(this.options.elementProgressBar);
		this.options.elementValue = this.options.element.down(this.options.elementValue);

		// an die element binden
		var timer = null;
		var preventDoubleClick = false;

		/**
		 * Callback funktion Click dummy
		 *
		 * @param Event e
		 * @return bool
		 */
		var fnClick = function(pointDirection, e)
		{
			e.stop();

			// dies wird benÃ¶tigt, da MouseDown und Click beide ausgelÃ¶st werden ABER
			// ebenso eine Benutzung der Tastatur einen Click auslÃ¶st
			if (preventDoubleClick == false)
			{
				$this[pointDirection + 'Point']();
			}
			preventDoubleClick = false;

			return false;
		};

		/**
		 * Callback funktion fÃ¼r Mouse Taste losgelassen
		 *
		 * @param Event e
		 * @return bool
		 */
		var fnMouseUp = function(e)
		{
			e.stop();
			if (timer)
			{
				clearInterval(timer);
			}

			// Highlighting
			e.target.removeClass('click');
			return false;
		};

		/**
		 * Callback funktion fÃ¼r Mouse Taste gedrÃ¼ckt
		 *
		 * @param string pointDirection addierungsrichtung ('add' oder 'sub')
		 * @param Event e
		 * @return bool
		 */
		var fnMouseDown = function(pointDirection, e)
		{
			e.stop();
			if (timer)
			{
				clearInterval(timer);
			}
			preventDoubleClick = true;

			// Highlighting
			e.target.addClass('click');

			// Vorheriges Mouse up beenden
			$(document.body).removeEvent('mouseup', fnMouseUp);

			// allgemeines Mouse up event hinzufÃ¼gen
			$(document.body).addEvent('mouseup', fnMouseUp);

			// Timer starten
			$this[pointDirection + 'Point']();
			timer = $this[pointDirection + 'Point'].periodical(200, $this);

			return false;
		};

		/**
		 * Callback funktion fÃ¼r Mouse Rad
		 *
		 * @param Event e
		 * @return bool
		 */
		var fnMouseWheel = function(e)
		{
			var element = null;
			var value = (e.wheel > 0 ? 1 : -1);

			e.stop();
			if (timer)
			{
				clearInterval(timer);
			}

			// Punkte setzen
			$this.setSettedPoints($this.getSettedPoints() + value);

			// Highlighting
			if (value > 0)
			{
				element = $this.options.elementBtnPlus;
				$this.options.elementBtnMinus.removeClass('click');
			}
			else
			{
				element = $this.options.elementBtnMinus;
				$this.options.elementBtnPlus.removeClass('click');
			}
			element.addClass('click');
			timer = (function()
			{
				element.removeClass('click');
			}).delay(100);

			return false;
		};

		// button Minus Events
		this.options.elementBtnMinus.addEvents(
		{
			// click verhindern
			click: fnClick.curry('sub'),
			// mousedown fÃ¼r start fÃ¼r dauer drÃ¼cken
			mousedown: fnMouseDown.curry('sub'),
			// Mousewheel wird betÃ¤tigt
			mousewheel: fnMouseWheel
		});
		// button Plus Events
		this.options.elementBtnPlus.addEvents(
		{
			// click verhindern
			click: fnClick.curry('add'),
			// mousedown fÃ¼r start fÃ¼r dauer drÃ¼cken
			mousedown: fnMouseDown.curry('add'),
			// Mousewheel wird betÃ¤tigt
			mousewheel: fnMouseWheel
		});

		// Input feld fÃ¼r eingabe
		this.options.elementInput.addEvents(
		{
			// direkteingabe
			change: function(e)
			{
				var points = parseInt($this.options.elementInput.value);
				if (isNaN(points))
				{
					points = $this.getTotalPoints();
				}
				$this.setSettedPoints(points - $this.options.usedPoints);
			},
			// Mousewheel wird betÃ¤tigt
			mousewheel: fnMouseWheel
		});
	},

	/**
	 * eltern teil der Property Setter
	 *
	 * @param Travian.Game.Hero.PropertySetter propertySetter
	 * @return Travian.Game.Hero.PropertySetter.Attribute
	 */
	setPropertySetter: function(propertySetter)
	{
		this.propertySetter = propertySetter;
		return this;
	},

	/**
	 * setzt Punkte
	 *
	 * @param int points
	 * @return Travian.Game.Hero.PropertySetter.Attribute
	 */
	setSettedPoints: function(points)
	{
		points = parseInt(points);
		if (isNaN(points))
		{
			points = this.settedPoints;
		}

		// unter null setzen geht nicht
		if (points < 0)
		{
			points = 0;
		}

		// mehr als die absolute anzahl geht nicht
		if (points > this.getMaxPoints() - this.options.usedPoints)
		{
			points = this.getMaxPoints() - this.options.usedPoints;
		}

		// mehr als aktuell verfÃ¼gbar an punkten ist, geht auch nicht
		var availablePoints = this.getPropertySetter().getAvailablePoints();
		if (this.settedPoints < points && availablePoints < points - this.settedPoints)
		{
			points = this.settedPoints + availablePoints;
		}

		// punkte setzen
		this.settedPoints = points;

		return this.update();
	},

	/**
	 * entfernt einen oder mehrere Punkt sofern mÃ¶glich
	 *
	 * @param int point
	 * @return Travian.Game.Hero.PropertySetter.Attribute
	 */
	subPoint: function(point)
	{
		if (typeOf(point) == 'null')
		{
			point = 1;
		}

		if (point < 0)
		{
			point = 0;
		}

		return this.setSettedPoints(this.getSettedPoints() - point);
	},

	/**
	 * aktualisiert die Ansicht
	 *
	 * @return Travian.Game.Hero.PropertySetter.Attribute
	 */
	update: function()
	{
		// wert aktualisieren
		this.options.elementValue.set('html', this.calculateValue());
		this.options.elementInput.value = this.options.usedPoints + this.getSettedPoints();

		// Prozentbalken aktualisieren
		this.options.elementProgressBar.setStyles(
		{
			/**
			 * @see TGHelper_HeroInventoryPercent::heroInventoryPercent
			 */
			width: Math.max(0, Math.min(100, Math.round(100 / Math.min(this.getMaxPoints() + 4, 100) * this.getSettedPoints()))) + '%'
		});

		// eltern teil und alls andere aktualiseren
		this.getPropertySetter().update();

		return this;
	},

	/**
	 * aktualisiert die ansicht der buttons
	 *
	 * @return Travian.Game.Hero.PropertySetter.Attribute
	 */
	updateButtons: function()
	{
		if (this.getTotalPoints() >= this.getMaxPoints() || this.getPropertySetter().getAvailablePoints() == 0)
		{
			this.options.elementBtnPlus.addClass('disabled');
		}
		else
		{
			this.options.elementBtnPlus.removeClass('disabled');
		}

		if (this.getSettedPoints() == 0)
		{
			this.options.elementBtnMinus.addClass('disabled');
		}
		else
		{
			this.options.elementBtnMinus.removeClass('disabled');
		}

		return this;
	}
});Travian.Game.Hero.PropertySetter.Attribute.Power = new Class(
{
	/**
	 * Extends
	 */
	Extends: Travian.Game.Hero.PropertySetter.Attribute,

	/**
	 * options
	 *
	 * @var object
	 */
	options:
	{
		/**
		 * Basis Wert Items
		 *
		 * @var int
		 */
		valueOfItems: 0,

		/**
		 * Value Bonus
		 *
		 * @var int
		 */
		valueBonus: 0
	},

	/**
	 * Berechnet den neuen Wert fÃ¼r die Anzeige
	 *
	 * @return int
	 */
	calculateValue: function()
	{
		return 100 + this.getTotalPoints() * this.options.valueBonus + this.options.valueOfItems;
	}
});Travian.Game.Hero.PropertySetter.Attribute.OffBonus = new Class(
{
	/**
	 * Extends
	 */
	Extends: Travian.Game.Hero.PropertySetter.Attribute,

	/**
	 * Berechnet den neuen Wert fÃ¼r die Anzeige
	 *
	 * @return string
	 */
	calculateValue: function()
	{
		return Math.round(this.getTotalPoints() * 0.2 * 10) / 10 + '%';
	}
});Travian.Game.Hero.PropertySetter.Attribute.DefBonus = new Class(
{
	/**
	 * Extends
	 */
	Extends: Travian.Game.Hero.PropertySetter.Attribute,

	/**
	 * Berechnet den neuen Wert fÃ¼r die Anzeige
	 *
	 * @return string
	 */
	calculateValue: function()
	{
		return Math.round(this.getTotalPoints() * 0.2 * 10) / 10 + '%';
	}
});Travian.Game.Hero.PropertySetter.Attribute.ProductionPoints = new Class(
    {
        /**
         * Extends
         */
        Extends: Travian.Game.Hero.PropertySetter.Attribute,

        /**
         * Berechnet den neuen Wert fÃ¼r die Anzeige
         *
         * @return int
         */
        calculateValue: function() {
            return this.getTotalPoints();
        },

        options: {
            /**
             * Worth of one point of production bonus
             *
             * @var Array
             */
            pointWorth: [6, 20, 20, 20, 20]
        },

        /**
         * element Resources
         *
         * @var Array
         */
        elementResources: [],

        /**
         * Gibt die mÃ¶gliche Bonusproduktion einer Resource zurÃ¼ck
         * ohne dabei den aktuell gestzten Produktionstyp zu berÃ¼cksichtigen
         *
         * @param {Number} resourcesIndex 0 - 4
         * @return int
         * @see TGHero::getPossibleBonusProductionForResource
         */
        getPossibleBonusProductionForResource: function(resourcesIndex) {
            //wenn alle Ressis gleich produziert werden sollen
            if (resourcesIndex === 0) {
                return this.calculateValue() * this.options.pointWorth[0] * Travian.Game.speed;
            }

            //wenn nur eine Ressi produziert werden soll
            if (resourcesIndex <= 4) {
                return this.calculateValue() * this.options.pointWorth[resourcesIndex] * Travian.Game.speed;
            }

            //alles andere: kein Bonus
            return 0;
        },

        /**
         * Constructor
         *
         * @param {Object} options
         */
        initialize: function(options) {
            var elementSetResources = $('setResource');

            var localOptions = Object.append(this.options, options || {});
            this.parent(localOptions);

            if (elementSetResources) {
                for (var i = 0; i <= 4; i++) {
                    this.elementResources[i] = elementSetResources.down('label[for="resourceHero' + i + '"] .current');
                }
            }
        },

        /**
         * aktualisiert die Ansicht
         *
         * @return Travian.Game.Hero.PropertySetter.Attribute.ProductionPoints
         */
        update: function() {
            var $this = this;

            this.elementResources.each(function(element, index) {
                if (element) {
                    element.set('html', $this.getPossibleBonusProductionForResource(index));
                }
            });

            return this.parent();
        }
    });
Travian.Game.Hero.PropertySetter.Attribute.RegenBonus = new Class(
{
	/**
	 * Extends
	 */
	Extends: Travian.Game.Hero.PropertySetter.Attribute,

	/**
	 * Calculates the new value for display
	 *
	 * @return string
	 */
	calculateValue: function()
	{
		return Math.round(this.getTotalPoints() * 0.5 * 10) / 10 + '%';
	}
});Travian.Game.Vid = new Class({

	/**
	 * @var string
	 */
	active: null,

	/**
	 * Constructor
	 */
	initialize: function(active)
	{
		var $this = this;

		$this.active = active;
		$this.setActive(active);
		$this.showDescription(active);

		$$('.container .vid').addEvents(
		{
			'mouseover':  function(e)
			{
				$this.highlight($(e.target).get('id'));
			},

			'mouseout': function(e)
			{
				$this.unhighlight();
			},

			'click': function(e)
			{
				$this.setActive($(e.target).get('id'));
			}
		});
	},

	/**
	 * Volkicon highlighten
	 *
	 * @var string vid
	 */
	highlight: function(vid)
	{
		$$('.container .' + vid).addClass(vid + 'Highlight');
		this.showDescription(vid);
	},

	/**
	 * Volkicon unhighlighten
	 *
	 * @var string vid
	 */
	unhighlight: function()
	{
		$$('.container .vid').removeClass('vid1Highlight').removeClass('vid2Highlight').removeClass('vid3Highlight');
		this.showDescription(this.active);
	},

	/**
	 * Beschreibung anzeigen
	 *
	 * @var string vid
	 */
	showDescription: function(vid)
	{
		$$('.container .description.').hide();
		$$('.container .description.' + vid).show();
	},

	/**
	 * Volk aktiv setzen
	 *
	 * @var string vid
	 */
	setActive: function(vid)
	{
		this.active = vid;
		$$('form input[name="vid"]').set('value', vid.substring(3, 4));
		$$('.container .vid').removeClass('vid1Active').removeClass('vid2Active').removeClass('vid3Active');
		$$('.container .' + vid).addClass(vid + 'Active');
	}

});
Travian.Game.Sector = new Class(
{

	active: null,

	initialize: function(active)
	{
		var $this = this;

		$this.setActive(active);

		$$('#sector .map .sector .highlight').addEvents(
		{
			'mouseover': function(e)
			{
				var id = $(e.target).up('.sector').get('id');
				if (id != $this.active && !$(e.target).hasClass('disabled'))
				{
					$(e.target).addClass('hover');
				}

			},
			'mouseout': function(e)
			{
				$(e.target).removeClass('hover');
			},
			'click': function(e)
			{
				if (!$(e.target).hasClass('disabled'))
				{
					var id = $(e.target).up('.sector').get('id');
					$(e.target).removeClass('hover');
					$this.setActive(id);
				}
			}

		});

		$$('#sector form select[name="sector"]').addEvent('change', function(e)
		{
			var id = $(e.target).get('value');
			$this.setActive(id);
		});

	},

	show: function(vid)
	{
		$$('.vid .description.').hide();
		$$('.vid .description.' + vid).show();
	},

	setActive: function(sector)
	{
		this.active = sector;

		$$('#sector .map .sector .highlight').removeClass('active');
		$$('#sector .map .sector.' + sector + ' .highlight').addClass('active');

		var select = $$('#sector form select[name="sector"]');
		if (select.get('value') != sector)
		{
			select.set('value', sector);
		}

	}

});
Travian.Game.WelcomeScreen = {

    dialog: null,

    /**
     * opens the welcome screen which should show up before tribe selection
     */
    show: function() {

        Travian.Game.WelcomeScreen.dialog = new Travian.Dialog.Ajax(
        {
            data: {
                cmd: 'welcomeScreen'
            },
            context: 'welcomeScreen',
            buttonOk: false,
            darkOverlay: true,
            buttonCancel: false,
            overlayCancel: false
        });
    },

    /**
     * opens the welcome screen as an introduction screen
     * the introduction screen is the one you can always access from the infobox
     */
    showIntroductionScreen: function() {

        Travian.Game.WelcomeScreen.dialog = new Travian.Dialog.Ajax(
        {
            data: {
                cmd: 'welcomeScreen',
                introduction: true
            },
            context: 'introductionScreen',
            buttonOk: false,
            darkOverlay: true,
            buttonCancel: true,
            overlayCancel: true,
            cssClass: 'white introductionScreen'
        });
    },

    /**
     * bind the events of the welcome screen
     */
    bindEvents: function() {

        var welcomeScreen = $$('.welcomeScreen')[0];

        // click on "start playing" closes the popup
        $$('.welcomeScreen .startPlaying').addEvent('click', function() {
           Travian.Game.WelcomeScreen.dialog.close();
        });

        // clicking on the video container adds an overlay to the background, loads and plays the video
        $$('.welcomeScreen .previewVideoContainer').addEvent('click', function() {

            var iFrame;
            if(!welcomeScreen.hasClass('heroItemsEnabled')) {
                iFrame = '<iframe width="568" height="320" src="https://www.youtube.com/embed/bOtcpFmtO04?rel=0&amp;showinfo=0&amp;autoplay=1" frameborder="0" allowfullscreen></iframe>';
            } else {
                iFrame = '<iframe width="568" height="320" src="https://www.youtube.com/embed/fkcrmCTv0d4?rel=0&amp;showinfo=0&amp;autoplay=1" frameborder="0" allowfullscreen></iframe>';
            }
            $$('.welcomeScreen .previewVideoContainer').set('html', iFrame);
            $$('.welcomeScreen .welcomeScreenHeader .overlay').addClass('active');
        });

        // clicking on read more/less toggles the collapsed/extended state of the whole screen
        $$('.welcomeScreen .readMore, .welcomeScreen .readLess').addEvent('click', function() {
            Travian.Game.WelcomeScreen.toggleState();
        });

        // clicking on a feature also switches to the extended state of the whole screen
        $$('.welcomeScreen .feature').addEvent('click', function() {
            Travian.Game.WelcomeScreen.extend();
        });
    },

    /**
     * toggles between the collapsed and extended state
     */
    toggleState: function() {
        var welcomeScreen = $$('.welcomeScreen')[0];

        if(welcomeScreen.hasClass('extended')) {
            Travian.Game.WelcomeScreen.collapse();
        } else {
            Travian.Game.WelcomeScreen.extend();
        }
    },

    /**
     * switches to the extended state
     */
    extend: function() {
        var welcomeScreen = $$('.welcomeScreen')[0];

        if(!welcomeScreen.hasClass('extended')) {
            welcomeScreen.addClass('extended');
        }

        setTimeout(function() {
            Travian.Game.WelcomeScreen.dialog.updatePosition(500);
        }, 1000);
    },

    /**
     * switches to the collapsed state
     */
    collapse: function() {
        var welcomeScreen = $$('.welcomeScreen')[0];

        if(welcomeScreen.hasClass('extended')) {
            welcomeScreen.removeClass('extended');
        }

        setTimeout(function() {
            Travian.Game.WelcomeScreen.dialog.updatePosition(500);
        }, 1000);
    }
};Travian.Game.Activation = new Class({

	arrowShapes: {
        'tribe1': '',
        'tribe2': '',
        'tribe3': '',
        'tribe4': '',
        'tribe5': ''
	},

	basicShape: 'M10 10 V230 H[ARROW_POSITION] l20 20 l20 -20 H530 V10 Z',

	initialize: function()
	{
		var $this = this;

		$this.createArrowShapes();
		$this.updateArrowPositions();
		$this.bindEvents();
	},

    /**
	 * binds all needed events
     */
    bindEvents: function()
    {
        var $this = this;

        // selecting a tribe is updating the arrow position inside the description box
        $$('#tribeSelectors input[name="vid"]').addEvent('change', function() {

            $this.updateArrowPositions();

        });
    },

    /**
	 * the arrow position is based on the current selected tribe and the amount of tribes available
	 * this function detects the needed parameters and creates the shapes for each tribe position
     */
	createArrowShapes: function()
	{
        var $this = this;

		var labelDimensions = $$('#tribeSelectors label')[0].getComputedSize({styles: ['margin']});
		var totalLabelWidth = labelDimensions.totalWidth;

		// check how many tribes can be selected
		var tribeAmount = $$('#tribeSelectors input[name="vid"]').length;

		// calculate white space in front of tribe selector nr. 1
        var fullWidth = $$('#tribeSelectors')[0].getSize().x;
        var whiteSpace = (fullWidth - tribeAmount * totalLabelWidth) / 2;

		for(var i = 0; i < tribeAmount; i++) {

			$this.arrowShapes['tribe'+(i+1)] =  $this.basicShape.replace('[ARROW_POSITION]', whiteSpace + i * totalLabelWidth + totalLabelWidth / 3.3333);

		}

	},

    /**
	 * updates the arrow position based on the current selected tribe
     */
	updateArrowPositions: function()
	{
        var $this = this;

        // fetch all tribe selectors
        var selectors = $$('#tribeSelectors input[name="vid"]');

        // for RTL, we need to reverse the order of the tribes, so that the arrow positions match the mirrored tribe selectors
		if($$('body.rtl').length > 0) {
			console.log('rtl detected!');
			selectors.reverse();
		}

        // get position (number) of the checked radio box

        for(var i = 0; i < selectors.length; i++) {

            if(selectors[i].checked === true) {

                // now we know which one was selected and can tell the svg to use the according shape
                TweenLite.to($$('#presentation svg .inner, #presentation svg .outer'), 0.25, {morphSVG: $this.arrowShapes['tribe'+(i+1)]});
            }
        }
	}
});
Travian.Game.Overlay = {

	/**
 	 * Liste aller Elemente, die ins Overlay geholt werden
 	 * @var Object
 	 */
	elementsForOverlay: [
		{elementId: 'logo', element: null, position: null, placeholder: null, highlight: null},
		{elementId: 'navigation', element: null, position: null, placeholder: null, highlight: null},
		{elementId: 'goldSilver', element: null, position: null, placeholder: null, highlight: null},
		{elementId: 'outOfGame', element: null, position: null, placeholder: null, highlight: null},
		{elementId: 'stockBar', element: null, position: null, placeholder: null, highlight: null},
		{elementId: 'sidebarBeforeContent', element: null, position: null, placeholder: null, highlight: null},
		{elementId: 'sidebarAfterContent', element: null, position: null, placeholder: null, highlight: null}
	],

	/**
	 * Liste aller Gruppen fÃ¼r die Highlights und den Elementen, die zu der Gruppe gehÃ¶ren
	 * @var Object
	 */
	highlightGroups: [
		{groupId: 'mainPage', element: null, members: ['logo']},
		{groupId: 'villageSwitch', element: null, members: ['n1', 'n2']},
		{groupId: 'mainNavigation', element: null, members: ['n3', 'n4', 'n5', 'n6']},
		{groupId: 'premiumFeatures', element: null, members: ['n7', 'goldSilver']},
		{groupId: 'outOfGame', element: null, members: ['outOfGame']},
		{groupId: 'villageResources', element: null, members: ['stockBarWarehouseWrapper', 'stockBarResource1', 'stockBarResource2', 'stockBarResource3']},
		{groupId: 'villageCrop', element: null, members: ['stockBarGranaryWrapper', 'stockBarResource4', 'stockBarFreeCropWrapper']},
		{groupId: 'sidebarBoxHero', element: null, members: ['sidebarBoxHero']},
		{groupId: 'sidebarBoxAlliance', element: null, members: ['sidebarBoxAlliance', 'sidebarBoxAllianceNoNews']},
		{groupId: 'sidebarBoxInfobox', element: null, members: ['sidebarBoxInfobox']},
		{groupId: 'sidebarBoxLinklist', element: null, members: ['sidebarBoxLinklist']},
		{groupId: 'sidebarBoxActiveVillage', element: null, members: ['sidebarBoxActiveVillage']},
		{groupId: 'sidebarBoxVillagelist', element: null, members: ['sidebarBoxVillagelist']},
		{groupId: 'sidebarBoxQuestmaster', element: null, members: ['sidebarBoxQuestmaster']},
        {groupId: 'sidebarBoxDailyquests', element: null, members: ['sidebarBoxDailyquests', 'travianBirthdayRibbon']},
		{groupId: 'sidebarBoxWheelOfFortune', element: null, members: ['sidebarBoxWheelOfFortune', 'wheelOfFortuneRibbon']}
	],

	/**
	 * Element, das den Hintergrund abdunkelt
	 * @var DOMElement
	 */
	darken: null,

	/**
	 * Element, in dem das komplette Overlay angezeigt wird
	 * @var DOMElement
	 */
	overlay: null,

	/**
	 * Texte fÃ¼r das Overlay
	 * @var Object
	 */
	texts: null,

	/**
	 * Erzeugt den Overlay Container im Body inklusive der Default-Anzeige
	 */
	createOverlay: function()
	{
		// Overlay Container und Inhalt erzeugen
		this.overlay = new Element('div').set(
		{
			id: 'overlay',
			'class': Travian.getDirection(),
			html: '<div class="center"><div class="overlayContent"><p class="overlayTitle">' + this.texts.defaultTitle + '</p><p class="overlayDescription">' + this.texts.defaultDescription + '</p><a class="overlayCloseLink" href="#" onclick="Travian.Game.Overlay.closeOverlay();">' + this.texts.closeLink + '</a></div><div class="elements"></div><div class="highlights"></div></div>'
		});

		// Overlay in den body einfÃ¼gen
		document.body.grab(this.overlay, null, false);
	},

	/**
	 * DurchlÃ¤uft die Elemente aus this.elementsForOverlay,
	 * erzeugt Platzhalter fÃ¼r die Elemente, fÃ¼gt ein Element fÃ¼r das Highlight ein
	 * und verschiebt die Elemente ins Overlay
	 */
	moveElementsToOverlay: function()
	{
		var $this = this;

		// EintrÃ¤ge aus this.elementsForOverlay durchlaufen, Elemente finden und Positionen merken
		this.elementsForOverlay.each(function(entry)
		{
			// Element suchen
			entry.element = $(entry.elementId);

			if (entry.element !== null)
			{
				// Position innerhalb #center
				entry.position = entry.element.getPosition($('center'));
			}
		});

		// EintrÃ¤ge aus this.elementsForOverlay durchlaufen, Platzhalter erzeugen und Element verschieben
		this.elementsForOverlay.each(function(entry)
		{
			if (entry.element !== null)
			{
				// Erzeuge Platzhalter
				entry.placeholder = $this.createPlaceholder(entry.element);

				// Position innerhalb von #center Ã¼bernehmen
				entry.element.setStyles(
				{
					position: 'absolute',
					left: entry.position.x,
					top: entry.position.y,
					'float': 'none',
					clear: 'none'
				});

				// Platzhalter vor dem Element in den DOM einfÃ¼gen
				entry.element.grab(entry.placeholder, 'before', false);

				// Element ins Overlay verschieben
				$this.overlay.down('.center').down('.elements').grab(entry.element, null, false);
			}
		});
	},

	/**
	 * FÃ¼gt den Elementen die gehighlightet werden sollen ein Image fÃ¼r die Darstellung und
	 * Events fÃ¼r mouseover/mouseout (Zum Ã„ndern des Beschreibungstexts) hinzu
	 */
	createHighlights: function ()
	{
		var $this = this;

		// Elemente fÃ¼r den Beschreibungstext
		var title = this.overlay.getElement('.overlayTitle');
		var description = this.overlay.getElement('.overlayDescription');
		var closeLink = this.overlay.getElement('.overlayCloseLink');

		// EintrÃ¤ge aus this.elementsForOverlay durchlaufen
		this.highlightGroups.each(function(highlightGroup)
		{
			// Position und GrÃ¶ÃŸe fÃ¼r das Highlight Element ermitteln
			var rectangle = $this.getRectangle(highlightGroup.members);

			// Nicht erzeugen, wenn die MaÃŸe nicht bestimmt werden konnten
			if (rectangle.top !== null && rectangle.right !== null && rectangle.bottom !== null && rectangle.left !== null)
			{
				highlightGroup.element = new Element('div',
				{
					'class': 'highlight ' + highlightGroup.groupId,
					styles: {
						top: rectangle.top,
						left: rectangle.left,
						width: rectangle.right - rectangle.left + 'px',
						height: rectangle.bottom - rectangle.top + 'px'
					}
				});
				$this.overlay.down('.center').down('.highlights').grab(highlightGroup.element, null, false);

				// FÃ¼r IE muss in das DIV noch ein IMG
				if (Browser.name == 'ie')
				{
					var imageSize = highlightGroup.element.getSize();
					highlightGroup.element.grab(new Element('img',
					{
						src: 'img/x.gif',
						alt: '',
						width: imageSize.x,
						height: imageSize.y
					}), null, false);
				}

				// Events fÃ¼r Beschreibungstext und highlight aktivieren
				highlightGroup.element.addEvents(
				{
					// Title und Description im Content Ã¤ndern, SchlieÃŸen-Link ausblenden und an den Elementen das Highlight aktivieren
					'mouseenter': function(e)
					{
						title.set('html', $this.texts[highlightGroup.groupId + 'Title']);
						description.set('html', $this.texts[highlightGroup.groupId + 'Description']);
						highlightGroup.element.addClass('activeHighlight');
						closeLink.addClass('hide');
					},
					// Title und Description im Content zurÃ¼cksetzen, SchlieÃŸen-Link einblenden und an den Elementen das Highlight deaktivieren
					'mouseleave': function(e)
					{
						title.set('html', $this.texts.defaultTitle);
						description.set('html', $this.texts.defaultDescription);
						highlightGroup.element.removeClass('activeHighlight');
						closeLink.removeClass('hide');
					},
					// Click soll nichts auslÃ¶sen
					'click': function(e)
					{
						return false;
					}
				});
			}
		});
	},

	/**
	 * Nimmt eine Gruppe von Elementen und gibt die Punkte (oben, rechts, unten, links) "#overlay .center" zurÃ¼ck,
	 * Ã¼ber die man ein Rechteck spannen kÃ¶nnte, das die Elemente komplett umschlieÃŸt
	 * @var Object string Liste von ElementIds die umschlossen werden sollen
	 * @return Object {top: int, right: int, bottom: int, left: int}
	 */
	getRectangle: function (elementIds)
	{
		var $this = this;
		var rectangle = {top: null, right: null, bottom: null, left: null};

		elementIds.each(function(elementId)
		{
			var element = $(elementId);

			if (element !== null)
			{
				var position = element.getPosition($this.overlay.down('.center'));
				var size = element.getSize();

				// Noch nicht gesetzt, oder weiter oben als aktueller Wert
				if (rectangle.top === null || position.y < rectangle.top)
				{
					rectangle.top = position.y;
				}

				// Noch nicht gesetzt, oder weiter rechts als aktueller Wert
				if (rectangle.right === null || position.x + size.x > rectangle.right)
				{
					rectangle.right = position.x + size.x;
				}

				// Noch nicht gesetzt, oder weiter unten als aktueller Wert
				if (rectangle.bottom === null || position.y + size.y > rectangle.bottom)
				{
					rectangle.bottom = position.y + size.y;
				}

				// Noch nicht gesetzt, oder weiter links als aktueller Wert
				if (rectangle.left === null || position.x < rectangle.left)
				{
					rectangle.left = position.x;
				}
			}
		});
		return rectangle;
	},

	/**
	 * Erzeugt einen Container, der die gleichen MaÃŸe und die gleichen
	 * Blockelemente hat wie das Ã¼bergebene Element
	 * @param element DOMNode Element fÃ¼r das der Platzhalter erzeugt werden soll
	 * @return placeholder DOMNode Erzeugter Container
	 */
	createPlaceholder: function (element)
	{
		var placeholder = null;

		if (element !== null)
		{
			// GrÃ¶ÃŸe vom Element merken
			var size = element.getSize();

			// Platzhalter erzeugen
			var placeholderId = element.getAttribute('id') + '_placeholder';
			placeholder = new Element('div',
			{
				styles:
				{
					width: size.x,
					height: size.y,
					position: element.getStyle('position'),
					left: element.getStyle('left'),
					right: element.getStyle('right'),
					top: element.getStyle('top'),
					bottom: element.getStyle('bottom'),
					margin: element.getStyle('margin'),
					'float': element.getStyle('float'),
					clear: element.getStyle('clear')
				},
				id: placeholderId
			});
		}

		return placeholder;
	},

	/**
	 * DurchlÃ¤uft die Elemente aus this.elementsForOverlay,
	 * bringt sie zurÃ¼ck an ihren alten Platz, lÃ¶scht deren Platzhalter und
	 * entfernt das Element fÃ¼r das Highlight
	 */
	moveElementsToMainLayout: function()
	{
		var $this = this;

		// EintrÃ¤ge aus this.elementsForOverlay durchlaufen
		this.elementsForOverlay.each(function(entry)
		{
			if (entry.element !== null)
			{
				// Element wieder nach dem Platzhalter einfÃ¼gen
				entry.placeholder.grab(entry.element, 'after', false);

				// Platzhalter lÃ¶schen
				entry.placeholder.destroy();

				// Inline Styles wieder entfernen
				entry.element.removeProperty('style');
			}
		});
	},

	/**
	 * Entfernt die Elemente fÃ¼r das Highlight
	 */
	removeHighlights: function ()
	{
		// EintrÃ¤ge aus this.elementsForOverlay durchlaufen
		this.elementsToHighlight.each(function(entry)
		{
			if (entry.highlight !== null)
			{
				// Element fÃ¼r das Highlight entfernen
				entry.highlight.destroy();
			}
		});
	},

	/**
	 * Schaltet das Overlay ein
	 */
	openOverlay: function()
	{
		var $this = this;

		// Texte fÃ¼r das Overlay holen und es dann Ã¶ffnen
		Travian.ajax(
		{
			data:
			{
				cmd: 'overlay'
			},
			onSuccess: function(response)
			{
				// Texte speichern
				$this.texts = response.texts;

				// Overlay Container erzeugen
				$this.createOverlay();

				// Elemente ins Overlay holen
				$this.moveElementsToOverlay();

				// Highlight Elemente erzeugen
				$this.createHighlights();

				// Abdunklung einblenden
				$this.darken = new Overlay(document.body,
				{
					opacity: 0.9,
					duration: 0,
					zIndex: 1999
				});
				$this.darken.open();

			}
		});
	},

	/**
	 * Schaltet das Overlay aus
	 */
	closeOverlay: function()
	{
		// Elemente an ihren Ursprung bringen
		this.moveElementsToMainLayout();

		// Overlay entfernen
		this.overlay.destroy();

		// Abdunklung entfernen
		this.darken.close().overlay.hide()
	}
};Travian.Game.Highlight = new Class(
{
	Implements: [
		Options
	],

	/**
	 * options
	 *
	 * @var object
	 */
	options:
	{
		/**
		 * CSS Class, wenn das element gerade hervorgehoben wird
		 *
		 * @var string
		 */
		cssHighlighted: 'highlighted on',

		/**
		 * Element, welches gehighlighted werden soll
		 *
		 * @var string
		 */
		element: null,

		/**
		 * Definiert die zu verwendenden Renderer
		 *
		 * @var string
		 */
		renderer: 'rectangle',

		/**
		 * die Options fÃ¼r den Rendererer
		 *
		 * @var object
		 */
		rendererOptions:
		{
		}
	},

	/**
	 * aktueller activ Status
	 *
	 * @var bool
	 */
	active: false,

	/**
	 * der verwendete Renderer
	 *
	 * @var Travian.Game.Highlight.Renderer
	 */
	renderer: null,

	/**
	 * aktiviert den Highlight Status
	 *
	 * @return Travian.Game.Highlight
	 */
	activate: function()
	{
		if (this.active === false)
		{
			this.active = true;
			this.renderer.activate();
			this.getElement().addClass(this.options.cssHighlighted);
		}

		return this;
	},

	/**
	 * deaktiviert den Highlight Status
	 *
	 * @return Travian.Game.Highlight
	 */
	deactivate: function()
	{
		if (this.active === true)
		{
			this.active = false;
			this.getElement().removeClass(this.options.cssHighlighted);
			this.renderer.deactivate();
		}

		return this;
	},

	/**
	 * liefert das Element, welcher hervorgehoben werden soll
	 *
	 * @return DOMNode
	 */
	getElement: function()
	{
		return this.options.element;
	},

	/**
	 * Konstruktor
	 *
	 * @param object options
	 */
	initialize: function(options)
	{
		var $this = this;

		this.setOptions(options);

		// element zum hervorheben finden
		this.options.element = $(this.options.element);
		if (this.options.element === null)
		{
			throw 'missing element for highlighting!';
		}

		// renderer erzeugen
		if (typeof Travian.Game.Highlight.Renderer[this.options.renderer.capitalize()] === 'undefined')
		{
			throw 'unknown renderer "' + this.options.renderer.capitalize() + '" defined!';
		}
		this.renderer = new Travian.Game.Highlight.Renderer[this.options.renderer.capitalize()](this.options.rendererOptions, this);
	},

	/**
	 * toggle active state
	 *
	 * @return Travian.Game.Highlight
	 */
	toggle: function()
	{
		if (this.active)
		{
			return this.deactivate();
		}

		return this.activate();
	}
});Travian.Game.Highlight.Renderer = new Class(
{
	Implements: [
		Options
	],
	/**
	 * options
	 *
	 * @var object
	 */
	options:
	{

	},

	/**
	 * @var Travian.Game.Highlight
	 */
	parentContainer: null,

	/**
	 * aktiviert den Highlight Status
	 *
	 * @return Travian.Game.Highlight.Renderer
	 */
	activate: function()
	{
		return this;
	},

	/**
	 * deaktiviert den Highlight Status
	 *
	 * @return Travian.Game.Highlight.Renderer
	 */
	deactivate: function()
	{
		return this;
	},

	/**
	 * liefert das Element, welcher hervorgehoben werden soll
	 *
	 * @return DOMNode
	 */
	getElement: function()
	{
		return this.parentContainer.getElement();
	},

	/**
	 * Konstruktor
	 *
	 * @param object options
	 * @param Travian.Game.Highlight parentContainer
	 */
	initialize: function(options, parentContainer)
	{
		this.parentContainer = parentContainer;
		this.setOptions(options);

		if (this.parentContainer === null)
		{
			throw 'missing parent container of type Travian.Game.Highlight';
		}
	}
});Travian.Game.Highlight.Renderer.Rectangle = (function()
{
	/**
	 * aktualisiert die Position
	 *
	 * @var Travian.Game.Highlight.Renderer.Rectangle renderer
	 */
	var fnUpdatePosition = function(renderer)
	{
		var coordinates = renderer.getElement().getCoordinates();

		// keine Ã¤nderungen
		if (renderer._lastCoordinates &&
			renderer._lastCoordinates.left == coordinates.left &&
			renderer._lastCoordinates.top == coordinates.top &&
			renderer._lastCoordinates.width == coordinates.width &&
			renderer._lastCoordinates.height == coordinates.height &&
			renderer._lastCoordinates.right == coordinates.right &&
			renderer._lastCoordinates.bottom == coordinates.bottom
		)
		{
			return;
		}

		var left = renderer.getElementLeft();
		var topLeft = renderer.getElementTopLeft();
		var top = renderer.getElementTop();
		var topRight = renderer.getElementTopRight();
		var right = renderer.getElementRight();
		var bottomLeft = renderer.getElementBottomLeft();
		var bottom = renderer.getElementBottom();
		var bottomRight = renderer.getElementBottomRight();

		// FF fix
		if (Browser.name == 'firefox')
		{
			coordinates.left += 1;
		}

		// links
		left.show().setStyles(
		{
			left: coordinates.left - left.getSize().x,
			top: coordinates.top,
			height: coordinates.height
		});

		// oben links
		topLeft.show().setStyles(
		{
			left: coordinates.left - topLeft.getSize().x,
			top: coordinates.top - topLeft.getSize().y
		});

		// oben
		top.show().setStyles(
		{
			left: coordinates.left,
			top: coordinates.top - top.getSize().y,
			width: coordinates.width
		});

		// oben rechts
		topRight.show().setStyles(
		{
			left: coordinates.right,
			top: coordinates.top - topRight.getSize().y
		});

		// rechts
		right.show().setStyles(
		{
			left: coordinates.right,
			top: coordinates.top,
			height: coordinates.height
		});

		// unten rechts
		bottomRight.show().setStyles(
		{
			left: coordinates.right,
			top: coordinates.bottom
		});

		// unten
		bottom.show().setStyles(
		{
			left: coordinates.left,
			top: coordinates.bottom,
			width: coordinates.width
		});

		// unten links
		bottomLeft.show().setStyles(
		{
			left: coordinates.left - bottomLeft.getSize().x,
			top: coordinates.bottom
		});

		renderer._lastCoordinates = coordinates;
	};

	return new Class(
	{
		/**
		 * Extends
		 */
		Extends: Travian.Game.Highlight.Renderer,

		/**
		 * ansammlung an elementen
		 *
		 * @var object
		 */
		elements:
		{
			/**
			 * Element links
			 *
			 * @var DOMNode
			 */
			left: null,

			/**
			 * Element links oben
			 *
			 * @var DOMNode
			 */
			topLeft: null,

			/**
			 * Element oben
			 *
			 * @var DOMNode
			 */
			top: null,

			/**
			 * Element rechts oben
			 *
			 * @var DOMNode
			 */
			topRight: null,

			/**
			 * Element rechts
			 *
			 * @var DOMNode
			 */
			right: null,

			/**
			 * Element links unten
			 *
			 * @var DOMNode
			 */
			bottomLeft: null,

			/**
			 * Element unten
			 *
			 * @var DOMNode
			 */
			bottom: null,

			/**
			 * Element rechts unten
			 *
			 * @var DOMNode
			 */
			bottomRight: null
		},

		/**
		 * dies sind alle erlaubten DOM Tag Names. Alle anderen Elementtypen sind nicht erlaubt
		 *
		 * @var array
		 */
		invalidTypes: [
			'area'
		],

		/**
		 * options
		 *
		 * @var object
		 */
		options:
		{
			/**
			 * CSS Class fÃ¼r das Element links
			 *
			 * @var string
			 */
			cssClassLeft: 'highlighted rectangle left',

			/**
			 * CSS Class fÃ¼r das Element links oben
			 *
			 * @var string
			 */
			cssClassTopLeft: 'highlighted rectangle top left',

			/**
			 * CSS Class fÃ¼r das Element oben
			 *
			 * @var string
			 */
			cssClassTop: 'highlighted rectangle top',

			/**
			 * CSS Class fÃ¼r das Element rechts oben
			 *
			 * @var string
			 */
			cssClassTopRight: 'highlighted rectangle top right',

			/**
			 * CSS Class fÃ¼r das Element rechts
			 *
			 * @var string
			 */
			cssClassRight: 'highlighted rectangle right',

			/**
			 * CSS Class fÃ¼r das Element links unten
			 *
			 * @var string
			 */
			cssClassBottomLeft: 'highlighted rectangle bottom left',

			/**
			 * CSS Class fÃ¼r das Element unten
			 *
			 * @var string
			 */
			cssClassBottom: 'highlighted rectangle bottom',

			/**
			 * CSS Class fÃ¼r das Element rechts unten
			 *
			 * @var string
			 */
			cssClassBottomRight: 'highlighted rectangle bottom right',

			/**
			 * z-index der Elemente des Rechtecks
			 *
			 * @var int
			 */
			zIndex: 6000
		},

		/**
		 * laufernder Timer
		 *
		 * @var int
		 */
		timer: null,

		/**
		 * aktiviert den Highlight Status
		 *
		 * @return Travian.Game.Highlight.Renderer.Rectangle
		 */
		activate: function()
		{
			clearInterval(this.timer);

			fnUpdatePosition(this);
			this.timer = fnUpdatePosition.periodical(50, null, [this]);

			return this;
		},

		/**
		 * deaktiviert den Highlight Status
		 *
		 * @return Travian.Game.Highlight.Renderer.Rectangle
		 */
		deactivate: function()
		{
			clearInterval(this.timer);

			this.getElementLeft().hide();
			this.getElementTopLeft().hide();
			this.getElementTop().hide();
			this.getElementTopRight().hide();
			this.getElementRight().hide();
			this.getElementBottomLeft().hide();
			this.getElementBottom().hide();
			this.getElementBottomRight().hide();

			// reset der positionen da jetzt nicht mehr Ã¼berwacht wird
			this._lastCoordinates = null;

			return this;
		},

		/**
		 * Element unten
		 *
		 * @return DOMNode
		 */
		getElementBottom: function()
		{
			if (this.elements.bottom === null)
			{
				this.elements.bottom = $(new Element('div',
				{
					'class': this.options.cssClassBottom
				})).hide().setStyles(
				{
					position: 'absolute',
					left: 0,
					top: 0,
					zIndex: this.options.zIndex
				});
				document.body.insert(
				{
					bottom: this.elements.bottom
				});
			}

			return this.elements.bottom;
		},

		/**
		 * Element links unten
		 *
		 * @return DOMNode
		 */
		getElementBottomLeft: function()
		{
			if (this.elements.bottomLeft === null)
			{
				this.elements.bottomLeft = $(new Element('div',
				{
					'class': this.options.cssClassBottomLeft
				})).hide().setStyles(
				{
					position: 'absolute',
					left: 0,
					top: 0,
					zIndex: this.options.zIndex
				});
				document.body.insert(
				{
					bottom: this.elements.bottomLeft
				});
			}

			return this.elements.bottomLeft;
		},

		/**
		 * Element rechts unten
		 *
		 * @return DOMNode
		 */
		getElementBottomRight: function()
		{
			if (this.elements.bottomRight === null)
			{
				this.elements.bottomRight = $(new Element('div',
				{
					'class': this.options.cssClassBottomRight
				})).hide().setStyles(
				{
					position: 'absolute',
					left: 0,
					top: 0,
					zIndex: this.options.zIndex
				});
				document.body.insert(
				{
					bottom: this.elements.bottomRight
				});
			}

			return this.elements.bottomRight;
		},

		/**
		 * Element links
		 *
		 * @return DOMNode
		 */
		getElementLeft: function()
		{
			if (this.elements.left === null)
			{
				this.elements.left = $(new Element('div',
				{
					'class': this.options.cssClassLeft
				})).hide().setStyles(
				{
					position: 'absolute',
					left: 0,
					top: 0,
					zIndex: this.options.zIndex
				});
				document.body.insert(
				{
					bottom: this.elements.left
				});
			}

			return this.elements.left;
		},

		/**
		 * Element oben
		 *
		 * @return DOMNode
		 */
		getElementTop: function()
		{
			if (this.elements.top === null)
			{
				this.elements.top = $(new Element('div',
				{
					'class': this.options.cssClassTop
				})).hide().setStyles(
				{
					position: 'absolute',
					left: 0,
					top: 0,
					zIndex: this.options.zIndex
				});
				document.body.insert(
				{
					bottom: this.elements.top
				});
			}

			return this.elements.top;
		},

		/**
		 * Element links oben
		 *
		 * @return DOMNode
		 */
		getElementTopLeft: function()
		{
			if (this.elements.topLeft === null)
			{
				this.elements.topLeft = $(new Element('div',
				{
					'class': this.options.cssClassTopLeft
				})).hide().setStyles(
				{
					position: 'absolute',
					left: 0,
					top: 0,
					zIndex: this.options.zIndex
				});
				document.body.insert(
				{
					bottom: this.elements.topLeft
				});
			}

			return this.elements.topLeft;
		},

		/**
		 * Element rechts oben
		 *
		 * @return DOMNode
		 */
		getElementTopRight: function()
		{
			if (this.elements.topRight === null)
			{
				this.elements.topRight = $(new Element('div',
				{
					'class': this.options.cssClassTopRight
				})).hide().setStyles(
				{
					position: 'absolute',
					left: 0,
					top: 0,
					zIndex: this.options.zIndex
				});
				document.body.insert(
				{
					bottom: this.elements.topRight
				});
			}

			return this.elements.topRight;
		},

		/**
		 * Element rechts
		 *
		 * @return DOMNode
		 */
		getElementRight: function()
		{
			if (this.elements.right === null)
			{
				this.elements.right = $(new Element('div',
				{
					'class': this.options.cssClassRight
				})).hide().setStyles(
				{
					position: 'absolute',
					left: 0,
					top: 0,
					zIndex: this.options.zIndex
				});
				document.body.insert(
				{
					bottom: this.elements.right
				});
			}

			return this.elements.right;
		},

		/**
		 * Konstruktor
		 *
		 * @param object options
		 * @param Travian.Game.Highlight parent
		 */
		initialize: function(options, parentContainer)
		{
			this.parent(options, parentContainer);

			if (this.invalidTypes.indexOf(this.getElement().tagName.toLowerCase()) != -1)
			{
				throw 'invalid tag type for rectangle-highlighting!';
			}
		}
	});
})();Travian.Game.Highlight.Renderer.Image = new Class(
{
	/**
	 * Extends
	 */
	Extends: Travian.Game.Highlight.Renderer,

	/**
	 * ansammlung an elementen
	 *
	 * @var object
	 */
	elements:
	{
		/**
		 * Element, welches als hintergrund dient
		 *
		 * @var DOMNode
		 */
		background: null,

		/**
		 * Element, welches hervorgehoben werden soll
		 *
		 * @var DOMNode
		 */
		placeholder: null
	},

	/**
	 * options
	 *
	 * @var object
	 */
	options:
	{
		/**
		 * dieses delta bekommt das hintergrundelement an allen Ecken zum Element
		 *
		 * @var int
		 */
		borderSurround: 4,

		/**
		 * CSS Class fÃ¼r das hintergrundelement
		 *
		 * @var string
		 */
		cssBackground: 'highlighted background'
	},

	/**
	 * dies sind alle erlaubten DOM Tag Names. Alle anderen Elementtypen sind nicht erlaubt
	 *
	 * @var array
	 */
	validTypes: [
		'div',
		'span',
		'a',
		'li',
		'img',
		'input',
		'button'
	],

	/**
	 * aktiviert den Highlight Status
	 *
	 * @return Travian.Game.Highlight.Renderer.Image
	 */
	activate: function()
	{
		var element = this.getElement();
		var size = element.getSize();

        // Because of new colored buildings levels (TRAIVBXXIV-642), we need adjust highlights position
        var buildingsLevelOffset = element.hasClass('colorLayer') ? 2 : 0;

		// hintergrundelement umpositionieren
		element.insert(
		{
			before: this.getElementBackground().setStyles(
			{
				position: 'absolute',
				left: element.offsetLeft - this.options.borderSurround - buildingsLevelOffset,
				right: 'auto',
				top: element.offsetTop - this.options.borderSurround - buildingsLevelOffset,
				width: size.x + 2 * this.options.borderSurround,
				height: size.y + 2 * this.options.borderSurround
			}).show().dispose()
		});

		return this;
	},

	/**
	 * deaktiviert den Highlight Status
	 *
	 * @return Travian.Game.Highlight.Renderer.Image
	 */
	deactivate: function()
	{
		// background verstecken
		this.getElementBackground().hide();

		return this;
	},

	/**
	 * liefert das Hintergrundelement und erzeugt es wenn noch nicht vorhanden
	 *
	 * @return DOMNode
	 */
	getElementBackground: function()
	{
		if (this.elements.background === null)
		{
			var element = this.getElement();

			// Clone erzeugen, welcher angezeigt werden soll, wenn das element hervorgehoben ist
			this.elements.background = $(element.cloneNode(false)).hide().addClass(this.options.cssBackground);
			element.insert(
			{
				before: this.elements.background
			});
		}

		return this.elements.background;
	},

	/**
	 * Konstruktor
	 *
	 * @param {object} options
	 * @param {object} parentContainer Travian.Game.Highlight
	 */
	initialize: function(options, parentContainer)
	{
		this.parent(options, parentContainer);

		if (this.validTypes.indexOf(this.getElement().tagName.toLowerCase()) === -1)
		{
			throw 'invalid tag type for image-highlighting!';
		}
	}
});
Travian.AdventureList = new Class(
{
	/**
	 * Wird aufgerufen, wenn der Laufzeitenberechner geÃ¶ffnet wird.
	 */
	openDurationsCalulator: function()
	{
		$('durationCalculations').toggleClass('hide');
		if (!$('durationCalculations').hasClass('hide'))
		{
			this.calculateDurations();

		}
	},

	/**
	 * Sobald in der Abenteuerliste ein anderes Dorf ausgewÃ¤hlt wird, werden die Laufzeiten dazu berechnet.
	 * Die HTML-Elemente (Laufzeiten, VersammlungsplatzWarnung,..) werden entsprechend aktualisiert.
	 */
	calculateDurations: function()
	{
		var form = $('adventureListForm');

		// kid der aktuell ausgewÃ¤hlten stadt auswÃ¤hlen
		var current = $('changeVillage').value;
		Travian.ajax(
		{
			data:
			{
				cmd: 'calculateDurationsForAdventure',
				adventureKids: $('adventureListForm').select('input[name*=adventureKid]').inject([], function (acc, element)
				{
					acc.push(element.value);
					return acc;
				}),
				currentKidAndDid: current,
				originalWalkTimes: $('adventureListForm').select('input[name*=adventureWalktimeOriginalVillage]').inject([], function (acc, element)
				{
					acc.push(element.value);
					return acc;
				})

			},
			onSuccess: function(response)
			{
				if (response.noAdventures == false)
				{
					Object.each(response.responseArray, function(content, element)
					{
						$(element).set('html', content);
					});
				}
			}
		});
	}
});
/**
 * FunktionalitÃ¤ten fÃ¼r die Dateneingabe beim Verschicken von Rohstoffen auf dem
 * Marktplatz.
 */
Travian.Game.Marketplace = new Class(
{
	/**
	 * @var int Anzahl der zur VerfÃ¼gung stehenden HÃ¤ndler
	 */
	merchantsAvailable: 0,

	/**
	 * @var int Tragekraft eines HÃ¤ndlers
	 */
	capacityPerMerchant: 0,

	/**
	 * @var int Gesamttragekraft aller HÃ¤ndler im Dorf
	 */
	merchantCapacity: 0,
	
	/**
	 * @var	int Maximum number of merchants
	 */
	merchantsMax: 0,

	/**
	 * Konstruktor
	 *
	 * @param merchantsAvailable int - Anzahl der zur VerfÃ¼gung stehenden
	 *			HÃ¤ndler
	 * @param capacityPerMerchant int - Tragekraft eines HÃ¤ndlers
	 */
	initialize: function(options)
	{
		this.merchantsAvailable = Math.max(options.merchantsAvailable, 0);
		this.capacityPerMerchant = options.capacityPerMerchant;
		this.merchantCapacity = this.merchantsAvailable * this.capacityPerMerchant;
		this.autoCompleter = options.autoCompleter;
		this.merchantsMax = options.merchantsMax;

		this.updateAutoCompleter();
	},

	/**
	 * Wenn HÃ¤ndler ankommen -> Marktplatzanzeigen aktualisieren
	 */
	refresh: function(merchantsAvailable)
	{
		this.merchantsAvailable = Math.max(merchantsAvailable, 0);
		this.merchantCapacity = this.merchantsAvailable * this.capacityPerMerchant;
		$('merchantCapacityValue').set('html', this.merchantCapacity);
		$$('.merchantsAvailable').set('html', this.merchantsAvailable);
		this.visualizeMerchantCapacity();
	},

	/**
	 * macht alle Rohstoff-Links wieder klickbar
	 */
	enableAllLinks: function()
	{
		var i;
		for (i = 1; i <= 4; i++)
		{
			linkToUpdate = $('addRessourcesLink' + i);
			linkToUpdate.removeClass('notClickable');
			linkToUpdate.disabled = false;
		}
	},

	/**
	 * Macht alle Rohstoff-Eingabefelder wieder frisch
	 */
	enableAllInputFields: function()
	{
		var i = 0;
		for (i = 1; i < 5; i++)
		{
			$('r' + i).removeClass('disabled');
			$('r' + i).readOnly = 0;
		}
	},

	/**
	 * macht alle Rohstoff-Links unclickbar
	 */
	disableAllLinks: function()
	{
		var i;
		for (i = 1; i <= 4; i++)
		{
			linkToUpdate = $('addRessourcesLink' + i);
			linkToUpdate.addClass('notClickable');
			linkToUpdate.disabled = true;
		}
	},

	/**
	 * Macht alle Rohstoff-Eingabefelder readonly
	 */
	disableAllInputFields: function()
	{
		var i = 0;
		for (i = 1; i < 5; i++)
		{
			$('r' + i).addClass('disabled');
			$('r' + i).readOnly = 1;
		}
	},

	/**
	 * @param TGAjaxResponse reponse, *Muss* enthalten: notice und formular
	 *
	 * Setzt eine Info ('Rohstoffe wurden verschickt') und setzt das Formular
	 * zurÃ¼ck
	 */
	setNotice: function(response)
	{
		if (response.notice && response.formular)
		{
			$('note').set('html', response.notice);
			$$('.destination').set('html', response.formular);

			this.enableAllLinks();
			this.enableAllInputFields();

			// Eingabefelder leeren
			var i = 1;
			for (i = 1; i < 5; i++)
			{
				$('r' + i).set('value', '');
			}

			// Button zurÃ¼cksetzen
			if (response.button)
			{
				$('button').set('html', response.button);
			}

			$$('.run_dropdown').removeClass('hide');
		}
	},

	/**
	 * Setzen der Fehlermeldung
	 *
	 * @param TGAjaxResponse response
	 */
	setError: function(response)
	{
		if (response.errorMessage)
		{
			$('prepareError').set('html', response.errorMessage);
			$('note').set('html', '');
		}
	},

	/**
	 * Abschicken der Rohstoffe
	 */
	sendRessources: function()
	{
		var $this = this;
		Travian.ajax(
		{
			data:
			{
				cmd: 'prepareMarketplace',
				t: $('t').get('value'),
				id: $('id').get('value'),
				a: $('a').get('value'),
				sz: $('sz').get('value'),
				kid: $('kid').get('value'),
				c: $('c').get('value'),
				x2: $('x2') ? $('x2').get('value') : 1,
				r1: $('r1').get('value'),
				r2: $('r2').get('value'),
				r3: $('r3').get('value'),
				r4: $('r4').get('value')
			},
			onSuccess: function(response)
			{
				if (response.errorMessage)
				{
					$this.setError(response);
				}
				else
				{
					if (response.notice)
					{
						$$('.run_dropdown').removeClass('hide');
						$$('div .destination').set('html', response.formular);
						$this.setNotice(response);
						$this.reloadMarketPlace();
						Travian.TimersAndCounters.initResourcesCounters();
						$this.updateAutoCompleter();
					}

				}
			}
		});

	},

	/**
	 * Rohstoffe wegschicken vorbereiten
	 */
	prepare: function()
	{
		var $this = this;
		var form = $('marketSend');

		x2 = 1;
		if ($('x2'))
		{
			if ($('x2').get('type') == 'checkbox')
			{
				x2 = $('x2').get('checked') ? 2 : 1;
			}
			else
			{
				x2 = $('x2').get('value');
			}
		}

		Travian.ajax(
		{
			data:
			{
				cmd: 'prepareMarketplace',
				r1: $('r1').get('value'),
				r2: $('r2').get('value'),
				r3: $('r3').get('value'),
				r4: $('r4').get('value'),
				dname: $('enterVillageName').get('value'),
				x: $('xCoordInput').get('value'),
				y: $('yCoordInput').get('value'),
				id: $('id').get('value'),
				t: $('t').get('value'),
				x2: x2
			},
			onSuccess: function(response)
			{
				if (response.errorMessage)
				{
					$this.setError(response);
				}
				else
				{
					if (response.formular)
					{
						$this.disableAllLinks();
						$this.disableAllInputFields();

						// bestÃ¤tigungsformular anzeigen
						$$('.destination').set('html', response.formular);
						$$('.run_dropdown').addClass('hide');
						$('prepareError').set('html', '');
						$('note').set('html', '');
						$('r1').focus();
					}

				}
				
				if (response.button)
				{
					$('button').set('html', '<div id="prepareError" class="error">' + $('prepareError').get('html') + '</div>' + response.button + '<div class="clear"></div>');
				}
				return false;
			}
		});

	},

	/**
	 * Eingegebene Daten bearbeiten
	 */
	goBack: function()
	{
		var $this = this;
		this.enableAllLinks();
		this.enableAllInputFields();

		Travian.ajax(
		{
			data:
			{
				cmd: 'marketPlaceGoBack',
				kid: $('kid').get('value'),
				x2: $('x2') ? $('x2').get('value') : 1,
				dname: $('dname') ? $('dname').get('value') : ''

			},
			onSuccess: function(response)
			{
				$$('div .destination').set('html', response.formular);
				$$('div #button').set('html', '<div id="prepareError" class="error"></div>' + response.button + '<div class="clear"></div>');
				$$('.run_dropdown').removeClass('hide');
				$this.updateAutoCompleter();
			}
		});
	},

	/**
	 * Wenn auf der 'Rohstoffe verschicken'-Seite HÃ¤ndler ankommen, soll
	 * verhindert werden, dass die Eingabefelder geleert werden.
	 *
	 * Daher werden im Hintergrund die HÃ¤ndler neu geladen.
	 */
	reloadMarketPlace: function()
	{
		var $this = this;
		Travian.ajax(
		{
			data:
			{
				cmd: 'reloadMarketplace'
			},
			onSuccess: function(response)
			{
				// "HÃ¤ndler unterwegs"-Liste aktualisieren
				$('merchantsOnTheWayFormular').set('html', response.merchantsOnTheWay);
				// Resourcen aktualisieren
				Travian.Game.Layout.updateResources(response.storage);
				// verfÃ¼gbare HÃ¤ndler aktualisieren
				$this.refresh(response.merchantsAvailable);
			}
		});
	},

	/**
	 * Visualisiert, wieviele Rohstoffe bereits (in Bezug auf die
	 * HÃ¤ndlertragekapazitÃ¤t) zum Verschicken ausgewÃ¤hlt wurden.
	 */
	visualizeMerchantCapacity: function()
	{
		this.merchantCapacity = this.merchantsAvailable * this.capacityPerMerchant;
		var sum = this.summarizeInput();
		this.setSelectedRessourcesInfo(sum);
		this.setNotEnoughMerchantsError(sum);
		this.updateLinks();
	},

	/**
	 * ÃœberprÃ¼ft ob genug Rohstoffe zum verschicken Ã¼brig sind und
	 * visualisiert die HÃ¤ndlertragekapazitÃ¤t
	 */
	validateAndVisualizeMerchantCapacity: function(resNum)
	{
		this.validateResources(resNum);

		this.visualizeMerchantCapacity();
	},

	/**
	 * ÃœberprÃ¼ft ob fÃ¼r die bestimmte Ressource noch genug
	 * Rohstoffe vorhanden sind
	 *
	 * @param int Ressource
	 */
	validateResources: function( resNum )
	{
		var input = this.getValue(resNum);
		var clip = this.clipToStorageMaximum(resNum, input);
		var max = input + clip;

		var newVal = input;

		if (input > max)
		{
			newVal = max;
		}

		this.setValue(resNum, newVal);
	},
			
	/**
	 * Validates trade route resources
	 * 
	 * @param {int} resourceNumber
	 */
	 validateTradeRouteResources: function(resourceNumber) {
		var input = Math.max(0, this.getValue(resourceNumber));
		this.setValue(resourceNumber, input);
		
		var sum = this.summarizeInput();
		var capacity = this.merchantsMax * this.capacityPerMerchant;
		
		var params = {};
		var button = $('tradeSaveButton');
		var tradeRouteError = $('tradeRouteError');
		if (sum > capacity) {
			params = {
				'MERCHANTS_NEEDED': Math.ceil(sum / this.capacityPerMerchant),
				'MERCHANTS_AVAILABLE': this.merchantsMax
			};

			tradeRouteError.set('html', '{notEnoughMerchants}'.translate().substitute(params, /\\?\[([^\[\]]+)\]/g));
			tradeRouteError.addClass('error');
			button.disabled = 1;
			button.addClass('disabled');
		} else {
			tradeRouteError.set('html', '');
			tradeRouteError.removeClass('error');
			button.disabled = 0;
			button.removeClass('disabled');
		}
	 },

	/**
	 * Validates trade route resources sanity (more than zero)
	 */
	validateTradeRouteResourcesSanity: function() {
		for (var resourceNumber = 1; resourceNumber <= 4; resourceNumber++) {
			var input = Math.max(0, this.getValue(resourceNumber));
			this.setValue(resourceNumber, input);
		}
		var sum = this.summarizeInput();

		if (sum == 0) {
			var tradeRouteError = $('tradeRouteError');
			tradeRouteError.set('html', '{resourcesNumberInvalid}'.translate());
			tradeRouteError.addClass('error');
			return false;
		}
		return true;
	},

	/**
	 * Etwas unschÃ¶ne LÃ¶sung. Im HTML sind zwei Buttons, einmal disabled, einmal
	 * enabled. Wenn der Button disabled ist, soll man auch nicht per Enter
	 * Rohstoffe verschicken kÃ¶nnen. Daher muss in diesem Fall der disabled
	 * Button 'oben' sein.
	 */
	rearrangeButtons: function()
	{
		/*
		 * var freeMerchantsAvailable = this.furtherMerchantsAvailable(); var
		 * enabledButton = $('enabledButton'); var disabledButton =
		 * $('disabledButton');
		 *
		 * if (freeMerchantsAvailable) { enabledButton.inject(disabledButton,
		 * 'before'); } else { disabledButton.inject(enabledButton, 'before'); }
		 */
	},

	/**
	 * Gibt zurÃ¼ck, ob noch weitere HÃ¤ndler zur VerfÃ¼gung stehen
	 *
	 * @return bool false wenn bereits mehr Rohstoffe ausgewÃ¤hlt wurden als
	 *		 HÃ¤ndler zur VerfÃ¼gung stehen, ansonsten true.
	 */
	furtherMerchantsAvailable: function()
	{
		var sum = this.summarizeInput();
		var freeMerchantCapacity = this.merchantCapacity - sum;
		if (freeMerchantCapacity >= 0)
		{
			return true;
		}
		else
		{
			return false;
		}
	},

	/**
	 * AbhÃ¤ngig von der verfÃ¼gbaren HÃ¤ndlerkapazitÃ¤t werden alle Links neben den
	 * Rohstoffe-Eingabefeldern aktualisiert, so dass die Linkbeschriftung immer
	 * die Zahl wiederspiegelt, die auf das Feld aufaddiert wÃ¼rde, wenn man auf
	 * den Link klicken wÃ¼rde.
	 *
	 * Updaten des Link-Wertes : derzeit auskommentiert
	 */
	updateLinks: function()
	{
		var linkToUpdate = null;
		var toAdd = 0;
		var i;
		for (i = 1; i <= 4; i++)
		{
			linkToUpdate = $('addRessourcesLink' + i);
			toAdd = this.getValueToAddToRessources(i);

			if (toAdd == 0)
			{
				linkToUpdate.addClass('notClickable');
			}
			else
			{
				linkToUpdate.removeClass('notClickable');
			}

			// falls Rohstoffe angezogen werden mÃ¼ssten,
			// kÃ¶nnen nicht mehr abgezogen werden, als in dem Feld drinsteht

			// Nur auskommentiert, falls irgendwann doch auch der Wert angepasst
			// werden soll
			/*
			 * if (toAdd < 0) { toAdd = -Math.min(Math.abs(toAdd),
			 * currentInput); }
			 */
			// linkToUpdate.set('html', toAdd);
		}
	},

	/**
	 * AbhÃ¤ngig von Lagerstand / HÃ¤ndlerkapazitÃ¤t hat der Link neben den
	 * Inputboxen verschiedene Funktionen: - zu wenig HÃ¤ndler : vom
	 * entsprechenden Rohstoff wird wenn mÃ¶glich soviel abgezogen das die
	 * HÃ¤ndler wieder ausreichen , wenn nicht mÃ¶glich komplett auf 0 - nur noch
	 * 1 HÃ¤ndler zum Teil frei : der entsprechende Rohstoff wird wenn mÃ¶glich
	 * soweit erhÃ¶ht das keine freie HÃ¤ndlerkapazitÃ¤t mehr verfÃ¼gbar ist -
	 * mindestens 1 HÃ¤ndler ist komplett frei : es werden soviel von dem
	 * gewÃ¤hlten Rohstoff hinzugefÃ¼gt wie ein HÃ¤ndlertragen kann - keine Freien
	 * HÃ¤ndlerkapazitÃ¤ten : es passiert nichts. Die Zahl wird als nicht
	 * klickbarer Link dargestellt.
	 *
	 */
	addRessources: function(resNum)
	{
		if ($('addRessourcesLink' + resNum).disabled)
		{
			return;
		}
		var toAdd = this.getValueToAddToRessources(resNum);
		var currentInput = this.getValue(resNum);
		if (toAdd != 0)
		{
			this.setValue(resNum, toAdd + currentInput);
		}
		this.visualizeMerchantCapacity();
	},

	/**
	 * Berechnet, welcher Wert Ã¼ber die klickbaren Links neben dem
	 * entsprechenden Rohstoffeingabefeld in das angebene Rohstoff-Feld
	 * hinzugefÃ¼gt wird ( kann auch negativ sein, falls zu wenig HÃ¤ndler
	 * verfÃ¼gbar sind)
	 *
	 * @param int Ressourcen ID
	 *
	 * @return int hinzuzufÃ¼gende Rohstoffmenge
	 */
	getValueToAddToRessources: function(resNum)
	{
		var inputValueToAdd = 0;
		var sum = this.summarizeInput();
		var freeMerchantCapacity = this.merchantCapacity - sum;
		// Es sind noch HÃ¤ndler frei
		if (freeMerchantCapacity > 0)
		{
			// nur noch 1 HÃ¤ndler zum Teil frei
			// -> der entsprechende Rohstoff wird wenn mÃ¶glich soweit erhÃ¶ht das
			// keine freie HÃ¤ndlerkapazitÃ¤t mehr verfÃ¼gbar ist
			if (freeMerchantCapacity < this.capacityPerMerchant)
			{
				inputValueToAdd = freeMerchantCapacity;
			}
			// mindestens 1 HÃ¤ndler ist komplett frei
			// -> es werden soviel von dem gewÃ¤hlten Rohstoff hinzugefÃ¼gt wie
			// ein HÃ¤ndler tragen kann
			else if (freeMerchantCapacity >= this.capacityPerMerchant)
			{
				inputValueToAdd = this.capacityPerMerchant;
			}
		}
		else if (freeMerchantCapacity == 0)
		{
			inputValueToAdd = 0;
		}
		// es sind zu wenig HÃ¤ndler verfÃ¼gbar.
		// Bei einem Klick wird wenn mÃ¶glich vom entsprechenden Rohstoff soviel
		// abgezogen
		// das die HÃ¤ndler wieder ausreichen , wenn nicht mÃ¶glich komplett auf 0
		else
		{
			inputValueToAdd = freeMerchantCapacity;
		}
		inputValueToAdd = this.clipToStorageMaximum(resNum, inputValueToAdd);
		return inputValueToAdd;
	},

	/**
	 * Berechnet, wie viele Rohstoffe abhÃ¤ngig von der LagerkapazitÃ¤t maximal
	 * hinzugefÃ¼gt werden kÃ¶nnen. Falls anhand der HÃ¤ndlermenge mehr Rohstoffe
	 * hinzugefÃ¼gt werden sollten als im Lager sind, so wird der Wert auf den
	 * Lagerstand geclippt.
	 *
	 * @param int resNum Ressourcenid
	 * @param int wantToAdd Menge an Ressourcen, die anhand der HÃ¤ndlerkapazitÃ¤t
	 *			hinzugefÃ¼gt werden wÃ¼rden
	 *
	 * @return int die wirkliche Menge an Rohstoffen, die abhÃ¤ngig vom
	 *		 Lagerstand maximal hinzugefÃ¼gt werden kÃ¶nnten
	 */
	clipToStorageMaximum: function(resNum, wantToAdd)
	{
		var storageForThisResource = this.getStorageFor(resNum);
		var currentInput = this.getValue(resNum);

		if (wantToAdd > 0)
		{
			wantToAdd = Math.min(wantToAdd, (storageForThisResource - currentInput));
		}
		else
		{
			// Auch wenn Rohstoffe abgezogen werden sollen mÃ¼ssen
			// var maximumForStorage = currentInp
			// wantToAdd = Math.max(currentInput+wantToAdd,
			// (storageForThisRessource - currentInput));
			if ((currentInput + wantToAdd) > storageForThisResource)
			{
				wantToAdd = storageForThisResource - currentInput;
			}
		}
		return wantToAdd;
	},

	/**
	 * Gibt den Lagerstand fÃ¼r die angebenene Ressource zurÃ¼ck.
	 *
	 * @param int Ressourcenid
	 * @return int Lagerstand
	 *
	 */
	getStorageFor: function(resNum)
	{
		var id = 'l' + (resNum);
		// Anmerkung: resources ist eine globale Variable aus TimersAndCounters.js
		return window.resources.storage[id];
	},

	/**
	 * Bequemlichkeitsmethode zum setzen des Inhalts des Rohstofffeldes mit der
	 * angegebenen Rohstoffid. Wird automatisch auf gÃ¼ltige Bereiche begrenzt
	 * (z.b. keine negativen Werte).
	 */
	setValue: function(resNum, value2)
	{
		var value = parseInt(value2);
		if (!isNaN(value))
		{
			$('r' + resNum).set('value', Math.max(value, 0));
		}
	},

	/**
	 * Aktualisiert die Summe der bereits ausgewÃ¤hlten Rohstoffe im
	 * Verschicken-Dialog. Der Betrag wird ggf rot gehighlighted.
	 *
	 * @param int sum Summe der zu verschickenden Rohstoffe
	 */
	setSelectedRessourcesInfo: function(sum)
	{
		$('sumResources').set('html', sum);
		if (sum > this.merchantCapacity)
		{
			$('sumResources').addClass('notEnoughMerchants');
		}
		else
		{
			$('sumResources').removeClass('notEnoughMerchants');
		}
	},

	/**
	 * Falls nicht genÃ¼gend HÃ¤ndler zur VerfÃ¼gung stehen, soll eine
	 * Fehlermeldung angezeigt werden. Die Anzeige der benÃ¶tigten HÃ¤ndler soll
	 * eingefÃ¤rbt werden.
	 *
	 * @param int sum Summe der zu verschickenden Rohstoffe
	 */
	setNotEnoughMerchantsError: function(sum)
	{
		var params = {};
		var merchantsNeeded = this.getNeededMerchants(sum);
		$('merchantsNeededNumber').set('html', merchantsNeeded);

		var prepareButton = null;
		if (typeof $$('.prepare')[0] == 'object')
		{
			prepareButton = $$('.prepare')[0];
		}

		if (merchantsNeeded > this.merchantsAvailable)
		{
			params =
			{
				'MERCHANTS_NEEDED': merchantsNeeded,
				'MERCHANTS_AVAILABLE': this.merchantsAvailable
			};
			// $('notEnoughMerchantsError').set('html',
			// '{notEnoughMerchants}'.translate().substitute(params,
			// /\\?\[([^\[\]]+)\]/g));
			$('prepareError').set('html', '{notEnoughMerchants}'.translate().substitute(params, /\\?\[([^\[\]]+)\]/g));
			$('note').set('html', '');
			$('prepareError').addClass('error');
			$('merchantsNeeded').addClass('error');
			$$('.merchantCapacity').addClass('error');
			$('sumResources').addClass('error');
			prepareButton.disabled = 1;
			prepareButton.addClass('disabled');
		}
		else
		{
			$('merchantsNeeded').removeClass('error');
			if ($('prepareError'))
			{
				$('prepareError').set('html', '');
			}
			else
			{
				var backup = $('button').get('html');
				$('button').set('html', '<div id="prepareError" class="error"></div>' + backup + '<div class="clear"></div>');
			}
			$$('.merchantCapacity').removeClass('error');
			$('sumResources').removeClass('error');

			prepareButton.disabled = 0;
			prepareButton.removeClass('disabled');
		}
	},

	/**
	 * Berechnet die Anzahl der HÃ¤ndler, die fÃ¼r angegebene Rohstoffmenge
	 * gebraucht werden zum Tragen.
	 *
	 * @param int Anzahl der Rohstoffe
	 * @param int Tragekraft eines HÃ¤ndlers
	 * @return int Anzahl der benÃ¶tigten HÃ¤ndler
	 */
	getNeededMerchants: function(sum)
	{
		return Math.ceil(sum / this.capacityPerMerchant);
	},

	/**
	 * Gibt den eingegebenen Wert fÃ¼r die entsprechende Ressource zurÃ¼ck.
	 *
	 * @param resNum Ressourcen id
	 *
	 * @return int
	 */
	getValue: function(resNum)
	{
		var currentInput = parseInt($('r' + resNum).get('value'));
		if (!isNaN(currentInput))
		{
			return currentInput;
		}
		return 0;
	},

	/**
	 * Liest alle Rohstoff-Eingabefelder im Verschicken-Dialog aus und summiert
	 * diese auf.
	 *
	 * @returns int die Summe aller eingegeben Rohstoffe
	 */
	summarizeInput: function()
	{
		var sum = 0;
		for ( var i = 1; i <= 4; i++)
		{
			id = 'r'.concat(i);
			sum += this.getValue(i);
		}
		return sum;
	},

	/**
	 * aktualisiert den autoCompleter
	 *
	 * @return Travian.Game.Marketplace
	 */
	updateAutoCompleter: function()
	{
        var villageElementId = 'enterVillageName';

		if (this.autoCompleter && $(villageElementId) !== null)
		{
			new Travian.Game.AutoCompleter.VillageName(villageElementId);
		}

		return this;
	}
});

/**
 * Returns user sorting preferences (or default ones)
 * @returns {{sortingColumn: *, sortingOrder: *}}
 */
Travian.Game.Marketplace.getPreferences = function() {
	var sorting = Travian.Game.Preferences.get('tradeRoutesOrder');
	var sortingColumn, sortingOrder;
	if (sorting != null) {
		sortingColumn = sorting.charAt(0);
		sortingOrder = sorting.charAt(1);
	} else {
		sortingColumn = '2';
		sortingOrder = 'a';
	}
	return {sortingColumn: sortingColumn, sortingOrder: sortingOrder};
};

/**
 * Toggles sorting on the page, saves the preference and reloads the page
 * @param column
 */
Travian.Game.Marketplace.toggleSorting = function(column) {
	var preferences = Travian.Game.Marketplace.getPreferences();
	var newPreference;
	if (column == preferences.sortingColumn) {
		newPreference = preferences.sortingColumn + (preferences.sortingOrder == 'a' ? 'd' : 'a');
	} else {
		newPreference = column + 'a';
	}
	Travian.Game.Preferences.set('tradeRoutesOrder', newPreference, true);
};

/**
 * Decorates the current sorting preference column with the user setting
 */
Travian.Game.Marketplace.onLoad = function() {
	var preferences = Travian.Game.Marketplace.getPreferences();
	$$('a.sorting#sorting' + preferences.sortingColumn).addClass(preferences.sortingOrder == 'a' ? 'asc' : 'desc');
};
Travian.Game.Marketplace.ExchangeResources =
{
	overall: null,
	max123: null,
	max4: null,

	initialize: function(max123, max4)
	{
		this.max123 = max123;
		this.max4 = max4;
	},

	calculateRest: function()
	{
		resObj = document.getElementsByName('m2[]');
		this.overall = 0;

		for (i = 0; i < resObj.length; i++)
		{
			var tmp = '';

			for (j = 0; j < resObj[i].value.length; j++)
			{
				if ((resObj[i].value.charAt(j) >= '0') && (resObj[i].value.charAt(j) <= '9'))
				{
					tmp = tmp + resObj[i].value.charAt(j);
				}
			}

			if (tmp == '')
			{
				tmp = '0';
				newRes = 0;
				resObj[i].value = '';
			}
			else
			{
				newRes = parseInt(tmp) || 0;

				if ((i < 3) && (newRes > this.max123))
				{
					newRes = this.max123;
				}

				if ((i == 3) && (newRes > this.max4))
				{
					newRes = this.max4;
				}

				resObj[i].value = newRes;
			}

			dif = newRes - (parseInt(document.getElementById('org' + i).innerHTML) || 0);
			newHTML = dif;

			if (dif > 0)
			{
				newHTML = '+' + dif;
			}

			document.getElementById('diff' + i).innerHTML = newHTML;
			this.overall += newRes;
		}

		document.getElementById('newsum').innerHTML = this.overall;
		rest = (parseInt(document.getElementById('org4').innerHTML) || 0) - this.overall;
		document.getElementById('remain').innerHTML = rest;

		this.testSum();
	},

	fillup: function(nr)
	{
		resObj = document.getElementsByName('m2[]');

		if (nr < 3)
		{
			resObj[nr].value = this.max123;
		}
		else
		{
			resObj[nr].value = this.max4;
		}

		this.calculateRest();
	},

	portion: function(did)
	{
		var desired = [];
		var fields = $$("input[name=m2\\[\\]]");
		Array.each(fields, function (element, index) {
			desired.push(element.get('value'));
		});
		var $this = this;
		Travian.ajax({
			data: {
				cmd: 'exchangeResources',
				did: did,
				desired: desired
			},
			onSuccess: function(data) {
				Array.each(fields, function (element, index){
					element.set('value', data.distributed[index]);
					$$("table#npc #org" + index).set('text', data.resources[index]);
					$$("table#npc input#m1\\[" + index + "\\]]").set('value', data.resources[index])
				});
				$$("table#npc #org4").set('text', Array.sum(data.resources));
				$this.calculateRest();
			}
		});
	},

	testSum: function()
	{
		if (document.getElementById('remain').innerHTML != 0)
		{
			document.getElementById('submitText').style.display = 'block';
			document.getElementById('submitButton').style.display = 'none';
		}
		else
		{
			document.getElementById('submitText').style.display = 'none';
			document.getElementById('submitButton').style.display = 'block';
		}
		
		Travian.adjustButtonDisableState();
	},

    toggleTradeRoutes: function(routeId, obj)
    {
        var enabled = obj.get('checked') ? 1 : 0;

        Travian.ajax({
            data : {
                cmd : 'toggleTradeRoutes',
                routeId : routeId,
                enabled : enabled
            }
        });

        return false;
    }
};Travian.Game.RallyPoint = {
    initialize: function(troopContainer) {
        troopContainer.getElements('input[type=text]').each(function(elem){

            elem.addEvents({
                keydown: function(event) {
                    // Allow:
                    var keyCode = event.event.keyCode,
                        ctrlKey = event.event.ctrlKey,
                        metaKey = event.event.metaKey;
                    if (keyCode == 8 || keyCode == 46 ||
                            // Allow: Ctrl/Cmd+A
                        (keyCode == 65 && (ctrlKey === true || metaKey === true)) ||
                            // Allow: Ctrl/Cmd+C
                        (keyCode == 67 && (ctrlKey === true || metaKey === true)) ||
                            // Allow: Ctrl/Cmd+X
                        (keyCode == 88 && (ctrlKey === true || metaKey === true)) ||
                            // Allow: Ctrl/Cmd+V
                        (keyCode == 86 && (ctrlKey === true || metaKey === true)) ||
                            // Allow: home, end, left, right
                        (keyCode >= 35 && keyCode <= 39) ||
                            // Allow: tab
                        (keyCode == 9) ||
                            // Allow: Enter
                        (keyCode == 13)
                    ) {
                        // let it happen, don't do anything
                        return true;
                    }

                    // Ensure that it is a number and stop the keypress
                    if (!(((keyCode >= 48 && keyCode <= 57) || (keyCode >= 96 && keyCode <= 105)))) {
                        event.preventDefault();
                    }
                },
                input: function(event) {
                    var currentValue = parseInt(elem.get('value').replace(/^0+/, '')) || 0;
                    if (isNaN(currentValue) || currentValue === 0 || currentValue < 0) {
                        currentValue =  '';
                    }
                    elem.set('value', currentValue);
                }
            });

        });
    }
};


Travian.Game.AllianceMembers = new Class(
    {
        Extends: Travian.Dialog.Ajax,

        /**
         * Options
         *
         * @var object
         */
        options:
        {
            /**
             * Ajax Request Data
             *
             * @var object
             */
            data: {},

            /**
             * Dialog speichern, falls die Seite gewechselt/neu geladen wird
             * Funktioniert nur bei Ajax Dialogen
             */
            saveOnUnload: false
        },

        /**
         * konstruktor
         *
         * @param object options
         */
        initialize: function(options)
        {
            this.parent(options);
            this.request();
        },

        /**
         * daten holen
         *
         * @retrun {}
         */
        request: function()
        {
            var $this = this;

            Travian.ajax(
                {
                    data:		this.options.data,
                    onSuccess:	function(data)
                    {
                        if (data.close || data.html == '') {
                            $this.close();
                            Travian.WindowManager.closeAllWindows();
                            window.location.reload();
                        } else {
                            $this.setContent(data.html).setTitle(data.title).setInfoIcon(data.infoIcon).updateCssClass(data.cssClass);
                            $this.show();
                        }
                    },
                    onFailure:	function(data, errorMessage)
                    {
                        $('playerNotePopupError').innerHTML = errorMessage;
                    }
                });

            return this;
        },

        isAjax: function()
        {
            return true;
        },

        reload: function()
        {
            this.request();
        }
    });

Travian.Game.AllianceDonation = {

    dialog: null,

    bonusSelected: false,

    /**
     * returns the parameters of a donation, including:
     * bonus ID, village ID, resource1, resource2, resource3, resource4, total amount, button ID
     *
     * @param idPart String the associated ID of the desired HTML form
     * @returns {{bid: *, did: *, r1: *, r2: *, r3: *, r4: *, amount: Number, button: *}}
     */
    getDonationParams: function (idPart) {
        this.calculateSum(idPart);
        return {
            bid: $('bid').value,
            did: $('did').value,
            r1: $(idPart + '1').value,
            r2: $(idPart + '2').value,
            r3: $(idPart + '3').value,
            r4: $(idPart + '4').value,
            amount: this.toNaturalNumber($(idPart + 'Sum').innerText)
        }
    },

    /**
     * checks the donation parameters to find out if a gold button was used or not
     *
     * @param action
     * @returns {boolean}
     */
    wasGoldUsed: function(action) {
        return ['donate_gold', 'donate_gold_confirm'].indexOf(action) != -1;
    },

    /**
     * calculates the sum of a donation
     *
     * @param idPart
     */
    calculateSum: function (idPart) {
        var amount = 0;
        for (var i = 1; i <= 4; i++) {
            amount += this.toNaturalNumber($(idPart + i).value);
        }
        $(idPart + 'Sum').innerText = amount.toString();
        this.checkAndChangeScalingPopup(idPart, amount);
        this.checkButtonState(idPart);
    },

    updateBID: function (value) {
        $('bid').value = value;
    },

    checkButtonState: function (idPart) {
        var $this = this;
        var sumValid = $(idPart + 'Sum').innerText != 0;
        var bonusChosen = false;
        var allRadioOptions = document.getElementsByName('bonus');
        for (var i = 0; i < allRadioOptions.length; i++) {
            if (allRadioOptions[i].checked) {
                bonusChosen = true;
                $('bonusNotSelectedMessage').hide();
                this.updateBID(allRadioOptions[i].value);
                break;
            }
        }
        var limitReached = $('limitReached').value == 1;
        var active = sumValid && bonusChosen && !limitReached;
        if (!bonusChosen) this.updateBID(null);

        $this.bonusSelected = bonusChosen;
        if ($('gold').value == 1) {
            var canTriple = $('canTriple').value != 0;
            if (active && canTriple) {
                $('donate_gold').removeClass('disabled');
            } else {
                $('donate_gold').addClass('disabled');
            }
        }
        if (active) {
            $('donate_green').removeClass('disabled');
        } else {
            $('donate_green').addClass('disabled');
        }
    },

    /**
     * fills up the provided input fields
     *
     * @param inputElement Object
     * @param maxAmount int
     * @param idPart String
     */
    fillUp: function (inputElement, maxAmount, idPart) {
        if (inputElement.disabled != true) {
            maxAmount = Math.max(maxAmount, 0);
            inputElement.value = maxAmount;
            this.checkAndChange(inputElement, maxAmount, idPart);
        }
    },

    /**
     * checks the value of the element and changes it to a valid value
     *
     * @param inputElement Object
     * @param maxAmount int
     * @param idPart String
     */
    checkAndChange: function (inputElement, maxAmount, idPart) {
        var value = Math.min(this.toNaturalNumber(inputElement.value), maxAmount);
        if (inputElement.value !== value.toString()) {
            inputElement.value = value;
        }
        this.calculateSum(idPart);
    },

    /**
     * returns a natural number according to the given value
     *
     * @param value String
     */
    toNaturalNumber: function (value) {
        value = parseInt(value);
        if (isNaN(value)) {
            value = 0;
        }
        if (value < 0) {
            value = 0;
        }
        return value;
    },

    /**
     * calls the ajax donate functions
     *
     * @param idPart String
     * @param {string} action
     * @param donationParams Array
     */
    donate: function (idPart, action, donationParams) {
        var $donate_gold_confirm = $('donate_gold_confirm');

        if (action != 'donate_gold') {
            $$('#contributeButtons button').addClass('disabled');
            if ($donate_gold_confirm) {
                $donate_gold_confirm.addClass('disabled');
            }
        }

        $$('.bonus-donation-response').removeClass('visible');

        Travian.ajax({
            data: {
                cmd: 'donateResources',
                params: donationParams,
                action: action
            },

            onSuccess: function (response) {
                if (response.html !== '') {
                    Travian.Game.AllianceDonation.showDialog(response.html);
                } else {
                    Travian.Game.AllianceDonation.closeDialog();
                }
                var usedGold = Travian.Game.AllianceDonation.wasGoldUsed(action);
                var animationDuration = Travian.Game.AllianceDonation.getResourceAnimationSpeed(donationParams.amount, usedGold);
                if (response.newTotal > 0) {
                    Travian.Game.AllianceDonation.refreshDailyDonation(
                        response.newTotal, action, donationParams.amount, usedGold
                    );
                    Travian.Game.AllianceDonation.refreshProgressBarTitle(response.limit - response.newTotal);
                }
                if (response.reload === true) {
                    Travian.Game.AllianceDonation.countDownResources(donationParams.amount, false);
                    setTimeout(function() {
                        Travian.Game.AllianceDonation.refreshDonationForm(response.limitReached);
                        $$('.bonus-donation-response')[0].innerHTML = response.responseText;
                        Travian.Game.AllianceDonation.refreshAllianceBonusOverview();
                    }, animationDuration);
                }
                if (response.goldChanged === true) {
                    Travian.Game.Layout.updateGold();
                }
                if (response.resourcesChanged === true) {
                    Travian.Game.Layout.updateResources();
                }
            },

            onFailure: function (response) {
                Travian.Game.AllianceDonation.checkButtonState('donate');
                Travian.Game.AllianceDonation.showErrorDialog(response.responseText);

                // prevents executing the default behaviour, since we decided to define our own error dialog above
                return false;
            }
        });
    },

    closeDialog: function () {
        if (this.dialog !== null) {
            this.dialog.close();
        }
    },

    /**
     * displays the dialog window
     *
     * @param html String
     */
    showDialog: function (html) {
        var $this = this;
        this.closeDialog();
        this.dialog = new Travian.Dialog({
            buttonOk: false,
            type: Travian.Dialog.DIALOG_TYPE_MODAL,
            onClose: function () {
                // Enable the Contribute buttons after a dialog was closed (in case of "X" close)
                $this.checkButtonState('donate');
            }
        });
        this.dialog.setContent(html);
        this.dialog.show();
    },

    /**
     * displays an error message in a modal dialog
     *
     * @param message
     */
    showErrorDialog: function(message) {
        var $this = this;

        var errorDialog = new Travian.Dialog({
            buttonOk: true,
            type: Travian.Dialog.DIALOG_TYPE_MODAL,
            onClose: function() {
                // reset the page to reflect the current state
                $this.closeDialog();
                $this.refreshDonationForm(true);
                $this.refreshDonationLimitBar();
                $this.refreshAllianceBonusOverview();
            }
        });

        errorDialog.setContent(message);
        errorDialog.show();
    },

    /**
     * shows the scale down dialog
     */
    showScaleDown: function (element) {
        var html = document.getElementById(element).innerHTML;
        this.showDialog(html);
        this.scaleDown('scale');
    },

    /**
     * scales down the resources to match the highest limit
     *
     * @param idPart String
     */
    scaleDown: function (idPart) {
        var limit = parseInt($('leftResources').value);
        var multiplicationFactor = parseInt($('multiplicationFactor').value);
        limit = parseInt(limit / multiplicationFactor);
        var total = 0;
        var resources = new Array(5);
        var resourcesOriginal = new Array(5);
        // get numbers and calculate sum
        for (var i = 1; i <= 4; i++) {
            resourcesOriginal[i] = this.toNaturalNumber($(idPart + i).value);
            resources[i] = resourcesOriginal[i];
            total += resources[i];
        }

        // no resources entered => nothing to do
        if (total == 0) {
            this.closeDialog();
        }

        // sum doesn't exceed the limit => nothing to do
        if (limit >= total) {
            this.closeDialog();
        }

        // relative amount of resources that would fit in the limit
        var percentage = limit / total;
        total = 0;
        for (i = 1; i <= 4; i++) {
            if (resources[i] > 0) {
                // apply the percentage to the resources
                resources[i] = Math.floor(resources[i] * percentage);
                total += resources[i];
            }
        }

        /*
         anything left to distribute?
         For certain numbers it is possible that all resources become 0 with a rest of 1 to be distributed.
         Since we only want to spread the rest on top of resources that the player want to spend (so nowhere where
         he/she entered 0), we have to remember the original values from when we entered this function and
         compare with those to distribute the rest. Else we might run into an infinity loop.
         */
        var rest = limit - total;
        while (rest > 0) {
            for (i = 1; i <= 4 && rest > 0; i++) {
                if (resourcesOriginal[i] > 0) {
                    resources[i]++;
                    rest--;
                }
            }
        }

        // write back the calculated values
        for (i = 1; i <= 4; i++) {
            $(idPart + i).value = resources[i];
            $('donate' + i).value = resources[i];
        }

        $(idPart + 'Sum').innerText = limit.toString();
        $('donateSum').innerText = limit.toString();
        this.checkAndChangeScalingPopup(idPart, limit);

        setTimeout(function () {
            Travian.Game.AllianceDonation.changeScaleButton(true)
        }, 250);
    },

    /**
     * changes/updates the total contribution with multiplier
     *
     * @param idPart String
     * @param limit  integer
     */
    checkAndChangeScalingPopup: function (idPart, limit) {
        var $scaleSumMultiplied = $(idPart + 'SumMultiplied');
        var sumMultiplied = limit;

        // If the element showing the tripled bonus is present, change the sum there and update the value of the sumMultiplied
        if ($scaleSumMultiplied) {
            sumMultiplied = this.toNaturalNumber($scaleSumMultiplied.dataset.multiplicator) * limit;
            $scaleSumMultiplied.innerText = sumMultiplied.toString();
        }

        // Make checks if the scaling popup is active and update the numbers/messages accordingly
        if (idPart === 'scale') {
            var resourcesUntilLimit = this.toNaturalNumber($('resourcesUntilLimit').dataset.limit);
            // If the total sum in the inputs is bigger than the limit, show that to the player
            this.changeScaleButton((resourcesUntilLimit >= sumMultiplied));
        }
    },

    /**
     * shows or hides the scale button
     *
     * @param hide boolean
     */
    changeScaleButton: function (hide) {
        if (hide) {
            $('buttonScale').hide();
            $('scale').addClass("disabled");
            $$('.bonus-scaleDown').addClass('scaled');
            $('buttonDonate').show();
        } else {
            $('buttonDonate').hide();
            $('scale').removeClass("disabled");
            $$('.bonus-scaleDown').removeClass('scaled');
            $('buttonScale').show();
        }
    },

    /**
     * calls the donate function out of the scaleDown window
     *
     * @param inputElement Object
     * @param idPart String
     */
    donateScaled: function (inputElement, idPart) {
        var donationParams = this.getDonationParams(idPart);
        this.closeDialog();
        this.donate(idPart, inputElement.id, donationParams)
    },

    /**
     * disables the current gold button, collects data from the existing dialog and calls it again
     */
    refreshGoldConfirmation: function () {
        var $button = $('donate_gold');
        $button.addClass('disabled');

        var params = Travian.Game.AllianceDonation.getDonationParams('donate');
        Travian.Game.AllianceDonation.donate('donate', $button.id, params);
    },

    refreshDonationForm: function (initTimers) {
        var element = $('contributionForm'),
            $this = this;
        if (!element) {
            return;
        }

        setTimeout(function () {
            $$('#contributionForm input:checked').set('checked', false);
        }, 100);

        Travian.ajax({
            data: {
                cmd: 'donationForm'
            },
            onSuccess: function (data) {
                element.innerHTML = data.form;
                window.fireEvent('domAltered', $$('#contributionForm'));
                if (initTimers) Travian.TimersAndCounters.init();
                $$('.bonus-donation-response').addClass('visible');
                $this.initBonusIcons();
                Travian.Tip.refresh();
                //refresh contribute button events
                $this.bonusSelected = false;
                $this.initContributeDisabledAction();
            }
        });
    },

    /**
     * refreshes the daily contribution bar by fetching its current state via ajax
     */
    refreshDonationLimitBar: function () {
        var element = $('myDailyContributionLimit');
        if (!element) {
            return;
        }

        element.addClass('hidden');

        Travian.ajax({
            data: {
                cmd: 'donationLimitBar'
            },
            onSuccess: function (data) {
                element.innerHTML = data.limitBar;
                window.fireEvent('domAltered', $$('#myDailyContributionLimit'));
                Travian.Tip.refresh();
                element.removeClass('hidden');
            }
        });
    },

    /**
     * updates the alliance bonus overview
     */
    refreshAllianceBonusOverview: function () {
        var element = $('allianceBonusOverview'),
            $this = this;
        if (!element) {
            return;
        }


        Travian.ajax({
            data: {
                cmd: 'allianceBonusOverview'
            },
            onSuccess: function (data) {
                element.innerHTML = data.overview;
                $this.initBonusOverview();
                Travian.Tip.refresh();
            }
        });
    },

    /**
     * updates the daily contribution bar
     *
     * @param newValue the value the bar should get
     * @param button the button that triggered the donation execution
     * @param donationAmount the amount that was donated
     * @param goldUsed flag if gold was used
     */
    refreshDailyDonation: function (newValue, button, donationAmount, goldUsed) {

        var donatedTodayElement = $('donatedToday');
        var arrowBarTitleElement = $('dailyContributionTitleText');
        var arrowBarValueElement = $$('.donationValueNumber')[0];
        var arrowBarMaxElement = $$('.donationMaxNumber')[0];
        var arrowBarElement = $('dailyContributionTitleArrow');

        var oldValue = parseInt(donatedTodayElement.value);
        var limit = parseInt($('dailyLimit').value);
        var percentageCalculated = Math.min(100, ((newValue / limit) * 100));
        var animationColorClass = 'lightGreen';

        if (button == 'donate_gold' || button == 'donate_gold_confirm') {
            animationColorClass = 'gold';
        }

        arrowBarElement.addClass(animationColorClass);

        var animationSpeed = this.getResourceAnimationSpeed(donationAmount, goldUsed);
        var animationSteps = 20;

        //make sure triple donation is accounted for
        donationAmount = goldUsed ? donationAmount * 3 : donationAmount;

        var stepSize = Math.round(donationAmount / animationSteps);
        var stepInterval = animationSpeed / animationSteps;

        arrowBarElement.style.transition = 'width ' + animationSpeed + 'ms, opacity 500ms';
        arrowBarElement.style.width = percentageCalculated.toString() + "%";

        var currentStep = 1;
        var countNumbers = setInterval(function () {

            //update contribution value
            oldValue = oldValue + stepSize;
            if (oldValue < newValue) {
                arrowBarValueElement.innerHTML = oldValue;
                arrowBarMaxElement.innerHTML = limit;
            }

            //make sure after 20 steps the update stops
            if (currentStep == animationSteps) {
                //width transition animation is finished so remove the color and update contribution value
                arrowBarValueElement.innerHTML = newValue;
                arrowBarMaxElement.innerHTML = limit;
                arrowBarElement.removeClass(animationColorClass);
                clearInterval(countNumbers);
            }
            currentStep++;

        }, stepInterval);

        if (percentageCalculated == 100) {

            $$('.bonus-donation-response').addClass('white');
            arrowBarElement.style.width = "100%";
            $('limitReached').value = 1;
            setTimeout(function () {
                arrowBarElement.addClass('complete');
                arrowBarTitleElement.addClass('complete').removeClass('white');
                $$('.bonus-donation-response').addClass('complete');
            }, animationSpeed + 500);

        }

        donatedTodayElement.value = newValue;
    },

    /**
     * counts down the resource input fields to 0
     * @param donationAmount the amount that was donated
     * @param goldUsed flag if gold was used
     */
    countDownResources: function (donationAmount, goldUsed) {
        var animationSpeed = this.getResourceAnimationSpeed(donationAmount, goldUsed);
        var animationSteps = 20;

        var amounts = [];
        var animationStepSizes = [];

        // Disable the Contribution buttons while the animation is going and in cases they were enabled after a popup was closed
        $$('#contributeButtons button').addClass('disabled');

        //get resources amount input
        var i = 0;
        $$('.resourceInput input').each(function (input) {
            var amount = parseInt(input.value);
            amounts[i] = amount;
            var stepSize = amount / animationSteps;
            if (stepSize < 1) {
                stepSize = 1;
            }
            animationStepSizes[i] = stepSize;
            i++;
        });

        var currentStep = 1;
        var resourceTicking = setInterval(function () {

            for (var x = 0; x < amounts.length; x++) {
                var newAmount = amounts[x] - animationStepSizes[x];
                if (newAmount > 0) {
                    amounts[x] = newAmount;
                    $$('.resourceInput input')[x].value = parseInt(newAmount);
                }
            }

            //make sure after 20 steps the update stops
            if (currentStep == animationSteps) {
                //set all resource fields to 0
                for (var i = 0; i < amounts.length; i++) {
                    $$('.resourceInput input')[i].value = 0;
                }
                clearInterval(resourceTicking);
            }
            currentStep++;

        }, animationSpeed / animationSteps);
    },

    /**
     * returns the animation speed for the daily progress bar and the resources to count down
     *
     * @param donationAmount the amount that was donated
     * @param goldUsed flag if gold was used
     * @returns {number}
     */
    getResourceAnimationSpeed: function(donationAmount, goldUsed) {

        // minimum amount of time the animation can take
        var animationSpeedMin = 500;

        // maximum amount of time the animation takes from 0 to 100%
        var animationSpeedMax = 2000;

        // correct the amount if necessary
        if(goldUsed) {
            donationAmount = donationAmount * 3;
        }

        // receive the daily limit
        var dailyLimit = parseInt($('dailyLimit').value);

        var resourceAnimationSpeed = animationSpeedMin + donationAmount * (animationSpeedMax - animationSpeedMin) / dailyLimit;

        //make sure limits are respected
        resourceAnimationSpeed = Math.max(animationSpeedMin, Math.min(animationSpeedMax, resourceAnimationSpeed));

        return resourceAnimationSpeed;

    },

    /**
     * init scroll and info expand on bonus icon click
     */
    initBonusIcons: function () {
        $$('#contributionBox #bonusSelection .bonusButtonRound').removeEvent('click');
        $$('#contributionBox #bonusSelection .bonusButtonRound').addEvent('click', function (e) {
            e.preventDefault();

            var $this = $(this),
                elementIndex = 'bonusBox' + $this.attributes['data-index'].value;

            //fire click event to expand specific bonus info - only if collapsed
            if ($(elementIndex).down('.bonusInfo').hasClass('hide')) {
                $(elementIndex).down('button').fireEvent('click');
            }
            //scroll to expanded element
            (new Fx.Scroll(window, {
                    duration: 250,
                    onComplete: function () {
                    }
                }
            )).toElement(elementIndex);
        });
    },

    /**
     * init bonus info drop-down button click
     */
    initBonusOverview: function () {
        var dropDownCollapse = $$('.bonusCollapse');
        var preferences;
        try {
            preferences = JSON.decode(Travian.Game.Preferences.get('allianceBonusesOverview') || '{}');
        } catch (e) {
            preferences = {};
        }

        if (dropDownCollapse) {
            dropDownCollapse.forEach(function(bonusOverview) {
                bonusOverview.addEvent('click', function (e) {
                    var ref = $$(this).get('ref');
                    var bonusId = ref[0];
                    var imgArrow = $$(this).getChildren('img.openedClosedSwitch')[0];

                    // Show the content and toggle the arrow
                    if (bonusId && imgArrow) {
                        var content = $$('.bonusInfo.' + bonusId);
                        Travian.toggleSwitch(content[0], imgArrow[0]);
                        preferences[bonusId] = preferences[bonusId] ? !preferences[bonusId] : true;
                        Travian.Game.Preferences.set('allianceBonusesOverview', JSON.stringify(preferences));
                    }
                });
            });
        }
    },

    /**
     * plays an animation that shows the level up of a bonus
     * @param bonusName string (use those from TGAllianceBonus constants)
     * @param newLevel int the new level that was reached (1-5)
     * @param line1 string the text to be displayed in the first line of the banner
     * @param line2 string the text to be displayed in the second line of the banner
     */
    playLevelUpRewardAnimation: function(bonusName, newLevel, line1, line2) {

        var overlay = $('backgroundOverlay');

        if(!overlay) {

            Travian.Game.Layout.toggleBackgroundOverlay();
            overlay = $('backgroundOverlay');

            // html template for the reward screen
            var html = $('bonusLevelUpRewardTemplate').innerHTML;
            overlay.appendHTML(html, 'top');

            // insert all information first before showing anything
            $$('.bonusLevelUpReward .bonusRepresentation > div')[0].addClass(bonusName);
            $$('.bonusLevelUpReward .banner .description p')[0].set('html', line1);
            $$('.bonusLevelUpReward .banner .description p')[1].set('html', line2);

            setTimeout(function() {
                // fade in the stone display, its header, the banner and animate the swords
                $$('.stoneDisplay')[0].addClass('visible');
                $$('.stoneDisplayHeader')[0].addClass('visible');
                $$('.banner')[0].addClass('visible');
                $$('.swords')[0].addClass('visible').addClass('locked');

                setTimeout(function() {
                    // show stage 1 (orange shape of the bonus)
                    $$('.bonusRepresentation .stage1')[0].addClass('visible');

                    setTimeout(function() {
                        // make the bonus glow
                        $$('.bonusRepresentation .glow')[0].addClass('visible');

                        setTimeout(function() {
                            // show the final bonus stage
                            $$('.bonusRepresentation .stage2')[0].addClass('visible');

                            setTimeout(function() {
                                // remove stage 1 and the glow
                                $$('.bonusRepresentation .stage1')[0].removeClass('visible');
                                $$('.bonusRepresentation .glow')[0].removeClass('visible');

                                // enlarge the banner
                                $$('.banner')[0].addClass('enlarged');

                                // show the stars to indicate the reached levels
                                setTimeout(function () {
                                    $$('.stoneDisplayHeader .level1 .glow')[0].addClass('visible');
                                    $$('.stoneDisplayHeader .level1 .star')[0].addClass('visible');

                                    setTimeout(function() {
                                        $$('.stoneDisplayHeader .level1 .glow')[0].removeClass('visible');
                                    }, 150);

                                    if(newLevel >= 2) {
                                        setTimeout(function() {
                                            $$('.stoneDisplayHeader .level2 .glow')[0].addClass('visible');
                                            $$('.stoneDisplayHeader .level2 .star')[0].addClass('visible');

                                            setTimeout(function() {
                                                $$('.stoneDisplayHeader .level2 .glow')[0].removeClass('visible');
                                            }, 150);

                                            if(newLevel >= 3) {
                                                setTimeout(function() {
                                                    $$('.stoneDisplayHeader .level3 .glow')[0].addClass('visible');
                                                    $$('.stoneDisplayHeader .level3 .star')[0].addClass('visible');

                                                    setTimeout(function () {
                                                        $$('.stoneDisplayHeader .level3 .glow')[0].removeClass('visible');
                                                    }, 250);

                                                    if(newLevel >= 4) {
                                                        setTimeout(function () {
                                                            $$('.stoneDisplayHeader .level4 .glow')[0].addClass('visible');
                                                            $$('.stoneDisplayHeader .level4 .star')[0].addClass('visible');

                                                            setTimeout(function () {
                                                                $$('.stoneDisplayHeader .level4 .glow')[0].removeClass('visible');
                                                            }, 250);

                                                            if(newLevel >= 5) {
                                                                setTimeout(function () {
                                                                    $$('.stoneDisplayHeader .level5 .glow')[0].addClass('visible');
                                                                    $$('.stoneDisplayHeader .level5 .star')[0].addClass('visible');

                                                                    setTimeout(function () {
                                                                        $$('.stoneDisplayHeader .level5 .glow')[0].removeClass('visible');
                                                                    }, 250);
                                                                }, 500);
                                                            }
                                                        }, 500);
                                                    }
                                                }, 500);
                                            }
                                        }, 500);
                                    }
                                    // finish the animation
                                    setTimeout(function() {
                                        // let the bonus glow once more
                                        $$('.bonusRepresentation .glow')[0].addClass('step2');
                                        $$('.bonusRepresentation .glow')[0].addClass('visible');
                                        setTimeout(function() {
                                            // stop the bonus glowing
                                            $$('.bonusRepresentation .glow')[0].removeClass('visible');
                                            // collapse the banner again
                                            $$('.banner')[0].removeClass('enlarged');
                                            // fade out the complete reward screen
                                            $$('.bonusLevelUpReward')[0].addClass('faded');
                                            setTimeout(function() {
                                                // fade out the background overlay
                                                Travian.Game.Layout.toggleBackgroundOverlay();
                                            }, 750);
                                        }, 750);
                                    }, (2800 - (5 - newLevel) * 500)); // the timeout depends on the reached level (controls how long you see the final stage until fading out everything)
                                }, 1250); // time until the stars come up
                            }, 100); // time until the glow of the bonus icon is removed after the final stage of the icon is reached
                        }, 300); // time until the final bonus icon stage (stage 2) is shown after the silhouette started glowing
                    }, 800); // time until the bonus glows after the silhouette of the bonus icon is shown
                }, 750); // time until the silhouette (stage 1) is shown after the main elements appeared
            }, 250); // time until the animation runs after the template was injected into the DOM
        }
    },

    /**
     * refreshes the tooltip of the progress bar
     */
    refreshProgressBarTitle: function (newValue) {
        var progressBarTitleElement = $$('div.progressBarDailyLimit')[0];
        var regResult = progressBarTitleElement.getAttribute('data-tooltip').match(/(^.*)(\[AMOUNT\])(.*$)/);
        progressBarTitleElement.title = regResult[1] + newValue + regResult[3];
        Travian.Tip.refresh();
    },

    initContributeDisabledAction: function() {

        var $this = this;
        $$('#contributeButtons button').addEvent('click', function() {
            $this.calculateSum('donate');
            if (!$this.bonusSelected && parseInt($('donateSum').innerText) > 0) {
                $('bonusNotSelectedMessage').show();
            }
        });

    }
};
Travian.Game.AllianceLeave = new Class(
    {
        Extends: Travian.Dialog.Ajax,

        /**
         * Options
         *
         * @var object
         */
        options:
        {
            /**
             * Ajax Request Data
             *
             * @var object
             */
            data: {},

            /**
             * Dialog speichern, falls die Seite gewechselt/neu geladen wird
             * Funktioniert nur bei Ajax Dialogen
             */
            saveOnUnload: false
        },

        /**
         * konstruktor
         *
         * @param object options
         */
        initialize: function(options)
        {
            this.parent(options);
        },

        /**
         * daten holen
         *
         * @retrun {}
         */
        request: function()
        {
            var $this = this;

            Travian.ajax(
                {
                    data:		this.options.data,
                    onSuccess:	function(data)
                    {
                        if (data.close || data.html == '') {
                            $this.close();
                            Travian.WindowManager.closeAllWindows();
                            window.location.reload();
                        } else {
                            $this.setContent(data.html).setTitle(data.title).setInfoIcon(data.infoIcon).updateCssClass(data.cssClass);
                            $this.show();
                        }
                    },
                    onFailure:	function(data, errorMessage)
                    {
                        $('allianceLeavePopupError').innerHTML = errorMessage;

                        return false;
                    }
                });

            return this;
        },

        isAjax: function()
        {
            return true;
        },

        reload: function()
        {
            this.request();
        }
    });

/**
 * Stellt einen PaymentWizard-Dialog dar
 */
Travian.Game.PaymentWizard = new Class(
{
	Extends: Travian.Dialog.Ajax,

	/**
	 * Options
	 *
	 * @var object
	 */
	options:
	{
		/**
		 * Daten fÃ¼r das Backend
		 */
		data:
		{
			/**
			 * Ajax-Ziel-Adresse
			 */
			cmd: 'paymentWizard',

			/**
			 * id des selektierten GoldProdukts
			 */
			goldProductId: '',

			/**
			 * id des selektierten GoldProdukts
			 */
			goldProductLocation: '',

			/**
			 * Value der ausgewÃ¤hlten Location (Wenn keine ausgewÃ¤hlt wurde wird
			 * serverlocation angenommen)
			 */
			location: '',

			/**
			 * Der Tab der gerade angezeigt werden soll.
			 */
			activeTab: 'buyGold',

			/**
			 * Daten des MailFormulars
			 */
			formData: {}
		},

		/*
		 * Dialog offen halten
		 */
		keepOpen: true,

		/**
		 * Wir brauchen einen CancelButton
		 */
		buttonCancel: true,

		/**
		 * OK Button wird nicht benÃ¶tigt
		 */
		buttonOk: false,

		/**
		 * Context fÃ¼r den WindowManager
		 */
		context: 'paymentWizard',

		/**
		 * Klasse fÃ¼r das Erscheinungsbild des Dialogs
		 */
		cssClass: 'brown',

		/**
		 * Dialog ist nicht verschiebbar
		 */
		draggable: false,

		/**
		 * InfoButton wird benÃ¶tigt.
		 */
		infoIcon: true,

		/**
		 * Dialog soll nicht gespeichert werden.
		 */
		saveOnUnload: false,

		/**
		 * Dialog soll nicht mit scrollen
		 */
		scroll: false,

		/**
		 * Typ des Dialogs
		 */
		type: this.DIALOG_TYPE_MODAL,

		/**
		 * Offset for the header added in some custom dialogs. The offset is added to the Dialog's height while calculating
		 * the window's center position
		 *
		 * @var int In pixels
		 */
		topHeaderOffset: 45,

		/**
		 * the preview is used to render the dialog faster
		 * it will not contain the loading-critical data
		 *
		 * using the preview feature disables fetching the content using the default ajax methods of the parent class
		 */
		preview:
		{
			/**
			 * enables / disables the preview
			 */
			enabled: true,
			/**
			 * defines the element that holds all the content used as a preview
			 */
			contentElement: 'paymentWizardV2ContentPreview',
			/**
			 * used as the title of the dialog
			 */
			title: '',
			/**
			 * holds the info icon data for the dialog
			 */
			infoIcon: '',
			/**
			 * the CSS class to be applied to the dialog
			 */
			dialogCSSClass: 'brown',
			/**
			 * if the user already opened the shop once on the page, the result will be cached and modified to fit the preview screen again
			 */
			resultCached: false,
			/**
			 * onShow method is called once the dialog is shown
			 * ideally it is used to fetch the missing data which is the reason to have a preview
			 */
			onShow: function(object) {

				// modify the cached result to become the preview screen again, if the user already opened the shop once on the same page
				// and show the preview afterwards
				if(typeof object.options.preview.resultCached !== "undefined" && object.options.preview.resultCached === true) {

					object.setContent(document.getElementById(object.options.preview.contentElement).get('html'));

					// clear the preview content element
					document.getElementById(object.options.preview.contentElement).set('html','');

					// restore the preview
					window.fireEvent('shopUIV2RestorePreview');

					// load the contents from the servers
					object.reload();
				} else {
					// load contents from server
					object.reload();

					// clear the preview content element
					document.getElementById(object.options.preview.contentElement).set('html','');
				}
			}
		},

		darkOverlay: true,
		overlayCancel: false,
		resizeDialogIfOverflow: false,
		useCallback: false,
		callback: Travian.emptyFunction(),
		callbackScope: null,
		onClose: function (additionalFunction)
		{
			Travian.Game.PaymentWizardEventListener.PaymentWizardObject = null;
			if (this.options.useCallback === true && typeof this.options.callback == 'function')
			{
				this.options.callback({scope: this.options.callbackScope});
			}

            fireEvent('paymentWizardOnCloseEvent');

			// update gold if needed and pass the callback
			Travian.Game.Layout.updateGold(this.options.callback);

			// save the current state for the preview
			if(this.options.data.activeTab == 'buyGold' && this.options.preview.enabled) {
				var content = document.getElementById('dialogContent').get('html');
				document.getElementById(this.options.preview.contentElement).set('html', content);
				Travian.Game.PaymentWizardEventListener.preview.resultCached = true;
			}
		},

		onOpen: null
	},

	/**
	 * konstruktor
	 *
	 * um das GoldProdukt zu definieren: options.data.goldProduct setzen
	 *
	 * @param options
	 * @return object
	 */
	initialize: function (options)
	{
		this.parent(Object.merge({}, this.options, options || {}));

		var $this = this;

		/**
		 * Event wenn der user auf einen TabButton Klickt wird der Dialog mit
		 * dem neuen aktuellen Tab geladen.
		 *
		 * @return boolean false um die abarbeitung des Events abzubrechen
		 */
		var tabBtnClickListener = function (event)
		{
			// suchen der Klasse des TabButtons
			var cls = $$(event.target).getParents('.tabButton')[0].get('class')[0].split(' ');

			if (cls[1] == 'pros')
			{
				$this.options.callback = null;
			}

			// setzen der Option active tab und reload des Dialogs
			$this.options.data.activeTab = cls[1];
			$this.reload();

			event.stop();
			return false;
		};

		/**
		 * Listener dÃ¼rfen erst zum Zeitpunkt des Anzeigens des Dialogs
		 * aufgebaut werden, da sonst die DOMElemente nicht zu verfÃ¼gung stehen.
		 */
		this.addEvent('open', function (event)
		{
			var paymentWizard = $('paymentWizard');

			$$('#paymentWizard .header .tabButton').each(function (element)
			{
				element.removeEvents();
				element.addEvent('click', tabBtnClickListener);
			}, this);

			$$('#paymentWizard .header li').each(function (element)
			{
				if (element.hasClass('active'))
				{
					return false;
				}
				element.set('morph', {duration: 200, transition: Fx.Transitions.Sine.easeOut, fps: 60});
				element.addEvent('mouseover', function ()
				{
					element.morph({
						'marginTop': -8,
						'height': 40
					});
				});
				element.addEvent('mouseout', function ()
				{
					element.morph({
						'marginTop': -1,
						'height': 33
					});
				});
			});

			if(paymentWizard) {
				$$('#paymentWizard .iconButton.info').setTitle(Travian.Translation.get('paymentWizard.infoButtonLabel'));
				$this.updateInfoButton(
				{
					buttonTextInfo : Travian.Translation.get('paymentWizard.infoButtonLabel'),
					infoIcon : function ()
					{
						window.open($('paymentWizard').getElement('.paymentWizardAnswersLink').get('value'));
					}
				});
			}

			// tabspezifische funktionalitÃ¤ten aufbauen.
			if ($this.options.data.activeTab == 'buyGold' || $this.options.data.activeTab == '')
			{
				// BuyGoldTab
				$this.initializeBuyGoldTab();
			}
			else if ($this.options.data.activeTab == 'pros')
			{
				// Vorteile Tab
				$this.initializeProsTab();
			}
			else if ($this.options.data.activeTab == 'earnGold')
			{
				// EarnGoldTab
				$this.initializeEarnGoldTab();
			}

			if ($this.options.onOpen && (typeof $this.options.onOpen === 'function')) {
				$this.options.onOpen();
			}
		});

		return this;
	},

	/**
	 * Funktion initialisiert alle funktionen fÃ¼r den BuyGoldTab
	 * @return object
	 */
	initializeBuyGoldTab: function ()
	{
		var $this = this;

		// closure zum BeschlÃ¤unigen der Elementsuchen
		var infoArea = $$('#paymentWizard .contentWrapper .infoArea');
		var contentArea = $$('#paymentWizard .contentWrapper .contentArea');

		/**
		 * Funktion sucht ab dem Ã¼bergebene Element (inclusive diesem Element)
		 * aufwÃ¤rts nach einem Element mit dem Ã¼bergebenen Classennamen.
		 * Wird kein Element gefunden wird null zurÃ¼ck gegeben.
		 *
		 * @param element
		 * @param className
		 * @return Element|null
		 */
		var getElementByClassUpwards = function (element, className)
		{
			if (!element.hasClass(className))
			{
				element = element.up('.' + className);
			}
			return element;
		};

		/**
		 * Listener fÃ¼r die Ã„nderung des UserStandorts
		 *
		 * @param event
		 * @return boolean
		 */
		var clickListenerSelectLocation = function (event)
		{
			var select = infoArea.getElement('.buyGoldLocation')[0];

			$this.options.data.goldProductLocation = select.options[select.selectedIndex].value;

			$this.options.data.goldProductId = '';

			$this.reload();

			event.stop();
			return false;
		};

		/**
		 * Listener der den Schritt 'Ã„ndern des UserStandorts' anzeigt
		 *
		 * @param event
		 * @return boolean
		 */
		var clickListenerShowLocationForm = function (event)
		{
			infoArea.getElements('.buyGoldInfoStep.locationStep').each(
				function(item)
				{
					item.hide();
				});
			infoArea.down('.buyGoldInfoStep.locationStep.buyGoldFormStep').show();

			event.stop();
			return false;
		};

		/**
		 * Listener fÃ¼r das Ã„ndern des GoldProduktes
		 *
		 * @param event
		 * @return boolean
		 */
		var clickListenerChangeGoldProduct = function (event)
		{
			$this.options.data.goldProductId = '';
			$this.reload();

			event.stop();
			return false;
		};

		/**
		 * Listener User hat auf ein Packet geklickt.
		 *
		 * @param event
		 * @return boolean
		 */
		var clickListenerSelectGoldProduct = function (event)
		{
			var element = getElementByClassUpwards($(event.target), 'goldProduct');

			if (element != null)
			{
                var isVoucher = element.down('.goldProductId').get('data-voucher');
                if(isVoucher) {
                    voucherPopup();
                    event.stop();
                    return false;
                }

				$this.options.data.goldProductId = element.down('.goldProductId').get('value');
				$this.reload();
			}

			event.stop();
			return false;
		};

		/**
		 * Listener User hat auf Bezahlfunktion geklickt
		 * @param event
		 * @return boolean
		 */
		var clickListenerSelectProvider = function (event)
		{
			var element = getElementByClassUpwards($(event.target), 'providerLink');

			if (element != null)
			{
                var popupWidth, popupHeight;
				var providerId = element.down('.providerId').get('value');
                //Get the width of the popup window
                try{
                    popupWidth = element.down('.popupWidth').get('value');
                }catch(err){
                    popupWidth = 800;
                }
                //Get the height of the popup window
                try{
                    popupHeight = element.down('.popupHeight').get('value');
                }catch(err){
                    popupHeight = 600;
                }

				$this.options.useCallback = true;
				$this.openProvider($this.options.data.goldProductId, providerId, popupWidth, popupHeight);
			}

			event.stop();
			return false;
		};

		/**
		 * Schaltet die offenen Bestellungen um.
		 *
		 * @param event
		 * @return boolean
		 */
		var clickListenerToggleOpenOrders = function(event)
		{
			if (!$this.DoubleClickPreventer)
			{
				$this.DoubleClickPreventer = new Travian.DoubleClickPreventer();
				$this.DoubleClickPreventer.timeout = 2000;
			}

			if (!$this.DoubleClickPreventer.check())
			{
				event.stop();
				return false;
			}

			var lastResult = contentArea.down('.paymentOpenOffersResult')[0];
			if (lastResult)
			{
				lastResult.destroy();
			}

			var eventTargetElement = $(event.target);
			eventTargetElement.hide();

			footerItem = eventTargetElement.up('.footerItem');
			if (eventTargetElement.hasClass('ordersHide') === true)
			{
				// Offene Bestellungen sollen ausgeblendet werden.
				footerItem.down('.ordersShow').show();
				contentArea.down('.buyGoldContent').show();
				contentArea.down('.openOffers').hide();

				event.stop();
				return false;
			}

			// Offene Bestellungen sollen angezeigt werden.
			footerItem.down('.ordersHide').show();
			contentArea.down('.buyGoldContent').hide();
			contentArea.down('.openOffers').show();

			// Ajax-Request zum abrufen der offenen Bestellungen absetzen
			Travian.ajax(
			{
				data:
				{
					cmd: 'paymentWizardOpenOffers'
				},
				onSuccess:	function(response)
				{
					var containerParent = contentArea.down('.openOffers')[0];
					containerParent.empty();

					if (response.noResult === false)
					{
						containerParent.set('html', response.html);
					}
					else
					{
						containerParent.set('html', response.errorMsg);
					}
				}
			});

			event.stop();
			return false;
		};

		// Listener hinzufÃ¼gen zum Ã„ndern des UserStandorts
		if (infoArea.down('.buyGoldLocation')[0] != null)
		{
			infoArea.down('.buyGoldLocation')[0].addEvent('change', clickListenerSelectLocation);
		}
		if (infoArea.down('a')[0] != null)
		{
			infoArea.down('a')[0].addEvent('click', clickListenerShowLocationForm);
		}

		// Listener fÃ¼r das Ã„ndern des Produktes zufÃ¼gen
		var changeGoldLink = infoArea.down('.changeGoldProduct');
		if (changeGoldLink[0] != null)
		{
			changeGoldLink[0].addEvent('click', clickListenerChangeGoldProduct);
		}

		// Listener fÃ¼r goldProdukte im contentArea hinzufÃ¼gen
		Array.each(contentArea.getElements('.goldProduct'), function (item)
		{
			item.addEvent('click', clickListenerSelectGoldProduct);
		});

		// Listener fÃ¼r paymentProvider im contentArea hinzufÃ¼gen
		Array.each(contentArea.getElements('.paymentProvider'), function (item)
		{
			item.addEvent('click', clickListenerSelectProvider);
		});

		// Listener fÃ¼r die Ansicht offener Bestellungen ansehen.
		Array.each(infoArea.getElements('.openOrdersLink'), function (item)
		{
			item.addEvent('click', clickListenerToggleOpenOrders);
		});

		return this;
	},

	updatePosition: function (smoothMovementDuration, force)
	{
		var position = this.calculatePosition();
		this.setPosition({x: position.left, y: position.top}, smoothMovementDuration);
	},

	/**
	 * Funktion initialisiert alle funktionalitÃ¤ten fÃ¼r den
	 * Tab Goldverdienen
	 */
	initializeEarnGoldTab : function()
	{
		var $this = this;
		var pageContainer = $$('#paymentWizard.earnGold .contentWrapper .earnGoldPage')[0].getParent();
		/**
		 * Zeigt die Ã¼bergebene GoldVerdinen-Seite an.
		 * Wenn pageSelector nicht definiert ist wird Ãœbersicht angenommen.
		 *
		 * @param pageSelector
		 * @return object
		 */
		var showPage = function(pageSelector)
		{
			if (!pageSelector || pageSelector == '')
			{
				pageSelector = 'earnGoldOverview';
			}
			pageContainer.getChildren().hide();
			pageContainer.getChildren('.' + pageSelector).show();
			return this;
		};

		/**
		 * ClickListener fÃ¼r Seitenumschalter-Links
		 *
		 * @param event
		 * @return object
		 */
		var showPageClickListener = function(event)
		{
			var pageSelector = undefined;

			var classStrings = $$(event.target).get('class')[0].split(' ');
			for (var i = 0; i < classStrings.length; i++)
			{
				if (classStrings[i].indexOf('earnGold') == 0)
				{
					pageSelector = classStrings[i];
					break;
				}
			}

			showPage(pageSelector);
			event.stop();
			return false;
		};

		/**
		 * Listener der Seitenumschalter-Links zufÃ¼gen
		 */
		pageContainer.up('#paymentWizard').getElements('a.showEarnGoldPage').addEvent('click', showPageClickListener);

		// functions to send DrumUpMail

		/**
		 * FÃ¼gt ein neues EmpfÃ¤nger-Inputfeld in den DOM ein
		 *
		 * @param event
		 * @return boolean
		 */
		var addMailReceiver = function(event)
		{
			var numOfReveiverLines = pageContainer.getElement('.receiverLines').getChildren().length;
			if (numOfReveiverLines < 6)
			{
				var inputLabelText = '{earnGoldContentMailSendReceiverCount}'.translate().replace('[RECEIVER_COUNT]', numOfReveiverLines + 1);
				var domElement = new Element('div.receiverLine[text=' + inputLabelText + ']');
				var inputElement = new Element('input.text[type=text][name=receiver[]]');
				domElement.adopt(inputElement);

				pageContainer.getElement('.receiverLines').adopt(domElement);

				if (numOfReveiverLines >= 5)
				{
					pageContainer.getElement('.receiverLinkLine').hide();
				}
			}
			event.stop();
			return false;
		};

		/**
		 *  EmpfÃ¤nger listener setzen
		 */
		pageContainer.getElements('.earnGoldAddLink').addEvent('click', addMailReceiver);

		/**
		 * Eingabe Abbrechen
		 */
		pageContainer.getElements('.earnGoldSendMailCancel').addEvent('click', function()
		{
			$this.options.data.formData = {};
			$this.options.data.location = '';
			$this.reload();
		});

		/**
		 * Eingabe Abbrechen
		 */
		pageContainer.getElements('.earnGoldSendMailSubmit').addEvent('click', function()
		{
			var formData = {};
			formData.receiver = pageContainer.getElements('.receiverLines input').get('value');
			formData.message = pageContainer.getElements('.earnGoldSendMailMessage')[0].get('value');

			$this.options.data.formData = formData;
			$this.options.data.location = 'earnGoldMailSend';
			$this.reload();
		});

		var isWaiting = false;

		/**
		 * Funktion lÃ¤d die Liste geworbener Spieler
		 * und fÃ¼gt sie in den DOM ein.
		 * Danach werde die Listener fÃ¼r den Paginator gesetzt.
		 *
		 * @param page
		 * @return object|boolean
		 */
		var loadAdvertizedPlayers = function(page)
		{
			if (isWaiting)
			{
				return this;
			}

			isWaiting = true;

			Travian.ajax(
			{
				data:
				{
					cmd: 'paymentWizardAdvertisedPersons',
					page : page
				},
				onSuccess: function(response)
				{
					if (response.errorMessage)
					{
						$this.setError(response);
					}
					else
					{
						if (response.html)
						{
							isWaiting = false;

							pageContainer.getElement('.earnGoldAdvertisedPersonsList').set('html', response.html);

							// paginatorListener hinzufÃ¼gen:
							pageContainer.getElements('.paginator a').addEvent(
								'click',
								function(event)
								{
									var eventElement = $$(event.target)[0];

									if (eventElement.get('tag') != 'a')
									{
										eventElement = eventElement.up('a');
									}
									page = eventElement.get('href').toString().split('=')[1];
									loadAdvertizedPlayers(page);

									event.stop();
									return false;
								});
						}
					}
				}
			});

			return this;
		};

		/**
		 * Listener fÃ¼rs initiale Anzeigen der DrumUpListe setzen
		 */
		var earnGoldDrumUpsElement = pageContainer.getElement('a.showEarnGoldPage.earnGoldDrumUps');
		if(earnGoldDrumUpsElement != null){
			earnGoldDrumUpsElement.addEvent('click', function(event)
			{
				loadAdvertizedPlayers();
			});
		}
		/**
		 * Standardseite anzeigen
		 */
		showPage($this.options.data.location);
	},

	/**
	 * Funktion initialisiert alle funktionen fÃ¼r den Vorteile Tab
	 */
	initializeProsTab: function ()
	{
		// register button events
		var $this = this;

		var featureCollectionWrapper = $('featureCollectionWrapper');

		featureCollectionWrapper.select('.prosButton').each(function(item)
		{
			item.removeEvent('click');
			item.addEvent('click', function(e)
			{
				// Triggern ob der Spieler etwas gekauft hat, damit wir danach die Seite neu laden kÃ¶nnen.
				$this.options.useCallback = true;
				$this.options.callback = function()
				{
					window.location.href = window.location.href;
					window.location.reload();
				};

				$this.requestSend = true;
				if (this.hasClass('productionboostWood'))
				{
					window.fireEvent('startWayOfPayment', [
						'productionboostWood', 'paymentWizard'
					]);
				}
				else if (this.hasClass('productionboostClay'))
				{
					window.fireEvent('startWayOfPayment', [
						'productionboostClay', 'paymentWizard'
					]);
				}
				else if (this.hasClass('productionboostIron'))
				{
					window.fireEvent('startWayOfPayment', [
						'productionboostIron', 'paymentWizard'
					]);
				}
				else if (this.hasClass('productionboostCrop'))
				{
					window.fireEvent('startWayOfPayment', [
						'productionboostCrop', 'paymentWizard'
					]);
				}
				else if (this.hasClass('plus'))
				{
					window.fireEvent('startWayOfPayment', [
						'plus', 'paymentWizard'
					]);
				}
				else if (this.hasClass('goldclub'))
				{
					window.fireEvent('startWayOfPayment', [
						'goldclub', 'paymentWizard'
					]);
				}
				return false;
			});
		});

		featureCollectionWrapper.select('.checkbox').each(function(item)
		{
			item.removeEvent('click');
			item.addEvent('click', function(e)
			{
				if (this.hasClass('prolongProductionboostWood'))
				{
					return $this.toggleAutoprolong('productionboostWood', 'productionBoost');
				}
				else if (this.hasClass('prolongProductionboostClay'))
				{
					return $this.toggleAutoprolong('productionboostClay', 'productionBoost');
				}
				else if (this.hasClass('prolongProductionboostIron'))
				{
					return $this.toggleAutoprolong('productionboostIron', 'productionBoost');
				}
				else if (this.hasClass('prolongProductionboostCrop'))
				{
					return $this.toggleAutoprolong('productionboostCrop', 'productionBoost');
				}
				else if (this.hasClass('prolongPlus'))
				{
					return $this.toggleAutoprolong('plus', 'plus');
				}

				e.stop();
				return false;
			});
		});

		var hideAllElementsOf = function(selector)
		{
			$('paymentWizard').getElements(selector).hide();
		};

		var lastFeatureName = '';
		featureCollectionWrapper.getElements('.feature').addEvent('mouseover', function(event)
		{
			var featureElement = this.getElements('.premiumFeatureName')[0];
			if (!featureElement || featureElement.length == 0)
			{
				event.stop();
				return false;
			}
			var featureName = featureElement.get('value');
			if (!featureName || featureName == $this.lastFeatureName)
			{
				event.stop();
				return false;
			}

			var paymentWizard = $('paymentWizard');

			paymentWizard.getElements('.infoArea .premiumFeature').hide();
			paymentWizard.getElements('.contentArea .feature .dynamicContent').hide();

			this.getElement('.dynamicContent').show();
			paymentWizard.getElements('.infoArea .premiumFeature').filter('.' + featureName).show();

			$this.lastFeatureName = featureName;
		});

		Travian.TimersAndCounters.initTimersInContext(featureCollectionWrapper);
	},

	/**
	 * AutoverlÃ¤ngern an oder abschalten.
	 *
	 * @param context
	 * @param featureKey
	 * @return void
	 */
	toggleAutoprolong: function(featureKey, context)
	{
		var $this = this;
		var data = new Object();
		data.cmd = 'premiumFeature';
		data.featureKey = featureKey;
		data.toggleAutoprolong = 1;
		Travian.ajax(
		{
			data: data,
			onSuccess: function(data)
			{
				$this.reload();
			}
		});
	},

	/**
	 * Ã¶ffnet ein PopupWindow zu dem Ã¼bergebenen PaymentProvider
	 */
	openProvider: function (productId, providerId, popupWidth, popupHeight)
	{
		window.open('/tgpay.php?product=' + productId + '&provider=' + providerId, 'tgpay', 'scrollbars=yes,status=yes,resizable=yes,toolbar=yes,width='+popupWidth+',height='+popupHeight);
	}
});
var shopUIV2;

/**
 * this class handles the UI with version 2 for the payment shop
 */
function ShopUIV2() {

    this.allowSlidePackages = true;
    this.allowSlidePaymentMethods = true;
    this.goldPackagesPages = [];
    this.goldPackagesPagesSize = 0;
    this.paymentMethodsPages = [];
    this.paymentMethodsPageSize = 0;
    this.selectedPaymentMethod = false;
    this.rtl = false;

    /**
     * initializes the shop UI
     */
    this.initialize = function () {
        var $this = this;

        // check for rtl
        if($$('.paymentWizardDirectionRTL').length > 0) {
            this.rtl = true;
        }

        $this.slidingContentInnerPackage = $$('#packageSlider .slidingContentInner')[0];

        $this.slidingContentOuterPackage = $$('#packageSlider .slidingContentOuter')[0];
        $this.slidingContentOuterWidthPackage = $this.slidingContentOuterPackage.getDimensions();
        $this.slidingContentOuterWidthPackage = parseInt($this.slidingContentOuterWidthPackage.x);

        // animation settings for the package slider
        $this.slidingContentInnerPackage.set('tween', {
            duration: 500,
            transition: 'linear',
            link: 'cancel',
            onComplete: function () {
                $this.allowSlidePackages = true;
            }
        });

        $this.slidingContentInnerPaymentMethods = $$('#paymentMethodsSlider .slidingContentInner')[0];

        $this.slidingContentOuterPaymentMethods = $$('#paymentMethodsSlider .slidingContentOuter')[0];
        $this.slidingContentOuterWidthPaymentMethods = $this.slidingContentOuterPaymentMethods.getDimensions();
        $this.slidingContentOuterWidthPaymentMethods = parseInt($this.slidingContentOuterWidthPaymentMethods.x);

        // animations for the payment methods slider
        $this.slidingContentInnerPaymentMethods.set('tween', {
            duration: 500,
            transition: 'linear',
            link: 'cancel',
            onComplete: function () {
                $this.allowSlidePaymentMethods = true;
            }
        });

        // initialize package pages
        var x = 0;
        $$('#packageSlider .productsPage').each(function (productPage) {
            $this.goldPackagesPages[x] = productPage;

            if ($this.goldPackagesPagesSize == 0) {
                var width = productPage.getStyle('width');
                width = parseInt(width.replace("px", ""));
                $this.goldPackagesPagesSize = width;
            }

            x++;
        });

        // initialize payment options
        $this.initializePaymentMethods();

        // run actions after a short delay
        setTimeout(function () {
            $this.packageSliderButtonCheck();
            $this.paymentMethodsSliderButtonCheck();
            $this.bindEvents();
            $this.updateResultBox();

            setTimeout(function () {
                $$('#packageSlider .package.hideForLoading').removeClass('hideForLoading');
            }, 500);
        }, 250);
    };

    /**
     * inserts the payment methods for the selected gold package
     */
    this.initializePaymentMethods = function () {
        var $this = this;

        $$('#paymentMethodsSlider .loading')[0].removeClass("hide");

        if(typeof $$('.package.selected input.goldProductId')[0] === "undefined") {
            return;
        }

        var selectedPackage = parseInt($$('.package.selected input.goldProductId')[0].get('value'));
        $$('#paymentMethodsSlider .slidingContent')[0].empty();
        $this.updateResultBox();
        Travian.ajax(
            {
                data: {
                    cmd: 'paymentProviders',
                    selectedPackage: selectedPackage
                },
                onSuccess: function (data) {
                    // In cases when we close the Dialog before the request ends.
                    if(typeof $$('#paymentMethodsSlider .slidingContent')[0] === 'undefined') {
                        return false;
                    }

                    $$('#paymentMethodsSlider .slidingContent')[0].set('html', data.html);

                    // reset margin for container
                    if(!$this.rtl) {
                        $this.slidingContentInnerPaymentMethods.setStyle('margin-left', 0);
                    } else {
                        $this.slidingContentInnerPaymentMethods.setStyle('margin-right', 0);
                    }

                    // get all methods in an array
                    $this.paymentMethodsPages = [];
                    $this.paymentMethodsPageSize = 0;

                    var x = 0;
                    $$('.methodsPage').each(function (paymentMethodsPage) {
                        $this.paymentMethodsPages[x] = paymentMethodsPage;

                        if ($this.paymentMethodsPageSize == 0) {
                            var width = paymentMethodsPage.getStyle('width');
                            width = parseInt(width.replace("px", ""));
                            $this.paymentMethodsPageSize = width;
                        }

                        x++;
                    });

                    // bind events and check for a selected payment method
                    $$('#paymentMethodsSlider .methodItem').each(function (methodItem) {
                        methodItem.addEvent('click', $this.methodItemClickEvent);

                        // try to select the payment method again that was previously selected
                        if ($this.selectedPaymentMethod !== false) {
                            if (parseInt(methodItem.getChildren()[0].get('value')) == $this.selectedPaymentMethod) {
                                $$('#paymentMethodsSlider .methodItem').removeClass('selected');
                                methodItem.addClass('selected');

                                // scroll to the page with the selected payment method
                                for (var i = 0; i < $this.paymentMethodsPages.length; i++) {
                                    if ($this.paymentMethodsPages[i] == methodItem.getParent()) {
                                        var scrollValue = i * $this.paymentMethodsPageSize;

                                        if (scrollValue == 0) {
                                            scrollValue = 1;
                                        }

                                        $this.allowSlidePaymentMethods = false;
                                        $$('#paymentMethodsSlider .methodsPage').removeClass('visible').addClass('hidden');
                                        $this.paymentMethodsPages[i].removeClass('hidden').addClass('visible');
                                        if(!$this.rtl) {
                                            $this.slidingContentInnerPaymentMethods.tween('margin-left', scrollValue * -1);
                                        } else {
                                            $this.slidingContentInnerPaymentMethods.tween('margin-right', scrollValue * -1);
                                        }

                                        $this.updateResultBox();
                                    }
                                }
                            }
                        }
                    });

                    $this.paymentMethodsSliderButtonCheck();
                    $$('#paymentMethodsSlider .loading')[0].addClass("hide");
                }
            });
    };

    /**
     * checks the buttons for the package slider
     */
    this.packageSliderButtonCheck = function () {
        var $this = this;

        if (typeof $this.goldPackagesPages[0] != 'undefined') {
            if ($this.goldPackagesPages[0].hasClass("visible")) {
                if (!$$('#packageSlider .slideArea.area1')[0].hasClass("inactive")) {
                    $$('#packageSlider .slideArea.area1')[0].addClass("inactive");
                }
            }
            else {
                $$('#packageSlider .slideArea.area1')[0].removeClass("inactive");
            }

            if ($this.goldPackagesPages[$this.goldPackagesPages.length - 1].hasClass("hidden")) {
                if ($$('#packageSlider .slideArea.area2')[0].hasClass("inactive")) {
                    $$('#packageSlider .slideArea.area2')[0].removeClass("inactive");
                }
            }
            else {
                $$('#packageSlider .slideArea.area2')[0].addClass("inactive");
            }
        }
    };

    /**
     * checks the buttons for the payment methods slider
     */
    this.paymentMethodsSliderButtonCheck = function () {
        var $this = this;

        if (typeof $this.paymentMethodsPages[0] != 'undefined') {
            if ($this.paymentMethodsPages[0].hasClass("visible")) {
                if (!$$('#paymentMethodsSlider .slideArea.area1')[0].hasClass("inactive")) {
                    $$('#paymentMethodsSlider .slideArea.area1')[0].addClass("inactive");
                }
            }
            else {
                $$('#paymentMethodsSlider .slideArea.area1')[0].removeClass("inactive");
            }

            if ($this.paymentMethodsPages[$this.paymentMethodsPages.length - 1].hasClass("hidden")) {
                if ($$('#paymentMethodsSlider .slideArea.area2')[0].hasClass("inactive")) {
                    $$('#paymentMethodsSlider .slideArea.area2')[0].removeClass("inactive");
                }
            }
            else {
                $$('#paymentMethodsSlider .slideArea.area2')[0].addClass("inactive");
            }
        }
    };

    /**
     * bind all needed events
     */
    this.bindEvents = function () {
        var $this = this;

        // package slider
        $$('#packageSlider .slideArea.area1').addEvent('click', function () {
            $this.packageSlideLeft();
        });
        $$('#packageSlider .slideArea.area2').addEvent('click', function () {
            $this.packageSlideRight();
        });
        $$('#packageSlider .package').addEvent('click', function () {
            if(!this.hasClass('selected')) {
                $$('.package').removeClass('selected');
                this.addClass('selected');
                $this.initializePaymentMethods();
            }
        });

        // phone package area
        $$('#phonePackages .package').addEvent('click', function () {
            if(!this.hasClass('selected')) {
                $$('.package').removeClass('selected');
                this.addClass('selected');
                $this.initializePaymentMethods();
            }
        });

        // payment methods slider
        $$('#paymentMethodsSlider .slideArea.area1').addEvent('click', function () {
            $this.paymentMethodsSlideLeft();
        });
        $$('#paymentMethodsSlider .slideArea.area2').addEvent('click', function () {
            $this.paymentMethodsSlideRight();
        });
        $$('#paymentMethodsSlider .methodItem').addEvent('click', $this.methodItemClickEvent);
        $$('#paymentMethodsSlider').addEvent('click', function () {
            $this.updateResultBox();
            $this.saveSelectedPaymentMethod();
        });

        // overview with the result box
        $$('#overview .resultBox .activeButton').addEvent('click', function () {
            $this.buyNowAction();
        });

        // location drop down box
        $$('.buyGoldLocation').addEvent('change', function () {
            $this.changeLocation();
        });

        // voucher area
        $$('#vouchers .package').addEvent('click', function () {
            voucherPopup();
        });

        // restore the preview
        window.addEvent('shopUIV2RestorePreview', function() {
            $$('#paymentMethodsSlider .loading')[0].removeClass("hide");
            $$('#packageSlider .slidingContentInner')[0].set('html', '');
            $$('#paymentMethodsSlider .slidingContentInner')[0].set('html', '');
            $$('#phonePackages .package').destroy();
            $$('#vouchers .package').destroy();
            $$('#packageSlider .slideArea > div').removeClass('active').addClass('inactive');
            $$('#paymentMethodsSlider .slideArea > div').removeClass('active').addClass('inactive');
            $$('.resultBox .goldUnits').set('html', '');
            $$('.resultBox #goldBalanceNew').set('html', '');
            $$('.resultBox #priceToPay').set('html', '');
        });
    };

    /**
     * event for every payment method item
     * needed to be separated from the bind events function, since this event needs to be added to every payment method item that is received via ajax
     */
    this.methodItemClickEvent = function () {
        if (!this.hasClass('inactive') && !this.hasClass('defect')) {
            $$('#paymentMethodsSlider .methodItem').removeClass('selected');
            this.addClass('selected');
        }
    };

    /**
     * updates the values in the result box and activates/deactivates the "buy now"-button
     */
    this.updateResultBox = function () {

        if(typeof $$('.package.selected .goldUnits')[0] === "undefined") {
            return;
        }

        $$('.resultBox #packageGoldAmount .goldUnits')[0].set('html', $$('.package.selected .goldUnits')[0].get('html'));
        $$('.resultBox #goldBalanceNew')[0].set('html', (parseInt($$('.package.selected .goldUnits')[0].get('html')) + parseInt($$('.accountBalance span')[0].get('html'))));
        $$('.resultBox #priceToPay')[0].set('html', $$('.package.selected .price')[0].get('html'));

        if ($$('#paymentMethodsSlider .methodItem.selected')[0]) {
            $$('.resultBox .inactiveButton').addClass('hide');
            $$('.resultBox .activeButton').removeClass('hide');
        } else {
            $$('.resultBox .activeButton').addClass('hide');
            $$('.resultBox .inactiveButton').removeClass('hide');
        }
    };

    /**
     * saves the selected payment method to use it as a setting if the package changes
     */
    this.saveSelectedPaymentMethod = function () {
        var $this = this;

        if ($$('#paymentMethodsSlider .methodItem.selected')[0]) {
            $this.selectedPaymentMethod = parseInt($$('#paymentMethodsSlider .methodItem.selected input.providerId')[0].get('value'));
        }
    };

    /**
     * slides the packages to the left
     */
    this.packageSlideLeft = function () {
        var $this = this;
        if ($this.allowSlidePackages) {
            var firstPageToHide = "";
            var firstPageToShow = "";
            var visiblePageFound = false;
            for (var i = $this.goldPackagesPages.length - 1; i >= 0; i--) {
                if ($this.goldPackagesPages[i].hasClass('visible')) {
                    firstPageToHide = $this.goldPackagesPages[i];
                    visiblePageFound = true;
                }
                if (visiblePageFound && $this.goldPackagesPages[i].hasClass('hidden')) {
                    firstPageToShow = $this.goldPackagesPages[i];
                    break;
                }
            }

            if (firstPageToShow != "") {
                // hide current page, show previous one

                var slidingContentInnerMargin = 0;
                if(!$this.rtl) {
                    slidingContentInnerMargin = $this.slidingContentInnerPackage.getStyle('margin-left');
                } else {
                    slidingContentInnerMargin = $this.slidingContentInnerPackage.getStyle('margin-right');
                }
                slidingContentInnerMargin = parseInt(slidingContentInnerMargin.replace("px", ""));

                var scrollValue = (slidingContentInnerMargin + $this.goldPackagesPagesSize);

                // mootools fix
                if (scrollValue == 0) {
                    scrollValue = 1;
                }

                firstPageToHide.removeClass('visible').addClass('hidden');
                firstPageToShow.removeClass('hidden').addClass('visible');

                $this.allowSlidePackages = false;
                if(!$this.rtl) {
                    $this.slidingContentInnerPackage.tween('margin-left', scrollValue);
                } else {
                    $this.slidingContentInnerPackage.tween('margin-right', scrollValue);
                }
            }
        }
        $this.packageSliderButtonCheck();
    };

    /**
     * slides the packages to the right
     */
    this.packageSlideRight = function () {
        var $this = this;

        if ($this.allowSlidePackages) {
            var firstPageToHide = "";
            var firstPageToShow = "";
            var visiblePageFound = false;
            for (var i = 0; i < $this.goldPackagesPages.length; i++) {
                if ($this.goldPackagesPages[i].hasClass('visible')) {
                    firstPageToHide = $this.goldPackagesPages[i];
                    visiblePageFound = true;
                }
                if ($this.goldPackagesPages[i].hasClass('hidden')) {
                    if (visiblePageFound) {
                        firstPageToShow = $this.goldPackagesPages[i];
                        break;
                    }
                }
            }

            if (firstPageToShow != "") {
                // hide current page, show next one

                var slidingContentInnerMargin = 0;
                if(!$this.rtl) {
                    slidingContentInnerMargin = $this.slidingContentInnerPackage.getStyle('margin-left');
                } else {
                    slidingContentInnerMargin = $this.slidingContentInnerPackage.getStyle('margin-right');
                }
                slidingContentInnerMargin = parseInt(slidingContentInnerMargin.replace("px", "")) * -1;

                var scrollValue = (slidingContentInnerMargin + $this.goldPackagesPagesSize) * -1;

                firstPageToHide.removeClass('visible').addClass('hidden');
                firstPageToShow.removeClass('hidden').addClass('visible');

                $this.allowSlidePaymentMethods = false;
                if(!$this.rtl) {
                    $this.slidingContentInnerPackage.tween('margin-left', scrollValue);
                } else {
                    $this.slidingContentInnerPackage.tween('margin-right', scrollValue);
                }
            }
        }
        $this.packageSliderButtonCheck();
    };

    /**
     * slides the payment methods to the left
     */
    this.paymentMethodsSlideLeft = function () {
        var $this = this;

        if ($this.allowSlidePaymentMethods) {
            var firstPageToHide = "";
            var firstPageToShow = "";
            var visiblePageFound = false;
            for (var i = $this.paymentMethodsPages.length - 1; i >= 0; i--) {
                if ($this.paymentMethodsPages[i].hasClass('visible')) {
                    firstPageToHide = $this.paymentMethodsPages[i];
                    visiblePageFound = true;
                }
                if (visiblePageFound && $this.paymentMethodsPages[i].hasClass('hidden')) {
                    firstPageToShow = $this.paymentMethodsPages[i];
                    break;
                }
            }

            if (firstPageToShow != "") {
                // hide current page, show previous one

                var slidingContentInnerMargin = 0;
                if(!$this.rtl) {
                    slidingContentInnerMargin = $this.slidingContentInnerPaymentMethods.getStyle('margin-left');
                } else {
                    slidingContentInnerMargin = $this.slidingContentInnerPaymentMethods.getStyle('margin-right');
                }
                slidingContentInnerMargin = parseInt(slidingContentInnerMargin.replace("px", ""));

                var scrollValue = (slidingContentInnerMargin + $this.paymentMethodsPageSize);

                // mootools fix
                if (scrollValue == 0) {
                    scrollValue = 1;
                }

                firstPageToHide.removeClass('visible').addClass('hidden');
                firstPageToShow.removeClass('hidden').addClass('visible');

                $this.allowSlidePaymentMethods = false;
                if(!$this.rtl) {
                    $this.slidingContentInnerPaymentMethods.tween('margin-left', scrollValue);
                } else {
                    $this.slidingContentInnerPaymentMethods.tween('margin-right', scrollValue);
                }
            }
        }

        $this.paymentMethodsSliderButtonCheck();
    };

    /**
     * slides the payment methods to the right
     */
    this.paymentMethodsSlideRight = function () {
        var $this = this;

        if ($this.allowSlidePaymentMethods) {
            var firstPageToHide = "";
            var firstPageToShow = "";
            var visiblePageFound = false;
            for (var i = 0; i < $this.paymentMethodsPages.length; i++) {
                if ($this.paymentMethodsPages[i].hasClass('visible')) {
                    firstPageToHide = $this.paymentMethodsPages[i];
                    visiblePageFound = true;
                }
                if ($this.paymentMethodsPages[i].hasClass('hidden')) {
                    if (visiblePageFound) {
                        firstPageToShow = $this.paymentMethodsPages[i];
                        break;
                    }
                }
            }

            if (firstPageToShow != "") {
                // hide current page, show next one

                var slidingContentInnerMargin = 0;
                if(!$this.rtl) {
                    slidingContentInnerMargin = $this.slidingContentInnerPaymentMethods.getStyle('margin-left');
                } else {
                    slidingContentInnerMargin = $this.slidingContentInnerPaymentMethods.getStyle('margin-right');
                }
                slidingContentInnerMargin = parseInt(slidingContentInnerMargin.replace("px", "")) * -1;

                var scrollValue = (slidingContentInnerMargin + $this.paymentMethodsPageSize) * -1;

                firstPageToHide.removeClass('visible').addClass('hidden');
                firstPageToShow.removeClass('hidden').addClass('visible');

                $this.allowSlidePaymentMethods = false;
                if(!$this.rtl) {
                    $this.slidingContentInnerPaymentMethods.tween('margin-left', scrollValue);
                } else {
                    $this.slidingContentInnerPaymentMethods.tween('margin-right', scrollValue);
                }
            }
        }

        $this.paymentMethodsSliderButtonCheck();
    };

    /**
     * collects the data for the package and the payment provider and opens the purchase popup
     */
    this.buyNowAction = function () {

        // if inactive button is hidden (= active button is active)
        if ($$('#overview .resultBox .inactiveButton.hide')[0]) {
            var packageId = parseInt($$('.package.selected input.goldProductId')[0].get('value'));
            var providerId = parseInt($$('#paymentMethodsSlider .methodItem.selected input.providerId')[0].get('value'));

            // handle popup windows for providers with custom popup sizes
            var popupWidth = 800;
            var popupHeight = 600;
            if ($$('#paymentMethodsSlider .methodItem.selected input.popupWidth')[0]) {
                popupWidth = $$('#paymentMethodsSlider .methodItem.selected input.popupWidth')[0];
            }
            if ($$('#paymentMethodsSlider .methodItem.selected input.popupHeight')[0]) {
                popupHeight = $$('#paymentMethodsSlider .methodItem.selected input.popupHeight')[0];
            }

            // center the window
            var popupLeft = (screen.width - popupWidth) / 2;
            var popupTop = (screen.height - popupHeight) / 2;

            window.open('/tgpay.php?product=' + packageId + '&provider=' + providerId, 'tgpay', 'scrollbars=yes,status=yes,resizable=yes,toolbar=yes,width=' + popupWidth + ',height=' + popupHeight + ',left=' + popupLeft + ',top=' + popupTop);
        }
    };

    /**
     * changes the location and reopens the payment wizard with the new settings
     */
    this.changeLocation = function () {

        var goldProductLocation = $$('select.buyGoldLocation')[0].getSelected()[0].get('value');
        var overlay = (new Overlay(document.body, {
            opacity: 0.8,
            duration: 250
        })).open();

        Travian.Game.PaymentWizardEventListener.PaymentWizardObject && Travian.Game.PaymentWizardEventListener.PaymentWizardObject.close();

        window.fireEvent('startPaymentWizard', {
            data:{
                cmd: 'paymentWizard',
                goldProductId: '',
                goldProductLocation: goldProductLocation,
                location: '',
                activeTab: 'buyGold',
                formData: {}
            },
            onOpen: function() {
                overlay.close().dispose();
            }
        });
    };

    /**
     * selects a package and - if necessary - slides to its parent page
     * @param selectedPackage
     */
    this.selectPackage = function (selectedPackage) {
        var $this = this;

        var packageInput = $$('.package input[value='+selectedPackage+']')[0];
        selectedPackage = packageInput.getParent();
        var container = selectedPackage.getParent();

        if(container.id != 'phonePackages') {
            // check if we need to scroll to the package page
            if(container.hasClass('hidden')) {
                // we need to scroll
                // scroll to the page with the selected gold package
                for (var i = 0; i < $this.goldPackagesPages.length; i++) {
                    if ($this.goldPackagesPages[i] == container) {
                        var scrollValue = i * $this.goldPackagesPagesSize;

                        if (scrollValue == 0) {
                            scrollValue = 1;
                        }

                        $this.allowSlidePackages = false;
                        $$('#packageSlider .productsPage').removeClass('visible').addClass('hidden');
                        $this.goldPackagesPages[i].removeClass('hidden').addClass('visible');
                        if(!$this.rtl) {
                            $this.slidingContentInnerPackage.tween('margin-left', scrollValue * -1);
                        } else {
                            $this.slidingContentInnerPackage.tween('margin-right', scrollValue * -1);
                        }
                    }
                }
            }
        }

        $$('.package').removeClass('selected');
        selectedPackage.addClass('selected');

    };
}/**
 * Video Feature dialog handler
 */
Travian.Game.VideoFeature = new Class(
    {
        Extends: Travian.Dialog.Ajax,

        /**
         * Options
         *
         * @var object
         */
        options:
        {
            /**
             * Data for the content ajax call
             */
            data:
            {
                cmd: 'adSalesVideo'
            },

            /**
             * Dialog should not be kept open
             */
            keepOpen: false,

            /**
             * We need a cancel button
             */
            buttonCancel: true,

            /**
             * OK Button not needed
             */
            buttonOk: false,

            /**
             * Context for the WindowManager
             */
            context: 'contractWrapper',

            /**
             * CSS classes for the dialog window
             */
            cssClass: 'brown premiumFeaturePackage premiumFeaturePlus',

            /**
             * Dialog is not draggable
             */
            draggable: false,

            /**
             * We need an info button.
             */
            infoIcon: true,

            /**
             * Dialog should not be saved
             */
            saveOnUnload: false,

            /**
             * Dialog scroll is disabled
             */
            scroll: false,

            /**
             * Dialog type
             */
            type: this.DIALOG_TYPE_MODAL,

            darkOverlay: true,
            overlayCancel: true,
            resizeDialogIfOverflow: false,
            useCallback: false,
            callback: Travian.emptyFunction(),
            callbackScope: null,
            onClose: function (additionalFunction)
            {
                Travian.Game.VideoFeatureEventListener.VideoFeatureObject = null;
                if (this.options.useCallback === true && typeof this.options.callback == 'function')
                {
                    this.options.callback({scope: this.options.callbackScope});
                }

                window.fireEvent('VideoDialogOnCloseEvent');
            }
        },

        /**
         * constructor
         *
         * @param options
         * @return object
         */
        initialize: function (options)
        {
            this.parent(Object.merge({}, this.options, options || {}));
        },

        /**
         *
         * @return Travian.Dialog.Ajax
         */
        request: function()
        {
            var $this = this;

            this.options.data.context = this.context;

            Travian.ajax(
                {
                    data: this.options.data,
                    onSuccess: function(data)
                    {
                        $this.setContent(data.html);
                        $this.show();
                        $this.updateInfoButton(
                            {
                                buttonTextInfo : Travian.Translation.get('videoFeature.infoButtonLabel'),
                                infoIcon : function ()
                                {
                                    window.open($('videoFeature').getElement('.videoFeatureAnswersLink').get('value'));
                                }
                            });
                    }
                });

            return this;
        },
        /**
         * close dialog function
         */
        close: function()
        {
            if (typeof this.requestSend !== 'undefined' && this.requestSend === true)
            {
                return window.location.reload();
            }

            //re-enable countdown timer page reloads
            window.reload_enabled = true;
            this.parent();
        }

    });
/**
 * Automatisches durchtickern der beworbenen Spiele auf der Logout Seite
 */

Travian.Game.MoreGames = new Class(
{
	Implements: [Events],

	/**
	 * active counter element / Aktives Produkt
	 *
	 * @var DOMNode
	 */
	activeCounterElement: null,

	/**
	 * Stelle an der der ZÃ¤hler gerade ist
	 */
	activeCounter: 0,

	/**
	 * Pause zwischen der Hovers
	 */
	autoHoverDelay: 3000,

	/**
	 * Interval ID
	 */
	timeoutId: 0,

	/**
	 * Elemente / Produkte die durchgehovert werden
	 *
	 * @var array
	 */
	elements: null,

	/**
	 * options
	 *
	 * @var object
	 */
	options:
	{

		/**
		 * Wieviele Produkte sollen angezeigt werden
		 *
		 * @var int
		 */
		countOfGamesToShow: 0
	},

	/**
	 * Konstruktor
	 *
	 * @param object options
	 */
	initialize: function(options)
	{
		this.options = Object.merge(this.options, options);

		// Produkte
		this.elements = $$('div.moreGames .game.game-image');

		// Mouseover/out an die Produkte binden
		// Den ersten Hover einschalten
		// Automatisches durchhovern beginnen
		if(this.options.countOfGamesToShow) {
			this.events().toggleChildren(this.activeCounter).autoHover();
		}
	},

	/**
	 * Automatisches durchhovern
	 *
	 * @return Travian.Game.MoreGames
	 */
	autoHover: function()
	{
		var $this = this;

		if (this.timeoutId)
		{
			clearTimeout($this.timeoutId);
		}

		this.timeoutId = (function()
		{
			// Aktuelles ausblenden
			$this.toggleChildren($this.activeCounter);

			// NÃ¤chstes einblenden
			$this.toggleChildren(($this.activeCounter + 1) % $this.options.countOfGamesToShow);

			// Recursion
			$this.autoHover();

		// Pause zwischen dem durchhovern
		}).delay(this.autoHoverDelay);

		return this;
	},

	/**
	 * Events fÃ¼r die einzelnen Spiele
	 *
	 * @return Travian.Game.MoreGames
	 */
	events: function()
	{
		var $this = this;
		this.elements.each(function(element, index)
		{
			element.addEvents(
			{
				'mouseenter': function(e)
				{
					// AutoHover "ausschalten"
					clearTimeout($this.timeoutId);

					// Mouseenter in sowieso schon aktives Produkt
					if (index == $this.activeCounter)
					{
						return;
					}

					// Produkt highlighten
					if ($this.activeCounterElement)
					{
						$this.toggleChildren($this.activeCounter);
					}

					// Aktives ausblenden
					$this.toggleChildren(index);
				},
				'mouseleave': function(e)
				{
					// Weiter mit AutoHover
					$this.autoHover();
				}
			});
		});

		return this;
	},

	/**
	 * FÃ¼r die children (also die Bilder) die hide Klasse toggeln
	 * @param int index
	 * @return Travian.Game.MoreGames
	 */
	toggleChildren: function(index)
	{
		// NÃ¤chstes auswÃ¤hlen
		this.activeCounter = index;
		this.activeCounterElement = this.elements[index];

		this.activeCounterElement.select('img').each(function(cl)
		{
			cl.toggleClass('hide');
		});

		return this;
	}
});
/**
 * This class handles the watch video for reduced building time feature events
 */
Travian.Game.VideoFeatureEventListener = new (new Class(
    {
        VideoFeatureObject: null,

        initialize: function()
        {
            this.DoubleClickPreventer = new Travian.DoubleClickPreventer();
            this.DoubleClickPreventer.timeout = 1000;
            this.bindEvents();
        },

        /**
         * bind events
         */
        bindEvents: function()
        {
            var $this = this;

            //bind event for opening dialog
            window.addEvent('showVideoWindow', function(options)
            {

                if (undefined === $this.VideoFeatureObject || null === $this.VideoFeatureObject)
                {
                    if (!$this.DoubleClickPreventer.check())
                    {
                        return false;
                    }

                    $this.VideoFeatureObject = $this.startVideoDialog(options);
                }
                else
                {
                    $this.VideoFeatureObject.options = Object.merge({}, $this.VideoFeatureObject.options, options || {});
                    $this.VideoFeatureObject.reload();
                }
            });

            //bind event for starting video
            window.addEvent('startVideo', function(options)
            {

                if (!$this.DoubleClickPreventer.check())
                {
                    return false;
                }

                //bind events for the video player
                $this.addEvent(window, 'message', function (e) { $this.onMessage(e, options); });

                //start the video by updating the dialog IFrame src
                $this.startVideo(options);

            });


        },

        /**
         * adds an event listener based on browser capabilities
         * @param o
         * @param t
         * @param f
         */
        addEvent: function (o, t, f) {
            if (o.addEventListener) {
                o.addEventListener(t, f, false);
            } else if (o.attachEvent) {
                o.attachEvent('on' + t, f);
            }
        },

        /**
         * process video player events
         * @param e
         */
        onMessage: function (e, options) {
            if (e.origin == 'http://media.oadts.com' || e.origin == 'https://media.oadts.com') {
                var m = e.data;
                if (m == 'videoStart') {
                    // video starts playing
                    Travian.ajax(
                        {
                            data: {
                                cmd: 'adSalesVideo',
                                action: 'start',
                                'vrid': options.vrid
                            },
                            onSuccess: function(data) {}
                        });
                } else if (m == 'noVideo') {
                    // no video available at the moment
                } else if (m == 'videoEnds') {
                    // video ends, (un)secure solution
                } else if (m.indexOf("videoEnds:") == 0) {
                    var cm = m.replace('videoEnds:', ''),
                        sep = cm.indexOf(':');
                    // video has been seen to the end
                    Travian.ajax(
                        {
                            data: {
                                cmd: 'adSalesVideo',
                                action: 'build',
                                'vrid': cm.substring(0, sep),
                                'hash': cm.substring(sep + 1)
                            },
                            onSuccess: function(data) {}
                        });

                } else {
                    // some other events may be possible too
                }
            }
        },

        /**
         * Start video feature dialog
         * @param options
         * @return {Travian.Game.VideoFeature}
         */
        startVideoDialog: function(options)
        {
            //disable countdown timer page reloads before showing the video dialog
            window.reload_enabled = false;
            return new Travian.Game.VideoFeature(options);
        },

        /**
         * Start video and hide play button button overlay container
         * @param options
         */
        startVideo: function(options) {
            if (typeof options != typeof undefined && typeof options.url != typeof undefined) {
                $('videoOverlay').hide();
                $('videoArea').set('src', options.url).show();
            }
        }
    }));
/**
 * Diese Klasse hÃ¶rt auf diverse Events und startet den PaymentWizard
 */
Travian.Game.PaymentWizardEventListener = new (new Class(
{
	PaymentWizardObject: null,

	preview: {
		'enabled': false
	},

	initialize: function()
	{
		this.DoubleClickPreventer = new Travian.DoubleClickPreventer();
		this.DoubleClickPreventer.timeout = 2000;
		this.bindEvents();
	},

	/**
	 * Events binden
	 */
	bindEvents: function()
	{
		var $this = this;

		window.addEvent('startPaymentWizard', function(options)
		{
			options.preview = $this.preview;
			if (undefined === $this.PaymentWizardObject || null === $this.PaymentWizardObject)
			{
				if (!$this.DoubleClickPreventer.check())
				{
					return false;
				}

				$this.PaymentWizardObject = $this.startPaymentWizard(options);
			}
			else
			{
				$this.PaymentWizardObject.options = Object.merge({}, $this.PaymentWizardObject.options, options || {});
				$this.PaymentWizardObject.reload();
			}
		});

		/**
		 * sets preview options that cannot be hardcoded into this class
		 */
		window.addEvent('paymentWizardFillPreview', function(enabled, title, infoIcon) {
			$this.preview.enabled = enabled;
			$this.preview.title = title;
			$this.preview.infoIcon = infoIcon;
		});
	},

	/**
	 * PaymentWizard starten
	 * @param options
	 * @return {Travian.Game.PaymentWizard}
	 */
	startPaymentWizard: function(options)
	{
		return new Travian.Game.PaymentWizard(options);
	}
}));
/**
 * Diese Klasse hÃ¶rt auf diverse Events und startet den WayOfPayment
 */
Travian.Game.WayOfPaymentEventListener = new (new Class(
{
	WayOfPaymentObject: null,

	initialize: function()
	{
		this.DoubleClickPreventer = new Travian.DoubleClickPreventer();
		this.DoubleClickPreventer.timeout = 500;
		this.bindEvents();
	},

	/**
	 * Events binden
	 */
	bindEvents: function () {
		var $this = this;
		window.addEvent('buttonClicked', function (button, options) {
			if (typeof options.wayOfPayment == 'object' && $this.DoubleClickPreventer.check()) {
				$this.WayOfPaymentObject = $this.startWayOfPayment(
					options.wayOfPayment.featureKey,
					options.wayOfPayment.context,
					options.wayOfPayment.dataCallback,
					options.wayOfPayment.confirmPopup,
					options.wayOfPayment.closeAllDialogs
				);
			}
		});
		window.addEvent('startWayOfPayment', function (featureKey, context, dataCallback, confirmPopup, closeAllDialogs) {
			if (!$this.DoubleClickPreventer.check()) {
				return false;
			}
			$this.WayOfPaymentObject = $this.startWayOfPayment(featureKey, context, dataCallback, confirmPopup, closeAllDialogs);
		});
	},

	/**
	 * Way of Payment starten
	 *
	 * @param featureKey
	 * @param context
	 * @param dataCallback
	 * @param confirmPopup
	 * @param closeAllDialogs
	 *
	 * @return {Travian.Game.WayOfPayment}
	 */
	startWayOfPayment: function (featureKey, context, dataCallback, confirmPopup, closeAllDialogs) {
		return new Travian.Game.WayOfPayment(featureKey, context, dataCallback, confirmPopup, closeAllDialogs);
	}
}));
/**
 * Diese Klasse hÃ¶rt auf diverse Events und startet Popups
 */
Travian.Game.ButtonEventListener = new (new Class(
{
	initialize: function()
	{
		this.DoubleClickPreventer = new Travian.DoubleClickPreventer();
		this.bindEvents();
	},

	/**
	 * Events binden
	 */
	bindEvents: function()
	{
		var $this = this;

		/**
		 * Wenn ein ButtonHelper Button geklickt wird, wird Ã¼berprÃ¼ft ob ein
		 * Dialog geÃ¶ffnet werden soll
		 */
		window.addEvent('buttonClicked', function(button, options)
		{
			/**
			 * Focus des Buttons entfernen, um MehrfachÃ¶ffnen durch z.B. Entertaste zu verhindern
			 */

			$(button.id).blur();

			if (typeof options.dialog == 'object' && options.dialog && $this.DoubleClickPreventer.check())
			{
				return new Travian.Dialog.Ajax(options.dialog);
			}
			if (typeof options.plusDialog == 'object' && options.plusDialog && $this.DoubleClickPreventer.check())
			{
				return new Travian.Game.PlusDialog(options.plusDialog);
			}
			if (typeof options.productionBoostDialog == 'object' && options.productionBoostDialog && $this.DoubleClickPreventer.check())
			{
				return new Travian.Game.ProductionBoostDialog(options.productionBoostDialog);
			}
			if (typeof options.reportSpamMessagesDialog == 'object' && options.reportSpamMessagesDialog && $this.DoubleClickPreventer.check())
			{
				return new Travian.Game.ReportSpamMessagesDialog(options.reportSpamMessagesDialog);
			}
			if (typeof options.goldclubDialog == 'object' && options.goldclubDialog && $this.DoubleClickPreventer.check())
			{
				return new Travian.Game.GoldclubDialog(options.goldclubDialog);
			}

            // Quest system
			if (typeof options.questButtonTipsToggle != 'undefined' && options.questButtonTipsToggle)
			{
				if(typeof options.questButtonActivateTips != 'undefined' && options.questButtonActivateTips && typeof options.questButtonDeactivateTips != 'undefined' && options.questButtonDeactivateTips)
				{
					return Travian.Game.Quest.toggleHighlights(undefined, options.questButtonActivateTips, options.questButtonDeactivateTips);
				}
			}
			if (typeof options.questButtonGainReward != 'undefined' && options.questButtonGainReward)
			{
				return Travian.Game.Quest.rewardButtonClick(options.questId);
			}
			if (typeof options.questButtonNext != 'undefined' && options.questButtonNext)
			{
				return Travian.Game.Quest.nextButtonClick(options.questId);
			}
			if (typeof options.questButtonSkipTutorial != 'undefined' && options.questButtonSkipTutorial)
			{
				return Travian.Game.Quest.skipButtonClick();
			}
			if (typeof options.questButtonOverview != 'undefined' && options.questButtonOverview)
			{
				return Travian.Game.Quest.openTodoListDialog();
			}
            if (typeof options.questButtonOverviewAchievements != 'undefined' && options.questButtonOverviewAchievements)
            {
                return Travian.Game.Quest.openTodoListDialog('', true);
            }
			if (typeof options.questButtonCloseOverlay != 'undefined' && options.questButtonCloseOverlay)
			{
				return Travian.Game.Quest.closeDialog();
			}

            // Other events
			if (typeof options.overlay != 'undefined' && options.overlay && $this.DoubleClickPreventer.check())
			{
				return Travian.Game.Overlay.openOverlay();
			}
			if (typeof options.villageDialog != 'undefined' && options.villageDialog && $this.DoubleClickPreventer.check())
			{
				return Travian.Game.showEditVillageDialog(
					options.villageDialog.title,
					options.villageDialog.description,
					options.villageDialog.saveText,
					options.villageDialog.villageId
				);
			}
			if (typeof options.redirectUrl != 'undefinded' && options.redirectUrl && $this.DoubleClickPreventer.check())
			{
				window.location.href = options.redirectUrl;
				return false;
			}
			if (typeof options.redirectUrlExternal != 'undefinded' && options.redirectUrlExternal && $this.DoubleClickPreventer.check())
			{
				window.open(options.redirectUrlExternal);
				return false;
			}
		});
		window.addEvent('tabClicked', function(button, options)
		{
			if (typeof options.dialog == 'object' && options.dialog && $this.DoubleClickPreventer.check())
			{
				return new Travian.Dialog.Ajax(options.dialog);
			}
			if (typeof options.plusDialog == 'object' && options.plusDialog && $this.DoubleClickPreventer.check())
			{
				return new Travian.Game.PlusDialog(options.plusDialog);
			}
			if (typeof options.goldclubDialog == 'object' && options.goldclubDialog && $this.DoubleClickPreventer.check())
			{
				return new Travian.Game.GoldclubDialog(options.goldclubDialog);
			}
		});
	}
}));
Travian.Game.WayOfPayment = new Class(
{

	/**
	 * Key des eigentlichen Features siehe Klasse TGPremiumfeatureFactory
	 */
	featureKey: null,

	context: null,

	confirmPopup: null,

	closeAllDialogs: null,

	/**
	 * @param featureKey
	 * @param context
	 * @param dataCallback
	 * @param confirmPopup
	 * @param closeAllDialogs
	 */
	initialize: function(featureKey, context, dataCallback, confirmPopup, closeAllDialogs)
	{
		if (typeof featureKey == 'undefined')
		{
			throw ('Feature Key must not be empty!');
		}

		var data = {};
		if (typeof dataCallback == 'string' && typeof this[dataCallback] == 'function')
		{
			data = this[dataCallback]();
		}
		if (typeof dataCallback == 'string' && typeof dataCallback.split('.').reduce(function(a, b) { return a[b] }, window) == 'function')
		{
			data = dataCallback.split('.').reduce(function(a, b) { return a[b] }, window)();
		}
		if (typeof dataCallback == 'function')
		{
			data = dataCallback();
		}

		this.featureKey = featureKey;
		this.context = context;
		this.confirmPopup = confirmPopup;
		this.closeAllDialogs = closeAllDialogs;

		if(typeof confirmPopup !== 'undefined' && typeof confirmPopup === 'object') {
			this.checkConfirmation(data);
		} else {
			this.bookPremiumFeature(data);
		}
	},

	/**
	 * Checks if the user has any gold left and shows the confirmation popup in case there is gold in his account.
	 * If there is no gold it calls the premium feature which (at current times) shows the "Buy Gold Dialog"
	 *
	 * @param data
	 */
	checkConfirmation: function (data) {

		var $this = this;
		Travian.ajax(
			{
				data: {
					cmd: 'getGoldAmount'
				},
				onSuccess: function (response) {
					var goldAmount = response.goldAmount;
					var requestedCoins = data.coins;

					// Check if the player has gold and there is enough gold to be converted.
					// If not the "Buy Gold Dialog" will be triggered
					if (goldAmount > 0 && requestedCoins <= goldAmount) {
						$this.showCustomConfirmationPopup($this.confirmPopup, data);
					} else {
						$this.bookPremiumFeature(data);
					}
				}
			});
	},

	/**
	 * Shows a custom tailored "Spend gold" confirmation popup
	 *
	 * @param popup    [confirmPopup => ['name' => '', 'options' => ['elementFocus' => '',...]]]
	 * @param data
	 */
	showCustomConfirmationPopup: function (popup, data) {
		new Travian.Dialog.Ajax({
			buttonOk: false,
			data: {
				cmd: popup['name'],
				goldAmount: data.coins
			},
			context: this.context,
			elementFocus: popup['options']['elementFocus'] || 'spendGold_confirm_btn' // Pass an element to focus or use a default one
		});
	},

	/**
	 * Startet den Klickweg
	 */
	bookPremiumFeature: function(additionalData)
	{
		var data =
		{
			cmd: 'premiumFeature',
			featureKey: this.featureKey,
			context: this.context
		};

		if (typeof additionalData != 'undefined')
		{
			var data = Object.merge({}, additionalData, data);
		}

		var $this = this;
		Travian.ajax(
		{
			data: data,
			onSuccess: function(data)
			{
				if (typeof data.functionToCall != 'undefined')
				{
					if (typeof $this[data.functionToCall] == 'function')
					{
						$this[data.functionToCall](data.options, data.context);
					}
					else if (typeof window[data.functionToCall] == 'function')
					{
						window[data.functionToCall](data.options, data.context);
					}
				}
			}
		});
	},

	/**
	 * Rendert einen Dialog mit statischem HTML
	 *
	 * BenÃ¶tigt unbedingt options.dialogOptions und options.html
	 *
	 * @param options
	 * @return {*}
	 */
	renderDialog: function(options)
	{
		var dialogOptions = options.dialogOptions;
		var dialogHtml = options.html;

		// If visible, remove the confirmation popup for the Gold => Silver conversion
		if(Travian.WindowManager.getWindowsByContext('convertGoldPopup')) {
			Travian.WindowManager.closeByContext('convertGoldPopup');
		}

		if(typeof this.closeAllDialogs !== 'undefined' && this.closeAllDialogs !== null && this.closeAllDialogs) {
			Travian.WindowManager.closeAllWindows();
		}

		/**
		 * Der Context des Dialogs ist gleich dem FeatureKey
		 */
		options.context = this.featureKey;

		$dialog = new Travian.Dialog(dialogOptions);
		$dialog.setContent(dialogHtml);
		$dialog.show();
		return $dialog;
	},

	/**
	 * SchlieÃŸt alle Fenster im momentanen Kontext
	 */
	closeDialog: function(options, context)
	{
		Travian.WindowManager.closeByContext(context);
	},

	/**
	 * Versteckt alle Fenster im momentanen Kontext
	 */
	hideDialog: function(options, context)
	{
		Travian.WindowManager.hideByContext(context);
	},

	/**
	 * Stellt alle Fenster im momentanen Kontext wieder her
	 */
	unhideDialog: function(options, context)
	{
		Travian.WindowManager.showByContext(context);
	},

	/**
	 * LÃ¤dt alle Fenster im momentanen Kontext neu (Ajax Dialog only)
	 */
	reloadDialog: function(options, context)
	{
		if (context == null && undefined != options.scope)
		{
			context = options.scope.context;
		}
		Travian.WindowManager.reloadWindowsByContext(context);
	},

	/**
	 * Reloads the current page
	 */
	reloadUrl: function()
	{
		// IE 6, 7 & 8 does not scroll to the anchor, if given, when using location.href = location.href.
		// location.href is the best way here, because there could be POST data which will be prompted to resend when
		// using location.reload()
		if ($$('body')[0].hasClass('ie6') || $$('body')[0].hasClass('ie7') || $$('body')[0].hasClass('ie8'))
		{
			window.location.reload();
		}
		else
		{
			window.location.href = window.location.href.split("#")[0];
		}
	},

	/**
	 * Ã–ffnet den PaymentWizard
	 */
	openPaymentWizard: function(options, activeTab)
	{
		var goldProductId;
		var callback = Travian.emptyFunction;

		if (typeof options.goldProductId != 'undefined')
		{
			goldProductId = options.goldProductId;
		}
		if (typeof options.callback != 'undefined' && typeof options.callback == 'function')
		{
			callback = options.callback;
		}
		if(typeof options.callback == 'string' && typeof options.callback.split('.').reduce(function(a, b) { return a[b] }, window) == 'function')
		{
			callback = options.callback.split('.').reduce(function(a, b) { return a[b] }, window);
		}

		this.closeDialog(options, 'smallestPackage');
		window.fireEvent('startPaymentWizard', {
			data:{
				goldProductId: goldProductId,
				activeTab: 'buyGold'
			},
			callback: callback,
			callbackScope: this
		});
	},

	openPaymentWizardWithProsTab: function ()
	{
		window.fireEvent('startPaymentWizard', {data:{activeTab: 'pros'}});
	}

});/**
 * Dialog welcher via Ajax entsprechende HTML Daten holt
 */
Travian.Game.PlusDialog = new Class(
{
	Extends: Travian.Dialog.Ajax,

	/**
	 * Options
	 *
	 * @var object
	 */
	options:
	{
		data:
		{
			cmd: 'plusPopup'
		},

		/**
		 * Dialog speichern, falls die Seite gewechselt/neu geladen wird
		 * Funktioniert nur bei Ajax Dialogen
		 */
		saveOnUnload: false,

		cssClass: 'brown premiumFeaturePackage premiumFeaturePlus',
		buttonOk: false,
		context: 'plus',
		darkOverlay: true,
		overlayCancel: false,

		featureMarkup: function(title, text, featureKey)
		{
			return [
				'<div class="featureImage ' + featureKey + '"></div>',
				'<div class="featureContent">',
					'<h3 class="featureTitle">' + title + '</h3>',
					'<div class="featureText">' + text + '</div>',
				'</div>',
				'<div class="clear"></div>'
			].join('');
		}
	},

	/**
	 * daten holen
	 *
	 * @retrun Travian.Dialog.Ajax
	 */
	request: function()
	{
		var $this = this;

		this.options.data.context = this.context;

		Travian.ajax(
		{
			data: this.options.data,
			onSuccess: function(data)
			{
				$this.setContent($this.createContent($this, data));
				$this.show();
			}
		});

		return this;
	},

	/**
	 * konstruktor
	 *
	 * @param object options
	 */
	initialize: function(options)
	{
		this.parent(Object.merge({}, this.options, options || {}));
	},

	createContent: function(dialog, data)
	{

		var wrapper = new Element('div',
		{
			'class': 'paymentPopupDialogWrapper'
		});

		var headline = new Element('h1');

		var headlineText = new Element('span',
		{
			html: data.title,
			'class': 'headlineText'
		});
		headline.insert(headlineText);

		var goldWrapper = new Element('span',
		{
			html: data.gold,
			'class': 'goldWrapper'
		});
		headline.insert(goldWrapper);

		headline.insert(new Element('div',
		{
			'class': 'clear'
		}));

		var subHeadLine = new Element('h2',
		{
			html: data.subHeadLine,
			'class': 'subHeadline'
		});

		var goldButtonWrapper = new Element('div',
		{
			'class': 'goldButtonWrapper'
		});

		var goldButton = new Element('div',
		{
			html: data.goldButton
		});
		var buttonSubtitle = new Element('div',
		{
			html: data.buttonSubtitle,
			'class': 'buttonSubTitle'
		});
		goldButtonWrapper.insert(goldButton);
		goldButtonWrapper.insert(buttonSubtitle);

		var plusPopupButtonExtraFeatures = new Element('h3',
		{
			html: data.plusPopupButtonExtraFeatures,
			'class': 'extraFeatures'
		});

		var featuredWrapper = new Element('div');
		var allFeaturesWrapper = new Element('div',
		{
			'class': 'furtherFeatures'
		});

		Object.each(data.features, function(feature, featureKey)
		{
			if (featureKey == dialog.options.featureKey)
			{
				var featuredFeatureElem = new Element('div',
				{
					'class': 'feature featureInfo',
					html: dialog.options.featureMarkup(feature.title, feature.text, featureKey)
				});

				featuredWrapper.insert(featuredFeatureElem);
			}
			else
			{
				var featureElem = new Element('div',
				{
					'class': 'feature featureInfo',
					html: dialog.options.featureMarkup(feature.title, feature.text, featureKey)
				});
				allFeaturesWrapper.insert(featureElem);
			}
		});

		var furtherInfos = new Element('p',
		{
			html: data.furtherInfos,
			'class': 'furtherInfos'
		});

		wrapper.insert(headline);
		wrapper.insert(featuredWrapper);
		wrapper.insert(subHeadLine);
		wrapper.insert(goldButtonWrapper);
		wrapper.insert(plusPopupButtonExtraFeatures);
		wrapper.insert(allFeaturesWrapper);
		wrapper.insert(furtherInfos);

		var $this = this;
		goldButton.addEvent('click', function()
		{
			$this.goldButtonClicked();
		});

		return wrapper;
	},

	/**
	 * Starte WayOfPayment
	 */
	goldButtonClicked: function()
	{
		this.requestSend = true;

		window.fireEvent('startWayOfPayment', [
			'plus', 'plus'
		]);
		return false;
	},

	/**
	 * Ãœberschreibt die Methode des Elternelements um bei Neubuchungen ein
	 * Neuladen der Seite zu erzwingen
	 */
	close: function()
	{
		if (typeof this.requestSend !== 'undefined' && this.requestSend === true)
		{
			return window.location.reload();
		}

		this.parent();
	}
});/**
 * Dialog welcher via Ajax entsprechende HTML Daten holt
 */
Travian.Game.GoldclubDialog = new Class(
{
	Extends: Travian.Dialog.Ajax,

	/**
	 * Options
	 *
	 * @var object
	 */
	options:
	{
		data:
		{
			cmd: 'goldclubPopup'
		},

		cssClass: 'brown premiumFeaturePackage premiumFeatureGoldclub',
		buttonOk: false,
		context: 'goldclub',
		darkOverlay: true,
		overlayCancel: false,

		/**
		 * Dialog speichern, falls die Seite gewechselt/neu geladen wird
		 * Funktioniert nur bei Ajax Dialogen
		 */
		saveOnUnload: false,

		featureMarkup: function(title, text, featureKey)
		{
			return [
				'<div class="featureImage ' + featureKey + '"></div>',
				'<div class="featureContent">',
					'<h3 class="featureTitle">' + title + '</h3>',
					'<div class="featureText">' + text + '</div>',
				'</div>',
				'<div class="clear"></div>'
			].join('');
		}
	},

	/**
	 * Daten holen
	 *
	 * @retrun Travian.Dialog.Ajax
	 */
	request: function()
	{
		var $this = this;

		this.options.data.context = this.context;

		Travian.ajax(
		{
			data: this.options.data,
			onSuccess: function(data)
			{
				$this.setContent($this.createContent($this, data));
				$this.show();
			}
		});

		return this;
	},

	/**
	 * konstruktor
	 *
	 * @param object options
	 */
	initialize: function(options)
	{
		this.parent(Object.merge({}, this.options, options || {}));
	},

	createContent: function(dialog, data)
	{

		var wrapper = new Element('div',
		{
			'class': 'paymentPopupDialogWrapper'
		});

		var headline = new Element('h1');

		var headlineText = new Element('span',
		{
			html: data.title,
			'class': 'headlineText'
		});
		headline.insert(headlineText);

		var goldWrapper = new Element('span',
		{
			html: data.gold,
			'class': 'goldWrapper'
		});
		headline.insert(goldWrapper);

		headline.insert(new Element('div',
		{
			'class': 'clear'
		}));

		var subHeadLine = new Element('h2',
		{
			html: data.subHeadLine,
			'class': 'subHeadline'
		});

		var goldButtonWrapper = new Element('div',
		{
			'class': 'goldButtonWrapper'
		});

		var goldButton = new Element('div',
		{
			html: data.goldButton
		});
		var buttonSubtitle = new Element('div',
		{
			html: data.buttonSubtitle,
			'class': 'buttonSubTitle'
		});
		goldButtonWrapper.insert(goldButton);
		goldButtonWrapper.insert(buttonSubtitle);

		var goldclubPopupButtonExtraFeatures = new Element('h3',
		{
			html: data.goldclubPopupButtonExtraFeatures,
			'class': 'extraFeatures'
		});

		var featuredWrapper = new Element('div');
		var allFeaturesWrapper = new Element('div',
		{
			'class': 'furtherFeatures'
		});

		Object.each(data.features, function(feature, featureKey)
		{
			if (featureKey == dialog.options.featureKey)
			{
				var featuredFeatureElem = new Element('div',
				{
					'class': 'feature featureInfo',
					html: dialog.options.featureMarkup(feature.title, feature.text, featureKey)
				});

				featuredWrapper.insert(featuredFeatureElem);
			}
			else
			{
				var featureElem = new Element('div',
				{
					'class': 'feature featureInfo',
					html: dialog.options.featureMarkup(feature.title, feature.text, featureKey)
				});
				allFeaturesWrapper.insert(featureElem);
			}
		});

		var furtherInfos = new Element('p',
		{
			html: data.furtherInfos,
			'class': 'furtherInfos'
		});

		wrapper.insert(headline);
		wrapper.insert(featuredWrapper);
		wrapper.insert(subHeadLine);
		wrapper.insert(goldButtonWrapper);
		wrapper.insert(goldclubPopupButtonExtraFeatures);
		wrapper.insert(allFeaturesWrapper);
		wrapper.insert(furtherInfos);

		var $this = this;
		goldButton.addEvent('click', function()
		{
			$this.goldButtonClicked();
		});

		return wrapper;
	},

	/**
	 * Starte WayOfPayment
	 */
	goldButtonClicked: function()
	{
		this.requestSend = true;

		window.fireEvent('startWayOfPayment', [
			'goldclub', 'goldclub'
		]);
		return false;
	}
});/**
 * Dialog welcher via Ajax entsprechende HTML Daten holt
 */
Travian.Game.ProductionBoostDialog = new Class(
{
	Extends: Travian.Dialog.Ajax,

	/**
	 * Options
	 *
	 * @var object
	 */
	options:
	{
		data:
		{
			cmd: 'productionBoostPopup'
		},

		cssClass: 'brown premiumFeatureProductionBoost',
		buttonOk: false,
		context: 'productionBoost',
		darkOverlay: true,
		overlayCancel: false,

		/**
		 * Dialog speichern, falls die Seite gewechselt/neu geladen wird
		 * Funktioniert nur bei Ajax Dialogen
		 */
		saveOnUnload: false,

		featureMarkup: function(imageClass, title, subtitle, subtitleClassExtension, button, buttonSubtitle)
		{
			return [
				'<div class="featureImage ' + imageClass + '"></div>',
				'<div class="featureContent">',
					'<h3 class="featureTitle productionBoostTitle">' + title + '</h3>',
					'<div class="featureRemainingTime productionBoostSubtitle subtitle ' + subtitleClassExtension + '">' + subtitle + '</div>',
					'<div class="featureButton productionBoostButtonPos">' + button + '</div>',
					'<div class="featureDuration featureRenewal productionBoostButtonSubtitle subtitle">' + buttonSubtitle + '</div>',
				'</div>',
				'<div class="clear"></div>'
			].join('');
		}
	},

	/**
	 * Daten holen
	 *
	 * @return Travian.Dialog.Ajax
	 */
	request: function()
	{
		var $this = this;

		this.options.data.context = this.context;

		Travian.ajax(
		{
			data: this.options.data,
			onSuccess: function(data)
			{
				$this.setContent($this.createContent($this, data));
				$this.bindElements();
				$this.show();
			}
		});

		return this;
	},

	/**
	 * Konstruktor
	 *
	 * @param object options
	 */
	initialize: function(options)
	{
		var $this = this;

		this.parent(Object.merge({}, this.options, options || {}));
	},

	/**
	 * AutoverlÃ¤ngern an oder abschalten.
	 *
	 * @param string featureKey
	 * @param string context
	 *
	 * @return void
	 */
	toggleAutoprolong: function(featureKey, context)
	{
		var $this = this;
		var data = new Object();
		data.cmd = 'premiumFeature';
		data.featureKey = featureKey;
		data.toggleAutoprolong = 1;
		Travian.ajax(
		{
			data: data,
			onSuccess: function(data)
			{
				Travian.WindowManager.reloadWindowsByContext(context);
			},
			onFailure: function(data)
			{
				$this.reload();
			}
		});
	},

	/**
	 * Erstellt den ProductionBoostDialog
	 *
	 * @param {object} dialog NÃ¶tig fÃ¼r die Konfiguration
	 * @param {data} data
	 *
	 * @return Element wrapper des Dialogs
	 */
	createContent: function(dialog, data)
	{
		var wrapper = new Element('div',
		{
			'class': 'paymentPopupDialogWrapper'
		});

		var headlineAndGold = new Element('h1',
		{
			html: data.title,
			'class': 'headline'
		});
		var goldWrapper = new Element('span',
		{
			html: data.gold,
			'class': 'goldWrapper'
		});
		headlineAndGold.insert(goldWrapper);

		var subHeadlineText = new Element('h3',
		{
			html: data.productionBoostChooseText,
			'class': 'subHeadline'
		});

		var featureWrapper = new Element('div',
		{
			'class': 'featureCollection',
			'id': 'featureCollectionWrapper'
		});

		Object.each(data.features, function(feature, imageClass)
		{
			var featuredFeatureElem = new Element('div',
			{
				'class': 'feature featureBooking',
				html: dialog.options.featureMarkup(imageClass, feature.title, feature.subtitle, feature.subtitleClassExtension, feature.button, feature.buttonSubtitle)
			});

			featureWrapper.insert(featuredFeatureElem);
		});

		var furtherInfos = new Element('p',
		{
			html: data.furtherInfos,
			'class': 'furtherInfos'
		});

		wrapper.insert(headlineAndGold);
		wrapper.insert(subHeadlineText);
		wrapper.insert(featureWrapper);
		wrapper.insert(furtherInfos);

		return wrapper;
	},

	/**
	 * Binde Events
	 */
	bindElements: function()
	{
		var $this = this;
		$('featureCollectionWrapper').select('.productionBoostButton').each(function(item)
		{
			item.removeEvent('click');
			item.addEvent('click', function(e)
			{
				$this.requestSend = true;

				if (this.hasClass('wood'))
				{
					window.fireEvent('startWayOfPayment', [
						'productionboostWood', 'productionBoost'
					]);
				}
				else if (this.hasClass('clay'))
				{
					window.fireEvent('startWayOfPayment', [
						'productionboostClay', 'productionBoost'
					]);
				}
				else if (this.hasClass('iron'))
				{
					window.fireEvent('startWayOfPayment', [
						'productionboostIron', 'productionBoost'
					]);
				}
				else if (this.hasClass('crop'))
				{
					window.fireEvent('startWayOfPayment', [
						'productionboostCrop', 'productionBoost'
					]);
				}

				return false;
			});
		});
		$('featureCollectionWrapper').select('.checkbox').each(function(item)
		{
			item.removeEvent('click');
			item.addEvent('click', function(e)
			{
				if (this.hasClass('prolongProductionboostWood'))
				{
					return $this.toggleAutoprolong('productionboostWood', 'productionBoost');
				}
				else if (this.hasClass('prolongProductionboostClay'))
				{
					return $this.toggleAutoprolong('productionboostClay', 'productionBoost');
				}
				else if (this.hasClass('prolongProductionboostIron'))
				{
					return $this.toggleAutoprolong('productionboostIron', 'productionBoost');
				}
				else if (this.hasClass('prolongProductionboostCrop'))
				{
					return $this.toggleAutoprolong('productionboostCrop', 'productionBoost');
				}
				else if (this.hasClass('prolongPlus'))
				{
					return $this.toggleAutoprolong('plus', 'plus');
				}

				return false;
			});
		});
	},

	/**
	 * Ãœberschreibt die Methode des Elternelements um bei Neubuchungen ein
	 * Neuladen der Seite zu erzwingen
	 */
	close: function()
	{
		if (typeof this.requestSend !== 'undefined' && this.requestSend === true)
		{
			return window.location.reload();
		}

		this.parent();
	}

});
/**
 * Dialog welcher via Ajax entsprechende HTML Daten holt
 */
Travian.Game.GoldTransferDialog = new Class(
{
	Extends: Travian.Dialog.Ajax,

	/**
	 * Options
	 *
	 * @var object
	 */
	options:
	{
		data:
		{
			cmd: 'goldTransfer'
		},

		/**
		 * Dialog speichern, falls die Seite gewechselt/neu geladen wird
		 * Funktioniert nur bei Ajax Dialogen
		 */
		saveOnUnload: false
	},

	/**
	 * daten holen
	 *
	 * @retrun Travian.Dialog.Ajax
	 */
	request: function()
	{
		var $this = this;

		this.options.data.context = this.context;

		Travian.ajax(
		{
			data: this.options.data,
			onSuccess: function(data)
			{
				if (data.showDialog == true)
				{
					$this.setContent($this.createContent($this, data));
					$this.show();
					return true;
				}
				else
				{
					window.location.href = window.location.href;
					window.location.reload();
				}
			}
		});

		return this;
	},

	/**
	 * konstruktor
	 *
	 * @param object options
	 */
	initialize: function(messageId, code, accept)
	{
		this.options.data.code = code;
		this.options.data.messageId = messageId;
		this.options.data.accept = accept ? 1 : 0;
		this.options.data.refuse = accept ? 0 : 1;

		this.parent(Object.merge({}, this.options, {}));
	},

	createContent: function($this, data)
	{
		return data.statusText;
	},

	close: function()
	{
		window.location.href = window.location.href;
		window.location.reload();
	}
});var wheelOfFortune;

function WheelOfFortune() {

    this.sufficientGold = true;

    this.prizeClass = 'no_image';
    this.prizeDescription = '';
    this.idleAnimationRunning = true;
    this.requestIdleAnimationToggle = false;
    this.idleAnimationStep = 1;
    var animationClass = function() {
        var self = this;
        this.third = { name: 'pot_idle', next: null };
        this.second = { name: 'pot_idle', next: self.third };
        this.first = { name: 'pot_move', next: self.second };
        this.third.next = this.first;
        this.current = this.first;
    };
    this.animationStep = new animationClass();
    this.lightningAnimationRunning = false;
    this.requestLightningAnimationToggle = false;
    this.lightningAnimationStep = 1;
    this.showPrizeAnimationFinished = true;
    this.wheelButtonsEnabled = true;
    this.ajaxCallRunning = false;

    this.wheelPrizeElement = $('wheelPrize');
    this.newWheelPrizeElementPosition = 0;
    this.wheelButtons = $$('#wheelDescription button');

    this.direction = 'ltr';

    this.initialize = function() {
        var $this = this;

        this.bindEvents();
        this.startButtonValidation();
        this.startAnimations();

        if($(document.body).hasClass('ltr'))
        {
            $this.direction = 'ltr';
        }
        else {
            $this.direction = 'rtl';
        }

        var inventoryTabPosition;
        var inventoryTabPositionLeft;
        var inventoryTabWidth;
        var wheelTabPosition;


        // calculate the position where the prize will fly to
        if($this.direction == 'ltr')
        {
            // calculate for ltr version
            inventoryTabPosition = $$('.wheelOfFortune .inventoryTab')[0].getPosition(true);
            wheelTabPosition = $$('.wheelOfFortune .wheelTab')[0].getPosition(true);

            inventoryTabPositionLeft = inventoryTabPosition.x - wheelTabPosition.x;

            inventoryTabWidth = $$('.wheelOfFortune .inventoryTab')[0].getSize().x;

            // -299px is half the width of the whole container (needed since we use centering on an absolute positioned element in CSS)
            // +6px for the padding within the inventory tab => -293px
            // 80px is the width of the smaller prize icon (when flying to the inventory)
            // we first place the image on the same x position like the inventory tab
            // then we add some space so it is centered on the tab
            $this.newWheelPrizeElementPosition = -293 + inventoryTabPositionLeft + (inventoryTabWidth - 80) / 2;
        }
        else {
            // calculate for rtl version

            inventoryTabWidth = $$('.wheelOfFortune .inventoryTab')[0].getSize().x;
            var wheelTabWidth = $$('.wheelOfFortune .wheelTab')[0].getSize().x;

            // -299px is half the width of the whole container (needed since we use centering on an absolute positioned element in CSS)
            // +6px for the padding within the inventory tab => -293px
            // 80px is the width of the smaller prize icon (when flying to the inventory)
            // we first place the image on the same x position like the inventory tab
            // then we add some space so it is centered on the tab
            $this.newWheelPrizeElementPosition = -293 + wheelTabWidth + (inventoryTabWidth - 80) / 2;
        }

        // make the object accessible for ajax response javascript function calls
        wheelOfFortune = this;
    };

    /**
     * starts the animation loops
     */
    this.startAnimations = function(){
        var $this = this;
        setInterval(function () {
            if ($this.idleAnimationRunning) {
                var wheelAnimation = $('wheelAnimation');
                wheelAnimation.set('class', 'wheelOfFortune ' + $this.animationStep.current.name + ' pot_' + $this.idleAnimationStep);

                $this.idleAnimationStep++;

                if ($this.idleAnimationStep == 17) {
                    $this.idleAnimationStep = 1;
                    $this.animationStep.current = $this.animationStep.current.next;
                    if ($this.requestIdleAnimationToggle) {
                        wheelAnimation.set('class', 'wheelOfFortune ' + $this.animationStep.current.name + ' pot_17');
                        $this.animationStep.current = $this.animationStep.first;
                        $this.showPrizeAnimationFinished = false;
                        $this.idleAnimationRunning = !$this.idleAnimationRunning;
                        $this.requestLightningAnimationToggle = true;

                        $this.requestIdleAnimationToggle = false;

                        setTimeout(function () {
                            $('wheelPrizeBox').set('class', 'wheelOfFortune prize_2');

                            setTimeout(function () {
                                $('wheelPrize').set('class', 'wheelOfFortune winningPage ' + $this.prizeClass);
                                if ($this.prizeClass == 'npc_merchant_voucher_x5') {
                                    $('npc_merchant_voucher_x5_text').removeClass('hide');
                                }
                                var wheelPrizeDescription = $('wheelPrizeDescription');
                                wheelPrizeDescription.set('html', $this.prizeDescription);
                                wheelPrizeDescription.set('class', 'wheelOfFortune wheelPrizeDescription');
                                $('wheelPrizeBoxRays').set('class', 'wheelOfFortune rays_2');

                                setTimeout(function () {
                                    $this.showPrizeAnimationFinished = true;
                                }, 500);

                            }, 500);

                        }, 1000);
                    }
                }
            }
            else {
                if ($this.requestIdleAnimationToggle) {
                    if ($this.sufficientGold) {
                        $this.showPrizeAnimationFinished = false;
                        $this.requestLightningAnimationToggle = true;

                        $this.requestIdleAnimationToggle = false;

                        setTimeout(function () {
                            $('wheelPrizeBox').set('class', 'wheelOfFortune prize_2');

                            setTimeout(function () {
                                $('wheelPrize').set('class', 'wheelOfFortune winningPage ' + $this.prizeClass);
                                if ($this.prizeClass == 'npc_merchant_voucher_x5') {
                                    $('npc_merchant_voucher_x5_text').removeClass('hide');
                                }
                                var wheelPrizeDescription = $('wheelPrizeDescription');
                                wheelPrizeDescription.set('html', $this.prizeDescription);
                                wheelPrizeDescription.set('class', 'wheelOfFortune wheelPrizeDescription');
                                $('wheelPrizeBoxRays').set('class', 'wheelOfFortune rays_2');

                                setTimeout(function () {
                                    $this.showPrizeAnimationFinished = true;
                                }, 500);

                            }, 500);

                        }, 1000);
                    }
                    else {
                        $this.requestIdleAnimationToggle = false;
                        $this.idleAnimationRunning = true;

                        $('wheelPrizeBox').set('class', 'wheelOfFortune prize_1');
                        $('wheelPrizeBoxRays').set('class', 'wheelOfFortune rays_1');
                        $('wheelPrize').set('class', 'wheelOfFortune winningPage no_image');
                        $('npc_merchant_voucher_x5_text').addClass('hide');
                        var wheelPrizeDescription = $('wheelPrizeDescription');
                        wheelPrizeDescription.set('html', '');
                        wheelPrizeDescription.set('class', 'wheelOfFortune wheelPrizeDescription hidden');
                    }
                }
            }
        }, 100);

        setInterval(function () {
            if ($this.lightningAnimationRunning) {
                if ($this.lightningAnimationStep == 1) {
                    $('wheelPrizeBox').set('class', 'wheelOfFortune prize_1');
                    $('wheelPrizeBoxRays').set('class', 'wheelOfFortune rays_1');
                    $('wheelPrize').set('class', 'wheelOfFortune winningPage no_image');
                    $('npc_merchant_voucher_x5_text').addClass('hide');
                    var wheelPrizeDescription = $('wheelPrizeDescription');
                    wheelPrizeDescription.set('html', '');
                    wheelPrizeDescription.set('class', 'wheelOfFortune wheelPrizeDescription hidden');
                }

                $('wheelClickAnimation').set('class', 'wheelOfFortune lightning_' + $this.lightningAnimationStep);

                $this.lightningAnimationStep++;

                if ($this.lightningAnimationStep == 14) {
                    $this.lightningAnimationRunning = false;
                    $this.lightningAnimationStep = 1;
                }
            }
            else {
                if ($this.requestLightningAnimationToggle) {
                    $this.lightningAnimationRunning = !$this.lightningAnimationRunning;
                    $this.requestLightningAnimationToggle = false;
                }
            }
        }, 50);
    };

    /**
     * starts the validation if the button is enabled/disabled
     */
    this.startButtonValidation = function() {
        var $this = this;

        setInterval(function(){

            $this.wheelButtonsEnabled = true;

            // check for running fly animation
            if($this.wheelPrizeElement.hasClass('fly') || $this.wheelPrizeElement.hasClass('fall'))
            {
                $this.wheelButtonsEnabled = false;
            }

            // check for running win prize animation
            if($this.lightningAnimationRunning)
            {
                $this.wheelButtonsEnabled = false;
            }

            // when animations are requested, disable the buttons
            if($this.requestIdleAnimationToggle || $this.requestLightningAnimationToggle)
            {
                $this.wheelButtonsEnabled = false;
            }

            // disable the buttons until the animations have finished
            if(!$this.showPrizeAnimationFinished)
            {
                $this.wheelButtonsEnabled = false;
            }

            // buttons should be disabled until ajax call is done
            if($this.ajaxCallRunning)
            {
                $this.wheelButtonsEnabled = false;
            }

            // remove the disabled class first to prevent having it set for more than once
            $this.wheelButtons.removeClass('disabled');

            // disable the buttons if necessary
            if(!$this.wheelButtonsEnabled)
            {
                $this.wheelButtons.addClass('disabled');
            }

        }, 10);
    };

    /**
     * binds the events needed for all animations
     */
    this.bindEvents = function() {
        var $this = this;
        $$('#wheelDescription #premiumSpin button').addEvent('click', function () {

            $this.showPrizeAnimationFinished = false;
            var currentGold = parseInt($$('.ajaxReplaceableGoldAmount').get('html'));
            var goldNeeded = parseInt($$('#premiumSpin.wheelOfFortune .goldValue').get('html'));

            if (currentGold >= goldNeeded) {
                $this.ajaxCallRunning = true;
            }
            else {
                $this.sufficientGold = false;
                $this.showPrizeAnimationFinished = true;
                if (!$this.idleAnimationRunning) {
                    $this.requestIdleAnimationToggle = true;
                }
            }

        });

        $$('#wheelDescription #freeSpin button').addEvent('click', function () {

            $this.ajaxCallRunning = true;
            $this.showPrizeAnimationFinished = false;

        });

        $$('.wheelOfFortune #wheelContainer').addEvent('click', function (e) {
            if(
                e.target.id != 'wheelPrizeBox' &&
                e.target.id != 'freeSpin' &&
                e.target.id != 'premiumSpin' &&
                e.target.id != 'wheelPrize' &&
                e.target.id != 'wheelPrizeDescription' &&
                e.target.id != 'npc_merchant_voucher_x5_text' &&
                !e.target.hasClass('button-content') &&
                !e.target.hasClass('goldValue') &&
                !e.target.hasClass('goldIcon') &&
                !e.target.hasClass('goldBig') &&
                !e.target.hasClass('greenBig'))
            {
                $this.flyPrizeToInventory();
            }
        });
    };

    /**
     * displays the won prize, updates the gold, updates the buttons
     * @param newPrizeClass
     * @param newPrizeDescription
     * @param newGold
     * @param freeSpinPossible
     */
    this.showWonPrize = function(newPrizeClass, newPrizeDescription, newGold, freeSpinPossible) {
        var $this = this;

        $this.ajaxCallRunning = false;
        $this.requestIdleAnimationToggle = true;
        $this.prizeClass = newPrizeClass;
        $this.prizeDescription = newPrizeDescription;

        $$('.ajaxReplaceableGoldAmount').set('html', newGold);

        if (freeSpinPossible) {
            if ($$('#wheelDescription #freeSpin').hasClass('hide')) {
                $$('#wheelDescription #premiumSpin').addClass('hide');
                $$('#wheelDescription #freeSpin').removeClass('hide');
            }
        }
        else {
            if ($$('#wheelDescription #premiumSpin').hasClass('hide')) {
                $$('#wheelDescription #freeSpin').addClass('hide');
                $$('#wheelDescription #premiumSpin').removeClass('hide');
            }
        }
    };

    /**
     * plays the animation to fly the displaying prize to the inventory
     */
    this.flyPrizeToInventory = function() {
        var $this = this;

        if(!$this.wheelPrizeElement.hasClass('no_image') && !$this.ajaxCallRunning && $this.showPrizeAnimationFinished)
        {
            $('npc_merchant_voucher_x5_text').addClass('hide');
            $('wheelPrizeBox').set('class', 'wheelOfFortune prize_1');
            $('wheelPrizeBoxRays').set('class', 'wheelOfFortune rays_1');

            $this.wheelPrizeElement.addClass('fly');
            if($this.direction == 'ltr')
            {
                $this.wheelPrizeElement.setStyle('margin-left', $this.newWheelPrizeElementPosition+'px');
            }
            else {
                $this.wheelPrizeElement.setStyle('margin-right', $this.newWheelPrizeElementPosition+'px');
            }
            $$('.wheelOfFortune .inventoryTab').removeClass('normal').addClass('active');

            setTimeout(function()
            {
                $this.wheelPrizeElement.addClass('fall');
                setTimeout(function()
                {
                    $$('.wheelOfFortune .inventoryTab').removeClass('active').addClass('normal');

                    setTimeout(function()
                    {
                        $this.wheelPrizeElement.setStyle('display', 'none');

                        setTimeout(function()
                        {
                            $this.wheelPrizeElement.set('class', 'wheelOfFortune winningPage no_image');
                            if($this.direction == 'ltr')
                            {
                                $this.wheelPrizeElement.setStyle('margin-left', '-61px');
                            }
                            else {
                                $this.wheelPrizeElement.setStyle('margin-right', '-61px');
                            }
                        }, 50);

                        setTimeout(function()
                        {
                            $this.wheelPrizeElement.setStyle('display', 'block');
                            $this.idleAnimationRunning = true;
                        }, 250);
                    }, 1);

                }, 1000);

            }, 1250);
        }
    };
}Travian.Game.WheelOfFortuneInventory = new Class({

    options: {
        callable : {
            updatePrizeExplanation: function(parent, newAmount, prizeName) {},
            getContainer: function(parent, container) {
                return container;
            }
        }
    },

    isFunction : function(obj) {
        return !!(obj && obj.constructor && obj.call && obj.apply);
    },

    initialize: function(options)
    {

        this.options = Object.merge(this.options, this.options, options || {});
        this.prizeId = options.prizeId;
        this.maxAmount = parseInt(options.maxAmount);
        this.prizeName = options.prizeName;
        this.isSingleUse = options.isSingleUse;
        this.confirmEnabled = options.confirmEnabled;
        this.translations = options.translations;

        if( this.isSingleUse )
        {
            this.maxAmount = 1;
        }

    },
    showApplyPrizeForm: function ()
    {
        var $WheelOfFortuneInventory = this;

        if (this.alreadyOpen)
        {
            return;
        }

        this.alreadyOpen = true;

        var container = this.getContainer(this.prizeId);
        var html = container.get('html');
        var dialog = html.dialog({
            relativeTo: $('content'),
            elementFocus: 'totalPrizeAmount',
            buttonTextOk: this.translations.buttonOkText,
            buttonOk: true,
            keepOpen: true,
            onOpen: function(dialog, contentElement)
            {
                var input = $("totalPrizeAmount");
                input.set('value', $WheelOfFortuneInventory.maxAmount);
                $WheelOfFortuneInventory.updatePrizeExplanation($WheelOfFortuneInventory.maxAmount);
                if (!$WheelOfFortuneInventory.isSingleUse) {
                    dialog.makeInputAmountable(input, $WheelOfFortuneInventory.maxAmount, $WheelOfFortuneInventory.updatePrizeExplanation.bind($WheelOfFortuneInventory));
                }
                if (!$WheelOfFortuneInventory.confirmEnabled) {
                    dialog.toggleFormState(true);
                }
            },
            onOkay: function(dialog, contentElement)
            {
                Travian.ajax({
                    data: {
                        cmd: 'usePrize',
                        amount: $WheelOfFortuneInventory.getSubmitAmount(),
                        prize_id: $WheelOfFortuneInventory.prizeId
                    }
                });

            },
            onClose: function(dialog, contentElement)
            {
                $WheelOfFortuneInventory.alreadyOpen = false;
            }
        });
    },
    updatePrizeExplanation: function(newAmount) {
        var prizeName = this.prizeName;
        var confirmationText = this.translations.confirmationText;
        confirmationText = confirmationText.replace('[AMOUNT]', newAmount).replace('[PRIZE_NAME]', prizeName);
        $("prizeExplanation").set("html", confirmationText);
        //update events
        if (this.isFunction(this.options.callable.updatePrizeExplanation)) {
            this.options.callable.updatePrizeExplanation(this, newAmount, prizeName);
        }
    },
    getContainer: function()
    {
        var container = new Element('div', {'id': 'usePrizePopup'});

        //append the total prize amount
        if( this.prizeId != 'gold_small' && this.prizeId != 'gold_large' )
        {
            container.appendChild(new Element('div', {'html': this.translations.applyToVillageText}))
        }

        if( !this.isSingleUse )
        {
            container.appendChild(new Element('span', {'html': this.translations.amountText}));
            container.appendChild(
                new Element('input', {'id':'totalPrizeAmount', styles: {
                    width: '100px'
                }})
            );
        } else
        {
            container.appendChild(
                new Element('input', {'id':'totalPrizeAmount', 'type': 'hidden'})
            );
        }

        container.appendChild(new Element('div', {'html': '', 'id': 'prizeExplanation'}));

        //update container content
        if (this.isFunction(this.options.callable.getContainer)) {
            container = this.options.callable.getContainer(this, container);
        }

        return container;
    },
    getSubmitAmount: function()
    {
        var inputtedAmount = parseInt($("totalPrizeAmount").get('value').replace(/^0+/, '')) || 0;

        if (inputtedAmount <= this.maxAmount && inputtedAmount > 0) {
            return inputtedAmount;
        }

        return this.maxAmount;
    }

});/**
 * Methoden fÃ¼r die Quest und Tutorial Darstellung
 *
 */
Travian.Game.Quest = new (new Class(
{
	Implements: [
		Options
	],

	options:
	{
		/**
		 * Hat den Zustand ob gerade ein Tutorial gespielt wird
		 *
		 * @var boolean
		 */
		isTutorial: false,

		/**
		 * Beinhaltet die Daten zur erzeugung der Liste am Berater
		 *
		 * @var Object
		 */
		listData: {},

		/**
		 * Beinhaltet die Daten des aktuellen tutorialSteps
		 *
		 * @var Object
		 */
		tutorialData: {},

		/**
		 * Beinhaltet die Daten zur erzeugung der Liste im TodoDialog
		 *
		 * @var Object
		 */
		dialogListData: {},

		/**
		 * Elemente die gehighlighted werden sollen (fÃ¼r das Tutorial relevant)
		 * HÃ¤lt die information selector und type zur Darstellung Typen kÃ¶nnen
		 * sein: 'image' oder 'rectangle'
		 *
		 * @var Object
		 */
		highlightSelectors: {},

		/**
		 * Wenn ein AJAX - call abgesetzt werden soll sobald die Tips
		 * ausgeschaltet werden dieses Flag auf true setzen
		 *
		 * @var boolean
		 */
		tipsTurnoffAjaxTrigger: false
	},

	/**
	 * EnthÃ¤lt die Highlightobjekte
	 *
	 * @var Array
	 */
	highlightObjects: [],

	/**
	 * Toggle Status
	 *
	 * var bool
	 */
	toggleStatus: false,

	/**
	 * initializes the quests highlights handling
	 * method is not named initialize to avoid being executed before Travian.Game.Preferences is ready
	 */
	init: function()
	{
        var state = false;

		if(Travian.Game.Preferences.get('highlightsToggle') !== false) {
			state = true;
		}
		this.toggleHighlights(state, false, false);
	},

	/**
	 * Ajax Dialog
     * @var {object}
	 */
	dialog: {
        quest: null,
        achievement: null
    },

	/**
	 * Der Berater wurde geklickt Zeigt enstrepchend des Modus an ob ein
	 * InformationsDialog oder die Aufgabenliste Dargestellt wird
	 *
	 * @param {string}  id - Kann sowohl eine Quest als auch eine Tutorial ID sein
	 */
	mentorClick: function(id)
	{
		if (Travian.WindowManager.getWindowsByContext('quest').length > 0)
		{
			Travian.WindowManager.closeByContext('quest');
		}
		else
		{
			if (this.options.isTutorial == true)
			{
				if (typeof id == 'undefined' || id == '')
				{
					throw ('Keine ID zur Darstellung an den Questdialog Ã¼bergeben!');
				}

				this.openInformationDialog(id, this.options.tutorialData.answersLink, null);
			}
			else
			{
				this.openTodoListDialog(this.options.dialogListData.answersLink);
			}
		}
	},

	/**
	 * Der rewardbutton wurde geklickt
	 *
	 * @param {string} id - ID zu dem Quest / Tutorial
	 */
	rewardButtonClick: function(id)
	{
		Travian.WindowManager.closeByContext('quest');

		var data = {
			cmd: 'quest',
			questTutorialId: id,
			action: 'reward'
		};
		// Ugly hack for the new DailyQuests system.
		// The requests to the new system quests and rewards should go only into 'dailyquests' ajax handler
		// There is no way to distinguish is the new system or old is used from the JS, except by the name requested
		if (id.search(/DailyQuest/) != -1) {
			data = {
				cmd: 'dailyquests',
				questId: id,
				action: 'reward'
			};
		}

		new Travian.ajax(
		{
			data: data
		});
	},

	/**
	 * Tutorial Ãœberspringen
	 */
	skipButtonClick: function()
	{
		new Travian.ajax(
		{
			data:
			{
				cmd: 'quest',
				action: 'skip'
			}
		});
	},

	/**
	 * Im Tutorial wurde der Weiterbutton geclicked
	 *
	 * @param {string}  id - ID zu dem Quest / Tutorial
	 */
	nextButtonClick: function(id)
	{
		new Travian.ajax(
		{
			data:
			{
				cmd: 'quest',
				questTutorialId: id,
				action: 'next'
			}
		});
	},

	/**
	 * Erzeugt die Highlightelemente
	 */
	createHighlights: function()
	{
		var $this = this;

		// Wenn bereits Highlightelemente da sind, die erst mal lÃ¶schen
		this.highlightObjects.each(function(obj)
		{
			obj.deactivate();
		});

		this.highlightObjects = [];

		for ( var i = 0; i < this.options.highlightSelectors.length; i++)
		{
			var highlightSelector = this.options.highlightSelectors[i];

			// KÃ¶nnen auch mehrere sein, z.B. alle Holz-Rohstoffelder
			var highlightElements = $$(highlightSelector.selector);

			// Wenn Elemente gefunden wurden, nach dem highlighting die Suche
			// beenden
			if (highlightElements.length > 0)
			{
				highlightElements.each(function(highlightElement)
				{
					var zIndexValue = 1000;

					if (highlightSelector.selector.match(/^\.dialog/))
					{
						// immer 2mal mehr als wie du hr. dialog, aber diesmal
						// richtig
						zIndexValue = Travian.WindowManager.getCurrentZIndex() + 2;
					}
					var highlight = new Travian.Game.Highlight(
					{
						element: highlightElement,
						renderer: highlightSelector.renderer,
						rendererOptions:
						{
							zIndex: zIndexValue
						}
					});
					$this.highlightObjects.push(highlight);
					if ($this.toggleStatus)
					{
						highlight.activate();
					}
				});
				break;
			}
		}
	},

	/**
	 * Zeigt oder versteckt die highlights
	 *
	 * @param {boolean} force
	 * @param {boolean} activateTips
	 * @param {boolean} deactivateTips
	 */
	toggleHighlights: function(force, activateTips, deactivateTips)
	{
		if (typeof force === 'undefined')
		{
			this.toggleStatus = !this.toggleStatus;
		}
		else
		{
			this.toggleStatus = (force);
		}

		var $this = this;
		Travian.Game.Preferences.set('highlightsToggle', this.toggleStatus, false);

		var lightBulb = $('questTutorialLightBulb');

		if (lightBulb)
		{
			if (this.toggleStatus)
			{
				lightBulb.addClass('bulbActive').removeClass('bulbWhite');

				if(deactivateTips)
				{
					lightBulb.setTip(deactivateTips);
					Travian.Tip.show(deactivateTips);
				}
			}
			else
			{
				lightBulb.removeClass('bulbActive').addClass('bulbWhite');

				if(activateTips)
				{
					lightBulb.setTip(activateTips);
					Travian.Tip.show(activateTips);
				}
			}
		}

		if (this.options.tipsTurnoffAjaxTrigger && this.toggleStatus === false)
		{
			new Travian.ajax(
			{
				data:
				{
					cmd: 'quest',
					action: 'tipsOff'
				}
			});
		}

		// es gibt highlights die noch nie initialisiert wurden (bspl. durch
		// einen ajax call etc)
		if (this.highlightObjects.length == 0 && this.options.highlightSelectors.length > 0)
		{
			this.createHighlights();
		}

		this.highlightObjects.each(function(highlightObject)
		{
			if ($this.toggleStatus)
			{
				highlightObject.activate();
			}
			else
			{
				highlightObject.deactivate();
			}
		});
	},

	/**
	 * Ã–ffnet den jeweiligen Quest oder Tutorial Informations Dialog Jeweils
	 * immer vom derzeitigen Schritt
	 *
	 * @param {string} id - die ID zu der Quest / dem Tutorial
	 * @param {string} answersLink - Link zu der Answers Page
	 * @param {string|null} actionType - art der Aktion wie z.B. next oder reward
	 */
	openInformationDialog: function(id, answersLink, actionType)
	{
		// sicherstellen, wenn actionType nicht gesetzt ist, dass es auch
		// wirklich null ist
		if (!actionType)
		{
			actionType = null;
		}
		var questOrTutorial = (this.options.isTutorial ? 'tutorial' : 'quest');

        var dialogType = 'quest';

        if (id.search(/Achievement/) != -1 || id.search(/DailyQuest/) != -1)
        {
            dialogType = 'achievement';
        }

		var $this = this;
		if (this.dialog[dialogType] === null)
		{
			Travian.WindowManager.closeByContext('quest');
			this.dialog[dialogType] = new Travian.Dialog.Ajax(
			{
				resizeDialogIfOverflow: false,
				data:
				{
					cmd: 'quest',
					questTutorialId: id,
					action: actionType
				},
				context: dialogType,
				buttonOk: false,
				enableBackground: this.options.isTutorial,
				darkOverlay: this.options.isTutorial,
				draggable: true,
				savePositionForSession: {
					preferenceKey: 'QuestDialogPosition'
				},
				saveOnUnload: true,
				overlayCancel: false,
				infoIcon: answersLink,
				cssClass: 'white questInformation ' + id + ' ' + questOrTutorial,
				preventFormSubmit: true,
				buttonTextInfo: Travian.Translation.get('answers.' + id.toLowerCase() + '_title') || 'Answers',
				topHeaderOffset: (dialogType === 'achievement' ? 40 : 0),
				onClose: function()
				{
					//only toggle off highlights if toggle status is off
					if (!$this.toggleStatus) {
						$this.highlightObjects.each(function ($highlightObject) {
							$highlightObject.deactivate();
						});
					}
					$this.dialog[dialogType] = null;

					if ($this.options.isTutorial)
					{
						if ($this.options.tutorialData.id === 'Tutorial_01')
						{
							Travian.Game.Preferences.set('firstTutorialClosed', true, false);
						}
					}
				},
				fx:
				{
					options:
					{
						duration: 0
					}
				}
			});
		}
		else
		{
			// Ugly hack for the new DailyQuests system.
			// The requests to the new system quests and rewards should go only into 'dailyquests' ajax handler
			// There is no way to distinguish is the new system or old is used from the JS, except by the name requested
			if (id.search(/DailyQuest/) != -1) {
				this.dialog[dialogType].options.data.cmd = 'dailyquests';
				this.dialog[dialogType].options.data.questId = id;
			} else {
				this.dialog[dialogType].options.data.cmd = 'quest';
				this.dialog[dialogType].options.data.questTutorialId = id;
			}
            this.dialog[dialogType].displayButtonOk(false);
			this.dialog[dialogType].options.data.action = actionType;
			this.dialog[dialogType].options.infoIcon = answersLink;
			this.dialog[dialogType].options.buttonTextInfo = Travian.Translation.get('answers.' + id.toLowerCase() + '_title') || 'Answers';
			this.dialog[dialogType].request();
		}

		this.dialog[dialogType].wrapper.down('form').removeEvent('submit');
		this.dialog[dialogType].wrapper.down('form').addEvent('submit', function(e)
		{
            e.stop();
			return false;
		});
	},

	/**
	 * Ã–ffnet die Aufgabenliste bei den Quests
	 * 
	 * string answersLink
	 */
	openTodoListDialog: function(answersLink, achievement)
	{
        var $this = this;

        var dialogCommand = 'quest';
        var dialogType = 'quest';
        var buttonClose = false;
        var buttonCloseText = '';
        var buttonCloseOnClick = false;
        var saveOnUnload = true;

        if (typeof achievement !== 'undefined' && achievement !== null)
        {
            dialogCommand = 'dailyquests';
            dialogType = 'achievement';
            buttonClose = true;
            buttonCloseText = Travian.Translation.get('allgemein.close');
            buttonCloseOnClick = true;
            saveOnUnload = false;
        }

		if (this.dialog[dialogType] === null)
		{
			Travian.WindowManager.closeByContext(dialogCommand);
			this.dialog[dialogType] = new Travian.Dialog.Ajax(
			{
				resizeDialogIfOverflow: false,
				data:
				{
					cmd: dialogCommand
				},
				context: dialogType,
                buttonOk: buttonClose,
                buttonTextOk: buttonCloseText,
                buttonCloseOnClickOk: buttonCloseOnClick,
				enableBackground: false,
				draggable: true,
				infoIcon: answersLink,
				savePositionForSession: {
					preferenceKey: 'QuestDialogAchievementPosition'
				},
				saveOnUnload: saveOnUnload,
				overlayCancel: false,
				cssClass: 'white questTodoList',
				preventFormSubmit: true,
				topHeaderOffset: (dialogType === 'achievement' ? 40 : 0),
				onClose: function()
				{
					$this.dialog[dialogType] = null;
				},
				fx:
				{
					options:
					{
						duration: 0
					}
				}
			});
		}
		else
		{
            this.dialog[dialogType].options.data.cmd = dialogCommand;
            this.dialog[dialogType].displayButtonOk(buttonClose);
			this.dialog[dialogType].options.data.questId = null;
			this.dialog[dialogType].options.data.questTutorialId = null;
			this.dialog[dialogType].options.infoIcon = null;
			this.dialog[dialogType].options.data.action = null;
			this.dialog[dialogType].request();
		}
	},

	/**
	 * bindet die event delegation fÃ¼r link liste im Todo Dialog
	 */
	bindDialogTodoListDelegation: function()
	{
		var $this = this;
		var rootElement = $('questTodoListDialog');

		// siehe mootools documentation -> delegations fÃ¼r :relay()
		rootElement.addEvent('click:relay(a.quest)', function(event, element)
		{
			event.stop();
			var questId = element.get('data-questId');
			var category = element.get('data-category');

			$this.openInformationDialog(questId, $this.options.listData[category].quests[questId].answersLink, null);
		});
	},

	/**
	 * binds delegation for the link list
     * @param rootElementId {string} If a different type of delegation should be used
	 */
	bindListDelegation: function(rootElementId)
	{
		var $this = this;
		var rootElement;

        if (typeof rootElementId === 'undefined' || rootElementId == null)
        {
            rootElement = $('mentorTaskList');
        }
        else
        {
            rootElement = $(rootElementId);
        }


		if (!rootElement.hasClass('notClickable'))
		{
			// siehe mootools documentation -> delegations fÃ¼r :relay()
			rootElement.addEvent('click:relay(a.quest)', function(event, element)
			{
				event.stop();
				var questId = element.get('data-questId');
				var category = element.get('data-category');

				$this.openInformationDialog(questId, $this.options.listData[category].quests[questId].answersLink);
			});
		}
	},

	/**
	 * wird ausgefÃ¼hrt sobald die Questdaten den options hinzugefÃ¼gt wurde
	 */
	initializeQuests: function()
	{
		if (this.options.isTutorial && this.options.tutorialData.id === 'Tutorial_01' && Travian.Game.Preferences.get('firstTutorialClosed') !== true)
		{
			if (Travian.WindowManager.getWindowsByContext('quest').length == 0)
			{
				this.openInformationDialog(this.options.tutorialData.id, this.options.tutorialData.answersLink, null);
			}
		}
	},

    /**
     * Adds to the listData
     * @param {object} listData
     */
    addListData: function(listData)
    {
        if(typeof listData !== 'undefined' && listData != null)
        {
            for(var attributeName in listData)
            {
				if (listData.hasOwnProperty(attributeName)) {
					this.options.listData[attributeName] = listData[attributeName];
				}
            }
        }
    },

    /**
     * Animates the highlight blingbling when a reward is available
     */
	animateQuestMaster: function()
	{
		var element = $$('#questmasterButton .animation');
		var count = 0;
		var frames = 15;
		var duration = 30;
		var loopTime = 5000;
		var changeClass = function()
		{
			if (count == 0)
			{
				element.addClass('animate');
			}

			if (count == frames)
			{
				element.removeClass('frame' + count);
				element.removeClass('animate');
				count = 0;
				window.setTimeout(changeClass, loopTime);
			}
			else
			{
				element.removeClass('frame' + count);
				count++;
				element.addClass('frame' + count);
				window.setTimeout(changeClass, duration);
			}
		};

		changeClass();
	},

	closeDialog: function ()
	{
		if (this.dialog['quest'] !== null)
		{
			this.dialog['quest'].close();
		}
	}
}))();Travian.Game.ReportSpamMessagesDialog = new(new Class({
	reportSpam: function(messageId, title, buttonText, warningMessage, spamReasons)
	{
		var dropDown = '<select size="1" id="spamReason">';

        for (var key in spamReasons) {
            dropDown += '<option value="' + key + '">' + spamReasons[key] + '</option>';
        }

        dropDown += '</select><br/><br/><span class="notice">' + warningMessage + '</span>';

		var dialog = new Travian.Dialog({
			title: title,
			keepOpen: true,
			buttonTextOk: buttonText,

			onOpen: function() {
                dialog.disableForm();
            },

			onOkay: function() {
				var checkSpamReasons = $("spamReason");
				if (null !== checkSpamReasons) {
					Travian.ajax({
						data: {
							cmd: 'reportSpamMessage',
							messageId: messageId,
							spamReason: $("spamReason").getSelected().get("value")[0]
						},
						onSuccess: function(data) {
							if (undefined !== data.reportingSuccessful && data.reportingSuccessful) {
								dialog.setContent(data.reportingSuccessful);

								$$(".dialog button .button-container .button-content .text").set('html', data.closeButtonText);
								$("reportSpam").addClass("disabled").set('onclick', '');

								dialog.enableForm();

								$$(".dialog form").addEvent('submit', function(e) {
									e.stop();
									dialog.close();
								});
							}
						}
					});
				}
			}
		});

		dialog.setContent(dropDown);

		dialog.show();

		$(dialog).addEvent('change:relay(#spamReason)', function() {
            var disableForm = this.getSelected().get("value")[0] == "not_chosen";

            dialog.toggleFormState(disableForm);
        });
	}
}));// FÃ¼hrt einen AJAX-Request aus.
// Der Parameter Method ist optional und gibt an, ob ein POST oder GET
// Request ausgefÃ¼hrt werden soll.
// der Parameter data wird nur benÃ¶tigt wenn method auf POST gesetzt ist;
// er ist ein JavaScript-Objekt. Die properties entsprechen dabei
// den 'name's von FORM Inputs, die values den 'value's.
function http_request(url, callback, method, post_data)
{
	// Default Parameter
	if (method === undefined)
	{
		method = 'GET';
	}

	var httprid;
	if (window.XMLHttpRequest)
	{
		// Mozilla, Safari,...
		httprid = new XMLHttpRequest();
	}
	else if (window.ActiveXObject)
	{
		// IE
		try
		{
			httprid = new ActiveXObject('Msxml2.XMLHTTP');
		}
		catch (e)
		{
			try
			{
				httprid = new ActiveXObject('Microsoft.XMLHTTP');
			}
			catch (e)
			{
			}
		}
	}
	else
	{
		throw 'Can not create XMLHTTP-instance';
	}
	httprid.onreadystatechange = function()
	{
		if (httprid.readyState == 4)
		{
			if (httprid.status == 200)
			{
				// Bei JSON responseText ausfÃ¼hren und Ã¼bergeben, sonst als
				// String Ã¼bergeben
				var content_type = httprid.getResponseHeader('Content-Type');
				// Charset weggkÃ¼rzen
				content_type = content_type.substr(0, content_type.indexOf(';'));
				switch (content_type)
				{
					case 'application/json':
						callback((httprid.responseText == '' ? null : eval('(' + httprid.responseText + ')')));
						break;
					case 'text/plain':
					case 'text/html':
						callback(httprid.responseText);
						break;
					default:
						throw 'Illegal content type';
				}
			}
			else
			{
				throw 'An error has occurred during request';
			}
		}
	};
	httprid.open(method, url, true);
	if (method == 'POST')
	{
		httprid.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8');
		var parameters = encode_querystring(post_data);
	}
	else
	{
		var parameters = null;
	}
	httprid.send(parameters);
}

function encode_querystring(object)
{
	var querystring = '';
	var first = true;
	for ( var key in object)
	{
		querystring += (first ? '' : '&') + key + '=' + window.encodeURI(object[key]);
		if (first)
		{
			first = false;
		}
	}
	return querystring;
}
Travian.AttackSymbol = {
	attackSysbolState: [],

	getAttackSymbolState: function(id)
	{
		var state = this.attackSysbolState[id];

		if (!state)
		{
			var imgClass = $('markSymbol_' + id).get('class');
			var type = parseInt(imgClass.replace(/[^0-9]/gi, ''));

			state = {
				type:		type,
				oldType:	type
			};

			Travian.AttackSymbol.attackSysbolState[id] = state;
		}

		return state;
	},

	drawAttackSymbol: function(id)
	{
		var state = Travian.AttackSymbol.getAttackSymbolState(id);

		$('markSymbol_' + id).set('class', 'markAttack markAttack' + state.type);
	},

	markAttackSymbol: function(id)
	{
		var state = Travian.AttackSymbol.getAttackSymbolState(id);

		state.type++;
		if (state.type == 4)
		{
			state.type = 0;
		}

		Travian.AttackSymbol.drawAttackSymbol(id);

		Travian.ajax(
		{
			data:
			{
				cmd:	'markIncomingAttacks',
				data:
				{
					id:		id,
					state:	state.type
				}
			},
			onSuccess: function(data)
			{
				if (data.result == false)
				{
					state.type = state.oldType;
					Travian.AttackSymbol.drawAttackSymbol(id);
				}
				else
				{
					state.oldType = state.type;
				}
			}
		});
	}
};Travian.Game.Village = new (new Class({
    toggleBuildingLevels: function()
    {
        var $switcher = $('lswitch'),
            showOldLevels;

        $switcher.toggleClass('lswitchMinus').toggleClass('lswitchPlus');

        showOldLevels = $switcher.hasClass('lswitchPlus');

        if (showOldLevels) {
            // save the preference
            Travian.Game.Preferences.set('t4level', 1, false);
        } else {
            // delete the preference
            Travian.Game.Preferences.set('t4level', null, false);
        }

        // HTML manipulation
        if (showOldLevels) {
            $$('#levels div:only-child').each(function(child){
                if (!child.hasClass('labelLayer')) {
                    return true;
                }

                var level = child.get('text'),
                    parent = child.getParent();

                child.destroy();

                parent.set('text', level).removeClass('colorLayer');
            });
        } else {
            $$('#levels div').each(function(elem){
                var level = elem.get('text'),
                    child = new Element('div.labelLayer');

                child.set('text', level);

                elem.addClass('colorLayer')
                    .set('text', '')
                    .grab(child);
            });
        }
    }
}));Travian.TabManager = new Class({
    initialize: function () {
        var anchor = window.location.hash.trim();

        if (anchor !== '') {
            this.applyAnchor(anchor);
        }
    },

    applyAnchor: function (anchor) {
        var anchorParts = anchor.split('-'),
            section = anchorParts[0].substring(1);

        delete anchorParts[0];

        if (anchorParts.length && this.handlers[section] !== undefined) {
            return this.handlers[section](anchorParts.join(''));
        }
    },

    handlers: {
        payment: function(tab) {
            window.fireEvent('startPaymentWizard', {data:{activeTab: tab}});
        }
    }
});Travian.Game.Vacation = {

    dialog: null,

    updateVacationTime: function (days, tOffset) {
        var timestamp = parseInt(Date.now()) + parseInt(days) * 86400000,

            formatDate = function (date, tOffset) {
                var addLeadZero = function (value) {
                        return (value < 10) ? '0' + value : value;
                    },

                    /*
                     * remove browser timezone offset from the date timestamp
                     * convert the player offset to milliseconds and add it to the date timestamp
                     * and make a new Date from the resulting timestamp (mathces the php player time)
                     */
                    actualDate = new Date(date.getTime() + date.getTimezoneOffset() * 60000 + tOffset * 1000),
                    dd = addLeadZero(actualDate.getDate()),
                    mm = addLeadZero(actualDate.getMonth() + 1),
                    yy = addLeadZero(actualDate.getFullYear() % 100),
                    hh = addLeadZero(actualDate.getHours()),
                    ii = addLeadZero(actualDate.getMinutes());

                return dd + '.' + mm + '.' + yy + ', ' + hh + ':' + ii;
            };

        $('vacationTime').innerHTML = formatDate(new Date(timestamp), tOffset);
    },

    closeDialog: function () {
        if (this.dialog !== null) {
            this.dialog.close();
        }
    },

    /**
     * displays the dialog window
     *
     * @param html String
     */
    showDialog: function (html) {
        this.closeDialog();
        this.dialog = new Travian.Dialog({
            buttonOk: false,
            type: Travian.Dialog.DIALOG_TYPE_MODAL,
            submitMethod: 'post',
            submitUrl: 'options.php?s=4',
            keepOpen: true
        });
        this.dialog.setContent(html);
        this.dialog.show();
    },

    openConfirmation: function () {
        Travian.ajax({
            data: {
                cmd: 'vacationModeConfirmation',
                params: $('dayInput').value
            },
            onSuccess: function (response) {
                if (response.html !== '') {
                    Travian.Game.Vacation.showDialog(response.html);
                } else {
                    Travian.Game.Vacation.closeDialog();
                }
            }
        });
    }
};/**
 * Travian Map Object
 */
Travian.Game.Map = (function() {
    // Last Id
    var lastId = 0;

    return {

        /**
         * registrierte Container
         *
         * @var array
         */
        Containers: null,

        /**
         * debug?
         *
         * @var boolean
         */
        debug: false,

        /**
         * Map Version
         *
         * @var number
         */
        version: 1.0,

        /**
         * liefert eine neue Id
         *
         * @return string
         */
        getNewId: function() {
            lastId++;
            return 'mapId' + lastId;
        },

        /**
         * prÃ¼ft ob die angegebene Map Position im angegebenen Rect ist
         *
         * @param rect {x0, y0, x1, y1}
         * @param position {x, y}
         * @return boolean
         */
        isMapPositionInRect: function(rect, position) {
            // ist so schon direkt enthalten
            if (rect.x0 <= position.x && rect.y0 <= position.y && position.x <= rect.x1 && position.y <= rect.y1) {
                return true;
            }
            // position ist NICHT enthalten
            return false;
        },

        /**
         * prÃ¼ft ob die angegebene Position im angegebenen Rect ist
         *
         * @param rect {x0, y0, x1, y1}
         * @param position {x, y}
         * @return bool
         */
        isPositionInRect: function(rect, position) {
            return (rect.x0 <= position.x && rect.y0 <= position.y && position.x <= rect.x1 && position.y <= rect.y1);
        },

        /**
         * meldet einen Container an
         *
         * @var Travian.Game.Map.Container
         */
        register: function(container) {
            if (this.debug) {
                if (this.Containers === null) {
                    this.Containers = [];
                }

                this.Containers.push(container);
            }
        },

        /**
         * Ã¤nderte die Kurzbezeichnung von Parametern in langbezeichnung um
         *
         * @param options
         * @return object
         */
        remapShortParameters: function(options) {
            // .x && .y -> .position.x && .position.y
            if (typeof options.x !== 'undefined' && typeof options.y !== 'undefined') {
                options.position = {
                    x: options.x,
                    y: options.y
                };
                delete(options.x);
                delete(options.y);
            }

            // .s -> .symbols
            if (typeof options.s !== 'undefined') {
                options.symbols = options.s;
                delete(options.s);
            }
            // .c -> .title
            if (typeof options.c !== 'undefined') {
                options.title = options.c;
                delete(options.c);
            }
            // .t -> .text
            if (typeof options.t !== 'undefined') {
                options.text = options.t;
                delete(options.t);
            }
            // .u -> .uid
            if (typeof options.u !== 'undefined') {
                options.uid = options.u;
                delete(options.u);
            }
            // .d -> .did
            if (typeof options.d !== 'undefined') {
                options.did = options.d;
                delete(options.d);
            }
            // .a -> .aid
            if (typeof options.a !== 'undefined') {
                options.aid = options.a;
                delete(options.a);
            }

            return options;
        },

        /**
         * Wrap coordinates into map size
         * @param $x
         * @param $y
         * @returns {{$x: *, $y: *}}
         */
        wrapCoordinate: function($x, $y) {
            var options = Travian.Defaults.Map.Size;
            var $wrappedX = (($x - options.left)%options.width + options.width)%options.width + options.left;
            var $wrappedY = (($y - options.bottom)%options.height + options.height)%options.height + options.bottom;
            return {$x: $wrappedX, $y: $wrappedY};
        },

        /**
         * Convert coordinates to kid
         *
         * @param $x
         * @param $y
         * @return int
         */
        xy2id: function($x, $y) {
            var $wrapped = this.wrapCoordinate($x, $y);
            var options = Travian.Defaults.Map.Size;
            return (options.top - $wrapped.$y) * options.width + ($wrapped.$x - options.left) + 1;
        }
    };
})();
/**
 * Basis fÃ¼r irgendwas
 */
Travian.Game.Map.Base = new Class(
{
	/**
	 * Context Menu
	 *
	 * @var Travian.Game.Map.ContextMenu
	 */
	contextMenu: null,

	/**
	 * id dieses Objektes
	 *
	 * @var string
	 */
	id: null,

	/**
	 * Globale Properties, welche Ã¼berall vorhanden sein sollen
	 *
	 * @var array
	 */
	globalProperties: ['cookie', 'dataStore', 'transition', 'updater', 'contextMenu'],

	/**
	 * das entsprechende Element
	 *
	 * @var element
	 */
	element: null,

	/**
	 * initial options
	 *
	 * @var object
	 */
	options: null,

	/**
	 * Parent Container
	 *
	 * @var Travian.Game.Map.BaseContainer
	 */
	parentContainer: null,

	/**
	 * Transition Object everywhere
	 *
	 * @var Travian.Game.Map.Transition
	 */
	transition: null,

	/**
	 * Type
	 *
	 * @var string
	 */
	classType: 'Travian.Game.Map.Base',

	/**
	 * Updater Object everywhere
	 *
	 * @var Travian.Game.Map.Updater
	 */
	updater: null,

	/**
	 * zerstÃ¶rt dieses element
	 *
	 * @return Travian.Game.Map.Base
	 */
	destroy: function()
	{
		if (this.element)
		{
			this.element.destroy();
		}
	},

	/**
	 * liefert die aktuellen Map Koordianten
	 *
	 * @return object {x, y, width, height, right, bottom}
	 */
	getMapCoordinates: function()
	{
		if (!this.position || !this.transition)
		{
			return null;
		}

		return this.transition.translateToMap(this.position);
	},

	/**
	 * Konstruktor
	 *
	 * @param options
	 * @param parentContainer
	 */
	initialize: function(options, parentContainer)
	{
		// verkÃ¼rzte Parameter Options
		options = Travian.Game.Map.remapShortParameters(options);

		var $this = this;
		// options machen
		this.options = Object.merge({}, options);

		// make the options now
		Object.each(this.options, function(value, key)
		{
			$this[key] = value;
		});

		// no id ... thats bad
		if (this.id === null)
		{
			this.id = Travian.Game.Map.getNewId();
		}

		// parent container given`?
		if (parentContainer)
		{
			this.parentContainer = parentContainer;

			// diverse objekt immer und Ã¼berall bereitstellen
			this.globalProperties.each(function(name)
			{
				if ($this.parentContainer[name])
				{
					$this[name] = $this.parentContainer[name];
				}
			});

			// eltern element ist der Hauptcontainer
			if (parentContainer.classType === 'Travian.Game.Map.Container')
			{
				this.mapContainer = parentContainer;
			}
			// es gibt an dem Eltern element den Hauptcontainer, dann hier diesen mit beifÃ¼gen
			else if (parentContainer.mapContainer)
			{
				this.mapContainer = this.parentContainer.mapContainer;
			}
		}
	},

	/**
	 *
	 * prÃ¼ft ob die angegebene KartenPosition im Rect des Elementes ist
	 *
	 * @param mapPosition {x, y}
	 * @return bool
	 */
	isMapPositionInRect: function(mapPosition)
	{
		if (!this.mapCoordinates || !mapPosition)
		{
			return false;
		}

		var mapCoordinates = Object.clone(this.mapCoordinates);

		if (!mapCoordinates.right)
		{
			mapCoordinates.right = mapCoordinates.x;
		}
		if (!mapCoordinates.top)
		{
			mapCoordinates.top = mapCoordinates.y;
		}

		return (
				mapCoordinates.x <= mapPosition.x &&
				mapCoordinates.y <= mapPosition.y &&
				mapPosition.x <= mapCoordinates.right &&
				mapPosition.y <= mapCoordinates.top
			);
	},

	/**
	 * prÃ¼ft ob die angegebene Position im Rect des Elementes ist
	 *
	 * @param position {x, y}
	 * @return bool
	 */
	isPositionInRect: function(position)
	{
		return Travian.Game.Map.isPositionInRect(
		{
			x0:	this.position.x,
			y0:	this.position.y,
			x1:	this.position.x + this.position.width,
			y1:	this.position.y + this.position.height
		}, position);
	},

	/**
	 * Rendering
	 *
	 * @param options
	 * @return Travian.Game.Map.Base
	 */
	render: function(options)
	{
		options = options || {};

		if (!options.nodeType)
		{
			options.nodeType = 'div';
		}

		// element anlegen
		this.element = (new Element(options.nodeType)).disableSelection();

		return this;
	}
});Travian.Game.Map.LowRes = {};/**
 * Map LowRes Container Class
 */
Travian.Game.Map.LowRes.Container = (function()
{
	var requestTimer = null;
	var requestObject = null;

	/**
	 * Event CallBack Function wenn das ziehen beendet ist
	 *
	 * @param Travian.Game.Map.LowRes.Container container
	 * @param event e
	 * @param object toPosition {x, y}
	 * @param int y
	 */
	var fnMouseUp = function(container, e, toPosition)
	{
		// nur linke maustaste
		if (!e.rightClick && container.isEventsEnabled())
		{
			// Anzeige der Informationen aber wie ... als Inside dialog
			if (container.tileDisplayInformation.type == 'dialog')
			{
				container.disableEvents();
				// Dialog fÃ¼r die Tile Details anzeigen
				new Travian.Dialog.Ajax(Object.merge({}, container.tileDisplayInformation.optionsDialog,
				{
					context: 'map',
					data: toPosition,
					onOpen: function(dialog, element)
					{
						$(element).getElements('a[href^="karte.php"]').addEvent('click', function(e)
						{
							e.stop();
							var url = new URI(e.target.href);
							container.moveTo(
							{
								x:	parseInt(url.getData('x')),
								y:	parseInt(url.getData('y'))
							});
							dialog.close();
							return false;
						});
					},
					onClose: function()
					{
						container.enableEvents();
					}
				}));
			}
			// als Window Popup
			else
			{
				Travian.popup(container.tileDisplayInformation.optionsPopup.url.substitute(toPosition), container.tileDisplayInformation.optionsPopup.windowOptions);
			}
		}
	};

	/**
	 * liefert die Position anhand der CSS Class welche im format 'class1 class2 x{POS} y{POS} class3' ist
	 *
	 * @param string classNames
	 * @return object {x, y}
	 */
	var getPositionFromCssClass = function(classNames)
	{
		if (classNames.match(/x\{([-0123456789]+)\}\sy\{([-0123456789]+)\}/gi) == null)
		{
			return;
		}
		return {
			x:	RegExp.$1,
			y:	RegExp.$2
		};
	};

	/**
	 * container data aufbereiten
	 *
	 * @param Travian.Game.Map.LowRes.Container container
	 */
	var prepareContainerData = function(container)
	{
		container.elements.containerData.getElements('.tile').addEvents(
		{
			// mausetaste wird losgelassen
			'mouseup': function(e)
			{
				fnMouseUp(container, e, getPositionFromCssClass(e.target.className));
			}
		});
	};

	/**
	 * Daten via Ajax lesen
	 *
	 * @param Travian.Game.Map.LowRes.Container container
	 */
	var requestData = function(container)
	{
		if (requestTimer)
		{
			clearTimeout(requestTimer);
		}
		if (requestObject && requestObject.cancel)
		{
			requestObject.cancel();
		}

		requestTimer = (function()
		{
			requestTimer = null;
			requestObject = Travian.ajax(
			{
				// url
				url:	container.request.url,

				// parameter
				data:
				{
					cmd:	'mapLowRes',
					data:
					{
						x:	container.mapInitialPosition.x,
						y:	container.mapInitialPosition.y,
						width:	container.containerSize.width,
						height:	container.containerSize.height
					}
				},

				// Erfolg
				onSuccess: function(data)
				{
					if (container.elements.fullScreen)
					{
						container.elements.fullScreen.set('href', container.fullScreenUrl.substitute(
						{
							fullScreen: container.fullScreen == 1 ? 0 : 1,
							x:			container.mapInitialPosition.x,
							y:			container.mapInitialPosition.y
						}));
					}

					container.elements.containerData.set('html', data.html);
					container.container.show();

					prepareContainerData(container);

					// aktualisieren
					container.update();
				}
			});
		}).delay(container.request.delayTime);
	};

	return new Class(
	{
		Extends: Travian.Game.Map.Base,

		/**
		 * Type
		 *
		 * @var string
		 */
		classType: 'Travian.Game.Map.LowRes.Container',

		/**
		 * alle relevanten elemente
		 *
		 * @var object
		 */
		elements:
		{
			/**
			 * alle Tiles
			 *
			 * @var array
			 */
			tiles: []
		},

		/**
		 * events sind aktiviert oder nicht
		 *
		 * @var bool
		 */
		eventsEnabled: true,

		/**
		 * alle navigationen
		 *
		 * @var object
		 */
		navigations: {},

		/**
		 * alle relevanten Events deaktivieren die stÃ¶ren kÃ¶nnten
		 *
		 * @return Travian.Game.Map.Container
		 */
		disableEvents: function()
		{
			this.eventsEnabled = false;

			return this;
		},

		/**
		 * alle relevanten Events aktivieren
		 *
		 * @return Travian.Game.Map.Container
		 */
		enableEvents: function()
		{
			this.eventsEnabled = true;

			return this;
		},

		/**
		 * Konstruktor
		 *
		 * @param object options
		 */
		initialize: function(options)
		{
			this.parent(options);

			// Debug
			Travian.Game.Map.register(this);

			this.render();
		},

		/**
		 * sind die Events aktiviert?
		 *
		 * @return bool
		 */
		isEventsEnabled: function()
		{
			return this.eventsEnabled;
		},

		/**
		 * um dieses Delta auf der karte bewegen
		 *
		 * @param object delta (x, y versatz)
		 * @return Travian.Game.Map.LowRes.Container
		 */
		move: function(delta)
		{
			// neue Center Position ist
			this.mapInitialPosition.x += delta.x;
			this.mapInitialPosition.y += delta.y;

			// daten laden lassen und anzeigen
			requestData(this);

			return this;
		},

		/**
		 * zu dieser Position springen
		 *
		 * @param object position (x, y, position)
		 * @return Travian.Game.Map.LowRes.Container
		 */
		moveTo: function(position)
		{
			position.x = parseInt(position.x);
			position.y = parseInt(position.y);

			if (isNaN(position.x) || isNaN(position.y))
			{
				return this;
			}

			// neue Center Position ist
			this.mapInitialPosition.x = position.x;
			this.mapInitialPosition.y = position.y;

			// daten laden lassen und anzeigen
			requestData(this);

			return this;
		},

		/**
		 * render
		 *
		 * @return Travian.Game.Map.LowRes.Container
		 */
		render: function()
		{
			var $this = this;
			var containerIsDisplayed = false;

			// container finden
			this.container = $(this.container);
			this.elements.fullScreen = this.container.down('#navigationFullScreen');
			this.elements.containerData = this.container.down('.mapContainerData');
			this.elements.positionEnterX = this.container.down('#mapCoordEnter .coordinates.x');
			this.elements.positionEnterY = this.container.down('#mapCoordEnter .coordinates.y');

			containerIsDisplayed = this.container.isDisplayed();

			if (!containerIsDisplayed)
			{
				this.container.show();
			}
			this.containerSize = this.container.getCoordinates();
			if (!containerIsDisplayed)
			{
				this.container.hide();
			}

			// navigation aufbauen
			Object.each(this.options.Navigation, function(navigation, key)
			{
				$this.navigations[key] = new Travian.Game.Map.LowRes.Navigation(navigation, $this);
			});

			// Coord Enter binden
			this.container.down('#mapCoordEnter button.green').addEvent('click', function(e)
			{
				e.stop();

				$this.moveTo(
				{
					x:	$this.elements.positionEnterX.value,
					y:	$this.elements.positionEnterY.value
				});
			});

			// daten laden lassen und anzeigen
			if (this.fullScreen)
			{
				requestData(this);
			}
			// Tiles, Rulers aufbereiten
			else
			{
				prepareContainerData(this);
			}

			return this;
		},

		/**
		 * aktualisiert alles
		 *
		 * @return Travian.Game.Map.LowRes.Container
		 */
		update: function()
		{
			// navigation aufbauen
			Object.each(this.navigations, function(navigation)
			{
				navigation.update();
			});

			return this;
		}
	});
})();/**
 * Map LowRes Navigation Class
 */
Travian.Game.Map.LowRes.Navigation = (function()
{
	return new Class(
	{
		Extends: Travian.Game.Map.Base,

		/**
		 * Type
		 *
		 * @var string
		 */
		classType: 'Travian.Game.Map.LowRes.Navigation',

		/**
		 * Konstruktor
		 *
		 * @param object options
		 * @param Travian.Game.Map.LowRes.Container parentContainer
		 */
		initialize: function(options, parentContainer)
		{
			this.parent(options, parentContainer);

			this.render();
		},

		/**
		 * render
		 *
		 * @return Travian.Game.Map.LowRes.Container
		 */
		render: function()
		{
			var $this = this;
			var keyCodes = {
				count:		0,
				shift:		false,
				control:	false,
				alt:		false,
				keys:		{},
				fn:			null
			};

			// Binding Clicking
			if (this.element)
			{
				this.element = $(this.element).addEvent('click', function(e)
				{
					e.stop();

					$this.parentContainer.move($this.delta.normal);

					$this.update();
				});
			}

			// alle belegten Key Codes find und vorbelegen mit false
			this.keyboard = this.keyboard.inject({}, function(acc, value)
			{
				if (value !== false)
				{
					acc[value] = {
						on:			['keydown', 'keyup'],
						periodical:	200,
						fn:			'move'
					};

					keyCodes.keys[value] = false;
				}

				return acc;
			});

			// binding Keyboard
			$(document).addEvents(
			{
				// eine taste wird gedrÃ¼ckt
				'keydown': function(e)
				{
					if (!$this.parentContainer.isEventsEnabled())
					{
						return;
					}

					// Sondertasten beim runterdrÃ¼cken markieren
					if (e.shift)
					{
						keyCodes.shift = true;
					}
					if (e.control)
					{
						keyCodes.control = true;
					}
					if (e.alt)
					{
						keyCodes.alt = true;
					}

					// wurde eine taste gedrÃ¼ckt, welche noch nicht gedrÃ¼ckt wurde?
					if (keyCodes.keys[e.code] === false && e.target.nodeName.toLowerCase() !== 'input')
					{
						// Key Code fÃ¼r dieses event erlaubt?
						if ($this.keyboard[e.code].on.contains('keydown') == false)
						{
							return;
						}

						// infos
						keyCodes.count++;
						keyCodes.keys[e.code] = true;
						e.stop();

						// ggf timer funktion starten
						if (!keyCodes.fnTimer)
						{
							// alle gedrÃ¼ckten Keys durchlaufen
							keyCodes.fn = (function()
							{
								Object.each(keyCodes.keys, function(value, keyName)
								{
									if (value)
									{
										// ist diese Tastatur definiert?
										if (!$this.keyboard[keyName])
										{
											return;
										}

										var fnName = $this.keyboard[keyName].fn;

										// gibts die Funktion Ã¼berhaupt?
										if (fnName === false || !$this.parentContainer[fnName])
										{
											return;
										}

										var parameters = '';
										//geschwindigkeit ermitteln
										parameters = 'normal'; // default speed
										var keyNameSlow = $this.speed['slow'];
										var keyNameFast = $this.speed['fast'];

										// prÃ¼fen auf slow
										if (keyCodes[keyNameSlow] && !keyCodes[keyNameFast])
										{
											parameters = 'slow';
										}
										// prÃ¼fen auf schnell
										else if (!keyCodes[keyNameSlow] && keyCodes[keyNameFast])
										{
											parameters = 'fast';
										}

										// run
										$this.parentContainer[fnName]($this.delta[parameters]);
									}
								});
							});

							// nie ausfÃ¼hren bei -1
							// einmal ausfÃ¼hren bei 0
							if ($this.keyboard[e.code].periodical == 0)
							{
								keyCodes.fn();
							}
							// periodical run
							else if ($this.keyboard[e.code].periodical > 0)
							{
								keyCodes.fn();
								keyCodes.fnTimer = keyCodes.fn.periodical($this.keyboard[e.code].periodical);
							}
						}
					}
				},

				// eine taste wird losgelassen
				'keyup': function(e)
				{
					if (!$this.parentContainer.isEventsEnabled())
					{
						return;
					}

					// sondertasten demarkieren
					if (!e.shift)
					{
						keyCodes.shift = false;
					}
					if (!e.control)
					{
						keyCodes.control = false;
					}
					if (!e.alt)
					{
						keyCodes.alt = false;
					}

					// die losgelassene Taste wieder entmarkieren
					if (keyCodes.keys[e.code] === true)
					{
						// Key Code fÃ¼r dieses event erlaubt?
						if ($this.keyboard[e.code].on.contains('keyup') == false)
						{
							return;
						}

						keyCodes.count--;
						keyCodes.keys[e.code] = false;
						e.stop();

						// ggf timer funktion wieder stopen
						if (keyCodes.count == 0 && keyCodes.fnTimer)
						{
							clearInterval(keyCodes.fnTimer);
							keyCodes.fnTimer = null;
						}
					}
				}
			});

			return this;
		},

		/**
		 * aktualisiert den link
		 *
		 * @return Travian.Game.Map.LowRes.Navigation
		 */
		update: function()
		{
			if (this.element)
			{
				var position = Object.clone(this.parentContainer.mapInitialPosition);

				position.x += this.delta.normal.x;
				position.y += this.delta.normal.y;

				this.element.set('href', this.href.substitute(position));
			}

			return this;
		}
	});
})();/**
 * Map Options LowRes Object Holder
 *
 */
Travian.Game.Map.LowRes.Options = {};/**
 * Standard Konfiguration LowRes
 */
Travian.Game.Map.LowRes.Options.Default = {
	request:
	{
		// zeit in millisekunden fÃ¼r die verzÃ¶gerung
		delayTime: 10,
		// request URL
		url:	'ajax.php'
	},
	// dahin soll alles gerendert werden
	container:		'mapContainer',
	// alle mÃ¶glichen Optionen fÃ¼r das Anzeigen
	tileDisplayInformation:
	{
		// wie soll der Inhalt angezeigt werden, als Popup mit Ajax Dialog ('dialog') oder
		// als window.location.href ('popup') als Popup in neuem Tab/Fenster
		type:	'dialog',

		// Options fÃ¼r Anzeige als Popup ('popup')
		optionsPopup:
		{
			url:	'position_details.php?x={x}&y={y}',
			windowOptions:
			{
//				id:		'tilePopup'
			}
		},
		// wenn ajax dann siehe DialogAjax ('dialog')
		optionsDialog:
		{
			buttonOk: false,
			data:
			{
				cmd:	'viewTileDetails',
				x:		null,
				y:		null
			}
		}
	},
	// Initial Position karten koordinaten
	mapInitialPosition:
	{
		// X Coord
		x:	0,
		// Y Coord
		y:	0
	},
	// FullScreenAnzeige
	fullScreen: false,
	// Full Screen Url
	fullScreenUrl: 'karte.php?fullscreen={fullScreen}&x={x}&y={y}'
};/**
 * Standard Konfiguration LowRes Navigation
 */
Travian.Game.Map.LowRes.Options.Default.Navigation = {
	// moving left
	left:
	{
		// an das zu bindende Element
		element:	'navigationMoveLeft',
		// HRef Template
		href:		'/karte.php?x={x}&y={y}',
		// wie soll sich bewegt werden
		delta:
		{
			slow:
			{
				x:	-1,
				y:	0
			},
			normal:
			{
				x:	-1,
				y:	0
			},
			fast:
			{
				x:	-5,
				y:	0
			}
		},
		// alle keyboard einstellungen
		keyboard:
		[
			// nach links verschieben
			// 37 -> pfeiltaste nach links
			37,
			// 65 -> Taste a
			65,
			// 100 -> Numblock 4 (FF, IE, Chrome, Safari)
			Browser.name != 'opera' ? 100 : false,
			// 52 -> Numblock 4 (Opera)
			Browser.name == 'opera' ? 52 : false
		],
		// nach rechts oben
		// zusatztasten (shift, alt, control) gedrÃ¼ckt fÃ¼r weitere geschwindigkeiten
		speed:
		{
			// langsam
			'slow':		'control',

			//schnell
			'fast':		'shift'
		}
	},
	// moving right
	right:
	{
		// an das zu bindende Element
		element:	'navigationMoveRight',
		// HRef Template
		href:		'/karte.php?x={x}&y={y}',
		// wie soll sich bewegt werden
		delta:
		{
			slow:
			{
				x:	1,
				y:	0
			},
			normal:
			{
				x:	1,
				y:	0
			},
			fast:
			{
				x:	5,
				y:	0
			}
		},
		// alle keyboard einstellungen
		keyboard:
		[
			// nach rechts verschieben
			// 39 -> Pfeiltaste recht
			39,
			// 68 -> Taste d
			68,
			// 102 -> Numblock 6 (FF, IE, Chrome, Safari)
			Browser.name != 'opera' ? 102 : false,
			// 54 -> Numblock 6 (Opera)
			Browser.name == 'opera' ? 54 : false
		],
		// nach rechts oben
		// zusatztasten (shift, alt, control) gedrÃ¼ckt fÃ¼r weitere geschwindigkeiten
		speed:
		{
			// langsam
			'slow':		'control',

			//schnell
			'fast':		'shift'
		}
	},
	// moving up
	up:
	{
		// an das zu bindende Element
		element:	'navigationMoveUp',
		// HRef Template
		href:		'/karte.php?x={x}&y={y}',
		// wie soll sich bewegt werden
		delta:
		{
			slow:
			{
				x:	0,
				y:	1
			},
			normal:
			{
				x:	0,
				y:	1
			},
			fast:
			{
				x:	0,
				y:	5
			}
		},
		// alle keyboard einstellungen
		keyboard:
		[
			// nach oben verschieben
			// 38 -> Pfeiltaste nach oben
			38,
			// 87 -> Taste w
			87,
			// 104 -> Numblock 8 (FF, IE, Chrome, Safari)
			Browser.name != 'opera' ? 104 : false,
			// 56 -> Numblock 8 (Opera)
			Browser.name == 'opera' ? 56 : false
		],
		// nach rechts oben
		// zusatztasten (shift, alt, control) gedrÃ¼ckt fÃ¼r weitere geschwindigkeiten
		speed:
		{
			// langsam
			'slow':		'control',

			//schnell
			'fast':		'shift'
		}
	},
	// moving down
	down:
	{
		// an das zu bindende Element
		element:	'navigationMoveDown',
		// HRef Template
		href:		'/karte.php?x={x}&y={y}',
		// wie soll sich bewegt werden
		delta:
		{
			slow:
			{
				x:	0,
				y:	-1
			},
			normal:
			{
				x:	0,
				y:	-1
			},
			fast:
			{
				x:	0,
				y:	-5
			}
		},
		// alle keyboard einstellungen
		keyboard:
		[
			// nach unten verschieben
			// 40 -> Pfeiltaste nach unten
			40,
			// 83 -> Taste s
			83,
			// 98 -> Numblock 2 (FF, IE, Chrome, Safari)
			Browser.name != 'opera' ? 98 : false,
			// 50 -> Numblock 2 (Opera)
			Browser.name == 'opera' ? 50 : false,
		],
		// nach rechts oben
		// zusatztasten (shift, alt, control) gedrÃ¼ckt fÃ¼r weitere geschwindigkeiten
		speed:
		{
			// langsam
			'slow':		'control',

			//schnell
			'fast':		'shift'
		}
	},
	// moving left up
	leftUp:
	{
		// an das zu bindende Element
		element:	false,
		// wie soll sich bewegt werden
		delta:
		{
			slow:
			{
				x:	-1,
				y:	1
			},
			normal:
			{
				x:	-1,
				y:	1
			},
			fast:
			{
				x:	-5,
				y:	5
			}
		},
		// alle keyboard einstellungen
		keyboard:
		[
			// nach links oben NumBlock
			// 103 -> Numblock 7 (FF, IE, Chrome, Safari)
			Browser.name != 'opera' ? 103 : false,
			// 55 -> Numblock 7 (Opera)
			Browser.name == 'opera' ? 55 : false,
		],
		// nach rechts oben
		// zusatztasten (shift, alt, control) gedrÃ¼ckt fÃ¼r weitere geschwindigkeiten
		speed:
		{
			// langsam
			'slow':		'control',

			//schnell
			'fast':		'shift'
		}
	},
	// moving left down
	leftDown:
	{
		// an das zu bindende Element
		element:	false,
		// wie soll sich bewegt werden
		delta:
		{
			slow:
			{
				x:	-1,
				y:	-1
			},
			normal:
			{
				x:	-1,
				y:	-1
			},
			fast:
			{
				x:	-5,
				y:	-5
			}
		},
		// alle keyboard einstellungen
		keyboard:
		[
			// nach links unten  NumBlock
			// 97 -> Numblock 1 (FF, IE, Chrome, Safari)
			Browser.name != 'opera' ? 97 : false,
			// 49 -> Numblock 1 (Opera)
			Browser.name == 'opera' ? 49 : false,
		],
		// nach rechts oben
		// zusatztasten (shift, alt, control) gedrÃ¼ckt fÃ¼r weitere geschwindigkeiten
		speed:
		{
			// langsam
			'slow':		'control',

			//schnell
			'fast':		'shift'
		}
	},
	// moving right up
	rightUp:
	{
		// an das zu bindende Element
		element:	false,
		// wie soll sich bewegt werden
		delta:
		{
			slow:
			{
				x:	1,
				y:	1
			},
			normal:
			{
				x:	1,
				y:	1
			},
			fast:
			{
				x:	5,
				y:	5
			}
		},
		// alle keyboard einstellungen
		keyboard:
		[
			// nach rechts oben  NumBlock
			// 105 -> Numblock 9 (FF, IE, Chrome, Safari)
			Browser.name != 'opera' ? 105 : false,
			// 57 -> Numblock 9 (Opera)
			Browser.name == 'opera' ? 57 : false,
		],
		// nach rechts oben
		// zusatztasten (shift, alt, control) gedrÃ¼ckt fÃ¼r weitere geschwindigkeiten
		speed:
		{
			// langsam
			'slow':		'control',

			//schnell
			'fast':		'shift'
		}
	},
	// moving right up
	rightDown:
	{
		// an das zu bindende Element
		element:	false,
		// wie soll sich bewegt werden
		delta:
		{
			slow:
			{
				x:	1,
				y:	-1
			},
			normal:
			{
				x:	1,
				y:	-1
			},
			fast:
			{
				x:	5,
				y:	-5
			}
		},
		// alle keyboard einstellungen
		keyboard:
		[
			// nach rechts unten  NumBlock
			// 99 -> Numblock 3 (FF, IE, Chrome, Safari)
			Browser.name != 'opera' ? 99 : false,
			// 51 -> Numblock 3 (Opera)
			Browser.name == 'opera' ? 51 : false,
		],
		// nach rechts oben
		// zusatztasten (shift, alt, control) gedrÃ¼ckt fÃ¼r weitere geschwindigkeiten
		speed:
		{
			// langsam
			'slow':		'control',

			//schnell
			'fast':		'shift'
		}
	}
};